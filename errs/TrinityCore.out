projects/top_C++/TrinityCore
Going to process projects/top_C++/TrinityCore/all_log.txt 
---------- TrinityCore ------------

Class: class npc_daphne_stilwell : public CreatureScript { 
Class: class npc_minigob_manabonk : public CreatureScript { 
Class: class npc_nadox_eggs : public CreatureScript  class spell_ahn_kahet_swarm : public SpellScriptLoader public:     npc_nadox_eggs() : CreatureScript() { }     npc_nadox_eggs() : CreatureScript() 
Class:        class spell_ahn_kahet_swarm_SpellScript : public SpellScript         class spell_ahn_kahet_swarm_SpellScript : public SpellScript
Class:class GuardianCheck { 
Class:class spell_elder_nadox_guardian : public SpellScriptLoader { 
Class:    class spell_elder_nadox_guardian_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(file);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: using namespace boost::property_tree;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(file);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(file);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player && player->GetSession());')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Battlefield::SendAreaSpiritHealerQueryOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player && player->GetSession());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player && player->GetSession());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetDestTargets - no explicit object target available!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Spell::SelectImplicitTargetDestTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetDestTargets - no explicit object target available!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetDestTargets - no explicit object target available!");')]
===========================================
Class:class boss_arcanist_doan : public CreatureScript { 
Class: class boss_kruul : public CreatureScript { 
Class: class spell_item_fate_rune_of_unsurpassed_vigor : public SpellScriptLoader { 
Class:         class spell_item_fate_rune_of_unsurpassed_vigor_AuraScript : public AuraScript         {         
Class: class spell_sha_item_t10_elemental_2p_bonus : public SpellScriptLoader { 
Class:         class spell_sha_item_t10_elemental_2p_bonus_AuraScript : public AuraScript         {         
Class: class spell_sha_item_t10_elemental_2p_bonus : public SpellScriptLoader { 
Class:         class spell_sha_item_t10_elemental_2p_bonus_AuraScript : public AuraScript         {         
Class:class boss_arcanist_doan : public CreatureScript { 
Class: class spell_item_fate_rune_of_unsurpassed_vigor : public SpellScriptLoader { 
Class:         class spell_item_fate_rune_of_unsurpassed_vigor_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Total add: 27
Total del: 19
Header: RealmList::UpdateRealms
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 2, u'-  ACE_ASSERT (0); // not implemented.'), (116, 2, u'-  ACE_ASSERT (0); // not implemented.')]
===========================================
Class: template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::~ACE_Cache_Map_Manager (void) { 
Class: template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::close (void) { 
Class:  template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::rebind (const KEY &key,                                        const VALUE &value) { 
Class: template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::rebind (const KEY &key,                                        const VALUE &value,                                        KEY &old_key,                                        VALUE &old_value) { 
Class: template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::find (const KEY &key,                                      VALUE &value) { 
Class:  template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::unbind (const KEY &key) { 
Class: template <class KEY, class VALUE, class CMAP_TYPE, class ITERATOR_IMPL, class REVERSE_ITERATOR_IMPL, class CACHING_STRATEGY, class ATTRIBUTES> void ACE_Cache_Map_Manager<KEY, VALUE, CMAP_TYPE, ITERATOR_IMPL, REVERSE_ITERATOR_IMPL, CACHING_STRATEGY, ATTRIBUTES>::dump (void) const { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::~ACE_Cached_Connect_Strategy_Ex (void) { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> int ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::find_or_create_svc_handler_i (SVC_HANDLER *&sh,  const ACE_PEER_CONNECTOR_ADDR &remote_addr,  ACE_Time_Value *timeout,  const ACE_PEER_CONNECTOR_ADDR &local_addr,  bool reuse_addr,  int flags,  int perms,  ACE_Hash_Map_Entry<ACE_Refcounted_Hash_Recyclable<ACE_PEER_CONNECTOR_ADDR>, std::pair<SVC_HANDLER *, ATTRIBUTES> > *&entry,  int &found) { 
Class:  template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> int ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::connect_svc_handler_i (SVC_HANDLER *&sh,  const ACE_PEER_CONNECTOR_ADDR &remote_addr,  ACE_Time_Value *timeout,  const ACE_PEER_CONNECTOR_ADDR &local_addr,  bool reuse_addr,  int flags,  int perms,  int& found) { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> int ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::purge_i (const void *recycling_act) { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> int ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::cleanup_hint_i (const void *recycling_act,                                                         void **act_holder) { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> CACHING_STRATEGY & ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::caching_strategy (void) { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> void ACE_Cached_Connect_Strategy_Ex<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::cleanup (void) { 
Class: template <class SVC_HANDLER, ACE_PEER_CONNECTOR_1, class CACHING_STRATEGY, class ATTRIBUTES, class MUTEX> ACE_Bounded_Cached_Connect_Strategy<SVC_HANDLER, ACE_PEER_CONNECTOR_2, CACHING_STRATEGY, ATTRIBUTES, MUTEX>::~ACE_Bounded_Cached_Connect_Strategy(void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(620, 2, u'-              ACE_ASSERT (0);'), (636, 2, u'-              ACE_ASSERT (0);'), (644, 2, u'-          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class CACHING_STRATEGY, class ATTRIBUTES> ACE_Hash_Cache_Map_Manager<KEY, VALUE,  HASH_KEY, COMPARE_KEYS, CACHING_STRATEGY, ATTRIBUTES>::~ACE_Hash_Cache_Map_Manager (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Hash_Cache_Map_Manager<KEY, VALUE,  HASH_KEY, COMPARE_KEYS, CACHING_STRATEGY, ATTRIBUTES>::rebind (const KEY &key,                                          const VALUE &value,                                          CACHE_ENTRY *&entry) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Hash_Cache_Map_Manager<KEY, VALUE,  HASH_KEY, COMPARE_KEYS, CACHING_STRATEGY, ATTRIBUTES>::find (const KEY &key,                                        CACHE_ENTRY *&entry) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class CACHING_STRATEGY, class ATTRIBUTES> int ACE_Hash_Cache_Map_Manager<KEY, VALUE,  HASH_KEY, COMPARE_KEYS, CACHING_STRATEGY, ATTRIBUTES>::find (const KEY &key) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> INT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const INT_ID &int_id,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                                                          ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                          ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *entry) { 
Class:  template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                            ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                            size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_T (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_malloc (size_t nbytes) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t nbytes,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_free (void *ap) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_bind (const char *name,                                                              void *pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::bind (const char *name,                                                       void *pointer,                                                       int duplicates) { 
Class:          template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ssize_t ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::avail_chunks (size_t size) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name, void *&pointer) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-  ACE_ASSERT (size != 0);'), (54, 2, u'-  ACE_ASSERT (size <= ACE_UINT32_MAX);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> void ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::message_bytes (size_t new_value) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::ACE_Message_Queue_Ex (size_t high_water_mark,                                                                              size_t low_water_mark,                                                                              ACE_Notification_Strategy *ns) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::open (size_t hwm,                                                              size_t lwm,                                                              ACE_Notification_Strategy *ns) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::flush (void) { 
Class:   template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::peek_dequeue_head (ACE_MESSAGE_TYPE *&first_item,                                                                           ACE_Time_Value *timeout) { 
Class:     template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::enqueue (ACE_MESSAGE_TYPE *new_item,                                                                 ACE_Time_Value *timeout) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::enqueue_deadline (ACE_MESSAGE_TYPE *new_item,                                                                          ACE_Time_Value *timeout) { 
Class:     template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::dequeue_head (ACE_MESSAGE_TYPE *&first_item,                                                                      ACE_Time_Value *timeout) { 
Class:     template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::dequeue_tail (ACE_MESSAGE_TYPE *&dequeued,                                                                      ACE_Time_Value *timeout) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::notify (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex_Iterator<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>:: next (ACE_MESSAGE_TYPE *&entry) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex_Iterator<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::advance (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex_Reverse_Iterator<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>:: next (ACE_MESSAGE_TYPE *&entry) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex_Reverse_Iterator<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::advance (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> ACE_Message_Queue_Ex_N<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::~ACE_Message_Queue_Ex_N (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex_N<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::enqueue_tail   (ACE_MESSAGE_TYPE *new_item,    ACE_Time_Value   *timeout) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> ACE_Notification_Strategy * ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::notification_strategy (void) { 
Class:   template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> bool ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::is_empty (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> size_t ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::high_water_mark (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> size_t ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::low_water_mark (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> size_t ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::message_bytes (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> size_t ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::message_count (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::activate (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> int ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::deactivated (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> ACE_SYNCH_MUTEX_T & ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::lock (void) { 
Class: template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> void ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::set_time_policy (TIME_POLICY const & rhs) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:     template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(258, 2, u'-      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:    class TSS_Cleanup_Instance { 
Class:    class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class:  class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-      ACE_ASSERT (dynamic_instance != 0);'), (79, 2, u'-      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class:  class NULL_Time_Policy : public ACE_Dynamic_Time_Policy_Base { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::~ACE_Timer_Hash_Iterator_T () { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::ACE_Timer_Hash_T (   size_t table_size,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist,   TIME_POLICY const & time_policy)   : Base_Timer_Queue (upcall_functor, freelist, time_policy),     size_ (0),     table_size_ (table_size),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::~ACE_Timer_Hash_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(101, 2, u'-  ACE_ASSERT (0);'), (116, 2, u'-  ACE_ASSERT (0);'), (131, 2, u'-  ACE_ASSERT (0);'), (451, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (494, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (673, 2, u'-      ACE_ASSERT (result == 1);'), (819, 2, u'-          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::ACE_Timer_Heap_Iterator_T (   Heap & heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist,   TIME_POLICY const & time_policy)   : Base_Time_Policy (upcall_functor,       freelist,       time_policy),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> long ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::pop_freelist (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> long ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::timer_id (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Queue_Iterator_T<TYPE> & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::dump (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::remove (size_t slot) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::reheap_up (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t parent) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::grow_heap (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::alloc_node (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> long ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::reset_interval (long timer_id,                                                            const ACE_Time_Value &interval) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::remove_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::ACE_Timer_List_T (FUNCTOR* uf,                     FreeList* fl,                     TIME_POLICY const & time_policy)   : Base_Timer_Queue (uf, fl, time_policy)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::close (void) { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::reschedule (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::schedule_i (ACE_Timer_Node_T<TYPE>* n,                                                        const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::reset_interval (long timer_id,                                                            const ACE_Time_Value &interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::cancel (const TYPE &type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::get_first_i (void) const { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::cancel (long timer_id,                                            const void **act) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::schedule_ualarm (void) { 
Class: template <class TQ, class TYPE> ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::ACE_Async_Timer_Queue_Adapter (ACE_Sig_Set *mask)         : mask_ (mask) { 
Class: template <class TYPE, class FUNCTOR> ACE_INLINE ACE_Timer_Queue_Upcall_Base<TYPE, FUNCTOR>::~ACE_Timer_Queue_Upcall_Base () { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::gettimeofday (ACE_Time_Value (*gettimeofday)(void)) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::calculate_timeout (ACE_Time_Value *max_wait_time,                                                                ACE_Time_Value *the_timeout) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::recompute_next_abs_interval_time     (ACE_Timer_Node_T<TYPE> *expired,      const ACE_Time_Value &cur_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                              ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist,    TIME_POLICY const & time_policy) : Base_Timer_Queue (upcall_functor, freelist, time_policy) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::close (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::find_node (long timer_id) const { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> const ACE_Time_Value & ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::earliest_time (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::generate_timer_id (u_int spoke) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::reschedule (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::reset_interval (long timer_id,                                                             const ACE_Time_Value &interval                                                             ) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::cancel (long timer_id,                                                     const void **act,                                                     int skip_close) { 
Class:       template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::recalc_earliest   (const ACE_Time_Value& last) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::remove_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::remove_first_expired (const ACE_Time_Value& now) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::get_first_i (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::expire () { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Wheel_Iterator_T<TYPE,FUNCTOR,ACE_LOCK,TIME_POLICY>::ACE_Timer_Wheel_Iterator_T (Wheel& wheel) : timer_wheel_ (wheel) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::goto_next (u_int start_spoke) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Timer_Node_T<TYPE> * ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::item (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 2, u'-  ACE_ASSERT (result != 0);'), (477, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
Class: class boss_kruul : public CreatureScript { 
Class: class AerialTargetSelector { 
Class: class EncounterDone { 
Class: class boss_mimiron : public CreatureScript { 
Class: class boss_leviathan_mk_ii : public CreatureScript { 
Class: class npc_magnetic_core : public CreatureScript { 
Class:class npc_mimiron_assault_bot : public CreatureScript void AddSC_boss_mimiron()     public:         npc_mimiron_assault_bot() : CreatureScript() { }         npc_mimiron_assault_bot() : CreatureScript() 
Class: class npc_mimiron_emergency_fire_bot : public CreatureScript { 
Class: class npc_mimiron_computer : public CreatureScript { 
Class: class npc_mimiron_flames : public CreatureScript { 
Class: class npc_mimiron_frost_bomb : public CreatureScript { 
Class: class npc_mimiron_proximity_mine : public CreatureScript { 
Class: class go_mimiron_hardmode_button : public GameObjectScript { 
Class:  class spell_mimiron_bomb_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_bomb_bot_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_clear_fires : public SpellScriptLoader { 
Class:         class spell_mimiron_clear_fires_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_despawn_assault_bots : public SpellScriptLoader { 
Class:         class spell_mimiron_despawn_assault_bots_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_frost_bomb_explosion : public SpellScriptLoader { 
Class:         class spell_mimiron_frost_bomb_explosion_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_fire_search : public SpellScriptLoader { 
Class:         class spell_mimiron_fire_search_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_flame_suppressant : public SpellScriptLoader { 
Class:         class spell_mimiron_flame_suppressant_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_magnetic_core : public SpellScriptLoader { 
Class:         class spell_mimiron_magnetic_core_SpellScript : public SpellScript         {         
Class:         class spell_mimiron_magnetic_core_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_napalm_shell : public SpellScriptLoader { 
Class:         class spell_mimiron_napalm_shell_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_p3wx2_laser_barrage : public SpellScriptLoader { 
Class:         class spell_mimiron_p3wx2_laser_barrage_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_plasma_blast : public SpellScriptLoader { 
Class:         class spell_mimiron_plasma_blast_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_proximity_explosion : public SpellScriptLoader { 
Class:         class spell_mimiron_proximity_explosion_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_proximity_mines : public SpellScriptLoader { 
Class:         class spell_mimiron_proximity_mines_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_proximity_trigger : public SpellScriptLoader { 
Class:         class spell_mimiron_proximity_trigger_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_rapid_burst : public SpellScriptLoader { 
Class:         class spell_mimiron_rapid_burst_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_rocket_strike : public SpellScriptLoader { 
Class:         class spell_mimiron_rocket_strike_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_rocket_strike_damage : public SpellScriptLoader { 
Class:         class spell_mimiron_rocket_strike_damage_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_rocket_strike_target_select : public SpellScriptLoader { 
Class:         class spell_mimiron_rocket_strike_target_select_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_self_repair : public SpellScriptLoader { 
Class:         class spell_mimiron_self_repair_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_spinning_up : public SpellScriptLoader { 
Class:         class spell_mimiron_spinning_up_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_assault_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_assault_bot_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_assault_bot_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_assault_bot_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_fire_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_fire_bot_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_fire_bot_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_fire_bot_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_flames_initial : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_flames_initial_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_flames_spread : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_flames_spread_SpellScript : public SpellScript         {         
Class:         class spell_mimiron_summon_flames_spread_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_frost_bomb : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_frost_bomb_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_frost_bomb_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_frost_bomb_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_junk_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_junk_bot_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_junk_bot_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_junk_bot_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_weld : public SpellScriptLoader { 
Class:         class spell_mimiron_weld_AuraScript : public AuraScript         {         
Class: class achievement_setup_boom : public AchievementCriteriaScript { 
Class: class achievement_setup_mine : public AchievementCriteriaScript { 
Class: class achievement_setup_rocket : public AchievementCriteriaScript { 
Class: class achievement_firefighter : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(aurApp);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Unit::RemoveAurasByType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(aurApp);')]
===========================================
Class:class npc_pure_energy : public CreatureScript enum NpcPureEnergy public:     npc_pure_energy() : CreatureScript() { }     npc_pure_energy() : CreatureScript() 
Class:class npc_pure_energy : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdtAssert(m_nav);'), (63, 1, u'+\tdtAssert(m_nav);')]
===========================================
===========================================
Total add: 61
Total del: 3
Header: dtNavMeshQuery::raycast
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdtAssert(m_nav);'), (63, 1, u'+\tdtAssert(m_nav);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdtAssert(m_nav);'), (63, 1, u'+\tdtAssert(m_nav);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
Total add: 154
Total del: 0
Header: rcBuildRegions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(!m_result.ready());')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: SQLQueryHolderTask::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(!m_result.ready());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(!m_result.ready());')]
===========================================
Class: class npc_risen_husk_spirit : public CreatureScript { 
Class: class npc_risen_husk_spirit : public CreatureScript { 
Class: class AerialTargetSelector { 
Class:class spell_ulduar_proximity_mines : public SpellScriptLoader class boss_mimiron : public CreatureScript         spell_ulduar_proximity_mines() : SpellScriptLoader() { }         spell_ulduar_proximity_mines() : SpellScriptLoader() 
Class: class boss_vx_001 : public CreatureScript { 
Class: class boss_aerial_command_unit : public CreatureScript { 
Class: class npc_magnetic_core : public CreatureScript { 
Class: class npc_mimiron_emergency_fire_bot : public CreatureScript { 
Class: class npc_mimiron_computer : public CreatureScript { 
Class: class npc_mimiron_flames : public CreatureScript { 
Class: class npc_mimiron_frost_bomb : public CreatureScript { 
Class: class npc_mimiron_proximity_mine : public CreatureScript { 
Class: class go_mimiron_hardmode_button : public GameObjectScript { 
Class:  class spell_mimiron_bomb_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_bomb_bot_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_clear_fires : public SpellScriptLoader { 
Class:         class spell_mimiron_clear_fires_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_despawn_assault_bots : public SpellScriptLoader { 
Class:         class spell_mimiron_despawn_assault_bots_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_frost_bomb_explosion : public SpellScriptLoader { 
Class:         class spell_mimiron_frost_bomb_explosion_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_fire_search : public SpellScriptLoader { 
Class:         class spell_mimiron_fire_search_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_flame_suppressant : public SpellScriptLoader { 
Class:         class spell_mimiron_flame_suppressant_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_magnetic_core : public SpellScriptLoader { 
Class:         class spell_mimiron_magnetic_core_SpellScript : public SpellScript         {         
Class:         class spell_mimiron_magnetic_core_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_napalm_shell : public SpellScriptLoader { 
Class:         class spell_mimiron_napalm_shell_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_p3wx2_laser_barrage : public SpellScriptLoader { 
Class:         class spell_mimiron_p3wx2_laser_barrage_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_plasma_blast : public SpellScriptLoader { 
Class:         class spell_mimiron_plasma_blast_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_proximity_explosion : public SpellScriptLoader { 
Class:         class spell_mimiron_proximity_explosion_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_proximity_mines : public SpellScriptLoader { 
Class:         class spell_mimiron_proximity_mines_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_proximity_trigger : public SpellScriptLoader { 
Class:         class spell_mimiron_proximity_trigger_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_rapid_burst : public SpellScriptLoader { 
Class:         class spell_mimiron_rapid_burst_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_rocket_strike : public SpellScriptLoader { 
Class:         class spell_mimiron_rocket_strike_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_rocket_strike_damage : public SpellScriptLoader { 
Class:         class spell_mimiron_rocket_strike_damage_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_rocket_strike_target_select : public SpellScriptLoader { 
Class:         class spell_mimiron_rocket_strike_target_select_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_self_repair : public SpellScriptLoader { 
Class:         class spell_mimiron_self_repair_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_spinning_up : public SpellScriptLoader { 
Class:         class spell_mimiron_spinning_up_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_assault_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_assault_bot_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_assault_bot_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_assault_bot_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_fire_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_fire_bot_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_fire_bot_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_fire_bot_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_flames_initial : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_flames_initial_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_flames_spread : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_flames_spread_SpellScript : public SpellScript         {         
Class:         class spell_mimiron_summon_flames_spread_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_frost_bomb : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_frost_bomb_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_frost_bomb_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_frost_bomb_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_summon_junk_bot : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_junk_bot_AuraScript : public AuraScript         {         
Class:  class spell_mimiron_summon_junk_bot_target : public SpellScriptLoader { 
Class:         class spell_mimiron_summon_junk_bot_target_SpellScript : public SpellScript         {         
Class:  class spell_mimiron_weld : public SpellScriptLoader { 
Class:         class spell_mimiron_weld_AuraScript : public AuraScript         {         
Class: class achievement_setup_boom : public AchievementCriteriaScript { 
Class: class achievement_setup_mine : public AchievementCriteriaScript { 
Class: class achievement_setup_rocket : public AchievementCriteriaScript { 
Class: class achievement_firefighter : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-    ASSERT(file);'), (22, 2, u'-    ASSERT(_config);')]
===========================================
===========================================
Total add: 16
Total del: 14
Header: ConfigMgr::LoadInitial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-    ASSERT(file);'), (22, 2, u'-    ASSERT(_config);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-    ASSERT(file);'), (22, 2, u'-    ASSERT(_config);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-                ASSERT(false);'), (62, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 22
Total del: 38
Header: class WorldServerSignalHandler : public Trinity::SignalHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-                ASSERT(false);'), (62, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-                ASSERT(false);'), (62, 1, u'+            ASSERT(false);')]
===========================================
Class:    class boss_gurtogg_bloodboil : public CreatureScript { 
Class: class boss_gurtogg_bloodboil : public CreatureScript { 
Class:  class spell_gurtogg_bloodboil_bloodboil : public SpellScriptLoader { 
Class:         class spell_gurtogg_bloodboil_bloodboil_SpellScript : public SpellScript         {         
Class:class spell_ulduar_teleporter : public SpellScriptLoader { 
Class:         class spell_ulduar_teleporter_SpellScript : public SpellScript         {         
Class: class ulduar_teleporter : public GameObjectScript { 
Class: class AccountActionIpLogger : public AccountScript { 
Class: class CharacterActionIpLogger : public PlayerScript { 
Class: class CharacterDeleteActionIpLogger : public PlayerScript { 
Class: class spell_dk_pestilence : public SpellScriptLoader { 
Class:         class spell_dk_pestilence_SpellScript : public SpellScript         {         
Class:class boss_ambassador_flamelash : public CreatureScript enum Events public:     boss_ambassador_flamelash() : CreatureScript() { }     boss_ambassador_flamelash() : CreatureScript() 
Class:class boss_ambassador_flamelash : public CreatureScript { 
Class:class boss_anubshiah : public CreatureScript { 
Class:class boss_emperor_dagran_thaurissan : public CreatureScript enum Events public:     boss_emperor_dagran_thaurissan() : CreatureScript() { }     boss_emperor_dagran_thaurissan() : CreatureScript() 
Class:class boss_emperor_dagran_thaurissan : public CreatureScript { 
Class:class boss_general_angerforge : public CreatureScript enum Events public:     boss_general_angerforge() : CreatureScript() { }     boss_general_angerforge() : CreatureScript() 
Class:class boss_general_angerforge : public CreatureScript { 
Class:class boss_grizzle : public CreatureScript enum Events public:     boss_grizzle() : CreatureScript() { }     boss_grizzle() : CreatureScript() 
Class:class boss_grizzle : public CreatureScript class boss_grizzle : public CreatureScript
Class:class boss_high_interrogator_gerstahn : public CreatureScript enum Events public:     boss_high_interrogator_gerstahn() : CreatureScript() { }     boss_high_interrogator_gerstahn() : CreatureScript() 
Class:class boss_high_interrogator_gerstahn : public CreatureScript { 
Class:class boss_magmus : public CreatureScript { 
Class:class boss_moira_bronzebeard : public CreatureScript enum Events public:     boss_moira_bronzebeard() : CreatureScript() { }     boss_moira_bronzebeard() : CreatureScript() 
Class:class boss_moira_bronzebeard : public CreatureScript { 
Class:class npc_imp_in_a_ball : public CreatureScript { 
Class:class boss_ambassador_flamelash : public CreatureScript enum Events public:     boss_ambassador_flamelash() : CreatureScript() { }     boss_ambassador_flamelash() : CreatureScript() 
Class:class boss_ambassador_flamelash : public CreatureScript { 
Class:class boss_anubshiah : public CreatureScript { 
Class:class boss_emperor_dagran_thaurissan : public CreatureScript enum Events public:     boss_emperor_dagran_thaurissan() : CreatureScript() { }     boss_emperor_dagran_thaurissan() : CreatureScript() 
Class:class boss_emperor_dagran_thaurissan : public CreatureScript { 
Class:class boss_general_angerforge : public CreatureScript enum Events public:     boss_general_angerforge() : CreatureScript() { }     boss_general_angerforge() : CreatureScript() 
Class:class boss_general_angerforge : public CreatureScript { 
Class:class boss_grizzle : public CreatureScript enum Events public:     boss_grizzle() : CreatureScript() { }     boss_grizzle() : CreatureScript() 
Class:class boss_grizzle : public CreatureScript class boss_grizzle : public CreatureScript
Class:class boss_high_interrogator_gerstahn : public CreatureScript enum Events public:     boss_high_interrogator_gerstahn() : CreatureScript() { }     boss_high_interrogator_gerstahn() : CreatureScript() 
Class:class boss_high_interrogator_gerstahn : public CreatureScript { 
Class:class boss_magmus : public CreatureScript { 
Class:class boss_moira_bronzebeard : public CreatureScript enum Events public:     boss_moira_bronzebeard() : CreatureScript() { }     boss_moira_bronzebeard() : CreatureScript() 
Class:class boss_moira_bronzebeard : public CreatureScript { 
Class:class npc_imp_in_a_ball : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(146, 2, u'-\t\t\t\t\tASSERT(gmod.GetNumBytes() <= 32);'), (360, 1, u'+                    ASSERT(gmod.GetNumBytes() <= 32);')]
===========================================
===========================================
Total add: 214
Total del: 214
Header: AuthSession::_HandleLogonChallenge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(146, 2, u'-\t\t\t\t\tASSERT(gmod.GetNumBytes() <= 32);'), (360, 1, u'+                    ASSERT(gmod.GetNumBytes() <= 32);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(146, 2, u'-\t\t\t\t\tASSERT(gmod.GetNumBytes() <= 32);'), (360, 1, u'+                    ASSERT(gmod.GetNumBytes() <= 32);')]
===========================================
Class:  class Patcher { 
Class: class spell_tyrannus_rimefang_icy_blast : public SpellScriptLoader { 
Class:         class spell_tyrannus_rimefang_icy_blast_SpellScript : public SpellScript         {         
Class:class WDBThreadStartReq1 : public ACE_Method_Request { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class:class boss_krystallus : public CreatureScript enum Events public:     boss_krystallus() : CreatureScript() { }     boss_krystallus() : CreatureScript() 
Class:class boss_krystallus : public CreatureScript { 
Class: class AuthServerSignalHandler : public Trinity::SignalHandler { 
Class:class spell_marwyn_shared_suffering : public SpellScriptLoader class spell_marwyn_shared_suffering : public SpellScriptLoader
Class: class npc_jaina_or_sylvanas_hor : public CreatureScript Position const SylvanasIntroPosition[] =     public:         npc_jaina_or_sylvanas_hor() : CreatureScript() { }         npc_jaina_or_sylvanas_hor() : CreatureScript() 
Class:class npc_jaina_or_sylvanas_escape_hor : public CreatureScript class npc_jaina_or_sylvanas_escape_hor : public CreatureScript
Class: class npc_the_lich_king_escape_hor : public CreatureScript { 
Class:class npc_phantom_mage : public CreatureScript class npc_phantom_mage : public CreatureScript
Class: class npc_frostsworn_general : public CreatureScript { 
Class:class npc_frostworn_general : public CreatureScript class npc_spiritual_reflection : public CreatureScript public:     npc_frostworn_general() : CreatureScript() { }     npc_frostworn_general() : CreatureScript() 
Class:class npc_spiritual_reflection : public CreatureScript  class at_hor_intro_start : public AreaTriggerScript public:     npc_spiritual_reflection() : CreatureScript() { }     npc_spiritual_reflection() : CreatureScript() 
Class:class at_hor_waves_restarter : public AreaTriggerScript { 
Class:class at_hor_intro_start : public AreaTriggerScript  class at_hor_impenetrable_door : public AreaTriggerScript public:     at_hor_intro_start() : AreaTriggerScript() { }     at_hor_intro_start() : AreaTriggerScript() 
Class:class at_hor_waves_restarter : public AreaTriggerScript  class at_hor_shadow_throne : public AreaTriggerScript public:     at_hor_waves_restarter() : AreaTriggerScript() { }     at_hor_waves_restarter() : AreaTriggerScript() 
Class:class at_shadow_throne : public AreaTriggerScript class at_shadow_throne : public AreaTriggerScript
Class: class npc_lumbering_abomination : public CreatureScript { 
Class: class npc_lumbering_abomination : public CreatureScript  class spell_hor_start_halls_of_reflection_quest_ae : public SpellScriptLoader public:     npc_lumbering_abomination() : CreatureScript() { }     npc_lumbering_abomination() : CreatureScript() 
Class:        class spell_hor_start_halls_of_reflection_quest_ae_SpellScript : public SpellScript         class spell_hor_start_halls_of_reflection_quest_ae_SpellScript : public SpellScript
Class:  class spell_hor_evasion : public SpellScriptLoader { 
Class:         class spell_hor_evasion_SpellScript : public SpellScript         {         
Class:  class spell_hor_gunship_cannon_fire : public SpellScriptLoader { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(GetOwner()->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    ASSERT(GetOwner());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Pet::Pet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(GetOwner()->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    ASSERT(GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(GetOwner()->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    ASSERT(GetOwner());')]
===========================================
Class: class spell_mark_of_frost : public SpellScriptLoader { 
Class:         class spell_mark_of_frost_SpellScript : public SpellScript         {         
Class: class spell_pal_avenging_wrath : public SpellScriptLoader { 
Class:         class spell_pal_avenging_wrath_AuraScript : public AuraScript         {         
Class:  class spell_ingvar_summon_banshee : public SpellScriptLoader { 
Class:        class spell_ingvar_woe_strike_AuraScript : public AuraScript         class spell_ingvar_woe_strike_AuraScript : public AuraScript
Class:  class spell_q14100_q14111_make_player_destroy_totems : public SpellScriptLoader { 
Class:         class spell_q14100_q14111_make_player_destroy_totems_SpellScript : public SpellScript         {         
Class: class spell_gen_throw_shield : public SpellScriptLoader { 
Class:         class spell_gen_throw_shield_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Object::BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(shapeInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: AuraEffect::HandleAuraModShapeshift
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(shapeInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(shapeInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(zoneEntry);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(zoneEntry);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(zoneEntry);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tassert((large && binind == BININD_INVALID) || (large == false && binind')]
===========================================
===========================================
Total add: 15
Total del: 10
Header: arena_run_page_validate_zeroed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tassert((large && binind == BININD_INVALID) || (large == false && binind')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tassert((large && binind == BININD_INVALID) || (large == false && binind')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(need_pages > 0);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: arena_run_split
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(need_pages > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(need_pages > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tassert(need_pages > 0);'), (79, 2, u'-\t\tassert(zero == false);'), (145, 1, u'+\tassert(binind != BININD_INVALID);'), (151, 1, u'+\tassert(need_pages > 0);')]
===========================================
===========================================
Total add: 107
Total del: 67
Header: arena_run_split
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tassert(need_pages > 0);'), (79, 2, u'-\t\tassert(zero == false);'), (145, 1, u'+\tassert(binind != BININD_INVALID);'), (151, 1, u'+\tassert(need_pages > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tassert(need_pages > 0);'), (79, 2, u'-\t\tassert(zero == false);'), (145, 1, u'+\tassert(binind != BININD_INVALID);'), (151, 1, u'+\tassert(need_pages > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert(arena->spare != NULL);'), (13, 2, u'-\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (14, 2, u'-\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (15, 2, u'-\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (17, 2, u'-\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (19, 2, u'-\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) =='), (36, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (37, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (38, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (40, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (42, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Total add: 65
Total del: 54
Header: arena_run_split
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert(arena->spare != NULL);'), (13, 2, u'-\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (14, 2, u'-\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (15, 2, u'-\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (17, 2, u'-\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (19, 2, u'-\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) =='), (36, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (37, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (38, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (40, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (42, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert(arena->spare != NULL);'), (13, 2, u'-\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (14, 2, u'-\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (15, 2, u'-\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (17, 2, u'-\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (19, 2, u'-\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) =='), (36, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (37, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (38, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (40, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (42, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (4, 1, u'+\tassert(binind != BININD_INVALID);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: arena_run_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (4, 1, u'+\tassert(binind != BININD_INVALID);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (4, 1, u'+\tassert(binind != BININD_INVALID);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-       assert(chunk->ndirty != 0);'), (40, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (41, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
Total add: 44
Total del: 9
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-       assert(chunk->ndirty != 0);'), (40, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (41, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-       assert(chunk->ndirty != 0);'), (40, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (41, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(run_ind >= map_bias);'), (12, 2, u'-\tassert(run_ind < chunk_npages);'), (15, 2, u'-\t\tassert(size == PAGE ||'), (41, 2, u'-\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Total add: 5
Total del: 54
Header: arena_purge_all
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(run_ind >= map_bias);'), (12, 2, u'-\tassert(run_ind < chunk_npages);'), (15, 2, u'-\t\tassert(size == PAGE ||'), (41, 2, u'-\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(run_ind >= map_bias);'), (12, 2, u'-\tassert(run_ind < chunk_npages);'), (15, 2, u'-\t\tassert(size == PAGE ||'), (41, 2, u'-\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: malloc_conf_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
Total add: 5
Total del: 29
Header: imemalign
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(result == NULL);')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: label_return:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(result == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(result == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 6
Total del: 23
Header: je_realloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 2
Total del: 18
Header: je_free
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: je_allocm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(usize != 0);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: je_allocm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(usize != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(usize != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
Total add: 6
Total del: 27
Header: je_allocm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(*ptr != NULL);'), (4, 2, u'-\tassert(SIZE_T_MAX - size >= extra);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: je_rallocm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(*ptr != NULL);'), (4, 2, u'-\tassert(SIZE_T_MAX - size >= extra);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(*ptr != NULL);'), (4, 2, u'-\tassert(SIZE_T_MAX - size >= extra);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(rsize != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 8
Header: je_sallocm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(rsize != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(rsize != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: prof_backtrace
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(prof_dump_fd != -1);')]
===========================================
===========================================
Total add: 14
Total del: 1
Header: prof_flush
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(prof_dump_fd != -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(prof_dump_fd != -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tcassert(config_prof);'), (19, 2, u'-\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);'), (24, 2, u'-\t\tassert(ctx->cnt_merged.curbytes == 0);'), (25, 2, u'-\t\tassert(ctx->cnt_merged.accumobjs == 0);'), (26, 2, u'-\t\tassert(ctx->cnt_merged.accumbytes == 0);'), (29, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Total add: 18
Total del: 36
Header: prof_ctx_sum
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tcassert(config_prof);'), (19, 2, u'-\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);'), (24, 2, u'-\t\tassert(ctx->cnt_merged.curbytes == 0);'), (25, 2, u'-\t\tassert(ctx->cnt_merged.accumobjs == 0);'), (26, 2, u'-\t\tassert(ctx->cnt_merged.accumbytes == 0);'), (29, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tcassert(config_prof);'), (19, 2, u'-\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);'), (24, 2, u'-\t\tassert(ctx->cnt_merged.curbytes == 0);'), (25, 2, u'-\t\tassert(ctx->cnt_merged.accumobjs == 0);'), (26, 2, u'-\t\tassert(ctx->cnt_merged.accumbytes == 0);'), (29, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tcassert(config_prof);')]
===========================================
===========================================
Total add: 9
Total del: 30
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(bits > 0 && bits <= (sizeof(uintptr_t) << 3));'), (15, 2, u'-\tassert(height * bits_per_level >= bits);'), (24, 1, u'+\tassert((height-1) * bits_per_level + bits_in_leaf >= bits);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_stats);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: tcache_stats_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_stats);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_stats);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zone_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ConditionMgr::addToSpellImplicitTargetConditions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(object);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Object::BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(object);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(object);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);'), (3, 1, u'+        ASSERT(unit->GetVehicleKit());'), (4, 1, u'+        ASSERT(unit->GetVehicleKit()->GetVehicleInfo());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Object::BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);'), (3, 1, u'+        ASSERT(unit->GetVehicleKit());'), (4, 1, u'+        ASSERT(unit->GetVehicleKit()->GetVehicleInfo());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);'), (3, 1, u'+        ASSERT(unit->GetVehicleKit());'), (4, 1, u'+        ASSERT(unit->GetVehicleKit()->GetVehicleInfo());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Pet::ProhibitSpellSchool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Player::Has310Flyer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(master);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ObjectMgr::SetCreatureLinkedRespawn
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(master);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(master);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(triggeredSpellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: class spell_pri_glyph_of_prayer_of_healing : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(triggeredSpellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(triggeredSpellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: class spell_rog_preparation : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: class spell_warl_demonic_circle_summon : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                                ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: class spell_warl_demonic_empowerment : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                                ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                                ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: class spell_warr_deep_wounds : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    ASSERT(spellInfo);')]
===========================================
Class: class spell_windsoul_totem_aura : public SpellScriptLoader { 
Class:     class spell_windsoul_totem_aura_AuraScript : public AuraScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(GetOwner());')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: GameObject::TriggeringLinkedGameObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(GetOwner());')]
===========================================
Class: class PassengerController { 
Class: class DelayedMovementEvent : public BasicEvent { 
Class: class ResetEncounterEvent : public BasicEvent { 
Class: class BattleExperienceEvent : public BasicEvent { 
Class: class npc_gunship : public CreatureScript { 
Class: class npc_high_overlord_saurfang_igb : public CreatureScript { 
Class: class npc_muradin_bronzebeard_igb : public CreatureScript { 
Class: class npc_zafod_boombox : public CreatureScript { 
Class: class npc_gunship_boarding_leader : public CreatureScript { 
Class: class npc_gunship_boarding_add : public CreatureScript { 
Class: class npc_gunship_gunner : public CreatureScript { 
Class: class npc_gunship_rocketeer : public CreatureScript { 
Class: class npc_gunship_mage : public CreatureScript { 
Class: class npc_gunship_cannon : public CreatureScript { 
Class: class spell_igb_rocket_pack : public SpellScriptLoader { 
Class:         class spell_igb_rocket_pack_AuraScript : public AuraScript         {         
Class: class spell_igb_rocket_pack_useable : public SpellScriptLoader { 
Class:         class spell_igb_rocket_pack_useable_AuraScript : public AuraScript         {         
Class: class spell_igb_on_gunship_deck : public SpellScriptLoader { 
Class:         class spell_igb_on_gunship_deck_AuraScript : public AuraScript         {         
Class: class spell_igb_periodic_trigger_with_power_cost : public SpellScriptLoader { 
Class:         class spell_igb_periodic_trigger_with_power_cost_AuraScript : public AuraScript         {         
Class: class spell_igb_cannon_blast : public SpellScriptLoader { 
Class:         class spell_igb_cannon_blast_SpellScript : public SpellScript         {         
Class: class spell_igb_incinerating_blast : public SpellScriptLoader { 
Class:         class spell_igb_incinerating_blast_SpellScript : public SpellScript         {         
Class: class spell_igb_overheat : public SpellScriptLoader { 
Class:         class spell_igb_overheat_AuraScript : public AuraScript         {         
Class: class spell_igb_below_zero : public SpellScriptLoader { 
Class:         class spell_igb_below_zero_SpellScript : public SpellScript         {         
Class: class spell_igb_teleport_to_enemy_ship : public SpellScriptLoader { 
Class:         class spell_igb_teleport_to_enemy_ship_SpellScript : public SpellScript         {         
Class: class spell_igb_burning_pitch_selector : public SpellScriptLoader { 
Class:         class spell_igb_burning_pitch_selector_SpellScript : public SpellScript         {         
Class: class spell_igb_burning_pitch : public SpellScriptLoader { 
Class:         class spell_igb_burning_pitch_SpellScript : public SpellScript         {         
Class: class spell_igb_rocket_artillery : public SpellScriptLoader { 
Class:         class spell_igb_rocket_artillery_SpellScript : public SpellScript         {         
Class: class spell_igb_rocket_artillery_explosion : public SpellScriptLoader { 
Class:         class spell_igb_rocket_artillery_explosion_SpellScript : public SpellScript         {         
Class: class spell_igb_gunship_fall_teleport : public SpellScriptLoader { 
Class:         class spell_igb_gunship_fall_teleport_SpellScript : public SpellScript         {         
Class: class spell_igb_check_for_players : public SpellScriptLoader { 
Class:         class spell_igb_check_for_players_SpellScript : public SpellScript         {         
Class: class spell_igb_teleport_players_on_victory : public SpellScriptLoader { 
Class:         class spell_igb_teleport_players_on_victory_SpellScript : public SpellScript         {         
Class: class achievement_im_on_a_boat : public AchievementCriteriaScript { 
Class:class spell_the_lich_king_eject_all_passengers : public SpellScriptLoader { 
Class:         class spell_the_lich_king_eject_all_passengers_SpellScript : public SpellScript         {         
Class: class spell_jokkum_eject_all : public SpellScriptLoader { 
Class:         class spell_jokkum_eject_all_SpellScript : public SpellScript         {         
Class:class spell_gen_eject_all_passengers : public SpellScriptLoader { 
Class:         class spell_gen_eject_all_passengers_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: LFGMgr::MakeNewGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(GetOwner());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: GameObject::TriggeringLinkedGameObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(GetOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(object);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Object::BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(object);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(object);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Object::BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(unit);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Player::Has310Flyer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(Nquest);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Player::SatisfyQuestExclusiveGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(Nquest);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(Nquest);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(item);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Player::TakeQuestSourceItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(item);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(item);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(lastPathNode);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Player::ActivateTaxiPathTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(lastPathNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(lastPathNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(iece);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Player::_StoreOrEquipNewItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(iece);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(iece);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(triggeredSpellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: class spell_pri_glyph_of_prayer_of_healing : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(triggeredSpellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(triggeredSpellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: class spell_rog_preparation : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: class spell_warl_demonic_circle_summon : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                        ASSERT(ci);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: class spell_warl_demonic_empowerment : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                        ASSERT(ci);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                        ASSERT(ci);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                                ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: class spell_warl_demonic_empowerment : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                                ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                                ASSERT(spellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: class spell_warr_deep_wounds : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    ASSERT(spellInfo);')]
===========================================
Class:class npc_deathly_usher : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (key_index < sizeof(this->table_)/sizeof(this->table_[0])'), (4, 1, u'+    ACE_ASSERT (key_index < sizeof(this->table_)/sizeof(this->table_[0]));'), (9, 1, u'+    ACE_ASSERT(this->table_[key_index].key_ == key);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: ACE_TSS_Cleanup::thread_detach_key
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (key_index < sizeof(this->table_)/sizeof(this->table_[0])'), (4, 1, u'+    ACE_ASSERT (key_index < sizeof(this->table_)/sizeof(this->table_[0]));'), (9, 1, u'+    ACE_ASSERT(this->table_[key_index].key_ == key);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (key_index < sizeof(this->table_)/sizeof(this->table_[0])'), (4, 1, u'+    ACE_ASSERT (key_index < sizeof(this->table_)/sizeof(this->table_[0]));'), (9, 1, u'+    ACE_ASSERT(this->table_[key_index].key_ == key);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            ASSERT(_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);')]
===========================================
===========================================
Total add: 10
Total del: 2
Header: PathGenerator::BuildPolyPath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            ASSERT(_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            ASSERT(_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tdtAssert(m_nav);'), (98, 1, u'+\tdtAssert(m_nav);'), (99, 1, u'+\tdtAssert(m_nodePool);'), (100, 1, u'+\tdtAssert(m_openList);')]
===========================================
===========================================
Total add: 275
Total del: 0
Header: dtNavMeshQuery::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tdtAssert(m_nav);'), (98, 1, u'+\tdtAssert(m_nav);'), (99, 1, u'+\tdtAssert(m_nodePool);'), (100, 1, u'+\tdtAssert(m_openList);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tdtAssert(m_nav);'), (98, 1, u'+\tdtAssert(m_nav);'), (99, 1, u'+\tdtAssert(m_nodePool);'), (100, 1, u'+\tdtAssert(m_openList);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tdtAssert(m_nav);')]
===========================================
===========================================
Total add: 0
Total del: 37
Header: dtNavMeshQuery::findNearestPoly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tdtAssert(m_nav);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tdtAssert(m_nav);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: dtNavMeshQuery::finalizeSlicedFindPathPartial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
Total add: 149
Total del: 0
Header: rcMarkConvexPolyArea
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tdtAssert(m_nav);'), (98, 2, u'-\tdtAssert(m_nav);'), (99, 2, u'-\tdtAssert(m_nodePool);'), (100, 2, u'-\tdtAssert(m_openList);')]
===========================================
===========================================
Total add: 0
Total del: 275
Header: dtNavMeshQuery::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tdtAssert(m_nav);'), (98, 2, u'-\tdtAssert(m_nav);'), (99, 2, u'-\tdtAssert(m_nodePool);'), (100, 2, u'-\tdtAssert(m_openList);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tdtAssert(m_nav);'), (98, 2, u'-\tdtAssert(m_nav);'), (99, 2, u'-\tdtAssert(m_nodePool);'), (100, 2, u'-\tdtAssert(m_openList);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: dtNavMeshQuery::finalizeSlicedFindPathPartial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-\trcAssert(ctx);')]
===========================================
===========================================
Total add: 0
Total del: 149
Header: rcMarkConvexPolyArea
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-\trcAssert(ctx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-\trcAssert(ctx);')]
===========================================
Class:class npc_anub_ar_warrior : public CreatureScript { 
Class:class npc_watcher_gashra : public CreatureScript { 
Class: class npc_watcher_gashra : public CreatureScript { 
Class:class npc_watcher_narjil : public CreatureScript { 
Class:class npc_watcher_silthik : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(spellInfo);'), (10, 1, u'+        ASSERT(spellInfo);')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: Pet::ProhibitSpellSchool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(spellInfo);'), (10, 1, u'+        ASSERT(spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(spellInfo);'), (10, 1, u'+        ASSERT(spellInfo);')]
===========================================
Class:class CorpseExplosionCheck { 
Class:class RaiseDeadCheck { 
Class:  class spell_dk_raise_dead : public SpellScriptLoader { 
Class:         class spell_dk_raise_dead_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetDestTargets - no explicit object target available!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Spell::SelectImplicitTargetDestTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetDestTargets - no explicit object target available!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetDestTargets - no explicit object target available!");')]
===========================================
Class:   class spell_pal_judgement : public SpellScriptLoader { 
Class:         class spell_pal_judgement_SpellScript : public SpellScript         {         
Class: class spell_item_echoes_of_light : public SpellScriptLoader { 
Class:         class spell_item_echoes_of_light_SpellScript : public SpellScript         {         
Class: class spell_pal_glyph_of_holy_light : public SpellScriptLoader { 
Class:         class spell_pal_glyph_of_holy_light_SpellScript : public SpellScript         {         
Class:class PowerCheck { 
Class: class RaidCheck { 
Class:  class spell_pri_circle_of_healing : public SpellScriptLoader { 
Class:         class spell_pri_circle_of_healing_SpellScript : public SpellScript         {         
Class: class spell_pri_divine_hymn : public SpellScriptLoader { 
Class:         class spell_pri_divine_hymn_SpellScript : public SpellScript         {         
Class: class spell_pri_hymn_of_hope : public SpellScriptLoader { 
Class:         class spell_pri_hymn_of_hope_SpellScript : public SpellScript         {         
Class:class RaidCheck { 
Class:  class spell_dru_wild_growth : public SpellScriptLoader { 
Class:         class spell_dru_wild_growth_SpellScript : public SpellScript         {         
Class:class ReplenishmentCheck { 
Class:         class spell_gen_replenishment_AuraScript : public AuraScript         {         
Class: class spell_warr_glyph_of_sunder_armor : public SpellScriptLoader { 
Class:         class spell_warr_glyph_of_sunder_armor_AuraScript : public AuraScript         {         
Class: class spell_warr_retaliation : public SpellScriptLoader { 
Class:         class spell_warr_retaliation_AuraScript : public AuraScript         {         
Class: class spell_pilgrims_bounty_buff_food : public SpellScriptLoader { 
Class:         class spell_pilgrims_bounty_buff_food_AuraScript : public AuraScript         {         
Class: class spell_rog_killing_spree : public SpellScriptLoader { 
Class:         class spell_rog_killing_spree_SpellScript : public SpellScript         {         
Class:         class spell_rog_killing_spree_AuraScript : public AuraScript         {         
Class:class boss_taldaram : public CreatureScript class boss_taldaram : public CreatureScript
Class:class npc_taldaram_flamesphere : public CreatureScript  class npc_prince_taldaram_flame_sphere : public CreatureScript         npc_taldaram_flamesphere() : CreatureScript() { }         npc_taldaram_flamesphere() : CreatureScript() 
Class:class prince_taldaram_sphere : public GameObjectScript  class go_prince_taldaram_sphere : public GameObjectScript         prince_taldaram_sphere() : GameObjectScript() { }         prince_taldaram_sphere() : GameObjectScript() 
Class: class spell_prince_taldaram_conjure_flame_sphere : public SpellScriptLoader { 
Class:         class spell_prince_taldaram_conjure_flame_sphere_SpellScript : public SpellScript         {         
Class:  class spell_prince_taldaram_flame_sphere_summon : public SpellScriptLoader { 
Class:         class spell_prince_taldaram_flame_sphere_summon_SpellScript : public SpellScript         {         
Class:class boss_jeklik : public CreatureScript  enum BatIds { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        _CrtSetReportMode(_CRT_ASSERT, _CRTDBG_MODE_FILE);'), (7, 1, u'+        _CrtSetReportFile(_CRT_ASSERT, _CRTDBG_FILE_STDERR);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: WheatyExceptionReport::WheatyExceptionReport
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        _CrtSetReportMode(_CRT_ASSERT, _CRTDBG_MODE_FILE);'), (7, 1, u'+        _CrtSetReportFile(_CRT_ASSERT, _CRTDBG_FILE_STDERR);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        _CrtSetReportMode(_CRT_ASSERT, _CRTDBG_MODE_FILE);'), (7, 1, u'+        _CrtSetReportFile(_CRT_ASSERT, _CRTDBG_FILE_STDERR);')]
===========================================
Class: class spell_q13400_illidan_kill_master : public SpellScriptLoader { 
Class:         class spell_q13400_illidan_kill_master_SpellScript : public SpellScript         {         
Class:  class spell_grobbulus_mutating_injection : public SpellScriptLoader { 
Class:         class spell_grobbulus_mutating_injection_AuraScript : public AuraScript         {         
Class:        class spell_grobbulus_poison_cloud_AuraScript : public AuraScript         class spell_grobbulus_poison_cloud_AuraScript : public AuraScript
Class: class npc_broggok_poison_cloud : public CreatureScript { 
Class: class spell_broggok_poison_cloud : public SpellScriptLoader { 
Class:         class spell_broggok_poison_cloud_AuraScript : public AuraScript         {         
Class:class SplineRawInitializer { 
Class:class npc_00x09hl : public CreatureScript class npc_oox09hl : public CreatureScript     npc_00x09hl() : CreatureScript() { }     npc_00x09hl() : CreatureScript() 
Class:class npc_torek : public CreatureScript class npc_torek : public CreatureScript
Class: class npc_naladu : public CreatureScript { 
Class: class npc_tracy_proudwell : public CreatureScript { 
Class: class npc_trollbane : public CreatureScript { 
Class:  class npc_rathis_tomber : public CreatureScript { 
Class:   class at_twilight_grove : public AreaTriggerScript enum TwilightCorrupter public:     at_twilight_grove() : AreaTriggerScript() { }     at_twilight_grove() : AreaTriggerScript() 
Class:  class at_twilight_grove : public AreaTriggerScript { 
Class:class spell_razelikh_teleport_group : public SpellScriptLoader class spell_razelikh_teleport_group : public SpellScriptLoader
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+                ASSERT(channelName.length() > 0);')]
===========================================
===========================================
Total add: 47
Total del: 19
Header: ChatHandler::FillMessageData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+                ASSERT(channelName.length() > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+                ASSERT(channelName.length() > 0);')]
===========================================
Class:        class spell_close_rift_AuraScript : public AuraScript     struct npc_king_jokkum_vehicleAI : public VehicleAI     {     
Class:class npc_king_jokkum_vehicle : public CreatureScript class spell_veranus_summon : public SpellScriptLoader { 
Class:         class spell_veranus_summon_AuraScript : public AuraScript         {         
Class:  class spell_jokkum_eject_all : public SpellScriptLoader { 
Class:         class spell_jokkum_eject_all_SpellScript : public SpellScript         {         
Class: class spell_close_rift : public SpellScriptLoader         npc_king_jokkum_vehicle() : CreatureScript() { }         npc_king_jokkum_vehicle() : CreatureScript() 
Class: class npc_bloodmaul_brutebane : public CreatureScript { 
Class: class npc_bloodmaul_brute : public CreatureScript { 
Class: class npc_bloodmaul_brutebane : public CreatureScript { 
Class:  class npc_ogre_brute : public CreatureScript { 
Class: class npc_commander_eligor_dawnbringer : public CreatureScript { 
Class:class npc_king_jokkum_vehicle : public CreatureScript { 
Class:  class npc_tenebron : public CreatureScript { 
Class:  class npc_shadron : public CreatureScript { 
Class:  class npc_vesperon : public CreatureScript { 
Class:  class npc_acolyte_of_shadron : public CreatureScript { 
Class:  class npc_acolyte_of_vesperon : public CreatureScript { 
Class:  class npc_twilight_eggs : public CreatureScript { 
Class: class npc_flame_tsunami : public CreatureScript { 
Class:  class npc_twilight_fissure : public CreatureScript { 
Class:  class npc_twilight_whelp : public CreatureScript { 
Class: class achievement_twilight_assist : public AchievementCriteriaScript { 
Class: class achievement_twilight_duo : public AchievementCriteriaScript { 
Class: class achievement_twilight_zone : public AchievementCriteriaScript { 
Class: class npc_tenebron : public CreatureScript { 
Class: class npc_shadron : public CreatureScript { 
Class: class npc_vesperon : public CreatureScript { 
Class:  class npc_acolyte_of_shadron : public CreatureScript { 
Class:  class npc_acolyte_of_vesperon : public CreatureScript { 
Class: class npc_twilight_eggs : public CreatureScript { 
Class: class npc_flame_tsunami : public CreatureScript { 
Class: class npc_twilight_fissure : public CreatureScript { 
Class: class npc_twilight_whelp : public CreatureScript { 
Class: class achievement_twilight_assist : public AchievementCriteriaScript { 
Class: class achievement_twilight_duo : public AchievementCriteriaScript { 
Class: class achievement_twilight_zone : public AchievementCriteriaScript { 
Class:class npc_brann_bronzebeard : public CreatureScript class npc_brann_bronzebeard_keystone : public CreatureScript     npc_brann_bronzebeard() : CreatureScript() { }     npc_brann_bronzebeard() : CreatureScript() 
Class: class npc_brann_bronzebeard : public CreatureScript { 
Class: class npc_mindless_abomination : public CreatureScript { 
Class: class spell_mindless_abomination_explosion_fx_master : public SpellScriptLoader { 
Class:         class spell_mindless_abomination_explosion_fx_master_SpellScript : public SpellScript         {         
Class: class boss_glutton : public CreatureScript { 
Class: class boss_mordresh_fire_eye : public CreatureScript { 
Class: class boss_tuten_kash : public CreatureScript { 
Class: class npc_belnistrasz : public CreatureScript     go_gong() : GameObjectScript() { }     go_gong() : GameObjectScript() 
Class: class npc_idol_room_spawner : public CreatureScript { 
Class:  class go_gong : public GameObjectScript { 
Class: class spell_shredder_delivery : public SpellScriptLoader { 
Class:         class spell_shredder_delivery_SpellScript : public SpellScript         {         
Class: class spell_oculus_evasive_maneuvers : public SpellScriptLoader { 
Class:         class spell_oculus_evasive_maneuvers_AuraScript : public AuraScript         {         
Class:  class spell_oculus_shock_lance : public SpellScriptLoader { 
Class:         class spell_oculus_shock_lance_SpellScript : public SpellScript         {         
Class: class spell_oculus_temporal_rift : public SpellScriptLoader { 
Class:         class spell_oculus_temporal_rift_AuraScript : public AuraScript         {         
Class: class npc_oscillating_frequency_scanner_master_bunny : public CreatureScript { 
Class: class spell_oscillating_field : public SpellScriptLoader { 
Class:         class spell_oscillating_field_SpellScript : public SpellScript         {         
Class: class spell_shango_tracks : public SpellScriptLoader { 
Class:     class spell_shango_tracks_SpellScript : public SpellScript     {     
Class: class npc_arete : public CreatureScript { 
Class:class npc_torturer_leCraft : public CreatureScript class npc_torturer_lecraft : public CreatureScript     public: npc_torturer_leCraft() : CreatureScript() {}     public: npc_torturer_leCraft() : CreatureScript() 
Class: class npc_torturer_leCraft : public CreatureScript { 
Class: class npc_gurgthock : public CreatureScript { 
Class: class npc_orinoko_tuskbreaker : public CreatureScript { 
Class: class npc_korrak_bloodrager : public CreatureScript { 
Class: class npc_yggdras : public CreatureScript { 
Class: class npc_stinkbeard : public CreatureScript { 
Class:  class npc_elemental_lord : public CreatureScript { 
Class:  class npc_fiend_elemental : public CreatureScript { 
Class:class spell_gen_stop_time : public SpellScriptLoader    class spell_oculus_call_ruby_emerald_amber_drake : public SpellScriptLoader public:     spell_gen_stop_time() : SpellScriptLoader() { }     spell_gen_stop_time() : SpellScriptLoader() 
Class:     class spell_gen_stop_time_AuraScript : public AuraScript     {     
Class:class spell_call_ruby_emerald_amber_drake : public SpellScriptLoader    class spell_oculus_ride_ruby_emerald_amber_drake_que : public SpellScriptLoader public:     spell_call_ruby_emerald_amber_drake() : SpellScriptLoader() { }     spell_call_ruby_emerald_amber_drake() : SpellScriptLoader() 
Class:         class spell_oculus_ride_ruby_emerald_amber_drake_que_AuraScript : public AuraScript         {         
Class:    class spell_call_ruby_emerald_amber_drake_SpellScript : public SpellScript     {     
Class:  class spell_oculus_stop_time : public SpellScriptLoader { 
Class: class spell_jokkum_scriptcast : public SpellScriptLoader { 
Class:         class spell_jokkum_scriptcast_AuraScript : public AuraScript         {         
Class:class instance_sunwell_plateau : public InstanceMapScript DoorData const doorData[] = public:     instance_sunwell_plateau() : InstanceMapScript(, 580) { }     instance_sunwell_plateau() : InstanceMapScript(, 580) 
Class:class instance_sunwell_plateau : public InstanceMapScript { 
Class: class boss_quagmirran : public CreatureScript { 
Class: class boss_rokmar_the_crackler : public CreatureScript { 
Class: class boss_mennu_the_betrayer : public CreatureScript { 
Class: class boss_dalliah_the_doomsayer : public CreatureScript { 
Class: class boss_wrath_scryer_soccothrates : public CreatureScript { 
Class: class boss_zereketh_the_unbound : public CreatureScript { 
Class: class npc_lightning_sentry : public CreatureScript { 
Class: class npc_blood_knight_stillblade : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!m_result.ready());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: SQLQueryHolderTask::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!m_result.ready());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!m_result.ready());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(_passengers.empty());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Transport::~Transport
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(_passengers.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(_passengers.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    ASSERT(!keyFrames.empty());')]
===========================================
===========================================
Total add: 18
Total del: 0
Header: TransportMgr::GeneratePath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    ASSERT(!keyFrames.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    ASSERT(!keyFrames.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(range.first != range.second);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(range.first != range.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(range.first != range.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(range.first != range.second);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(range.first != range.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                ASSERT(range.first != range.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(range.first != range.second);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: Player::SatisfyQuestExclusiveGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(range.first != range.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(range.first != range.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(!obj->IsPermanentWorldObject());'), (19, 1, u'+    ASSERT(ngrid != NULL);')]
===========================================
===========================================
Total add: 35
Total del: 0
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(!obj->IsPermanentWorldObject());'), (19, 1, u'+    ASSERT(ngrid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(!obj->IsPermanentWorldObject());'), (19, 1, u'+    ASSERT(ngrid != NULL);')]
===========================================
Class: class npc_storm_cloud : public CreatureScript { 
Class: class spell_q12919_gymers_grab : public SpellScriptLoader { 
Class:         class spell_q12919_gymers_grab_SpellScript : public SpellScript         {         
Class: class spell_q12919_gymers_throw : public SpellScriptLoader { 
Class:         class spell_q12919_gymers_throw_SpellScript : public SpellScript         {         
Class:class achievement_killed_exp_or_honor_target : public AchievementCriteriaScript { 
Class: class boss_garfrost : public CreatureScript { 
Class: class boss_garfrost : public CreatureScript { 
Class: class spell_archavon_rock_shards : public SpellScriptLoader { 
Class:         class spell_archavon_rock_shards_SpellScript : public SpellScript         {         
Class: class spell_q12619_emblazon_runeblade : public SpellScriptLoader { 
Class:         class spell_q12619_emblazon_runeblade_AuraScript : public AuraScript         {         
Class:  class spell_q12619_emblazon_runeblade_effect : public SpellScriptLoader { 
Class:         class spell_q12619_emblazon_runeblade_effect_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(mapSave);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: InstanceMap::AddPlayerToMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(mapSave);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(mapSave);')]
===========================================
Class:class spell_mark_of_the_faceless : public SpellScriptLoader class spell_general_vezax_mark_of_the_faceless : public SpellScriptLoader         spell_mark_of_the_faceless() : SpellScriptLoader() { }         spell_mark_of_the_faceless() : SpellScriptLoader() 
Class: class spell_general_vezax_mark_of_the_faceless_leech : public SpellScriptLoader { 
Class:         class spell_general_vezax_mark_of_the_faceless_leech_SpellScript : public SpellScript         {         
Class: class npc_pet_gen_mojo : public CreatureScript { 
Class: class npc_mojo : public CreatureScript { 
Class:  class spell_q12641_death_comes_from_on_high : public SpellScriptLoader { 
Class:         class spell_q12641_death_comes_from_on_high_SpellScript : public SpellScript         {         
Class:class spell_rotface_vile_gas_trigger : public SpellScriptLoader { 
Class:         class spell_rotface_vile_gas_trigger_SpellScript : public SpellScript         {         
Class:  class spell_q12308_escape_from_silverbrook : public SpellScriptLoader { 
Class:         class spell_q12308_escape_from_silverbrook_SpellScript : public SpellScript         {         
Class:  class spell_q12308_escape_from_silverbrook_summon_worgen : public SpellScriptLoader { 
Class:         class spell_q12308_escape_from_silverbrook_summon_worgen_SpellScript : public SpellScript         {         
Class: class spell_q12690_burst_at_the_seams : public SpellScriptLoader { 
Class:        class spell_q12690_burst_at_the_seams_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(spellType < CURRENT_MAX_SPELL);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: Unit::InterruptSpell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(spellType < CURRENT_MAX_SPELL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(spellType < CURRENT_MAX_SPELL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(m_spellmod->op < MAX_SPELLMOD);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: AuraEffect::CalculateSpellMod
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(m_spellmod->op < MAX_SPELLMOD);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(m_spellmod->op < MAX_SPELLMOD);')]
===========================================
Class: class instance_utgarde_pinnacle : public InstanceMapScript { 
Class: class instance_utgarde_pinnacle : public InstanceMapScript { 
Class:class instance_archavon : public InstanceMapScript class instance_vault_of_archavon : public InstanceMapScript         instance_archavon() : InstanceMapScript(, 624) { }         instance_archavon() : InstanceMapScript(, 624) 
Class:class instance_sethekk_halls : public InstanceMapScript DoorData const doorData[] = public:     instance_sethekk_halls() : InstanceMapScript(, 556) { }     instance_sethekk_halls() : InstanceMapScript(, 556) 
Class:class instance_sethekk_halls : public InstanceMapScript { 
Class:class boss_ambassador_hellmaw : public CreatureScript enum Events public:     boss_ambassador_hellmaw() : CreatureScript() { }     boss_ambassador_hellmaw() : CreatureScript() 
Class:class boss_ambassador_hellmaw : public CreatureScript { 
Class:class npc_voidtraveler : public CreatureScript class boss_grandmaster_vorpil : public CreatureScript public:     npc_voidtraveler() : CreatureScript() { }     npc_voidtraveler() : CreatureScript() 
Class: class boss_grandmaster_vorpil : public CreatureScript { 
Class:class spell_murmur_sonic_boom : public SpellScriptLoader class spell_murmur_sonic_boom : public SpellScriptLoader
Class:  class spell_murmur_sonic_boom_effect : public SpellScriptLoader { 
Class:         class spell_murmur_sonic_boom_effect_SpellScript : public SpellScript         {         
Class: class ThunderingStormCheck { 
Class:  class spell_murmur_thundering_storm : public SpellScriptLoader { 
Class:         class spell_murmur_thundering_storm_SpellScript : public SpellScript         {         
Class:class boss_gruul : public CreatureScript { 
Class:class FrostBeaconSelector { 
Class: class spell_hun_viper_attack_speed : public SpellScriptLoader { 
Class:         class spell_hun_viper_attack_speed_AuraScript : public AuraScript         {         
Class: class boss_hungarfen : public CreatureScript { 
Class: class npc_underbog_mushroom : public CreatureScript { 
Class: class boss_the_black_stalker : public CreatureScript { 
Class: class boss_hungarfen : public CreatureScript { 
Class: class npc_underbog_mushroom : public CreatureScript { 
Class: class boss_the_black_stalker : public CreatureScript { 
Class: class spell_tharon_ja_clear_gift_of_tharon_ja : public SpellScriptLoader { 
Class: class spell_hun_improved_mend_pet : public SpellScriptLoader { 
Class:         class spell_hun_improved_mend_pet_AuraScript : public AuraScript         {         
Class:class spell_summon_memory : public SpellScriptLoader class spell_paletress_summon_memory : public SpellScriptLoader         spell_summon_memory() : SpellScriptLoader() { }         spell_summon_memory() : SpellScriptLoader() 
Class:  class spell_summon_memory : public SpellScriptLoader { 
Class:         class spell_summon_memory_SpellScript : public SpellScript         {         
Class: class boss_zum_rah : public CreatureScript { 
Class: class npc_pet_dk_ebon_gargoyle : public CreatureScript { 
Class: class npc_pet_hunter_snake_trap : public CreatureScript { 
Class: class npc_pet_mage_mirror_image : public CreatureScript { 
Class: class npc_pet_pri_lightwell : public CreatureScript { 
Class: class npc_pet_pri_shadowfiend : public CreatureScript { 
Class: class npc_pet_shaman_earth_elemental : public CreatureScript { 
Class: class npc_pet_shaman_fire_elemental : public CreatureScript { 
Class: class npc_snake_trap : public CreatureScript { 
Class:class npc_mirror_image : public CreatureScript { 
Class: class npc_ebon_gargoyle : public CreatureScript { 
Class: class npc_lightwell : public CreatureScript { 
Class: class npc_fire_elemental : public CreatureScript { 
Class: class npc_earth_elemental : public CreatureScript { 
Class: class spell_q13011_bear_flank_master : public SpellScriptLoader { 
Class:         class spell_q13011_bear_flank_master_SpellScript : public SpellScript         {         
Class: class boss_trollgore : public CreatureScript enum Events public:     boss_trollgore() : CreatureScript() { }     boss_trollgore() : CreatureScript() 
Class:class boss_trollgore : public CreatureScript { 
Class: class npc_drakkari_invader : public CreatureScript { 
Class: class boss_anzu : public CreatureScript { 
Class:class spell_summon_minions : public SpellScriptLoader { 
Class:        class spell_novos_summon_minions_SpellScript : public SpellScript         {         
Class:    class spell_summon_minions_SpellScript : public SpellScript     {     
Class: class spell_trollgore_consume : public SpellScriptLoader { 
Class:         class spell_trollgore_consume_SpellScript : public SpellScript         {         
Class:  class spell_trollgore_corpse_explode : public SpellScriptLoader { 
Class:         class spell_trollgore_corpse_explode_AuraScript : public AuraScript         {         
Class:  class spell_trollgore_invader_taunt : public SpellScriptLoader { 
Class:         class spell_trollgore_invader_taunt_SpellScript : public SpellScript         {         
Class: class npc_yor : public CreatureScript { 
Class: class at_ring_of_law : public AreaTriggerScript { 
Class:  class npc_grimstone : public CreatureScript { 
Class: class npc_phalanx : public CreatureScript { 
Class: class npc_rocknot : public CreatureScript { 
Class: class boss_ambassador_flamelash : public CreatureScript { 
Class: class boss_anubshiah : public CreatureScript { 
Class: class boss_emperor_dagran_thaurissan : public CreatureScript { 
Class: class boss_general_angerforge : public CreatureScript { 
Class: class boss_gorosh_the_dervish : public CreatureScript { 
Class: class boss_grizzle : public CreatureScript { 
Class: class boss_high_interrogator_gerstahn : public CreatureScript { 
Class: class boss_magmus : public CreatureScript { 
Class: class boss_moira_bronzebeard : public CreatureScript { 
Class: class instance_blackrock_depths : public InstanceMapScript { 
Class: class at_ring_of_law : public AreaTriggerScript { 
Class:  class npc_grimstone : public CreatureScript { 
Class: class npc_phalanx : public CreatureScript { 
Class: class npc_rocknot : public CreatureScript { 
Class: class boss_ambassador_flamelash : public CreatureScript { 
Class: class boss_anubshiah : public CreatureScript { 
Class: class boss_emperor_dagran_thaurissan : public CreatureScript { 
Class: class boss_general_angerforge : public CreatureScript { 
Class: class boss_gorosh_the_dervish : public CreatureScript { 
Class: class boss_grizzle : public CreatureScript { 
Class: class boss_high_interrogator_gerstahn : public CreatureScript { 
Class: class boss_magmus : public CreatureScript { 
Class: class boss_moira_bronzebeard : public CreatureScript { 
Class: class instance_blackrock_depths : public InstanceMapScript { 
Class: class boss_drakkisath : public CreatureScript { 
Class: class boss_gizrul_the_slavener : public CreatureScript { 
Class: class boss_gyth : public CreatureScript { 
Class: class boss_halycon : public CreatureScript { 
Class: class boss_highlord_omokk : public CreatureScript { 
Class: class boss_lord_valthalak : public CreatureScript { 
Class: class boss_mother_smolderweb : public CreatureScript { 
Class: class boss_overlord_wyrmthalak : public CreatureScript { 
Class: class boss_pyroguard_emberseer : public CreatureScript { 
Class: class npc_blackhand_incarcerator : public CreatureScript { 
Class: class quartermaster_zigris : public CreatureScript { 
Class: class boss_rend_blackhand : public CreatureScript { 
Class: class boss_shadow_hunter_voshgajin : public CreatureScript { 
Class: class boss_the_beast : public CreatureScript { 
Class: class boss_urok_doomhowl : public CreatureScript { 
Class: class boss_warmaster_voone : public CreatureScript { 
Class: class instance_blackrock_spire : public InstanceMapScript { 
Class:  class at_dragonspire_hall : public AreaTriggerScript { 
Class:  class at_blackrock_stadium : public AreaTriggerScript { 
Class: class boss_broodlord : public CreatureScript { 
Class: class boss_chromaggus : public CreatureScript { 
Class: class boss_ebonroc : public CreatureScript { 
Class: class boss_firemaw : public CreatureScript { 
Class: class boss_flamegor : public CreatureScript { 
Class: class boss_victor_nefarius : public CreatureScript { 
Class: class boss_nefarian : public CreatureScript { 
Class: class boss_razorgore : public CreatureScript { 
Class: class go_orb_of_domination : public GameObjectScript { 
Class: class spell_egg_event : public SpellScriptLoader { 
Class:         class spell_egg_eventSpellScript : public SpellScript         {         
Class: class boss_vaelastrasz : public CreatureScript { 
Class: class instance_blackwing_lair : public InstanceMapScript { 
Class: class boss_baron_geddon : public CreatureScript { 
Class: class boss_garr : public CreatureScript { 
Class: class npc_firesworn : public CreatureScript { 
Class: class boss_gehennas : public CreatureScript { 
Class: class boss_golemagg : public CreatureScript { 
Class: class npc_core_rager : public CreatureScript { 
Class: class boss_lucifron : public CreatureScript { 
Class: class boss_magmadar : public CreatureScript { 
Class: class boss_majordomo : public CreatureScript { 
Class: class boss_ragnaros : public CreatureScript { 
Class: class npc_son_of_flame : public CreatureScript { 
Class: class boss_shazzrah : public CreatureScript { 
Class: class boss_sulfuron : public CreatureScript { 
Class: class npc_flamewaker_priest : public CreatureScript { 
Class: class instance_molten_core : public InstanceMapScript { 
Class: class boss_drakkisath : public CreatureScript { 
Class: class boss_gizrul_the_slavener : public CreatureScript { 
Class: class boss_gyth : public CreatureScript { 
Class: class boss_halycon : public CreatureScript { 
Class: class boss_highlord_omokk : public CreatureScript { 
Class: class boss_mother_smolderweb : public CreatureScript { 
Class: class boss_overlord_wyrmthalak : public CreatureScript { 
Class: class boss_pyroguard_emberseer : public CreatureScript { 
Class: class npc_blackhand_incarcerator : public CreatureScript { 
Class: class quartermaster_zigris : public CreatureScript { 
Class: class boss_rend_blackhand : public CreatureScript { 
Class: class boss_shadow_hunter_voshgajin : public CreatureScript { 
Class: class boss_the_beast : public CreatureScript { 
Class: class boss_urok_doomhowl : public CreatureScript { 
Class: class boss_warmaster_voone : public CreatureScript { 
Class: class instance_blackrock_spire : public InstanceMapScript { 
Class:  class at_dragonspire_hall : public AreaTriggerScript { 
Class:  class at_blackrock_stadium : public AreaTriggerScript { 
Class: class boss_broodlord : public CreatureScript { 
Class: class boss_chromaggus : public CreatureScript { 
Class: class boss_ebonroc : public CreatureScript { 
Class: class boss_firemaw : public CreatureScript { 
Class: class boss_flamegor : public CreatureScript { 
Class: class boss_victor_nefarius : public CreatureScript { 
Class: class boss_nefarian : public CreatureScript { 
Class: class boss_razorgore : public CreatureScript { 
Class: class go_orb_of_domination : public GameObjectScript { 
Class: class spell_egg_event : public SpellScriptLoader { 
Class:         class spell_egg_eventSpellScript : public SpellScript         {         
Class: class boss_vaelastrasz : public CreatureScript { 
Class: class instance_blackwing_lair : public InstanceMapScript { 
Class: class boss_baron_geddon : public CreatureScript { 
Class: class boss_garr : public CreatureScript { 
Class: class npc_firesworn : public CreatureScript { 
Class: class boss_gehennas : public CreatureScript { 
Class: class boss_golemagg : public CreatureScript { 
Class: class npc_core_rager : public CreatureScript { 
Class: class boss_lucifron : public CreatureScript { 
Class: class boss_magmadar : public CreatureScript { 
Class: class boss_majordomo : public CreatureScript { 
Class: class boss_ragnaros : public CreatureScript { 
Class: class npc_son_of_flame : public CreatureScript { 
Class: class boss_shazzrah : public CreatureScript { 
Class: class boss_sulfuron : public CreatureScript { 
Class: class npc_flamewaker_priest : public CreatureScript { 
Class: class instance_molten_core : public InstanceMapScript { 
Class:class spell_q13086_cannons_target : public SpellScriptLoader { 
Class:         class spell_q13086_cannons_target_SpellScript : public SpellScript         {         
Class:class npc_jaina_or_sylvanas_escape_hor : public CreatureScript { 
Class:class at_shadow_throne : public AreaTriggerScript { 
Class: class npc_raging_ghoul : public CreatureScript { 
Class: class npc_risen_witch_doctor : public CreatureScript { 
Class:  class npc_lumbering_abomination : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(commandTableCache);'), (4, 2, u'-            ACE_ASSERT(commandTableCache);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ChatHandler::getCommandTable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(commandTableCache);'), (4, 2, u'-            ACE_ASSERT(commandTableCache);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(commandTableCache);'), (4, 2, u'-            ACE_ASSERT(commandTableCache);')]
===========================================
Class: class spell_oculus_touch_the_nightmare : public SpellScriptLoader { 
Class:         class spell_oculus_touch_the_nightmare_SpellScript : public SpellScript         {         
Class: class spell_oculus_dream_funnel: public SpellScriptLoader { 
Class:         class spell_oculus_dream_funnel_AuraScript : public AuraScript         {         
Class:class spell_gen_dream_funnel: public SpellScriptLoader { 
Class:         class spell_gen_dream_funnel_AuraScript : public AuraScript         {         
Class: class boss_dred : public CreatureScript { 
Class: class npc_drakkari_gutripper : public CreatureScript { 
Class: class npc_drakkari_scytheclaw : public CreatureScript { 
Class: class achievement_king_dred : public AchievementCriteriaScript { 
Class: class boss_king_dred : public CreatureScript { 
Class: class npc_drakkari_gutripper : public CreatureScript { 
Class: class npc_drakkari_scytheclaw : public CreatureScript { 
Class: class achievement_king_dred : public AchievementCriteriaScript { 
Class: class instance_drak_tharon : public InstanceMapScript { 
Class: class spell_pal_aura_mastery : public SpellScriptLoader { 
Class:         class spell_pal_aura_mastery_AuraScript : public AuraScript         {         
Class:  class spell_pal_aura_mastery_immune : public SpellScriptLoader { 
Class:         class spell_pal_aura_mastery_immune_AuraScript : public AuraScript         {         
Class: class spell_pal_item_healing_discount : public SpellScriptLoader { 
Class:         class spell_pal_item_healing_discount_AuraScript : public AuraScript         {         
Class:       class spell_pal_improved_aura : public SpellScriptLoader { 
Class:         class spell_pal_improved_aura_AuraScript : public AuraScript         {         
Class:    class spell_pal_improved_aura_effect : public SpellScriptLoader { 
Class:         class spell_pal_improved_aura_effect_AuraScript : public AuraScript         {         
Class:  class spell_pal_item_healing_discount : public SpellScriptLoader { 
Class:         class spell_pal_item_healing_discount_AuraScript : public AuraScript         {         
Class:  class spell_dk_improved_frost_presence : public SpellScriptLoader { 
Class:         class spell_dk_improved_frost_presence_AuraScript : public AuraScript         {         
Class:   class spell_dk_presence : public SpellScriptLoader { 
Class:         class spell_dk_presence_AuraScript : public AuraScript         {         
Class: class spell_dk_scent_of_blood : public SpellScriptLoader { 
Class:         class spell_dk_scent_of_blood_AuraScript : public AuraScript         {         
Class:  class spell_item_aegis_of_preservation : public SpellScriptLoader { 
Class:         class spell_item_aegis_of_preservation_AuraScript : public AuraScript         {         
Class:  class spell_item_desperate_defense : public SpellScriptLoader { 
Class:         class spell_item_desperate_defense_AuraScript : public AuraScript         {         
Class: class spell_pal_item_healing_discount : public SpellScriptLoader { 
Class:         class spell_pal_item_healing_discount_AuraScript : public AuraScript         {         
Class: class spell_pri_item_greater_heal_refund : public SpellScriptLoader { 
Class:         class spell_pri_item_greater_heal_refund_AuraScript : public AuraScript         {         
Class: class spell_sha_item_lightning_shield : public SpellScriptLoader { 
Class:         class spell_sha_item_lightning_shield_AuraScript : public AuraScript         {         
Class:  class spell_sha_item_lightning_shield_trigger : public SpellScriptLoader { 
Class:         class spell_sha_item_lightning_shield_trigger_AuraScript : public AuraScript         {         
Class:  class spell_sha_item_mana_surge : public SpellScriptLoader { 
Class:         class spell_sha_item_mana_surge_AuraScript : public AuraScript         {         
Class: class spell_warl_glyph_of_shadowflame : public SpellScriptLoader { 
Class:         class spell_warl_glyph_of_shadowflame_AuraScript : public AuraScript         {         
Class:class npc_violet_hold_arcane_sphere : public CreatureScript { 
Class: class go_activation_crystal : public GameObjectScript { 
Class:  class npc_violet_hold_arcane_sphere : public CreatureScript { 
Class: class go_activation_crystal : public GameObjectScript { 
Class:class npc_violet_hold_arcane_sphere : public CreatureScript { 
Class: class go_activation_crystal : public GameObjectScript { 
Class:class npc_margrave_dhakar : public CreatureScript { 
Class:class npc_morbidus : public CreatureScript { 
Class: class spell_devourer_of_souls_mirrored_soul : public SpellScriptLoader { 
Class:         class spell_devourer_of_souls_mirrored_soul_SpellScript : public SpellScript         {         
Class:  class spell_devourer_of_souls_mirrored_soul_proc : public SpellScriptLoader { 
Class:         class spell_devourer_of_souls_mirrored_soul_proc_AuraScript : public AuraScript         {         
Class:  class spell_devourer_of_souls_mirrored_soul_target_selector : public SpellScriptLoader { 
Class:         class spell_devourer_of_souls_mirrored_soul_target_selector_SpellScript : public SpellScript         {         
Class:class spell_koralon_meteor_fists : public SpellScriptLoader { 
Class:         class spell_koralon_meteor_fists_AuraScript : public AuraScript         {         
Class: class spell_koralon_meteor_fists_damage : public SpellScriptLoader { 
Class:         class spell_koralon_meteor_fists_damage_SpellScript : public SpellScript         {         
Class: class spell_flame_warder_meteor_fists : public SpellScriptLoader { 
Class:         class spell_flame_warder_meteor_fists_AuraScript : public AuraScript         {         
Class: class spell_gen_aura_of_anger : public SpellScriptLoader class spell_gen_allow_cast_from_item_only : public SpellScriptLoader         spell_gen_aura_of_anger() : SpellScriptLoader() { }         spell_gen_aura_of_anger() : SpellScriptLoader() 
Class:class spell_gen_av_drekthar_presence : public SpellScriptLoader enum AnimalBloodPoolSpell { 
Class: class spell_gen_animal_blood : public SpellScriptLoader         spell_gen_av_drekthar_presence() : SpellScriptLoader() { }         spell_gen_av_drekthar_presence() : SpellScriptLoader() 
Class: class spell_gen_burn_brutallus : public SpellScriptLoader  class spell_gen_aura_of_anger : public SpellScriptLoader         spell_gen_burn_brutallus() : SpellScriptLoader() { }         spell_gen_burn_brutallus() : SpellScriptLoader() 
Class: class spell_gen_create_lance : public SpellScriptLoader class spell_gen_av_drekthar_presence : public SpellScriptLoader         spell_gen_create_lance() : SpellScriptLoader() { }         spell_gen_create_lance() : SpellScriptLoader() 
Class:class spell_gen_nightmare_vine : public SpellScriptLoader class spell_gen_bonked : public SpellScriptLoader         spell_gen_nightmare_vine() : SpellScriptLoader() { }         spell_gen_nightmare_vine() : SpellScriptLoader() 
Class: class spell_gen_parachute : public SpellScriptLoader  class spell_gen_burn_brutallus : public SpellScriptLoader         spell_gen_parachute() : SpellScriptLoader() { }         spell_gen_parachute() : SpellScriptLoader() 
Class: class spell_gen_remove_flight_auras : public SpellScriptLoader { 
Class:         class spell_gen_remove_flight_auras_SpellScript : public SpellScript         {         
Class:class spell_creature_permanent_feign_death : public SpellScriptLoader class spell_gen_clone : public SpellScriptLoader         spell_creature_permanent_feign_death() : SpellScriptLoader() { }         spell_creature_permanent_feign_death() : SpellScriptLoader() 
Class: class spell_gen_animal_blood : public SpellScriptLoader class spell_gen_clone_weapon_aura : public SpellScriptLoader         spell_gen_animal_blood() : SpellScriptLoader() { }         spell_gen_animal_blood() : SpellScriptLoader() 
Class:  class spell_gen_divine_storm_cd_reset : public SpellScriptLoader class spell_gen_count_pct_from_max_hp : public SpellScriptLoader         spell_gen_divine_storm_cd_reset() : SpellScriptLoader() {}         spell_gen_divine_storm_cd_reset() : SpellScriptLoader() 
Class:class spell_gen_gunship_portal : public SpellScriptLoader  enum CreateLanceSpells { 
Class: class spell_gen_create_lance : public SpellScriptLoader         spell_gen_gunship_portal() : SpellScriptLoader() { }         spell_gen_gunship_portal() : SpellScriptLoader() 
Class: class spell_gen_parachute_ic : public SpellScriptLoader class spell_gen_creature_permanent_feign_death : public SpellScriptLoader         spell_gen_parachute_ic() : SpellScriptLoader() { }         spell_gen_parachute_ic() : SpellScriptLoader() 
Class:class spell_gen_dungeon_credit : public SpellScriptLoader enum DalaranDisguiseSpells     public:         spell_gen_dungeon_credit() : SpellScriptLoader() { }         spell_gen_dungeon_credit() : SpellScriptLoader() 
Class:         class spell_gen_dungeon_credit_SpellScript : public SpellScript         {         
Class:class spell_generic_clone : public SpellScriptLoader class spell_generic_clone : public SpellScriptLoader
Class:class spell_gen_clone_weapon_aura : public SpellScriptLoader enum DefendVisuals { 
Class: class spell_gen_defend : public SpellScriptLoader         spell_gen_clone_weapon_aura() : SpellScriptLoader() { }         spell_gen_clone_weapon_aura() : SpellScriptLoader() 
Class: class spell_gen_seaforium_blast : public SpellScriptLoader class spell_gen_despawn_self : public SpellScriptLoader         spell_gen_seaforium_blast() : SpellScriptLoader() {}         spell_gen_seaforium_blast() : SpellScriptLoader() 
Class: class spell_gen_dream_funnel: public SpellScriptLoader { 
Class:         class spell_gen_dream_funnel_AuraScript : public AuraScript         {         
Class:class spell_gen_lifeblood : public SpellScriptLoader class spell_gen_ds_flush_knockback : public SpellScriptLoader         spell_gen_lifeblood() : SpellScriptLoader() { }         spell_gen_lifeblood() : SpellScriptLoader() 
Class:class spell_gen_allow_cast_from_item_only : public SpellScriptLoader class spell_gen_dungeon_credit : public SpellScriptLoader         spell_gen_allow_cast_from_item_only() : SpellScriptLoader() { }         spell_gen_allow_cast_from_item_only() : SpellScriptLoader() 
Class:class spell_gen_oracle_wolvar_reputation : public SpellScriptLoader class spell_gen_gift_of_naaru : public SpellScriptLoader         spell_gen_oracle_wolvar_reputation() : SpellScriptLoader() { }         spell_gen_oracle_wolvar_reputation() : SpellScriptLoader() 
Class: class spell_gen_dummy_trigger : public SpellScriptLoader class spell_gen_gunship_portal : public SpellScriptLoader         spell_gen_dummy_trigger() : SpellScriptLoader() { }         spell_gen_dummy_trigger() : SpellScriptLoader() 
Class:class spell_gen_spirit_healer_res : public SpellScriptLoader class spell_gen_spirit_healer_res : public SpellScriptLoader
Class:class spell_gen_gadgetzan_transporter_backfire : public SpellScriptLoader class spell_gen_lifeblood : public SpellScriptLoader         spell_gen_gadgetzan_transporter_backfire() : SpellScriptLoader() { }         spell_gen_gadgetzan_transporter_backfire() : SpellScriptLoader() 
Class:        class spell_gen_gadgetzan_transporter_backfire_SpellScript : public SpellScript         class spell_gen_lifeblood_AuraScript : public AuraScript             PrepareSpellScript(spell_gen_gadgetzan_transporter_backfire_SpellScript)              bool Validate(SpellInfo const* ) OVERRIDE             {             
Class:class spell_gen_break_shield: public SpellScriptLoader class spell_gen_break_shield: public SpellScriptLoader
Class:class spell_gen_mount : public SpellScriptLoader         spell_gen_break_shield(const char* name) : SpellScriptLoader(name) {}         spell_gen_break_shield(const char* name) : SpellScriptLoader(name) 
Class:         class spell_gen_defend_AuraScript : public AuraScript         {         
Class:        class spell_gen_netherbloom_SpellScript : public SpellScript         {         
Class: class spell_gen_oracle_wolvar_reputation : public SpellScriptLoader { 
Class:         class spell_gen_oracle_wolvar_reputation_SpellScript : public SpellScript         {         
Class: class spell_gen_orc_disguise : public SpellScriptLoader { 
Class:         class spell_gen_orc_disguise_SpellScript : public SpellScript         {         
Class:class spell_gen_tournament_pennant : public SpellScriptLoader enum ParachuteSpells { 
Class:  class spell_gen_parachute : public SpellScriptLoader         spell_gen_tournament_pennant() : SpellScriptLoader() { }         spell_gen_tournament_pennant() : SpellScriptLoader() 
Class:        class spell_gen_chaos_blast_SpellScript : public SpellScript         class spell_gen_parachute_ic_AuraScript : public AuraScript             PrepareSpellScript(spell_gen_chaos_blast_SpellScript)             PrepareAuraScript(spell_gen_parachute_ic_AuraScript)             bool Validate(SpellInfo const* ) OVERRIDE             {             
Class:class spell_gen_ds_flush_knockback : public SpellScriptLoader class spell_gen_ds_flush_knockback : public SpellScriptLoader
Class:class spell_gen_wg_water : public SpellScriptLoader class spell_gen_profession_research : public SpellScriptLoader         spell_gen_wg_water() : SpellScriptLoader() {}         spell_gen_wg_water() : SpellScriptLoader() 
Class:class spell_gen_count_pct_from_max_hp : public SpellScriptLoader class spell_gen_remove_flight_auras : public SpellScriptLoader         spell_gen_count_pct_from_max_hp(char const* name, int32 damagePct = 0) : SpellScriptLoader(name), _damagePct(damagePct) { }         spell_gen_count_pct_from_max_hp(char const* name, int32 damagePct = 0) : SpellScriptLoader(name), _damagePct(damagePct) 
Class:        class spell_gen_count_pct_from_max_hp_SpellScript : public SpellScript         class spell_gen_remove_flight_auras_SpellScript : public SpellScript             PrepareSpellScript(spell_gen_count_pct_from_max_hp_SpellScript)          public:             spell_gen_count_pct_from_max_hp_SpellScript(int32 damagePct) : SpellScript(), _damagePct(damagePct) { }             spell_gen_count_pct_from_max_hp_SpellScript(int32 damagePct) : SpellScript(), _damagePct(damagePct) 
Class:class spell_gen_despawn_self : public SpellScriptLoader enum Replenishment public:     spell_gen_despawn_self() : SpellScriptLoader() { }     spell_gen_despawn_self() : SpellScriptLoader() 
Class:     class spell_gen_despawn_self_SpellScript : public SpellScript     {     
Class:     class spell_gen_touch_the_nightmare_SpellScript : public SpellScript     {     
Class:class spell_gen_dream_funnel: public SpellScriptLoader { 
Class:    class spell_gen_dream_funnel_AuraScript : public AuraScript     {     
Class: class spell_gen_spectator_cheer_trigger : public SpellScriptLoader         spell_gen_lifebloom(const char* name, uint32 spellId) : SpellScriptLoader(name), _spellId(spellId) { }         spell_gen_lifebloom(const char* name, uint32 spellId) : SpellScriptLoader(name), _spellId(spellId) 
Class: class spell_gen_spirit_healer_res : public SpellScriptLoader { 
Class:         class spell_gen_spirit_healer_res_SpellScript : public SpellScript         {         
Class:class spell_gen_upper_deck_create_foam_sword : public SpellScriptLoader class spell_gen_upper_deck_create_foam_sword : public SpellScriptLoader
Class:class spell_gen_tournament_duel : public SpellScriptLoader class spell_gen_tournament_duel : public SpellScriptLoader
Class:class spell_gen_bonked : public SpellScriptLoader class spell_gen_tournament_pennant : public SpellScriptLoader         spell_gen_bonked() : SpellScriptLoader() { }         spell_gen_bonked() : SpellScriptLoader() 
Class:class spell_gen_gift_of_naaru : public SpellScriptLoader   enum PvPTrinketTriggeredSpells { 
Class: class spell_pvp_trinket_wotf_shared_cd : public SpellScriptLoader         spell_gen_gift_of_naaru() : SpellScriptLoader() { }         spell_gen_gift_of_naaru() : SpellScriptLoader() 
Class:class spell_gen_spectator_cheer_trigger : public SpellScriptLoader class spell_gen_spectator_cheer_trigger : public SpellScriptLoader
Class: class go_eastern_crystal_pylon : public GameObjectScript { 
Class: class go_western_crystal_pylon : public GameObjectScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    ASSERT(file);')]
===========================================
Class:    class npc_wrathbone_flayer : public CreatureScript { 
Class:    class npc_ashtongue_elementalist : public CreatureScript { 
Class:     class npc_ashtongue_spiritbinder : public CreatureScript { 
Class:class npc_omrogg_heads : public CreatureScript { 
Class:     class npc_omrogg_heads : public CreatureScript { 
Class:class mob_ashtongue_channeler : public CreatureScript class npc_ashtongue_channeler : public CreatureScript     mob_ashtongue_channeler() : CreatureScript() { }     mob_ashtongue_channeler() : CreatureScript() 
Class:   class npc_ashtongue_channeler : public CreatureScript class boss_shade_of_akama : public CreatureScript     npc_ashtongue_channeler() : CreatureScript() { }     npc_ashtongue_channeler() : CreatureScript() 
Class:class npc_ashtongue_sorcerer : public CreatureScript { 
Class:class boss_shade_of_akama : public CreatureScript class boss_shade_of_akama : public CreatureScript
Class:     class npc_creature_generator_akama : public CreatureScript { 
Class:     class npc_ashtongue_sorcerer : public CreatureScript { 
Class:class npc_akama_shade : public CreatureScript class npc_akama_shade : public CreatureScript
Class:class npc_ashtongue_defender : public CreatureScript class npc_ashtongue_defender : public CreatureScript
Class:  class npc_second_trial_paladin : public CreatureScript { 
Class: class go_second_trial : public GameObjectScript { 
Class:class mob_av_marshal_or_warmaster : public CreatureScript class npc_av_marshal_or_warmaster : public CreatureScript         mob_av_marshal_or_warmaster() : CreatureScript() { }         mob_av_marshal_or_warmaster() : CreatureScript() 
Class:class mob_water_elemental : public CreatureScript class npc_water_elemental : public CreatureScript     mob_water_elemental() : CreatureScript() { }     mob_water_elemental() : CreatureScript() 
Class:class mob_phalanx : public CreatureScript class npc_phalanx : public CreatureScript     mob_phalanx() : CreatureScript() { }     mob_phalanx() : CreatureScript() 
Class:class mob_aran_elemental : public CreatureScript class npc_aran_elemental : public CreatureScript     mob_aran_elemental() : CreatureScript() { }     mob_aran_elemental() : CreatureScript() 
Class:class mob_kilrek : public CreatureScript class npc_kilrek : public CreatureScript     mob_kilrek() : CreatureScript() { }     mob_kilrek() : CreatureScript() 
Class:class mob_demon_chain : public CreatureScript class npc_demon_chain : public CreatureScript     mob_demon_chain() : CreatureScript() { }     mob_demon_chain() : CreatureScript() 
Class:class mob_fiendish_portal : public CreatureScript class npc_fiendish_portal : public CreatureScript     mob_fiendish_portal() : CreatureScript() { }     mob_fiendish_portal() : CreatureScript() 
Class:class mob_fiendish_imp : public CreatureScript class npc_fiendish_imp : public CreatureScript     mob_fiendish_imp() : CreatureScript() { }     mob_fiendish_imp() : CreatureScript() 
Class:class mob_tito : public CreatureScript class npc_tito : public CreatureScript     mob_tito() : CreatureScript() { }     mob_tito() : CreatureScript() 
Class:class mob_cyclone : public CreatureScript class npc_cyclone : public CreatureScript     mob_cyclone() : CreatureScript() { }     mob_cyclone() : CreatureScript() 
Class:class mob_felkael_flamestrike : public CreatureScript class npc_felkael_flamestrike : public CreatureScript     mob_felkael_flamestrike() : CreatureScript() { }     mob_felkael_flamestrike() : CreatureScript() 
Class:class mob_felkael_phoenix : public CreatureScript class npc_felkael_phoenix : public CreatureScript     mob_felkael_phoenix() : CreatureScript() { }     mob_felkael_phoenix() : CreatureScript() 
Class:class mob_felkael_phoenix_egg : public CreatureScript class npc_felkael_phoenix_egg : public CreatureScript     mob_felkael_phoenix_egg() : CreatureScript() { }     mob_felkael_phoenix_egg() : CreatureScript() 
Class:class mob_arcane_sphere : public CreatureScript class npc_arcane_sphere : public CreatureScript     mob_arcane_sphere() : CreatureScript() { }     mob_arcane_sphere() : CreatureScript() 
Class:class mob_high_explosive_sheep : public CreatureScript class npc_high_explosive_sheep : public CreatureScript     mob_high_explosive_sheep() : CreatureScript() { }     mob_high_explosive_sheep() : CreatureScript() 
Class:class mob_fel_crystal : public CreatureScript class npc_fel_crystal : public CreatureScript     mob_fel_crystal() : CreatureScript() { }     mob_fel_crystal() : CreatureScript() 
Class:class mob_pure_energy : public CreatureScript class npc_pure_energy : public CreatureScript     mob_pure_energy() : CreatureScript() { }     mob_pure_energy() : CreatureScript() 
Class:class mob_firesworn : public CreatureScript class npc_firesworn : public CreatureScript         mob_firesworn() : CreatureScript() { }         mob_firesworn() : CreatureScript() 
Class:class mob_core_rager : public CreatureScript class npc_core_rager : public CreatureScript         mob_core_rager() : CreatureScript() { }         mob_core_rager() : CreatureScript() 
Class:class mob_son_of_flame : public CreatureScript class npc_son_of_flame : public CreatureScript         mob_son_of_flame() : CreatureScript() { }         mob_son_of_flame() : CreatureScript() 
Class:class mob_flamewaker_priest : public CreatureScript class npc_flamewaker_priest : public CreatureScript         mob_flamewaker_priest() : CreatureScript() { }         mob_flamewaker_priest() : CreatureScript() 
Class:class mob_scarlet_courier : public CreatureScript class npc_scarlet_courier : public CreatureScript     mob_scarlet_courier() : CreatureScript() { }     mob_scarlet_courier() : CreatureScript() 
Class:class mob_high_inquisitor_valroth : public CreatureScript class npc_high_inquisitor_valroth : public CreatureScript     mob_high_inquisitor_valroth() : CreatureScript() { }     mob_high_inquisitor_valroth() : CreatureScript() 
Class:class mob_wisp_invis : public CreatureScript class npc_wisp_invis : public CreatureScript     mob_wisp_invis() : CreatureScript() { }     mob_wisp_invis() : CreatureScript() 
Class:class mob_head : public CreatureScript class npc_head : public CreatureScript     mob_head() : CreatureScript() { }     mob_head() : CreatureScript() 
Class:class mob_pulsing_pumpkin : public CreatureScript class npc_pulsing_pumpkin : public CreatureScript     mob_pulsing_pumpkin() : CreatureScript() { }     mob_pulsing_pumpkin() : CreatureScript() 
Class:class mob_scarlet_trainee : public CreatureScript class npc_scarlet_trainee : public CreatureScript     mob_scarlet_trainee() : CreatureScript() { }     mob_scarlet_trainee() : CreatureScript() 
Class:class mob_illusionofjandicebarov : public CreatureScript class npc_illusionofjandicebarov : public CreatureScript     mob_illusionofjandicebarov() : CreatureScript() { }     mob_illusionofjandicebarov() : CreatureScript() 
Class:class mob_freed_soul : public CreatureScript class npc_freed_soul : public CreatureScript     mob_freed_soul() : CreatureScript() { }     mob_freed_soul() : CreatureScript() 
Class:class mob_restless_soul : public CreatureScript class npc_restless_soul : public CreatureScript     mob_restless_soul() : CreatureScript() { }     mob_restless_soul() : CreatureScript() 
Class:class mobs_spectral_ghostly_citizen : public CreatureScript class npc_spectral_ghostly_citizen : public CreatureScript     mobs_spectral_ghostly_citizen() : CreatureScript() { }     mobs_spectral_ghostly_citizen() : CreatureScript() 
Class:class mob_shadow_image : public CreatureScript class npc_shadow_image : public CreatureScript     mob_shadow_image() : CreatureScript() { }     mob_shadow_image() : CreatureScript() 
Class:class mob_felmyst_vapor : public CreatureScript class npc_felmyst_vapor : public CreatureScript     mob_felmyst_vapor() : CreatureScript() { }     mob_felmyst_vapor() : CreatureScript() 
Class:class mob_felmyst_trail : public CreatureScript class npc_felmyst_trail : public CreatureScript     mob_felmyst_trail() : CreatureScript() { }     mob_felmyst_trail() : CreatureScript() 
Class:class mob_kiljaeden_controller : public CreatureScript class npc_kiljaeden_controller : public CreatureScript     mob_kiljaeden_controller() : CreatureScript() { }     mob_kiljaeden_controller() : CreatureScript() 
Class:class mob_hand_of_the_deceiver : public CreatureScript class npc_hand_of_the_deceiver : public CreatureScript     mob_hand_of_the_deceiver() : CreatureScript() { }     mob_hand_of_the_deceiver() : CreatureScript() 
Class:class mob_felfire_portal : public CreatureScript class npc_felfire_portal : public CreatureScript     mob_felfire_portal() : CreatureScript() { }     mob_felfire_portal() : CreatureScript() 
Class:class mob_volatile_felfire_fiend : public CreatureScript class npc_volatile_felfire_fiend : public CreatureScript     mob_volatile_felfire_fiend() : CreatureScript() { }     mob_volatile_felfire_fiend() : CreatureScript() 
Class:class mob_armageddon : public CreatureScript class npc_armageddon : public CreatureScript     mob_armageddon() : CreatureScript() { }     mob_armageddon() : CreatureScript() 
Class:class mob_shield_orb : public CreatureScript class npc_shield_orb : public CreatureScript     mob_shield_orb() : CreatureScript() { }     mob_shield_orb() : CreatureScript() 
Class:class mob_sinster_reflection : public CreatureScript class npc_sinster_reflection : public CreatureScript     mob_sinster_reflection() : CreatureScript() { }     mob_sinster_reflection() : CreatureScript() 
Class:class mob_akilzon_eagle : public CreatureScript class npc_akilzon_eagle : public CreatureScript         mob_akilzon_eagle() : CreatureScript() { }         mob_akilzon_eagle() : CreatureScript() 
Class:class mob_janalai_egg : public CreatureScript class npc_janalai_egg : public CreatureScript     mob_janalai_egg(): CreatureScript() {}     mob_janalai_egg(): CreatureScript() 
Class:class mob_ohgan : public CreatureScript class npc_ohgan : public CreatureScript     public: mob_ohgan() : CreatureScript() {}     public: mob_ohgan() : CreatureScript() 
Class:class mob_vilebranch_speaker : public CreatureScript class npc_vilebranch_speaker : public CreatureScript     public: mob_vilebranch_speaker() : CreatureScript() {}     public: mob_vilebranch_speaker() : CreatureScript() 
Class:class mob_spawn_of_marli : public CreatureScript class npc_spawn_of_marli : public CreatureScript     public: mob_spawn_of_marli() : CreatureScript() {}     public: mob_spawn_of_marli() : CreatureScript() 
Class:class mob_zealot_lorkhan : public CreatureScript class npc_zealot_lorkhan : public CreatureScript     public: mob_zealot_lorkhan() : CreatureScript() {}     public: mob_zealot_lorkhan() : CreatureScript() 
Class:class mobs_ghoul_flayer : public CreatureScript class npc_ghoul_flayer : public CreatureScript     mobs_ghoul_flayer() : CreatureScript() { }     mobs_ghoul_flayer() : CreatureScript() 
Class:class mob_towering_infernal : public CreatureScript class npc_towering_infernal : public CreatureScript     mob_towering_infernal() : CreatureScript() { }     mob_towering_infernal() : CreatureScript() 
Class:class mob_ancient_wisp : public CreatureScript class npc_ancient_wisp : public CreatureScript     mob_ancient_wisp() : CreatureScript() { }     mob_ancient_wisp() : CreatureScript() 
Class:class mob_doomfire : public CreatureScript class npc_doomfire : public CreatureScript     mob_doomfire() : CreatureScript() { }     mob_doomfire() : CreatureScript() 
Class:class mob_doomfire_targetting : public CreatureScript class npc_doomfire_targetting : public CreatureScript     mob_doomfire_targetting() : CreatureScript() { }     mob_doomfire_targetting() : CreatureScript() 
Class:class mob_lesser_doomguard : public CreatureScript class npc_lesser_doomguard : public CreatureScript     mob_lesser_doomguard() : CreatureScript() { }     mob_lesser_doomguard() : CreatureScript() 
Class:class mob_giant_infernal : public CreatureScript class npc_giant_infernal : public CreatureScript     mob_giant_infernal() : CreatureScript() { }     mob_giant_infernal() : CreatureScript() 
Class:class mob_abomination : public CreatureScript class npc_abomination : public CreatureScript     mob_abomination() : CreatureScript() { }     mob_abomination() : CreatureScript() 
Class:class mob_ghoul : public CreatureScript class npc_ghoul : public CreatureScript     mob_ghoul() : CreatureScript() { }     mob_ghoul() : CreatureScript() 
Class:class mob_necromancer : public CreatureScript class npc_necromancer : public CreatureScript     mob_necromancer() : CreatureScript() { }     mob_necromancer() : CreatureScript() 
Class:class mob_banshee : public CreatureScript class npc_banshee : public CreatureScript     mob_banshee() : CreatureScript() { }     mob_banshee() : CreatureScript() 
Class:class mob_crypt_fiend : public CreatureScript class npc_crypt_fiend : public CreatureScript     mob_crypt_fiend() : CreatureScript() { }     mob_crypt_fiend() : CreatureScript() 
Class:class mob_fel_stalker : public CreatureScript class npc_fel_stalker : public CreatureScript     mob_fel_stalker() : CreatureScript() { }     mob_fel_stalker() : CreatureScript() 
Class:class mob_frost_wyrm : public CreatureScript class npc_frost_wyrm : public CreatureScript     mob_frost_wyrm() : CreatureScript() { }     mob_frost_wyrm() : CreatureScript() 
Class:class mob_gargoyle : public CreatureScript class npc_gargoyle : public CreatureScript     mob_gargoyle() : CreatureScript() { }     mob_gargoyle() : CreatureScript() 
Class:class mob_eye_tentacle : public CreatureScript class npc_eye_tentacle : public CreatureScript     mob_eye_tentacle() : CreatureScript() { }     mob_eye_tentacle() : CreatureScript() 
Class:class mob_claw_tentacle : public CreatureScript class npc_claw_tentacle : public CreatureScript     mob_claw_tentacle() : CreatureScript() { }     mob_claw_tentacle() : CreatureScript() 
Class:class mob_giant_claw_tentacle : public CreatureScript class npc_giant_claw_tentacle : public CreatureScript     mob_giant_claw_tentacle() : CreatureScript() { }     mob_giant_claw_tentacle() : CreatureScript() 
Class:class mob_giant_eye_tentacle : public CreatureScript class npc_giant_eye_tentacle : public CreatureScript     mob_giant_eye_tentacle() : CreatureScript() { }     mob_giant_eye_tentacle() : CreatureScript() 
Class:class mob_giant_flesh_tentacle : public CreatureScript class npc_giant_flesh_tentacle : public CreatureScript     mob_giant_flesh_tentacle() : CreatureScript() { }     mob_giant_flesh_tentacle() : CreatureScript() 
Class:class mob_sartura_royal_guard : public CreatureScript class npc_sartura_royal_guard : public CreatureScript     mob_sartura_royal_guard() : CreatureScript() { }     mob_sartura_royal_guard() : CreatureScript() 
Class:class mob_anubisath_sentinel : public CreatureScript class npc_anubisath_sentinel : public CreatureScript     mob_anubisath_sentinel() : CreatureScript() { }     mob_anubisath_sentinel() : CreatureScript() 
Class:class mob_rizzle_sprysprocket : public CreatureScript class npc_rizzle_sprysprocket : public CreatureScript     mob_rizzle_sprysprocket() : CreatureScript() { }     mob_rizzle_sprysprocket() : CreatureScript() 
Class:class mob_webbed_creature : public CreatureScript class npc_webbed_creature : public CreatureScript     mob_webbed_creature() : CreatureScript() { }     mob_webbed_creature() : CreatureScript() 
Class:class mobs_risen_husk_spirit : public CreatureScript class npc_risen_husk_spirit : public CreatureScript         mobs_risen_husk_spirit() : CreatureScript() { }         mobs_risen_husk_spirit() : CreatureScript() 
Class:class mob_aquementas : public CreatureScript class npc_aquementas : public CreatureScript     mob_aquementas() : CreatureScript() { }     mob_aquementas() : CreatureScript() 
Class:class mob_amanitar_mushrooms : public CreatureScript class npc_amanitar_mushrooms : public CreatureScript     mob_amanitar_mushrooms() : CreatureScript() { }     mob_amanitar_mushrooms() : CreatureScript() 
Class:class mob_ahnkahar_nerubian : public CreatureScript class npc_ahnkahar_nerubian : public CreatureScript         mob_ahnkahar_nerubian() : CreatureScript() { }         mob_ahnkahar_nerubian() : CreatureScript() 
Class:class mob_nadox_eggs : public CreatureScript class npc_nadox_eggs : public CreatureScript     mob_nadox_eggs() : CreatureScript() { }     mob_nadox_eggs() : CreatureScript() 
Class:class mob_jedoga_initiand : public CreatureScript class npc_jedoga_initiand : public CreatureScript     mob_jedoga_initiand() : CreatureScript() { }     mob_jedoga_initiand() : CreatureScript() 
Class:class mob_taldaram_flamesphere : public CreatureScript class npc_taldaram_flamesphere : public CreatureScript     mob_taldaram_flamesphere() : CreatureScript() { }     mob_taldaram_flamesphere() : CreatureScript() 
Class:class mob_tenebron : public CreatureScript class npc_tenebron : public CreatureScript     mob_tenebron() : CreatureScript() { }     mob_tenebron() : CreatureScript() 
Class:class mob_shadron : public CreatureScript class npc_shadron : public CreatureScript     mob_shadron() : CreatureScript() { }     mob_shadron() : CreatureScript() 
Class:class mob_vesperon : public CreatureScript class npc_vesperon : public CreatureScript     mob_vesperon() : CreatureScript() { }     mob_vesperon() : CreatureScript() 
Class:class mob_acolyte_of_shadron : public CreatureScript class npc_acolyte_of_shadron : public CreatureScript     mob_acolyte_of_shadron() : CreatureScript() { }     mob_acolyte_of_shadron() : CreatureScript() 
Class:class mob_acolyte_of_vesperon : public CreatureScript class npc_acolyte_of_vesperon : public CreatureScript     mob_acolyte_of_vesperon() : CreatureScript() { }     mob_acolyte_of_vesperon() : CreatureScript() 
Class:class mob_twilight_eggs : public CreatureScript class npc_twilight_eggs : public CreatureScript     mob_twilight_eggs() : CreatureScript() { }     mob_twilight_eggs() : CreatureScript() 
Class:class mob_twilight_whelp : public CreatureScript class npc_twilight_whelp : public CreatureScript     mob_twilight_whelp() : CreatureScript() { }     mob_twilight_whelp() : CreatureScript() 
Class:class mob_swarm_scarab : public CreatureScript class npc_swarm_scarab : public CreatureScript         mob_swarm_scarab() : CreatureScript() { }         mob_swarm_scarab() : CreatureScript() 
Class:class mob_nerubian_burrower : public CreatureScript class npc_nerubian_burrower : public CreatureScript         mob_nerubian_burrower() : CreatureScript() { }         mob_nerubian_burrower() : CreatureScript() 
Class:class mob_frost_sphere : public CreatureScript class npc_frost_sphere : public CreatureScript         mob_frost_sphere() : CreatureScript() { }         mob_frost_sphere() : CreatureScript() 
Class:class mob_anubarak_spike : public CreatureScript class npc_anubarak_spike : public CreatureScript         mob_anubarak_spike() : CreatureScript() { }         mob_anubarak_spike() : CreatureScript() 
Class:class mob_toc_druid : public CreatureScript class npc_toc_druid : public CreatureScript         mob_toc_druid() : CreatureScript() { }         mob_toc_druid() : CreatureScript() 
Class:class mob_toc_shaman : public CreatureScript class npc_toc_shaman : public CreatureScript         mob_toc_shaman() : CreatureScript() { }         mob_toc_shaman() : CreatureScript() 
Class:class mob_toc_paladin : public CreatureScript class npc_toc_paladin : public CreatureScript         mob_toc_paladin() : CreatureScript() { }         mob_toc_paladin() : CreatureScript() 
Class:class mob_toc_priest : public CreatureScript class npc_toc_priest : public CreatureScript         mob_toc_priest() : CreatureScript() { }         mob_toc_priest() : CreatureScript() 
Class:class mob_toc_shadow_priest : public CreatureScript class npc_toc_shadow_priest : public CreatureScript         mob_toc_shadow_priest() : CreatureScript() { }         mob_toc_shadow_priest() : CreatureScript() 
Class:class mob_toc_warlock : public CreatureScript class npc_toc_warlock : public CreatureScript         mob_toc_warlock() : CreatureScript() { }         mob_toc_warlock() : CreatureScript() 
Class:class mob_toc_mage : public CreatureScript class npc_toc_mage : public CreatureScript         mob_toc_mage() : CreatureScript() { }         mob_toc_mage() : CreatureScript() 
Class:class mob_toc_hunter : public CreatureScript class npc_toc_hunter : public CreatureScript         mob_toc_hunter() : CreatureScript() { }         mob_toc_hunter() : CreatureScript() 
Class:class mob_toc_boomkin : public CreatureScript class npc_toc_boomkin : public CreatureScript         mob_toc_boomkin() : CreatureScript() { }         mob_toc_boomkin() : CreatureScript() 
Class:class mob_toc_warrior : public CreatureScript class npc_toc_warrior : public CreatureScript         mob_toc_warrior() : CreatureScript() { }         mob_toc_warrior() : CreatureScript() 
Class:class mob_toc_dk : public CreatureScript class npc_toc_dk : public CreatureScript         mob_toc_dk() : CreatureScript() { }         mob_toc_dk() : CreatureScript() 
Class:class mob_toc_rogue : public CreatureScript class npc_toc_rogue : public CreatureScript         mob_toc_rogue() : CreatureScript() { }         mob_toc_rogue() : CreatureScript() 
Class:class mob_toc_enh_shaman : public CreatureScript class npc_toc_enh_shaman : public CreatureScript         mob_toc_enh_shaman() : CreatureScript() { }         mob_toc_enh_shaman() : CreatureScript() 
Class:class mob_toc_retro_paladin : public CreatureScript class npc_toc_retro_paladin : public CreatureScript         mob_toc_retro_paladin() : CreatureScript() { }         mob_toc_retro_paladin() : CreatureScript() 
Class:class mob_toc_pet_warlock : public CreatureScript class npc_toc_pet_warlock : public CreatureScript         mob_toc_pet_warlock() : CreatureScript() { }         mob_toc_pet_warlock() : CreatureScript() 
Class:class mob_toc_pet_hunter : public CreatureScript class npc_toc_pet_hunter : public CreatureScript         mob_toc_pet_hunter() : CreatureScript() { }         mob_toc_pet_hunter() : CreatureScript() 
Class:class mob_legion_flame : public CreatureScript class npc_legion_flame : public CreatureScript         mob_legion_flame() : CreatureScript() { }         mob_legion_flame() : CreatureScript() 
Class:class mob_infernal_volcano : public CreatureScript class npc_infernal_volcano : public CreatureScript         mob_infernal_volcano() : CreatureScript() { }         mob_infernal_volcano() : CreatureScript() 
Class:class mob_fel_infernal : public CreatureScript class npc_fel_infernal : public CreatureScript         mob_fel_infernal() : CreatureScript() { }         mob_fel_infernal() : CreatureScript() 
Class:class mob_nether_portal : public CreatureScript class npc_nether_portal : public CreatureScript         mob_nether_portal() : CreatureScript() { }         mob_nether_portal() : CreatureScript() 
Class:class mob_mistress_of_pain : public CreatureScript class npc_mistress_of_pain : public CreatureScript         mob_mistress_of_pain() : CreatureScript() { }         mob_mistress_of_pain() : CreatureScript() 
Class:class mob_snobold_vassal : public CreatureScript class npc_snobold_vassal : public CreatureScript         mob_snobold_vassal() : CreatureScript() { }         mob_snobold_vassal() : CreatureScript() 
Class:class mob_slime_pool : public CreatureScript class npc_slime_pool : public CreatureScript         mob_slime_pool() : CreatureScript() { }         mob_slime_pool() : CreatureScript() 
Class:class mob_essence_of_twin : public CreatureScript class npc_essence_of_twin : public CreatureScript         mob_essence_of_twin() : CreatureScript() { }         mob_essence_of_twin() : CreatureScript() 
Class:class mob_unleashed_dark : public CreatureScript class npc_unleashed_dark : public CreatureScript         mob_unleashed_dark() : CreatureScript() { }         mob_unleashed_dark() : CreatureScript() 
Class:class mob_unleashed_light : public CreatureScript class npc_unleashed_light : public CreatureScript         mob_unleashed_light() : CreatureScript() { }         mob_unleashed_light() : CreatureScript() 
Class:class mob_bullet_controller : public CreatureScript class npc_bullet_controller : public CreatureScript         mob_bullet_controller() : CreatureScript() { }         mob_bullet_controller() : CreatureScript() 
Class:class mob_corrupted_soul_fragment : public CreatureScript class npc_corrupted_soul_fragment : public CreatureScript         mob_corrupted_soul_fragment() : CreatureScript() { }         mob_corrupted_soul_fragment() : CreatureScript() 
Class:class mob_ymirjar_flamebearer : public CreatureScript class npc_ymirjar_flamebearer : public CreatureScript         mob_ymirjar_flamebearer() : CreatureScript() { }         mob_ymirjar_flamebearer() : CreatureScript() 
Class:class mob_iceborn_protodrake : public CreatureScript class npc_iceborn_protodrake : public CreatureScript         mob_iceborn_protodrake() : CreatureScript() { }         mob_iceborn_protodrake() : CreatureScript() 
Class:class mob_geist_ambusher : public CreatureScript class npc_geist_ambusher : public CreatureScript         mob_geist_ambusher() : CreatureScript() { }         mob_geist_ambusher() : CreatureScript() 
Class:class spell_trash_mob_glacial_strike : public SpellScriptLoader class spell_trash_npc_glacial_strike : public SpellScriptLoader         spell_trash_mob_glacial_strike() : SpellScriptLoader() { }         spell_trash_mob_glacial_strike() : SpellScriptLoader() 
Class:class mob_slad_ran_constrictor : public CreatureScript class npc_slad_ran_constrictor : public CreatureScript     mob_slad_ran_constrictor() : CreatureScript() { }     mob_slad_ran_constrictor() : CreatureScript() 
Class:class mob_slad_ran_viper : public CreatureScript class npc_slad_ran_viper : public CreatureScript     mob_slad_ran_viper() : CreatureScript() { }     mob_slad_ran_viper() : CreatureScript() 
Class:class mob_faerlina_add : public CreatureScript class npc_faerlina_add : public CreatureScript         mob_faerlina_add() : CreatureScript() { }         mob_faerlina_add() : CreatureScript() 
Class:class mob_gothik_minion : public CreatureScript class npc_gothik_minion : public CreatureScript         mob_gothik_minion() : CreatureScript() { }         mob_gothik_minion() : CreatureScript() 
Class:class mob_webwrap : public CreatureScript class npc_webwrap : public CreatureScript     mob_webwrap() : CreatureScript() { }     mob_webwrap() : CreatureScript() 
Class:class mob_stalagg : public CreatureScript class npc_stalagg : public CreatureScript     mob_stalagg() : CreatureScript() { }     mob_stalagg() : CreatureScript() 
Class:class mob_feugen : public CreatureScript class npc_feugen : public CreatureScript     mob_feugen() : CreatureScript() { }     mob_feugen() : CreatureScript() 
Class:class mob_chaotic_rift : public CreatureScript class npc_chaotic_rift : public CreatureScript         mob_chaotic_rift() : CreatureScript() { }         mob_chaotic_rift() : CreatureScript() 
Class:class mob_malformed_ooze : public CreatureScript class npc_malformed_ooze : public CreatureScript     mob_malformed_ooze() : CreatureScript() { }     mob_malformed_ooze() : CreatureScript() 
Class:class mob_iron_sludge : public CreatureScript class npc_iron_sludge : public CreatureScript     mob_iron_sludge() : CreatureScript() { }     mob_iron_sludge() : CreatureScript() 
Class:class mob_tribuna_controller : public CreatureScript class npc_tribuna_controller : public CreatureScript     mob_tribuna_controller() : CreatureScript() { }     mob_tribuna_controller() : CreatureScript() 
Class:class mob_xt002_heart : public CreatureScript class npc_xt002_heart : public CreatureScript         mob_xt002_heart() : CreatureScript() { }         mob_xt002_heart() : CreatureScript() 
Class:class mob_scrapbot : public CreatureScript class npc_scrapbot : public CreatureScript         mob_scrapbot() : CreatureScript() { }         mob_scrapbot() : CreatureScript() 
Class:class mob_pummeller : public CreatureScript class npc_pummeller : public CreatureScript         mob_pummeller() : CreatureScript() { }         mob_pummeller() : CreatureScript() 
Class:class mob_boombot : public CreatureScript class npc_boombot : public CreatureScript         mob_boombot() : CreatureScript() { }         mob_boombot() : CreatureScript() 
Class:class mob_life_spark : public CreatureScript class npc_life_spark : public CreatureScript         mob_life_spark() : CreatureScript() { }         mob_life_spark() : CreatureScript() 
Class:class mob_annhylde_the_caller : public CreatureScript class npc_annhylde_the_caller : public CreatureScript     mob_annhylde_the_caller() : CreatureScript() { }     mob_annhylde_the_caller() : CreatureScript() 
Class:class mob_ingvar_throw_dummy : public CreatureScript class npc_ingvar_throw_dummy : public CreatureScript     mob_ingvar_throw_dummy() : CreatureScript() { }     mob_ingvar_throw_dummy() : CreatureScript() 
Class:class mob_ravenous_furbolg : public CreatureScript class npc_ravenous_furbolg : public CreatureScript     mob_ravenous_furbolg() : CreatureScript() { }     mob_ravenous_furbolg() : CreatureScript() 
Class:class mob_frenzied_worgen : public CreatureScript class npc_frenzied_worgen : public CreatureScript     mob_frenzied_worgen() : CreatureScript() { }     mob_frenzied_worgen() : CreatureScript() 
Class:class mob_ferocious_rhino : public CreatureScript class npc_ferocious_rhino : public CreatureScript     mob_ferocious_rhino() : CreatureScript() { }     mob_ferocious_rhino() : CreatureScript() 
Class:class mob_massive_jormungar : public CreatureScript class npc_massive_jormungar : public CreatureScript     mob_massive_jormungar() : CreatureScript() { }     mob_massive_jormungar() : CreatureScript() 
Class:class mob_palehoof_orb : public CreatureScript class npc_palehoof_orb : public CreatureScript     mob_palehoof_orb() : CreatureScript() { }     mob_palehoof_orb() : CreatureScript() 
Class:class mob_archavon_warder : public CreatureScript class npc_archavon_warder : public CreatureScript         mob_archavon_warder() : CreatureScript() { }         mob_archavon_warder() : CreatureScript() 
Class:class mob_tempest_minion : public CreatureScript class npc_tempest_minion : public CreatureScript         mob_tempest_minion() : CreatureScript() { }         mob_tempest_minion() : CreatureScript() 
Class:class mob_flame_warder : public CreatureScript class npc_flame_warder : public CreatureScript         mob_flame_warder() : CreatureScript() { }         mob_flame_warder() : CreatureScript() 
Class:class mob_frost_warder : public CreatureScript class npc_frost_warder : public CreatureScript         mob_frost_warder() : CreatureScript() { }         mob_frost_warder() : CreatureScript() 
Class:class mob_frozen_orb : public CreatureScript class npc_frozen_orb : public CreatureScript     mob_frozen_orb() : CreatureScript() { }     mob_frozen_orb() : CreatureScript() 
Class:class mob_frozen_orb_stalker : public CreatureScript class npc_frozen_orb_stalker : public CreatureScript         mob_frozen_orb_stalker() : CreatureScript() { }         mob_frozen_orb_stalker() : CreatureScript() 
Class:class mob_erekem_guard : public CreatureScript class npc_erekem_guard : public CreatureScript     mob_erekem_guard() : CreatureScript() { }     mob_erekem_guard() : CreatureScript() 
Class:class mob_ichor_globule : public CreatureScript class npc_ichor_globule : public CreatureScript     mob_ichor_globule() : CreatureScript() { }     mob_ichor_globule() : CreatureScript() 
Class:class mob_ethereal_sphere : public CreatureScript class npc_ethereal_sphere : public CreatureScript     mob_ethereal_sphere() : CreatureScript() { }     mob_ethereal_sphere() : CreatureScript() 
Class:class mob_azure_saboteur : public CreatureScript class npc_azure_saboteur : public CreatureScript     mob_azure_saboteur() : CreatureScript() { }     mob_azure_saboteur() : CreatureScript() 
Class:class mob_azure_invader : public CreatureScript class npc_azure_invader : public CreatureScript     mob_azure_invader() : CreatureScript() { }     mob_azure_invader() : CreatureScript() 
Class:class mob_azure_binder : public CreatureScript class npc_azure_binder : public CreatureScript     mob_azure_binder() : CreatureScript() { }     mob_azure_binder() : CreatureScript() 
Class:class mob_azure_mage_slayer : public CreatureScript class npc_azure_mage_slayer : public CreatureScript     mob_azure_mage_slayer() : CreatureScript() { }     mob_azure_mage_slayer() : CreatureScript() 
Class:class mob_azure_raider : public CreatureScript class npc_azure_raider : public CreatureScript     mob_azure_raider() : CreatureScript() { }     mob_azure_raider() : CreatureScript() 
Class:class mob_azure_stalker : public CreatureScript class npc_azure_stalker : public CreatureScript     mob_azure_stalker() : CreatureScript() { }     mob_azure_stalker() : CreatureScript() 
Class:class mob_azure_spellbreaker : public CreatureScript class npc_azure_spellbreaker : public CreatureScript     mob_azure_spellbreaker() : CreatureScript() { }     mob_azure_spellbreaker() : CreatureScript() 
Class:class mob_azure_captain : public CreatureScript class npc_azure_captain : public CreatureScript     mob_azure_captain() : CreatureScript() { }     mob_azure_captain() : CreatureScript() 
Class:class mob_azure_sorceror : public CreatureScript class npc_azure_sorceror : public CreatureScript     mob_azure_sorceror() : CreatureScript() { }     mob_azure_sorceror() : CreatureScript() 
Class:class mob_nerubar_victim : public CreatureScript class npc_nerubar_victim : public CreatureScript     mob_nerubar_victim() : CreatureScript() { }     mob_nerubar_victim() : CreatureScript() 
Class:class mob_stolen_soul : public CreatureScript class npc_stolen_soul : public CreatureScript     mob_stolen_soul() : CreatureScript() { }     mob_stolen_soul() : CreatureScript() 
Class:class mob_avatar_of_martyred : public CreatureScript class npc_avatar_of_martyred : public CreatureScript     mob_avatar_of_martyred() : CreatureScript() { }     mob_avatar_of_martyred() : CreatureScript() 
Class:class mob_focus_fire : public CreatureScript class npc_focus_fire : public CreatureScript     mob_focus_fire() : CreatureScript() { }     mob_focus_fire() : CreatureScript() 
Class:class mob_ethereal_beacon : public CreatureScript class npc_ethereal_beacon : public CreatureScript     mob_ethereal_beacon() : CreatureScript() { }     mob_ethereal_beacon() : CreatureScript() 
Class:class mob_ethereal_apprentice : public CreatureScript class npc_ethereal_apprentice : public CreatureScript     mob_ethereal_apprentice() : CreatureScript() { }     mob_ethereal_apprentice() : CreatureScript() 
Class:class mob_syth_fire : public CreatureScript class npc_syth_fire : public CreatureScript     mob_syth_fire() : CreatureScript() { }     mob_syth_fire() : CreatureScript() 
Class:class mob_syth_arcane : public CreatureScript class npc_syth_arcane : public CreatureScript     mob_syth_arcane() : CreatureScript() { }     mob_syth_arcane() : CreatureScript() 
Class:class mob_syth_frost : public CreatureScript class npc_syth_frost : public CreatureScript     mob_syth_frost() : CreatureScript() { }     mob_syth_frost() : CreatureScript() 
Class:class mob_syth_shadow : public CreatureScript class npc_syth_shadow : public CreatureScript     mob_syth_shadow() : CreatureScript() { }     mob_syth_shadow() : CreatureScript() 
Class:class mob_flame_of_azzinoth : public CreatureScript class npc_flame_of_azzinoth : public CreatureScript     mob_flame_of_azzinoth() : CreatureScript() { }     mob_flame_of_azzinoth() : CreatureScript() 
Class:class mob_cage_trap_trigger : public CreatureScript class npc_cage_trap_trigger : public CreatureScript     mob_cage_trap_trigger() : CreatureScript() { }     mob_cage_trap_trigger() : CreatureScript() 
Class:class mob_shadow_demon : public CreatureScript class npc_shadow_demon : public CreatureScript     mob_shadow_demon() : CreatureScript() { }     mob_shadow_demon() : CreatureScript() 
Class:class mob_blade_of_azzinoth : public CreatureScript class npc_blade_of_azzinoth : public CreatureScript     mob_blade_of_azzinoth() : CreatureScript() { }     mob_blade_of_azzinoth() : CreatureScript() 
Class:class mob_parasitic_shadowfiend : public CreatureScript class npc_parasitic_shadowfiend : public CreatureScript     mob_parasitic_shadowfiend() : CreatureScript() { }     mob_parasitic_shadowfiend() : CreatureScript() 
Class:class mob_ashtongue_channeler : public CreatureScript class npc_ashtongue_channeler : public CreatureScript     mob_ashtongue_channeler() : CreatureScript() { }     mob_ashtongue_channeler() : CreatureScript() 
Class:class mob_ashtongue_sorcerer : public CreatureScript class npc_ashtongue_sorcerer : public CreatureScript     mob_ashtongue_sorcerer() : CreatureScript() { }     mob_ashtongue_sorcerer() : CreatureScript() 
Class:class mob_doom_blossom : public CreatureScript class npc_doom_blossom : public CreatureScript     mob_doom_blossom() : CreatureScript() { }     mob_doom_blossom() : CreatureScript() 
Class:class mob_shadowy_construct : public CreatureScript class npc_shadowy_construct : public CreatureScript     mob_shadowy_construct() : CreatureScript() { }     mob_shadowy_construct() : CreatureScript() 
Class:class mob_blood_elf_council_voice_trigger : public CreatureScript class npc_blood_elf_council_voice_trigger : public CreatureScript     mob_blood_elf_council_voice_trigger() : CreatureScript() { }     mob_blood_elf_council_voice_trigger() : CreatureScript() 
Class:class mob_illidari_council : public CreatureScript class npc_illidari_council : public CreatureScript     mob_illidari_council() : CreatureScript() { }     mob_illidari_council() : CreatureScript() 
Class:class mob_enchanted_elemental : public CreatureScript class npc_enchanted_elemental : public CreatureScript     mob_enchanted_elemental() : CreatureScript() { }     mob_enchanted_elemental() : CreatureScript() 
Class:class mob_tainted_elemental : public CreatureScript class npc_tainted_elemental : public CreatureScript     mob_tainted_elemental() : CreatureScript() { }     mob_tainted_elemental() : CreatureScript() 
Class:class mob_toxic_sporebat : public CreatureScript class npc_toxic_sporebat : public CreatureScript     mob_toxic_sporebat() : CreatureScript() { }     mob_toxic_sporebat() : CreatureScript() 
Class:class mob_shield_generator_channel : public CreatureScript class npc_shield_generator_channel : public CreatureScript     mob_shield_generator_channel() : CreatureScript() { }     mob_shield_generator_channel() : CreatureScript() 
Class:class mob_inner_demon : public CreatureScript class npc_inner_demon : public CreatureScript     mob_inner_demon() : CreatureScript() { }     mob_inner_demon() : CreatureScript() 
Class:class mob_greyheart_spellbinder : public CreatureScript class npc_greyheart_spellbinder : public CreatureScript     mob_greyheart_spellbinder() : CreatureScript() { }     mob_greyheart_spellbinder() : CreatureScript() 
Class:class mob_coilfang_ambusher : public CreatureScript class npc_coilfang_ambusher : public CreatureScript     mob_coilfang_ambusher() : CreatureScript() { }     mob_coilfang_ambusher() : CreatureScript() 
Class:class mob_water_globule : public CreatureScript class npc_water_globule : public CreatureScript     mob_water_globule() : CreatureScript() { }     mob_water_globule() : CreatureScript() 
Class:class mob_coilfang_waterelemental : public CreatureScript class npc_coilfang_waterelemental : public CreatureScript     mob_coilfang_waterelemental() : CreatureScript() { }     mob_coilfang_waterelemental() : CreatureScript() 
Class:class mob_steamrigger_mechanic : public CreatureScript class npc_steamrigger_mechanic : public CreatureScript     mob_steamrigger_mechanic() : CreatureScript() { }     mob_steamrigger_mechanic() : CreatureScript() 
Class:class mob_naga_distiller : public CreatureScript class npc_naga_distiller : public CreatureScript     mob_naga_distiller() : CreatureScript() { }     mob_naga_distiller() : CreatureScript() 
Class:class mob_underbog_mushroom : public CreatureScript class npc_underbog_mushroom : public CreatureScript     mob_underbog_mushroom() : CreatureScript() { }     mob_underbog_mushroom() : CreatureScript() 
Class:class mob_ragin_flames : public CreatureScript class npc_ragin_flames : public CreatureScript         mob_ragin_flames() : CreatureScript() { }         mob_ragin_flames() : CreatureScript() 
Class:class mobs_bladespire_ogre : public CreatureScript class npc_bladespire_ogre : public CreatureScript     mobs_bladespire_ogre() : CreatureScript() { }     mobs_bladespire_ogre() : CreatureScript() 
Class:class mobs_nether_drake : public CreatureScript class npc_nether_drake : public CreatureScript     mobs_nether_drake() : CreatureScript() { }     mobs_nether_drake() : CreatureScript() 
Class:class mob_phase_hunter : public CreatureScript class npc_phase_hunter : public CreatureScript     mob_phase_hunter() : CreatureScript() { }     mob_phase_hunter() : CreatureScript() 
Class:class mob_mature_netherwing_drake : public CreatureScript class npc_mature_netherwing_drake : public CreatureScript     mob_mature_netherwing_drake() : CreatureScript() { }     mob_mature_netherwing_drake() : CreatureScript() 
Class:class mob_enslaved_netherwing_drake : public CreatureScript class npc_enslaved_netherwing_drake : public CreatureScript     mob_enslaved_netherwing_drake() : CreatureScript() { }     mob_enslaved_netherwing_drake() : CreatureScript() 
Class:class mob_unkor_the_ruthless : public CreatureScript class npc_unkor_the_ruthless : public CreatureScript     mob_unkor_the_ruthless() : CreatureScript() { }     mob_unkor_the_ruthless() : CreatureScript() 
Class:class mob_netherweb_victim : public CreatureScript class npc_netherweb_victim : public CreatureScript     mob_netherweb_victim() : CreatureScript() { }     mob_netherweb_victim() : CreatureScript() 
Class:class mob_mojo : public CreatureScript class npc_mojo : public CreatureScript     mob_mojo() : CreatureScript() { }     mob_mojo() : CreatureScript() 
Class: class spell_snufflenose_command : public SpellScriptLoader { 
Class:         class spell_snufflenose_commandSpellScript : public SpellScript         {         
Class: class boss_gizrul_the_slavener : public CreatureScript { 
Class: class boss_urok_doomhowl : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!itr->second.Passenger);'), (3, 1, u'+        ASSERT(itr->second.IsEmpty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::~Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!itr->second.Passenger);'), (3, 1, u'+        ASSERT(itr->second.IsEmpty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!itr->second.Passenger);'), (3, 1, u'+        ASSERT(itr->second.IsEmpty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!seat->second.Passenger);'), (3, 1, u'+        ASSERT(seat->second.IsEmpty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!seat->second.Passenger);'), (3, 1, u'+        ASSERT(seat->second.IsEmpty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!seat->second.Passenger);'), (3, 1, u'+        ASSERT(seat->second.IsEmpty());')]
===========================================
Class: class npc_agnetta_tyrsdottar : public CreatureScript { 
Class: class npc_frostborn_scout : public CreatureScript { 
Class: class at_dragonspire_hall : public AreaTriggerScript { 
Class:  class at_blackrock_stadium : public AreaTriggerScript { 
Class: class boss_victor_nefarius : public CreatureScript     boss_nefarian() : CreatureScript() { }     boss_nefarian() : CreatureScript() 
Class: class boss_nefarian : public CreatureScript { 
Class:class go_orb_of_domination : public GameObjectScript { 
Class:class spell_egg_event : public SpellScriptLoader { 
Class:         class spell_egg_eventSpellScript : public SpellScript         {         
Class:          class boss_victor_nefarius : public CreatureScript { 
Class: class instance_blackwing_lair : public InstanceMapScript { 
Class: class npc_blackhand_incarcerator : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()));'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()) ||')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: Unit::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()));'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()));'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()) ||')]
===========================================
Class: class boss_aeonus : public CreatureScript { 
Class: class boss_chrono_lord_deja : public CreatureScript { 
Class: class boss_temporus : public CreatureScript { 
Class: class npc_medivh_bm : public CreatureScript { 
Class: class npc_time_rift : public CreatureScript { 
Class: class instance_dark_portal : public InstanceMapScript { 
Class: class boss_aeonus : public CreatureScript { 
Class: class boss_chrono_lord_deja : public CreatureScript { 
Class: class boss_temporus : public CreatureScript { 
Class: class instance_the_black_morass : public InstanceMapScript { 
Class: class npc_medivh_bm : public CreatureScript { 
Class: class npc_time_rift : public CreatureScript { 
Class: class spell_gen_vendor_bark_trigger : public SpellScriptLoader { 
Class:         class spell_gen_vendor_bark_trigger_SpellScript : public SpellScript         {         
Class: class spell_gen_spectator_cheer_trigger : public SpellScriptLoader { 
Class:         class spell_gen_spectator_cheer_trigger_SpellScript : public SpellScript         {         
Class: class npc_gymer : public CreatureScript { 
Class:  class spell_random_ingredient_medium : public SpellScriptLoader { 
Class:         class spell_random_ingredient_medium_SpellScript : public SpellScript         {         
Class:  class spell_random_ingredient_hard : public SpellScriptLoader { 
Class:         class spell_random_ingredient_hard_SpellScript : public SpellScript         {         
Class: class npc_alchemist_finklestein : public CreatureScript { 
Class: class go_finklesteins_cauldron : public GameObjectScript { 
Class:  class spell_random_ingredient_aura : public SpellScriptLoader { 
Class:         class spell_random_ingredient_aura_AuraScript : public AuraScript         {         
Class:  class spell_random_ingredient_easy : public SpellScriptLoader { 
Class:         class spell_random_ingredient_easy_SpellScript : public SpellScript         {         
Class:  class spell_random_ingredient_medium : public SpellScriptLoader { 
Class:         class spell_random_ingredient_medium_SpellScript : public SpellScript         {         
Class:  class spell_random_ingredient_hard : public SpellScriptLoader { 
Class:         class spell_random_ingredient_hard_SpellScript : public SpellScript         {         
Class: class spell_pot_check : public SpellScriptLoader { 
Class:         class spell_pot_check_SpellScript : public SpellScript         {         
Class:  class spell_fetch_ingredient_aura : public SpellScriptLoader { 
Class:         class spell_fetch_ingredient_aura_AuraScript : public AuraScript         {         
Class:class spell_q12661_q12669_q12676_q12677_q12713_summon_stefan : public SpellScriptLoader { 
Class:         class spell_q12661_q12669_q12676_q12677_q12713_summon_stefan_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tdtAssert(m_nav);'), (98, 1, u'+\tdtAssert(m_nav);'), (99, 1, u'+\tdtAssert(m_nodePool);'), (100, 1, u'+\tdtAssert(m_openList);')]
===========================================
===========================================
Total add: 284
Total del: 0
Header: dtNavMeshQuery::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tdtAssert(m_nav);'), (98, 1, u'+\tdtAssert(m_nav);'), (99, 1, u'+\tdtAssert(m_nodePool);'), (100, 1, u'+\tdtAssert(m_openList);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tdtAssert(m_nav);'), (98, 1, u'+\tdtAssert(m_nav);'), (99, 1, u'+\tdtAssert(m_nodePool);'), (100, 1, u'+\tdtAssert(m_openList);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: dtNavMeshQuery::finalizeSlicedFindPathPartial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tdtAssert(m_query.lastBestNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
Total add: 149
Total del: 0
Header: rcMarkConvexPolyArea
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\trcAssert(ctx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\trcAssert(ctx);')]
===========================================
Class:class mob_voidtraveler : public CreatureScript enum Events public:     mob_voidtraveler() : CreatureScript() { }     mob_voidtraveler() : CreatureScript() 
Class:class npc_voidtraveler : public CreatureScript { 
Class: class spell_q12730_quenching_mist : public SpellScriptLoader { 
Class:         class spell_q12730_quenching_mist_AuraScript : public AuraScript         {         
Class: class npc_lake_frog : public CreatureScript { 
Class: class spell_q2203_thaumaturgy_channel : public SpellScriptLoader { 
Class:         class spell_q2203_thaumaturgy_channel_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(c->isTotem());'), (3, 1, u'+    ASSERT(c->IsTotem());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TotemAI::TotemAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(c->isTotem());'), (3, 1, u'+    ASSERT(c->IsTotem());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(c->isTotem());'), (3, 1, u'+    ASSERT(c->IsTotem());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!isPet());'), (3, 1, u'+    ASSERT(!IsPet());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TempSummon::InitStats
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!isPet());'), (3, 1, u'+    ASSERT(!IsPet());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!isPet());'), (3, 1, u'+    ASSERT(!IsPet());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!c->isPet() && "ObjectGridRespawnMover must not be called for pets");'), (3, 1, u'+        ASSERT(!c->IsPet() && "ObjectGridRespawnMover must not be called for pets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectGridEvacuator::Visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!c->isPet() && "ObjectGridRespawnMover must not be called for pets");'), (3, 1, u'+        ASSERT(!c->IsPet() && "ObjectGridRespawnMover must not be called for pets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!c->isPet() && "ObjectGridRespawnMover must not be called for pets");'), (3, 1, u'+        ASSERT(!c->IsPet() && "ObjectGridRespawnMover must not be called for pets");')]
===========================================
Class: class npc_mcgoyver : public CreatureScript { 
Class: class spell_gen_whisper_gulch_yogg_saron_whisper : public SpellScriptLoader { 
Class:         class spell_gen_whisper_gulch_yogg_saron_whisper_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Unit::_EnterVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        ASSERT(!rideVehicleEffect);'), (22, 2, u'-        ASSERT(false);'), (24, 1, u'+    ASSERT(rideVehicleEffect);')]
===========================================
===========================================
Total add: 15
Total del: 9
Header: Unit::ChangeSeat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        ASSERT(!rideVehicleEffect);'), (22, 2, u'-        ASSERT(false);'), (24, 1, u'+    ASSERT(rideVehicleEffect);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        ASSERT(!rideVehicleEffect);'), (22, 2, u'-        ASSERT(false);'), (24, 1, u'+    ASSERT(rideVehicleEffect);')]
===========================================
Class:class achievement_assembly_i_choose_you : public AchievementCriteriaScript { 
Class:class spell_q12847_summon_soul_moveto_bunny : public SpellScriptLoader { 
Class:         class spell_q12847_summon_soul_moveto_bunny_SpellScript : public SpellScript         {         
Class: class npc_frostworn_general : public CreatureScript { 
Class: class npc_spiritual_reflection : public CreatureScript { 
Class: class at_hor_intro_start : public AreaTriggerScript { 
Class: class at_hor_waves_restarter : public AreaTriggerScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void Assert(char const *file, int line, char const *function, char const *message)'), (3, 1, u'+void Assert(char const* file, int line, char const* function, char const* message)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace Trinity {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void Assert(char const *file, int line, char const *function, char const *message)'), (3, 1, u'+void Assert(char const* file, int line, char const* function, char const* message)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void Assert(char const *file, int line, char const *function, char const *message)'), (3, 1, u'+void Assert(char const* file, int line, char const* function, char const* message)')]
===========================================
Class: class StartAttackEvent : public BasicEvent { 
Class: class boss_voice_of_yogg_saron : public CreatureScript { 
Class: class boss_sara : public CreatureScript { 
Class: class boss_yogg_saron : public CreatureScript { 
Class: class boss_brain_of_yogg_saron : public CreatureScript { 
Class: class npc_ominous_cloud : public CreatureScript { 
Class: class npc_guardian_of_yogg_saron : public CreatureScript { 
Class: class npc_corruptor_tentacle : public CreatureScript { 
Class: class npc_constrictor_tentacle : public CreatureScript { 
Class: class npc_crusher_tentacle : public CreatureScript { 
Class: class npc_influence_tentacle : public CreatureScript { 
Class: class npc_descend_into_madness : public CreatureScript { 
Class: class npc_immortal_guardian : public CreatureScript { 
Class: class npc_observation_ring_keeper : public CreatureScript { 
Class: class npc_yogg_saron_keeper : public CreatureScript { 
Class: class npc_yogg_saron_illusions : public CreatureScript { 
Class: class npc_garona : public CreatureScript { 
Class: class npc_turned_champion : public CreatureScript { 
Class: class npc_laughing_skull : public CreatureScript { 
Class: class spell_yogg_saron_target_selectors : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_target_selectors_SpellScript : public SpellScript         {         
Class: class SanityReduction : public SpellScript { 
Class: class HighSanityTargetSelector { 
Class: class spell_yogg_saron_psychosis : public SpellScriptLoader       { 
Class:         class spell_yogg_saron_psychosis_SpellScript : public SanityReduction         {         
Class: class spell_yogg_saron_malady_of_the_mind : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_malady_of_the_mind_SpellScript : public SanityReduction         {         
Class:         class spell_yogg_saron_malady_of_the_mind_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_brain_link : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_brain_link_SpellScript : public SpellScript         {         
Class:         class spell_yogg_saron_brain_link_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_brain_link_damage : public SpellScriptLoader       { 
Class:         class spell_yogg_saron_brain_link_damage_SpellScript : public SanityReduction         {         
Class: class spell_yogg_saron_boil_ominously : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_boil_ominously_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_shadow_beacon : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_shadow_beacon_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_empowering_shadows_range_check : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_empowering_shadows_range_check_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_empowering_shadows_missile : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_empowering_shadows_missile_SpellScript : public SpellScript         {         
Class:  class spell_yogg_saron_constrictor_tentacle : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_constrictor_tentacle_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_lunge : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_lunge_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_squeeze : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_squeeze_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_diminsh_power : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_diminsh_power_AuraScript : public AuraScript         {         
Class:  class spell_yogg_saron_empowered : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_empowered_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_match_health : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_match_health_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_shattered_illusion : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_shattered_illusion_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_death_ray_warning_visual : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_death_ray_warning_visual_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_cancel_illusion_room_aura : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_cancel_illusion_room_aura_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_nondescript : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_nondescript_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_revealed_tentacle : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_revealed_tentacle_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_grim_reprisal : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_grim_reprisal_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_induce_madness : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_induce_madness_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_sanity : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_sanity_SpellScript : public SpellScript         {         
Class:         class spell_yogg_saron_sanity_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_insane : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_insane_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_insane_periodic : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_insane_periodic_SpellScript : public SpellScript         {         
Class: class LunaticGazeTargetSelector { 
Class: class spell_yogg_saron_lunatic_gaze : public SpellScriptLoader       { 
Class:         class spell_yogg_saron_lunatic_gaze_SpellScript : public SanityReduction         {         
Class: class spell_yogg_saron_keeper_aura : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_keeper_aura_AuraScript : public AuraScript         {         
Class: class spell_yogg_saron_hate_to_zero : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_hate_to_zero_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_in_the_maws_of_the_old_god : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_in_the_maws_of_the_old_god_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_titanic_storm : public SpellScriptLoader     { 
Class:         class spell_yogg_saron_titanic_storm_SpellScript : public SpellScript         {         
Class: class spell_yogg_saron_hodirs_protective_gaze : public SpellScriptLoader      { 
Class:         class spell_yogg_saron_hodirs_protective_gaze_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((a->bits & CHUNK_MAP_KEY) == CHUNK_MAP_KEY || (a->bits &')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: arena_avail_comp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((a->bits & CHUNK_MAP_KEY) == CHUNK_MAP_KEY || (a->bits &')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((a->bits & CHUNK_MAP_KEY) == CHUNK_MAP_KEY || (a->bits &')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(run->nfree < run->bin->nregs);'), (13, 1, u'+\tassert(run->nfree < bin_info->nregs);'), (30, 2, u'-\tassert((uintptr_t)ptr < (uintptr_t)run->next);'), (33, 1, u'+\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));')]
===========================================
===========================================
Total add: 16
Total del: 16
Header: arena_run_reg_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(run->nfree < run->bin->nregs);'), (13, 1, u'+\tassert(run->nfree < bin_info->nregs);'), (30, 2, u'-\tassert((uintptr_t)ptr < (uintptr_t)run->next);'), (33, 1, u'+\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(run->nfree < run->bin->nregs);'), (13, 1, u'+\tassert(run->nfree < bin_info->nregs);'), (30, 2, u'-\tassert((uintptr_t)ptr < (uintptr_t)run->next);'), (33, 1, u'+\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (23, 2, u'-\tassert((chunk->map[run_ind+total_pages-1-map_bias].bits &'), (30, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind+total_pages-1) ==')]
===========================================
===========================================
Total add: 12
Total del: 14
Header: static void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (23, 2, u'-\tassert((chunk->map[run_ind+total_pages-1-map_bias].bits &'), (30, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind+total_pages-1) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (23, 2, u'-\tassert((chunk->map[run_ind+total_pages-1-map_bias].bits &'), (30, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind+total_pages-1) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tassert((chunk->map[0].bits & ~PAGE_MASK) == arena_maxclass);'), (8, 2, u'-\t\tassert((chunk->map[chunk_npages-1-map_bias].bits & ~PAGE_MASK)'), (10, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) =='), (14, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (15, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (16, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (18, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (20, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Total add: 8
Total del: 12
Header: arena_chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tassert((chunk->map[0].bits & ~PAGE_MASK) == arena_maxclass);'), (8, 2, u'-\t\tassert((chunk->map[chunk_npages-1-map_bias].bits & ~PAGE_MASK)'), (10, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) =='), (14, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (15, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (16, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (18, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (20, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tassert((chunk->map[0].bits & ~PAGE_MASK) == arena_maxclass);'), (8, 2, u'-\t\tassert((chunk->map[chunk_npages-1-map_bias].bits & ~PAGE_MASK)'), (10, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) =='), (14, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (15, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (16, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (18, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (20, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\t\tassert(chunk->map[i-map_bias].bits == unzeroed);'), (16, 1, u'+\t\t\t\tassert(arena_mapbits_unzeroed_get(chunk, i) ==')]
===========================================
===========================================
Total add: 17
Total del: 13
Header: arena_chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\t\tassert(chunk->map[i-map_bias].bits == unzeroed);'), (16, 1, u'+\t\t\t\tassert(arena_mapbits_unzeroed_get(chunk, i) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\t\tassert(chunk->map[i-map_bias].bits == unzeroed);'), (16, 1, u'+\t\t\t\tassert(arena_mapbits_unzeroed_get(chunk, i) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (4, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (5, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (7, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (9, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Total add: 12
Total del: 8
Header: arena_chunk_dealloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (4, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (5, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (7, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (9, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (4, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (5, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (7, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (9, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= arena_maxclass);'), (3, 2, u'-\tassert((size & PAGE_MASK) == 0);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: arena_run_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= arena_maxclass);'), (3, 2, u'-\tassert((size & PAGE_MASK) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= arena_maxclass);'), (3, 2, u'-\tassert((size & PAGE_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) != 0);'), (3, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (4, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) != 0);'), (3, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (4, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) != 0);'), (3, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (4, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\tassert(pageind + npages <= chunk_npages);'), (35, 1, u'+\t\t\tassert(pageind + npages <= chunk_npages);'), (36, 1, u'+\t\t\tassert(arena_mapbits_dirty_get(chunk, pageind) ==')]
===========================================
===========================================
Total add: 30
Total del: 29
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\tassert(pageind + npages <= chunk_npages);'), (35, 1, u'+\t\t\tassert(pageind + npages <= chunk_npages);'), (36, 1, u'+\t\t\tassert(arena_mapbits_dirty_get(chunk, pageind) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\tassert(pageind + npages <= chunk_npages);'), (35, 1, u'+\t\t\tassert(pageind + npages <= chunk_npages);'), (36, 1, u'+\t\t\tassert(arena_mapbits_dirty_get(chunk, pageind) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\t\t\t\tassert((mapelm->bits >> PAGE_SHIFT) == 0);'), (21, 2, u'-\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (23, 1, u'+\t\t\t\tassert(arena_mapbits_small_runind_get(chunk,')]
===========================================
===========================================
Total add: 13
Total del: 10
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\t\t\t\tassert((mapelm->bits >> PAGE_SHIFT) == 0);'), (21, 2, u'-\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (23, 1, u'+\t\t\t\tassert(arena_mapbits_small_runind_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\t\t\t\tassert((mapelm->bits >> PAGE_SHIFT) == 0);'), (21, 2, u'-\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (23, 1, u'+\t\t\t\tassert(arena_mapbits_small_runind_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tassert(chunk->ndirty == 0 || all == false);'), (14, 1, u'+\tassert(chunk->nruns_adjac == 0);'), (36, 2, u'-\t\tassert(ndirty >= npages);'), (55, 2, u'-\tassert(ndirty == 0);')]
===========================================
===========================================
Total add: 34
Total del: 42
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tassert(chunk->ndirty == 0 || all == false);'), (14, 1, u'+\tassert(chunk->nruns_adjac == 0);'), (36, 2, u'-\t\tassert(ndirty >= npages);'), (55, 2, u'-\tassert(ndirty == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tassert(chunk->ndirty == 0 || all == false);'), (14, 1, u'+\tassert(chunk->nruns_adjac == 0);'), (36, 2, u'-\t\tassert(ndirty >= npages);'), (55, 2, u'-\tassert(ndirty == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t    assert(chunk->dirtied);'), (12, 1, u'+\t\tassert(ndirty == arena->ndirty);'), (14, 2, u'-\tassert(ndirty == arena->ndirty);'), (16, 2, u'-\tassert(arena->ndirty > arena->npurgatory);'), (17, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (18, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);'), (19, 1, u'+\tassert(arena->ndirty > arena->npurgatory || all);'), (20, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -')]
===========================================
===========================================
Total add: 10
Total del: 13
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t    assert(chunk->dirtied);'), (12, 1, u'+\t\tassert(ndirty == arena->ndirty);'), (14, 2, u'-\tassert(ndirty == arena->ndirty);'), (16, 2, u'-\tassert(arena->ndirty > arena->npurgatory);'), (17, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (18, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);'), (19, 1, u'+\tassert(arena->ndirty > arena->npurgatory || all);'), (20, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t    assert(chunk->dirtied);'), (12, 1, u'+\t\tassert(ndirty == arena->ndirty);'), (14, 2, u'-\tassert(ndirty == arena->ndirty);'), (16, 2, u'-\tassert(arena->ndirty > arena->npurgatory);'), (17, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (18, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);'), (19, 1, u'+\tassert(arena->ndirty > arena->npurgatory || all);'), (20, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(npurgeable != 0);')]
===========================================
===========================================
Total add: 7
Total del: 15
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(npurgeable != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(npurgeable != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(size == PAGE_SIZE ||'), (15, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (17, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (24, 1, u'+\t\tassert(size == PAGE ||')]
===========================================
===========================================
Total add: 22
Total del: 15
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(size == PAGE_SIZE ||'), (15, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (17, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (24, 1, u'+\t\tassert(size == PAGE ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(size == PAGE_SIZE ||'), (15, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (17, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (24, 1, u'+\t\tassert(size == PAGE ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Total add: 5
Total del: 4
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (4, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (6, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Total add: 6
Total del: 8
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (4, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (6, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (4, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (6, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK)'), (4, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_ALLOCATED)'), (6, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY)'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, run_ind) == flag_dirty);')]
===========================================
===========================================
Total add: 5
Total del: 8
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK)'), (4, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_ALLOCATED)'), (6, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY)'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, run_ind) == flag_dirty);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK)'), (4, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_ALLOCATED)'), (6, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY)'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, run_ind) == flag_dirty);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK) =='), (4, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY) =='), (27, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (29, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (35, 1, u'+\t\tassert(run_ind == map_bias);'), (36, 1, u'+\t\tassert(run_pages == (arena_maxclass >> LG_PAGE));')]
===========================================
===========================================
Total add: 11
Total del: 25
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK) =='), (4, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY) =='), (27, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (29, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (35, 1, u'+\t\tassert(run_ind == map_bias);'), (36, 1, u'+\t\tassert(run_pages == (arena_maxclass >> LG_PAGE));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK) =='), (4, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY) =='), (27, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (29, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (35, 1, u'+\t\tassert(run_ind == map_bias);'), (36, 1, u'+\t\tassert(run_pages == (arena_maxclass >> LG_PAGE));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (14, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (16, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (18, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (20, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (29, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (35, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (37, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Total add: 15
Total del: 27
Header: arena_run_trim_head
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (14, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (16, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (18, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (20, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (29, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (35, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (37, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (14, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (16, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (18, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (20, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (29, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (35, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (37, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (11, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (13, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (15, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (24, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (30, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (32, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Total add: 14
Total del: 23
Header: arena_run_trim_tail
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (11, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (13, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (15, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (24, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (30, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (32, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (11, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (13, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (15, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (24, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (30, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (32, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+\tassert(arena_run_tree_search(&bin->runs, mapelm) == NULL);'), (83, 1, u'+\tassert(arena_run_tree_search(&bin->runs, mapelm) != NULL);')]
===========================================
===========================================
Total add: 77
Total del: 54
Header: arena_bin_nonfull_run_get
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+\tassert(arena_run_tree_search(&bin->runs, mapelm) == NULL);'), (83, 1, u'+\tassert(arena_run_tree_search(&bin->runs, mapelm) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+\tassert(arena_run_tree_search(&bin->runs, mapelm) == NULL);'), (83, 1, u'+\tassert(arena_run_tree_search(&bin->runs, mapelm) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 2, u'-\tassert(min_run_size >= PAGE_SIZE);'), (58, 2, u'-\tassert(min_run_size <= arena_maxclass);'), (130, 2, u'-\tassert(good_hdr_size <= good_reg0_offset);')]
===========================================
===========================================
Total add: 57
Total del: 115
Header: arena_tcache_fill_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 2, u'-\tassert(min_run_size >= PAGE_SIZE);'), (58, 2, u'-\tassert(min_run_size <= arena_maxclass);'), (130, 2, u'-\tassert(good_hdr_size <= good_reg0_offset);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 2, u'-\tassert(min_run_size >= PAGE_SIZE);'), (58, 2, u'-\tassert(min_run_size <= arena_maxclass);'), (130, 2, u'-\tassert(good_hdr_size <= good_reg0_offset);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(binind < nbins);'), (5, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: arena_malloc_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(binind < nbins);'), (5, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(binind < nbins);'), (5, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert((offset & PAGE_MASK) == 0);'), (8, 2, u'-\tassert(offset < alloc_size);'), (24, 2, u'-\t\t\tassert(trailsize < alloc_size);'), (30, 1, u'+\tassert(alloc_size >= leadsize + size);')]
===========================================
===========================================
Total add: 21
Total del: 38
Header: arena_palloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert((offset & PAGE_MASK) == 0);'), (8, 2, u'-\tassert(offset < alloc_size);'), (24, 2, u'-\t\t\tassert(trailsize < alloc_size);'), (30, 1, u'+\tassert(alloc_size >= leadsize + size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert((offset & PAGE_MASK) == 0);'), (8, 2, u'-\tassert(offset < alloc_size);'), (24, 2, u'-\t\t\tassert(trailsize < alloc_size);'), (30, 1, u'+\tassert(alloc_size >= leadsize + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(isalloc(ptr) == PAGE_SIZE);'), (10, 2, u'-\tassert(binind < nbins);')]
===========================================
===========================================
Total add: 10
Total del: 45
Header: arena_prof_promoted
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(isalloc(ptr) == PAGE_SIZE);'), (10, 2, u'-\tassert(binind < nbins);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(isalloc(ptr) == PAGE_SIZE);'), (10, 2, u'-\tassert(binind < nbins);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena_run_tree_search(&bin->runs, &chunk->map['), (4, 1, u'+\tassert(arena_run_tree_search(&bin->runs,')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: arena_dalloc_bin_run
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena_run_tree_search(&bin->runs, &chunk->map['), (4, 1, u'+\tassert(arena_run_tree_search(&bin->runs,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena_run_tree_search(&bin->runs, &chunk->map['), (4, 1, u'+\tassert(arena_run_tree_search(&bin->runs,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (21, 1, u'+\t\tassert(npages > 0);')]
===========================================
===========================================
Total add: 11
Total del: 18
Header: arena_dalloc_bin_run
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (21, 1, u'+\t\tassert(npages > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (21, 1, u'+\t\tassert(npages > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\tassert(arena_run_tree_search(&bin->runs, run_mapelm) == NULL);')]
===========================================
===========================================
Total add: 10
Total del: 25
Header: arena_bin_lower_run
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\tassert(arena_run_tree_search(&bin->runs, run_mapelm) == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\tassert(arena_run_tree_search(&bin->runs, run_mapelm) == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 11
Total del: 14
Header: arena_dalloc_bin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(oldsize == (chunk->map[pageind-map_bias].bits & ~PAGE_MASK));'), (9, 1, u'+\tassert(oldsize == arena_mapbits_large_size_get(chunk, pageind));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: arena_ralloc_large_grow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(oldsize == (chunk->map[pageind-map_bias].bits & ~PAGE_MASK));'), (9, 1, u'+\tassert(oldsize == arena_mapbits_large_size_get(chunk, pageind));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(oldsize == (chunk->map[pageind-map_bias].bits & ~PAGE_MASK));'), (9, 1, u'+\tassert(oldsize == arena_mapbits_large_size_get(chunk, pageind));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: arena_ralloc_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(choose_arena()->bins[small_size2bin['), (9, 1, u'+\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size')]
===========================================
===========================================
Total add: 7
Total del: 8
Header: arena_ralloc_no_move
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(choose_arena()->bins[small_size2bin['), (9, 1, u'+\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(choose_arena()->bins[small_size2bin['), (9, 1, u'+\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(sspace_min < PAGE_SIZE);'), (15, 2, u'-\tassert(LG_QUANTUM >= LG_TINY_MIN);'), (17, 2, u'-\tassert(ntbins <= LG_QUANTUM);')]
===========================================
===========================================
Total add: 0
Total del: 55
Header: arena_boot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(sspace_min < PAGE_SIZE);'), (15, 2, u'-\tassert(LG_QUANTUM >= LG_TINY_MIN);'), (17, 2, u'-\tassert(ntbins <= LG_QUANTUM);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(sspace_min < PAGE_SIZE);'), (15, 2, u'-\tassert(LG_QUANTUM >= LG_TINY_MIN);'), (17, 2, u'-\tassert(ntbins <= LG_QUANTUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(alignment != 0);'), (3, 1, u'+\tassert((alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Total add: 22
Total del: 20
Header: chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(alignment != 0);'), (3, 1, u'+\tassert((alignment & chunksize_mask) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(alignment != 0);'), (3, 1, u'+\tassert((alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+\t\tassert(stats_chunks.curchunks >= (size / chunksize));')]
===========================================
===========================================
Total add: 11
Total del: 18
Header: chunk_dealloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+\t\tassert(stats_chunks.curchunks >= (size / chunksize));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+\t\tassert(stats_chunks.curchunks >= (size / chunksize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(chunksize >= PAGE_SIZE);'), (3, 1, u'+\tassert(chunksize >= PAGE);')]
===========================================
===========================================
Total add: 18
Total del: 21
Header: chunk_boot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(chunksize >= PAGE_SIZE);'), (3, 1, u'+\tassert(chunksize >= PAGE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(chunksize >= PAGE_SIZE);'), (3, 1, u'+\tassert(chunksize >= PAGE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_dss);'), (6, 1, u'+\tassert(size > 0 && (size & chunksize_mask) == 0);'), (7, 1, u'+\tassert(alignment > 0 && (alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: chunk_alloc_dss
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_dss);'), (6, 1, u'+\tassert(size > 0 && (size & chunksize_mask) == 0);'), (7, 1, u'+\tassert(alignment > 0 && (alignment & chunksize_mask) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_dss);'), (6, 1, u'+\tassert(size > 0 && (size & chunksize_mask) == 0);'), (7, 1, u'+\tassert(alignment > 0 && (alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: chunk_in_dss
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size != 0);')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: pages_map
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+\tassert(alignment != 0);'), (32, 1, u'+\tassert((alignment & chunksize_mask) == 0);'), (69, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
Total add: 16
Total del: 47
Header: chunk_alloc_mmap_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+\tassert(alignment != 0);'), (32, 1, u'+\tassert((alignment & chunksize_mask) == 0);'), (69, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+\tassert(alignment != 0);'), (32, 1, u'+\tassert((alignment & chunksize_mask) == 0);'), (69, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: ckh_isearch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_count
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_insert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_search
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (9, 2, u'-\tassert(hash1 != NULL);'), (10, 2, u'-\tassert(hash2 != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 23
Header: ckh_search
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (9, 2, u'-\tassert(hash1 != NULL);'), (10, 2, u'-\tassert(hash2 != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (9, 2, u'-\tassert(hash1 != NULL);'), (10, 2, u'-\tassert(hash2 != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (15, 2, u'-\tassert(hash1 != NULL);'), (16, 2, u'-\tassert(hash2 != NULL);'), (32, 2, u'-\t\tassert(SIZEOF_PTR == 8);')]
===========================================
===========================================
Total add: 3
Total del: 28
Header: ckh_string_keycomp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (15, 2, u'-\tassert(hash1 != NULL);'), (16, 2, u'-\tassert(hash2 != NULL);'), (32, 2, u'-\t\tassert(SIZEOF_PTR == 8);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (15, 2, u'-\tassert(hash1 != NULL);'), (16, 2, u'-\tassert(hash2 != NULL);'), (32, 2, u'-\t\tassert(SIZEOF_PTR == 8);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(narenas_auto == narenas_total_get());')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: ctl_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(narenas_auto == narenas_total_get());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(narenas_auto == narenas_total_get());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(node->named);'), (3, 2, u'-\t\tassert(node->u.named.nchildren > 0);'), (6, 1, u'+\t\tassert(node);'), (7, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: ctl_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(node->named);'), (3, 2, u'-\t\tassert(node->u.named.nchildren > 0);'), (6, 1, u'+\t\tassert(node);'), (7, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(node->named);'), (3, 2, u'-\t\tassert(node->u.named.nchildren > 0);'), (6, 1, u'+\t\tassert(node);'), (7, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tassert(node);'), (4, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Total add: 10
Total del: 8
Header: ctl_bymib
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tassert(node);'), (4, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tassert(node);'), (4, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(arena == arenas[newind]);')]
===========================================
===========================================
Total add: 17
Total del: 6
Header: thread_arena_ctl
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(arena == arenas[newind]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(arena == arenas[newind]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\tassert(arena < narenas);')]
===========================================
===========================================
Total add: 31
Total del: 22
Header: arenas_purge_ctl
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\tassert(arena < narenas);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\tassert(arena < narenas);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 2, u'-\tassert(alignment >= chunksize);'), (64, 2, u'-\tassert((offset & chunksize_mask) == 0);'), (65, 2, u'-\tassert(offset < alloc_size);'), (81, 2, u'-\t\t    assert(trailsize < alloc_size);')]
===========================================
===========================================
Total add: 7
Total del: 92
Header: huge_malloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 2, u'-\tassert(alignment >= chunksize);'), (64, 2, u'-\tassert((offset & chunksize_mask) == 0);'), (65, 2, u'-\tassert(offset < alloc_size);'), (81, 2, u'-\t\t    assert(trailsize < alloc_size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 2, u'-\tassert(alignment >= chunksize);'), (64, 2, u'-\tassert((offset & chunksize_mask) == 0);'), (65, 2, u'-\tassert(offset < alloc_size);'), (81, 2, u'-\t\t    assert(trailsize < alloc_size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
Total add: 47
Total del: 6
Header: choose_arena_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert(opt_zero == false);')]
===========================================
===========================================
Total add: 16
Total del: 0
Header: malloc_conf_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert(opt_zero == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert(opt_zero == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tassert(result != -1);'), (16, 2, u'-\t\tassert(((result - 1) & result) == 0);')]
===========================================
===========================================
Total add: 4
Total del: 21
Header: malloc_init_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tassert(result != -1);'), (16, 2, u'-\t\tassert(((result - 1) & result) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tassert(result != -1);'), (16, 2, u'-\t\tassert(((result - 1) & result) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\t\tassert(usize == isalloc(ret));'), (20, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Total add: 7
Total del: 14
Header: OOM:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\t\tassert(usize == isalloc(ret));'), (20, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\t\tassert(usize == isalloc(ret));'), (20, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tassert(min_alignment != 0);')]
===========================================
===========================================
Total add: 14
Total del: 17
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tassert(min_alignment != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tassert(min_alignment != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(usize == isalloc(result));'), (9, 1, u'+\t\tassert(usize == isalloc(result, config_prof));')]
===========================================
===========================================
Total add: 30
Total del: 9
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(usize == isalloc(result));'), (9, 1, u'+\t\tassert(usize == isalloc(result, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(usize == isalloc(result));'), (9, 1, u'+\t\tassert(usize == isalloc(result, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Total add: 7
Total del: 10
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 1, u'+\t\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 25
Total del: 45
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 1, u'+\t\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 1, u'+\t\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (10, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 22
Total del: 12
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (10, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (10, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Total add: 10
Total del: 11
Header: OOM:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (17, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 14
Total del: 20
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (17, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (17, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (9, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 7
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (9, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (9, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize,')]
===========================================
===========================================
Total add: 19
Total del: 8
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+\t\t\tassert(usize_promoted != 0);'), (80, 2, u'-\tassert(usize == isalloc(p));'), (84, 1, u'+\t\tassert(usize == isalloc(p, config_prof));')]
===========================================
===========================================
Total add: 43
Total del: 38
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+\t\t\tassert(usize_promoted != 0);'), (80, 2, u'-\tassert(usize == isalloc(p));'), (84, 1, u'+\t\tassert(usize == isalloc(p, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+\t\t\tassert(usize_promoted != 0);'), (80, 2, u'-\tassert(usize == isalloc(p));'), (84, 1, u'+\t\tassert(usize == isalloc(p, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 18
Total del: 3
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (9, 2, u'-\tassert(ptr != NULL);'), (15, 1, u'+\t\tassert(ptr != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 7
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (9, 2, u'-\tassert(ptr != NULL);'), (15, 1, u'+\t\tassert(ptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (9, 2, u'-\tassert(ptr != NULL);'), (15, 1, u'+\t\tassert(ptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (17, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 24
Total del: 19
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (17, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (17, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(malloc_initialized);'), (47, 1, u'+\tassert(malloc_initialized);')]
===========================================
===========================================
Total add: 39
Total del: 12
Header: jemalloc_prefork
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(malloc_initialized);'), (47, 1, u'+\tassert(malloc_initialized);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(malloc_initialized);'), (47, 1, u'+\tassert(malloc_initialized);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: bt_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: bt_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: bt_dup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (11, 1, u'+\tassert(prof_tdata->enq == false);')]
===========================================
===========================================
Total add: 5
Total del: 4
Header: bt_dup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (11, 1, u'+\tassert(prof_tdata->enq == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (11, 1, u'+\tassert(prof_tdata->enq == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (13, 1, u'+\tassert(prof_tdata->enq);')]
===========================================
===========================================
Total add: 8
Total del: 7
Header: prof_leave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (13, 1, u'+\tassert(prof_tdata->enq);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (13, 1, u'+\tassert(prof_tdata->enq);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: prof_backtrace
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (4, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: prof_backtrace
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (4, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (4, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 5
Total del: 6
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(opt_lg_prof_tcmax < 0 ||'), (5, 1, u'+\t\t\tassert(ckh_count(&prof_tdata->bt2cnt) < PROF_TCMAX);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(opt_lg_prof_tcmax < 0 ||'), (5, 1, u'+\t\t\tassert(ckh_count(&prof_tdata->bt2cnt) < PROF_TCMAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(opt_lg_prof_tcmax < 0 ||'), (5, 1, u'+\t\t\tassert(ckh_count(&prof_tdata->bt2cnt) < PROF_TCMAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_flush
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_write
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: prof_ctx_sum
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);')]
===========================================
===========================================
Total add: 10
Total del: 8
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Total add: 11
Total del: 8
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: prof_ctx_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (20, 1, u'+\t\tassert(ctx->cnt_summed.curobjs == 0);')]
===========================================
===========================================
Total add: 13
Total del: 3
Header: prof_ctx_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (20, 1, u'+\t\tassert(ctx->cnt_summed.curobjs == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (20, 1, u'+\t\tassert(ctx->cnt_summed.curobjs == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 5
Total del: 25
Header: prof_dump_maps
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: prof_dump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 12
Total del: 56
Header: prof_dump_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_fdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: prof_idump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_mdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 8
Total del: 5
Header: prof_gdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (10, 2, u'-\tassert(hash1 != NULL);'), (11, 2, u'-\tassert(hash2 != NULL);'), (26, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 22
Header: prof_gdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (10, 2, u'-\tassert(hash1 != NULL);'), (11, 2, u'-\tassert(hash2 != NULL);'), (26, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(minbits <= 32 || (SIZEOF_PTR == 8 && minbits <= 64));'), (10, 2, u'-\tassert(hash1 != NULL);'), (11, 2, u'-\tassert(hash2 != NULL);'), (26, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_bt_keycomp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_tdata_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 20
Total del: 5
Header: prof_tdata_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_boot0
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_boot1
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: prof_boot2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(binind < nbins);'), (17, 1, u'+\tassert(binind < NBINS);'), (19, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Total add: 8
Total del: 12
Header: tcache_alloc_small_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(binind < nbins);'), (17, 1, u'+\tassert(binind < NBINS);'), (19, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(binind < nbins);'), (17, 1, u'+\tassert(binind < NBINS);'), (19, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
Total add: 6
Total del: 8
Header: tcache_bin_flush_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Total add: 22
Total del: 23
Header: tcache_bin_flush_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(60, 2, u'-\t\tassert(tcache != (void *)(uintptr_t)1);'), (61, 1, u'+\t\tassert(tcache != TCACHE_STATE_PURGATORY);')]
===========================================
===========================================
Total add: 27
Total del: 24
Header: tcache_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(60, 2, u'-\t\tassert(tcache != (void *)(uintptr_t)1);'), (61, 1, u'+\t\tassert(tcache != TCACHE_STATE_PURGATORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(60, 2, u'-\t\tassert(tcache != (void *)(uintptr_t)1);'), (61, 1, u'+\t\tassert(tcache != TCACHE_STATE_PURGATORY);')]
===========================================
Class: class go_inconspicuous_mine_car : public GameObjectScript { 
Class: class npc_dirty_larry : public CreatureScript { 
Class: class spell_gen_orc_disguise : public SpellScriptLoader { 
Class:         class spell_gen_orc_disguise_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);'), (12, 1, u'+    ASSERT(GetOwner()->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before'), (3, 1, u'+            ASSERT(msg == EQUIP_ERR_OK); /// Already checked before')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::RefundItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before'), (3, 1, u'+            ASSERT(msg == EQUIP_ERR_OK); /// Already checked before')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before'), (3, 1, u'+            ASSERT(msg == EQUIP_ERR_OK); /// Already checked before')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(length == SHA_DIGEST_LENGTH)'), (3, 1, u'+    ASSERT(length == SHA_DIGEST_LENGTH);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: HmacHash::Finalize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(length == SHA_DIGEST_LENGTH)'), (3, 1, u'+    ASSERT(length == SHA_DIGEST_LENGTH);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(length == SHA_DIGEST_LENGTH)'), (3, 1, u'+    ASSERT(length == SHA_DIGEST_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+void Assert(char const *file, int line, char const *function, char const *message)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    WPAssert(updateMask && updateMask->GetCount() == m_valuesCount);'), (3, 1, u'+    ASSERT(updateMask && updateMask->GetCount() == m_valuesCount);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::_BuildValuesUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    WPAssert(updateMask && updateMask->GetCount() == m_valuesCount);'), (3, 1, u'+    ASSERT(updateMask && updateMask->GetCount() == m_valuesCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    WPAssert(updateMask && updateMask->GetCount() == m_valuesCount);'), (3, 1, u'+    ASSERT(updateMask && updateMask->GetCount() == m_valuesCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))  // SMSG_CLIENT_CONTROL'), (3, 1, u'+        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE));  // SMSG_CLIENT_CONTROL')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: VehicleJoinEvent::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))  // SMSG_CLIENT_CONTROL'), (3, 1, u'+        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE));  // SMSG_CLIENT_CONTROL')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))  // SMSG_CLIENT_CONTROL'), (3, 1, u'+        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE));  // SMSG_CLIENT_CONTROL')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-    ASSERT(owner->GetTypeId() == TYPEID_PLAYER);'), (20, 1, u'+    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Total add: 9
Total del: 7
Header: Guardian::InitSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-    ASSERT(owner->GetTypeId() == TYPEID_PLAYER);'), (20, 1, u'+    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-    ASSERT(owner->GetTypeId() == TYPEID_PLAYER);'), (20, 1, u'+    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Pet::Pet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player != NULL)'), (3, 1, u'+    ASSERT(player != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Item::RemoveFromUpdateQueueOf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player != NULL)'), (3, 1, u'+    ASSERT(player != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player != NULL)'), (3, 1, u'+    ASSERT(player != NULL);')]
===========================================
Class: class npc_generic_harpoon_cannon : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(Target->GetBase()->HasAuraTypeWithCaster(SPELL_AURA_CONTROL_VEHICLE, Passenger->GetGUID()));')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: VehicleJoinEvent::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(Target->GetBase()->HasAuraTypeWithCaster(SPELL_AURA_CONTROL_VEHICLE, Passenger->GetGUID()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(Target->GetBase()->HasAuraTypeWithCaster(SPELL_AURA_CONTROL_VEHICLE, Passenger->GetGUID()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(Target->GetBase()->IsInWorld());'), (3, 1, u'+    ASSERT(Target && Target->GetBase()->IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: VehicleJoinEvent::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(Target->GetBase()->IsInWorld());'), (3, 1, u'+    ASSERT(Target && Target->GetBase()->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(Target->GetBase()->IsInWorld());'), (3, 1, u'+    ASSERT(Target && Target->GetBase()->IsInWorld());')]
===========================================
Class: class deserter_commandscript : public CommandScript { 
Class: class npc_frostbrood_skytalon : public CreatureScript { 
Class: class spell_q13291_q13292_q13239_q13261_frostbrood_skytalon_grab_decoy : public SpellScriptLoader { 
Class:         class spell_q13291_q13292_q13239_q13261_frostbrood_skytalon_grab_decoy_SpellScript : public SpellScript         {         
Class: class spell_q13291_q13292_q13239_q13261_armored_decoy_summon_skytalon : public SpellScriptLoader { 
Class:         class spell_q13291_q13292_q13239_q13261_armored_decoy_summon_skytalon_SpellScript : public SpellScript         {         
Class:class isPlayerOnVehicleChecker class IsCreatureVehicleCheck         isPlayerOnVehicleChecker(Unit* source) : _source(source) { }         isPlayerOnVehicleChecker(Unit* source) : _source(source) 
Class: class CheckUnitAura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        ASSERT(displayInfo);'), (17, 1, u'+        ASSERT(modelData);'), (27, 1, u'+        ASSERT(displayInfo);'), (29, 1, u'+        ASSERT(modelData);')]
===========================================
===========================================
Total add: 33
Total del: 0
Header: Player::SendMovementSetFeatherFall
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        ASSERT(displayInfo);'), (17, 1, u'+        ASSERT(modelData);'), (27, 1, u'+        ASSERT(displayInfo);'), (29, 1, u'+        ASSERT(modelData);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        ASSERT(displayInfo);'), (17, 1, u'+        ASSERT(modelData);'), (27, 1, u'+        ASSERT(displayInfo);'), (29, 1, u'+        ASSERT(modelData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (10, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (16, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, false));'), (22, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (28, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (29, 1, u'+    ASSERT(offset < 4);'), (35, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (36, 1, u'+    ASSERT(offset < 2);')]
===========================================
===========================================
Total add: 38
Total del: 0
Header: Object::DestroyForPlayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (10, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (16, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, false));'), (22, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (28, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (29, 1, u'+    ASSERT(offset < 4);'), (35, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (36, 1, u'+    ASSERT(offset < 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (10, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (16, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, false));'), (22, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (28, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (29, 1, u'+    ASSERT(offset < 4);'), (35, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, false));'), (36, 1, u'+    ASSERT(offset < 2);')]
===========================================
Class:class IsPlayerOnHoverDiskCheck class IsPlayerOnHoverDisk         IsPlayerOnHoverDiskCheck(Unit* source, bool isOnHoverDisk) : _source(source), _isOnHoverDisk(isOnHoverDisk) { }         IsPlayerOnHoverDiskCheck(Unit* source, bool isOnHoverDisk) : _source(source), _isOnHoverDisk(isOnHoverDisk) 
Class:class CheckUnitAura { 
Class:class VehicleCheckPredicate class VehicleCheckPredicate
Class:class spell_malygos_vortex_dummy : public SpellScriptLoader { 
Class:     class spell_malygos_vortex_dummy_SpellScript : public SpellScript     {     
Class: class spell_malygos_vortex_visual : public SpellScriptLoader { 
Class:class npc_portal_eoe: public CreatureScript { 
Class: class npc_portal_eoe: public CreatureScript { 
Class:class npc_hover_disk : public CreatureScript class npc_melee_hover_disk : public CreatureScript     npc_hover_disk() : CreatureScript() { }     npc_hover_disk() : CreatureScript() 
Class:   class npc_arcane_overload : public CreatureScript { 
Class:class npc_caster_hover_disk : public CreatureScript class npc_caster_hover_disk : public CreatureScript
Class:  class npc_wyrmrest_skytalon : public CreatureScript { 
Class: class npc_alexstrasza_eoe : public CreatureScript { 
Class:class npc_nexus_lord : public CreatureScript class npc_nexus_lord : public CreatureScript
Class: class npc_scion_of_eternity : public CreatureScript { 
Class: class npc_arcane_overload : public CreatureScript { 
Class:  class npc_wyrmrest_skytalon : public CreatureScript { 
Class:   class npc_static_field : public CreatureScript { 
Class: class spell_malygos_portal_beam : public SpellScriptLoader { 
Class:         class spell_malygos_portal_beam_AuraScript : public AuraScript         {         
Class: class spell_malygos_random_portal : public SpellScriptLoader { 
Class:         class spell_malygos_random_portal_SpellScript : public SpellScript         {         
Class: class isPlayerOnVehicleChecker { 
Class: class spell_malygos_arcane_storm : public SpellScriptLoader { 
Class:         class spell_malygos_arcane_storm_SpellScript : public SpellScript         {         
Class: class spell_malygos_vortex_dummy : public SpellScriptLoader { 
Class:     class spell_malygos_vortex_dummy_SpellScript : public SpellScript     {     
Class: class spell_malygos_vortex_visual : public SpellScriptLoader { 
Class:         class spell_malygos_vortex_visual_AuraScript : public AuraScript         {         
Class: class ExactDistanceCheck { 
Class: class spell_arcane_overload : public SpellScriptLoader { 
Class:         class spell_arcane_overload_SpellScript : public SpellScript         {         
Class: class spell_nexus_lord_align_disk_aggro : public SpellScriptLoader { 
Class:         class spell_nexus_lord_align_disk_aggro_SpellScript : public SpellScript         {         
Class: class IsPlayerOnHoverDiskCheck { 
Class: class spell_scion_of_eternity_arcane_barrage : public SpellScriptLoader { 
Class:         class spell_scion_of_eternity_arcane_barrage_SpellScript : public SpellScript         {         
Class: class spell_malygos_destroy_platform_channel : public SpellScriptLoader { 
Class:         class spell_malygos_destroy_platform_channel_AuraScript : public AuraScript         {         
Class: class spell_alexstrasza_bunny_destroy_platform_boom_visual : public SpellScriptLoader { 
Class:         class spell_alexstrasza_bunny_destroy_platform_boom_visual_SpellScript : public SpellScript         {         
Class: class spell_alexstrasza_bunny_destroy_platform_event : public SpellScriptLoader { 
Class:         class spell_alexstrasza_bunny_destroy_platform_event_SpellScript : public SpellScript         {         
Class: class spell_wyrmrest_skytalon_summon_red_dragon_buddy : public SpellScriptLoader { 
Class:         class spell_wyrmrest_skytalon_summon_red_dragon_buddy_SpellScript : public SpellScript         {         
Class: class spell_wyrmrest_skytalon_ride_red_dragon_buddy_trigger : public SpellScriptLoader { 
Class:         class spell_wyrmrest_skytalon_ride_red_dragon_buddy_trigger_SpellScript : public SpellScript         {         
Class: class spell_malygos_surge_of_power_warning_selector_25 : public SpellScriptLoader { 
Class:         class spell_malygos_surge_of_power_warning_selector_25_SpellScript : public SpellScript         {         
Class: class spell_malygos_surge_of_power_25 : public SpellScriptLoader { 
Class:         class spell_malygos_surge_of_power_25_SpellScript : public SpellScript         {         
Class: class spell_alexstrasza_gift_beam : public SpellScriptLoader { 
Class:         class spell_alexstrasza_gift_beam_AuraScript : public AuraScript         {         
Class: class spell_alexstrasza_gift_beam_visual : public SpellScriptLoader { 
Class:         class spell_alexstrasza_gift_beam_visual_AuraScript : public AuraScript         {         
Class: class AreaTrigger_at_frostgrips_hollow : public AreaTriggerScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT((GetTypeId() == TYPEID_GAMEOBJECT || GetTypeId() == TYPEID_UNIT) && "Only GOs and creatures can summon npc groups!");')]
===========================================
===========================================
Total add: 19
Total del: 0
Header: WorldObject::SummonTrigger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT((GetTypeId() == TYPEID_GAMEOBJECT || GetTypeId() == TYPEID_UNIT) && "Only GOs and creatures can summon npc groups!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT((GetTypeId() == TYPEID_GAMEOBJECT || GetTypeId() == TYPEID_UNIT) && "Only GOs and creatures can summon npc groups!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(_pendingJoinEvents.back() == e);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Vehicle::CancelJoinEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(_pendingJoinEvents.back() == e);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(_pendingJoinEvents.back() == e);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(passenger->GetTypeId() == TYPEID_UNIT);'), (28, 1, u'+    ASSERT(accessory);')]
===========================================
===========================================
Total add: 25
Total del: 29
Header: Vehicle::InstallAccessory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(passenger->GetTypeId() == TYPEID_UNIT);'), (28, 1, u'+    ASSERT(accessory);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(passenger->GetTypeId() == TYPEID_UNIT);'), (28, 1, u'+    ASSERT(accessory);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+            ASSERT(passenger);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+            ASSERT(passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+            ASSERT(passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    ASSERT(Passenger->GetVehicle() == Target);'), (21, 1, u'+    ASSERT(Passenger->IsInWorld());'), (22, 1, u'+    ASSERT(Target->GetBase()->IsInWorld());')]
===========================================
===========================================
Total add: 18
Total del: 2
Header: Vehicle::CancelJoinEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    ASSERT(Passenger->GetVehicle() == Target);'), (21, 1, u'+    ASSERT(Passenger->IsInWorld());'), (22, 1, u'+    ASSERT(Target->GetBase()->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    ASSERT(Passenger->GetVehicle() == Target);'), (21, 1, u'+    ASSERT(Passenger->IsInWorld());'), (22, 1, u'+    ASSERT(Target->GetBase()->IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))'), (3, 1, u'+        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))  // SMSG_CLIENT_CONTROL')]
===========================================
===========================================
Total add: 24
Total del: 23
Header: VehicleJoinEvent::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))'), (3, 1, u'+        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))  // SMSG_CLIENT_CONTROL')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))'), (3, 1, u'+        ASSERT(Target->GetBase()->SetCharmedBy(Passenger, CHARM_TYPE_VEHICLE))  // SMSG_CLIENT_CONTROL')]
===========================================
Class:class spell_sindragosa_frost_breath : public SpellScriptLoader { 
Class:         class spell_sindragosa_frost_breath_SpellScript : public SpellScript         {         
Class: class spell_item_shadows_fate : public SpellScriptLoader { 
Class:         class spell_item_shadows_fate_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        ASSERT(_usableSeatNum);'), (33, 2, u'-        ASSERT(_me->SetCharmedBy(unit, CHARM_TYPE_VEHICLE))')]
===========================================
===========================================
Total add: 0
Total del: 59
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        ASSERT(_usableSeatNum);'), (33, 2, u'-        ASSERT(_me->SetCharmedBy(unit, CHARM_TYPE_VEHICLE))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        ASSERT(_usableSeatNum);'), (33, 2, u'-        ASSERT(_me->SetCharmedBy(unit, CHARM_TYPE_VEHICLE))')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(entry);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: MapManager::CreateBaseMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(entry);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(entry);')]
===========================================
Class: class achievement_flirt_with_disaster_perf_check : public AchievementCriteriaScript { 
Class:class spell_gen_luck_of_the_draw : public SpellScriptLoader { 
Class:         class spell_gen_luck_of_the_draw_AuraScript : public AuraScript         {         
Class: class rbac_commandscript : public CommandScript { 
Class: class spell_gen_aura_service_uniform : public SpellScriptLoader { 
Class:         class spell_gen_aura_service_uniform_AuraScript : public AuraScript         {         
Class: class boss_epoch : public CreatureScript { 
Class: class boss_epoch : public CreatureScript { 
Class: class boss_infinite_corruptor : public CreatureScript { 
Class: class boss_infinite_corruptor : public CreatureScript { 
Class: class boss_salramm : public CreatureScript { 
Class: class boss_salramm : public CreatureScript { 
Class: class BoneSpikeTargetSelector : public std::unary_function<Unit*, bool> { 
Class:class spell_marrowgar_bone_slice : public SpellScriptLoader { 
Class:         class spell_marrowgar_bone_slice_SpellScript : public SpellScript         {         
Class:class MistressKissTargetSelector { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (s);'), (3, 1, u'+    ASSERT(s);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: World::AddSession_
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (s);'), (3, 1, u'+    ASSERT(s);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (s);'), (3, 1, u'+    ASSERT(s);')]
===========================================
Class: class spell_blood_queen_essence_of_the_blood_queen : public SpellScriptLoader { 
Class:         class spell_blood_queen_essence_of_the_blood_queen_AuraScript : public AuraScript         {         
Class:class spell_the_lich_king_dark_hunger : public SpellScriptLoader { 
Class:         class spell_the_lich_king_dark_hunger_AuraScript : public AuraScript         {         
Class: class spell_dk_blood_gorged : public SpellScriptLoader { 
Class:         class spell_dk_blood_gorged_AuraScript : public AuraScript         {         
Class: class spell_dru_living_seed : public SpellScriptLoader { 
Class:         class spell_dru_living_seed_AuraScript : public AuraScript         {         
Class:  class spell_dru_living_seed_proc : public SpellScriptLoader { 
Class:         class spell_dru_living_seed_proc_AuraScript : public AuraScript         {         
Class: class spell_gen_adaptive_warding : public SpellScriptLoader { 
Class:         class spell_gen_adaptive_warding_AuraScript : public AuraScript         {         
Class: class spell_gen_obsidian_armor : public SpellScriptLoader { 
Class:         class spell_gen_obsidian_armor_AuraScript : public AuraScript         {         
Class: class spell_hun_ascpect_of_the_viper : public SpellScriptLoader { 
Class:         class spell_hun_ascpect_of_the_viper_AuraScript : public AuraScript         {         
Class: class spell_item_blessing_of_ancient_kings : public SpellScriptLoader { 
Class:         class spell_item_blessing_of_ancient_kings_AuraScript : public AuraScript         {         
Class: class spell_item_necrotic_touch : public SpellScriptLoader { 
Class:         class spell_item_necrotic_touch_AuraScript : public AuraScript         {         
Class: class spell_item_shadows_fate : public SpellScriptLoader { 
Class:         class spell_item_shadows_fate_AuraScript : public AuraScript         {         
Class:  class spell_item_shadowmourne : public SpellScriptLoader { 
Class:         class spell_item_shadowmourne_AuraScript : public AuraScript         {         
Class:  class spell_item_shadowmourne_soul_fragment : public SpellScriptLoader { 
Class:         class spell_item_shadowmourne_soul_fragment_AuraScript : public AuraScript         {         
Class: class spell_item_shadowmourne : public SpellScriptLoader { 
Class:     class spell_item_shadowmourne_AuraScript : public AuraScript     {     
Class: class spell_mage_burnout : public SpellScriptLoader { 
Class:         class spell_mage_burnout_AuraScript : public AuraScript         {         
Class: class spell_mage_focus_magic : public SpellScriptLoader { 
Class:         class spell_mage_focus_magic_AuraScript : public AuraScript         {         
Class: class spell_mage_ignite : public SpellScriptLoader { 
Class:         class spell_mage_ignite_AuraScript : public AuraScript         {         
Class: class spell_mage_master_of_elements : public SpellScriptLoader { 
Class:         class spell_mage_master_of_elements_AuraScript : public AuraScript         {         
Class: class spell_pal_eye_for_an_eye : public SpellScriptLoader { 
Class:         class spell_pal_eye_for_an_eye_AuraScript : public AuraScript         {         
Class: class spell_pal_seal_of_righteousness : public SpellScriptLoader { 
Class:         class spell_pal_seal_of_righteousness_AuraScript : public AuraScript         {         
Class:  class spell_pri_divine_aegis : public SpellScriptLoader { 
Class:         class spell_pri_divine_aegis_AuraScript : public AuraScript         {         
Class:  class spell_pri_glyph_of_prayer_of_healing : public SpellScriptLoader { 
Class:         class spell_pri_glyph_of_prayer_of_healing_AuraScript : public AuraScript         {         
Class: class spell_pri_mana_leech : public SpellScriptLoader { 
Class:         class spell_pri_mana_leech_AuraScript : public AuraScript         {         
Class:  class spell_rog_blade_flurry : public SpellScriptLoader { 
Class:         class spell_rog_blade_flurry_AuraScript : public AuraScript         {         
Class: class spell_rog_tricks_of_the_trade : public SpellScriptLoader { 
Class:         class spell_rog_tricks_of_the_trade_AuraScript : public AuraScript         {         
Class:  class spell_rog_tricks_of_the_trade_proc : public SpellScriptLoader { 
Class:         class spell_rog_tricks_of_the_trade_proc_AuraScript : public AuraScript         {         
Class: class spell_sha_earth_shield : public SpellScriptLoader { 
Class:         class spell_sha_earth_shield_AuraScript : public AuraScript         {         
Class: class spell_warl_fel_synergy : public SpellScriptLoader { 
Class:         class spell_warl_fel_synergy_AuraScript : public AuraScript         {         
Class: class spell_warl_siphon_life : public SpellScriptLoader { 
Class:         class spell_warl_siphon_life_AuraScript : public AuraScript         {         
Class: class spell_warr_damage_shield : public SpellScriptLoader { 
Class:         class spell_warr_damage_shield_AuraScript : public AuraScript         {         
Class: class spell_warr_sweeping_strikes : public SpellScriptLoader { 
Class:         class spell_warr_sweeping_strikes_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    #define ASSERT(x)')]
===========================================
Class: class npc_zulian_prowler : public CreatureScript { 
Class: class spell_dk_icebound_fortitude : public SpellScriptLoader { 
Class:         class spell_dk_icebound_fortitude_AuraScript : public AuraScript         {         
Class: class spell_dk_rune_tap_party : public SpellScriptLoader { 
Class:         class spell_dk_rune_tap_party_SpellScript : public SpellScript         {         
Class: class spell_dk_vampiric_blood : public SpellScriptLoader { 
Class:         class spell_dk_vampiric_blood_AuraScript : public AuraScript         {         
Class: class spell_dru_dash : public SpellScriptLoader { 
Class:         class spell_dru_dash_AuraScript : public AuraScript         {         
Class:  class spell_dru_idol_lifebloom : public SpellScriptLoader { 
Class:         class spell_dru_idol_lifebloom_AuraScript : public AuraScript         {         
Class:  class spell_dru_innervate : public SpellScriptLoader { 
Class:         class spell_dru_innervate_AuraScript : public AuraScript         {         
Class: class spell_dru_owlkin_frenzy : public SpellScriptLoader { 
Class:         class spell_dru_owlkin_frenzy_AuraScript : public AuraScript         {         
Class: class spell_dru_rip : public SpellScriptLoader { 
Class:         class spell_dru_rip_AuraScript : public AuraScript         {         
Class: class spell_dru_typhoon : public SpellScriptLoader { 
Class:         class spell_dru_typhoon_SpellScript : public SpellScript         {         
Class: class spell_gen_create_lance : public SpellScriptLoader { 
Class:         class spell_gen_create_lance_SpellScript : public SpellScript         {         
Class: class spell_gen_netherbloom : public SpellScriptLoader { 
Class:         class spell_gen_netherbloom_SpellScript : public SpellScript         {         
Class: class spell_gen_nightmare_vine : public SpellScriptLoader { 
Class:         class spell_gen_nightmare_vine_SpellScript : public SpellScript         {         
Class: class spell_winter_veil_px_238_winter_wondervolt : public SpellScriptLoader { 
Class:         class spell_winter_veil_px_238_winter_wondervolt_SpellScript : public SpellScript         {         
Class: class spell_item_arcane_shroud : public SpellScriptLoader { 
Class:         class spell_item_arcane_shroud_AuraScript : public AuraScript         {         
Class: class spell_item_defibrillate : public SpellScriptLoader { 
Class:         class spell_item_defibrillate_SpellScript : public SpellScript         {         
Class: class spell_item_piccolo_of_the_flaming_fire : public SpellScriptLoader { 
Class:         class spell_item_piccolo_of_the_flaming_fire_SpellScript : public SpellScript         {         
Class: class spell_item_scroll_of_recall : public SpellScriptLoader { 
Class:         class spell_item_scroll_of_recall_SpellScript : public SpellScript         {         
Class: class spell_item_the_eye_of_diminution : public SpellScriptLoader { 
Class:         class spell_item_the_eye_of_diminution_AuraScript : public AuraScript         {         
Class: class spell_mage_incanters_absorbtion_base_AuraScript : public AuraScript { 
Class: class spell_mage_frost_warding_trigger : public SpellScriptLoader   class spell_mage_fire_frost_ward : public SpellScriptLoader         spell_mage_frost_warding_trigger() : SpellScriptLoader() { }         spell_mage_frost_warding_trigger() : SpellScriptLoader() 
Class:class spell_mage_incanters_absorbtion_base_AuraScript : public AuraScript  class spell_mage_ice_barrier : public SpellScriptLoader         spell_mage_ice_barrier() : SpellScriptLoader() { }         spell_mage_ice_barrier() : SpellScriptLoader() 
Class:  class spell_mage_incanters_absorbtion_absorb : public SpellScriptLoader { 
Class:        class spell_mage_incanters_absorbtion_absorb_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript         class spell_mage_incanters_absorbtion_absorb_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript
Class: class spell_mage_incanters_absorbtion_manashield : public SpellScriptLoader { 
Class:         class spell_mage_incanters_absorbtion_manashield_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript         {         
Class: class spell_mage_mana_shield : public SpellScriptLoader { 
Class:         class spell_mage_mana_shield_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript         {         
Class: class spell_pal_hand_of_salvation : public SpellScriptLoader { 
Class:         class spell_pal_hand_of_salvation_AuraScript : public AuraScript         {         
Class: class spell_pal_sacred_shield : public SpellScriptLoader { 
Class:         class spell_pal_sacred_shield_AuraScript : public AuraScript         {         
Class: class spell_pri_lightwell_renew : public SpellScriptLoader { 
Class:         class spell_pri_lightwell_renew_AuraScript : public AuraScript         {         
Class: class spell_pri_prayer_of_mending_heal : public SpellScriptLoader  class spell_pri_power_word_shield : public SpellScriptLoader         spell_pri_prayer_of_mending_heal() : SpellScriptLoader() { }         spell_pri_prayer_of_mending_heal() : SpellScriptLoader() 
Class: class spell_pri_reflective_shield_trigger : public SpellScriptLoader  class spell_pri_prayer_of_mending_heal : public SpellScriptLoader         spell_pri_reflective_shield_trigger() : SpellScriptLoader() { }         spell_pri_reflective_shield_trigger() : SpellScriptLoader() 
Class: class spell_rog_rupture : public SpellScriptLoader { 
Class:         class spell_rog_rupture_AuraScript : public AuraScript         {         
Class: class spell_sha_thunderstorm : public SpellScriptLoader { 
Class:         class spell_sha_thunderstorm_SpellScript : public SpellScript         {         
Class: class spell_warl_shadow_ward : public SpellScriptLoader { 
Class:         class spell_warl_shadow_ward_AuraScript : public AuraScript         {         
Class: class spell_warr_intimidating_shout : public SpellScriptLoader { 
Class:         class spell_warr_intimidating_shout_SpellScript : public SpellScript         {         
Class: class spell_warr_rend : public SpellScriptLoader { 
Class:         class spell_warr_rend_AuraScript : public AuraScript         {         
Class:  class spell_warr_shattering_throw : public SpellScriptLoader { 
Class:         class spell_warr_shattering_throw_SpellScript : public SpellScript         {         
Class: class spell_warr_vigilance_trigger : public SpellScriptLoader { 
Class:         class spell_warr_vigilance_trigger_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_RecvWPct == NULL);'), (3, 1, u'+    ACE_ASSERT(m_RecvWPct == NULL);'), (5, 2, u'-    ACE_ASSERT (m_Header.length() == sizeof(ClientPktHeader));'), (6, 1, u'+    ACE_ASSERT(m_Header.length() == sizeof(ClientPktHeader));')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: WorldSocket::handle_input_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_RecvWPct == NULL);'), (3, 1, u'+    ACE_ASSERT(m_RecvWPct == NULL);'), (5, 2, u'-    ACE_ASSERT (m_Header.length() == sizeof(ClientPktHeader));'), (6, 1, u'+    ACE_ASSERT(m_Header.length() == sizeof(ClientPktHeader));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_RecvWPct == NULL);'), (3, 1, u'+    ACE_ASSERT(m_RecvWPct == NULL);'), (5, 2, u'-    ACE_ASSERT (m_Header.length() == sizeof(ClientPktHeader));'), (6, 1, u'+    ACE_ASSERT(m_Header.length() == sizeof(ClientPktHeader));')]
===========================================
Class:class spell_threatening_gaze : public SpellScriptLoader { 
Class:         class spell_threatening_gaze_AuraScript : public AuraScript         {         
Class: class npc_vics_flying_machine : public CreatureScript { 
Class: class mob_vilebranch_speaker : public CreatureScript { 
Class:class boss_hakkar : public CreatureScript  enum Events { 
Class:class boss_thekal : public CreatureScript  enum Phases { 
Class: class spell_zuldrak_rat : public SpellScriptLoader { 
Class:         class spell_zuldrak_rat_SpellScript : public SpellScript         {         
Class: class spell_q12527_zuldrak_rat : public SpellScriptLoader { 
Class:         class spell_q12527_zuldrak_rat_SpellScript : public SpellScript         {         
Class: class spell_zuldrak_rat : public SpellScriptLoader { 
Class:         class spell_zuldrak_rat_SpellScript : public SpellScript         {         
Class: class go_altar_of_the_keepers : public GameObjectScript { 
Class:class boss_gahzranka : public CreatureScript class boss_gahzranka : public CreatureScript      public:         boss_gahzranka() : CreatureScript() { }         boss_gahzranka() : CreatureScript() 
Class:class boss_grilek : public CreatureScript class boss_grilek : public CreatureScript      public:         boss_grilek() : CreatureScript() { }         boss_grilek() : CreatureScript() 
Class:class boss_hakkar : public CreatureScript class boss_hakkar : public CreatureScript      public:          boss_hakkar()             : CreatureScript()         {         
Class:class boss_hazzarah : public CreatureScript { 
Class:class boss_mandokir : public CreatureScript class boss_mandokir : public CreatureScript      public:     public: boss_mandokir() : CreatureScript() {}     public: boss_mandokir() : CreatureScript() 
Class:class boss_thekal : public CreatureScript class boss_thekal : public CreatureScript      public:     public: boss_thekal() : CreatureScript() {}     public: boss_thekal() : CreatureScript() 
Class:class boss_wushoolay : public CreatureScript { 
Class:        class spell_sha_ancestral_awakening_proc_SpellScript : public SpellScript         class spell_sha_ancestral_awakening_proc_SpellScript : public SpellScript
Class: class spell_sha_fire_nova : public SpellScriptLoader  class spell_sha_bloodlust : public SpellScriptLoader         spell_sha_fire_nova() : SpellScriptLoader() { }         spell_sha_fire_nova() : SpellScriptLoader() 
Class:  class spell_sha_chain_heal : public SpellScriptLoader { 
Class:         class spell_sha_chain_heal_SpellScript : public SpellScript         {         
Class: class spell_sha_mana_tide_totem : public SpellScriptLoader  class spell_sha_cleansing_totem_pulse : public SpellScriptLoader         spell_sha_mana_tide_totem() : SpellScriptLoader() { }         spell_sha_mana_tide_totem() : SpellScriptLoader() 
Class:class spell_sha_bloodlust : public SpellScriptLoader  class spell_sha_fire_nova : public SpellScriptLoader         spell_sha_bloodlust() : SpellScriptLoader() { }         spell_sha_bloodlust() : SpellScriptLoader() 
Class: class spell_sha_heroism : public SpellScriptLoader { 
Class:         class spell_sha_heroism_SpellScript : public SpellScript         {         
Class: class spell_sha_ancestral_awakening_proc : public SpellScriptLoader { 
Class:         class spell_sha_ancestral_awakening_proc_SpellScript : public SpellScript         {         
Class: class spell_sha_cleansing_totem_pulse : public SpellScriptLoader  class spell_sha_flame_shock : public SpellScriptLoader         spell_sha_cleansing_totem_pulse() : SpellScriptLoader() { }         spell_sha_cleansing_totem_pulse() : SpellScriptLoader() 
Class: class spell_sha_mana_spring_totem : public SpellScriptLoader  class spell_sha_heroism : public SpellScriptLoader         spell_sha_mana_spring_totem() : SpellScriptLoader() { }         spell_sha_mana_spring_totem() : SpellScriptLoader() 
Class: class spell_sha_chain_heal : public SpellScriptLoader  class spell_sha_mana_spring_totem : public SpellScriptLoader         spell_sha_chain_heal() : SpellScriptLoader() { }         spell_sha_chain_heal() : SpellScriptLoader() 
Class:class spell_sha_flame_shock : public SpellScriptLoader  class spell_sha_mana_tide_totem : public SpellScriptLoader         spell_sha_flame_shock() : SpellScriptLoader() { }         spell_sha_flame_shock() : SpellScriptLoader() 
Class:     class spell_warl_banish_SpellScript : public SpellScript     {     
Class: class spell_warl_everlasting_affliction : public SpellScriptLoader  class spell_warl_curse_of_doom : public SpellScriptLoader         spell_warl_everlasting_affliction() : SpellScriptLoader() { }         spell_warl_everlasting_affliction() : SpellScriptLoader() 
Class: class spell_warl_ritual_of_doom_effect : public SpellScriptLoader  class spell_warl_demonic_circle_summon : public SpellScriptLoader public:     spell_warl_ritual_of_doom_effect() : SpellScriptLoader() { }     spell_warl_ritual_of_doom_effect() : SpellScriptLoader() 
Class:         class spell_warl_demonic_circle_summon_AuraScript : public AuraScript         {         
Class:    class spell_warl_ritual_of_doom_effect_SpellScript : public SpellScript     {     
Class:        class spell_warl_demonic_circle_teleport_AuraScript : public AuraScript         class spell_warl_demonic_circle_teleport_AuraScript : public AuraScript
Class:class spell_warl_seed_of_corruption : public SpellScriptLoader  class spell_warl_demonic_empowerment : public SpellScriptLoader         spell_warl_seed_of_corruption() : SpellScriptLoader() { }         spell_warl_seed_of_corruption() : SpellScriptLoader() 
Class:         class spell_warl_everlasting_affliction_SpellScript : public SpellScript         {         
Class:class spell_warl_soulshatter : public SpellScriptLoader  class spell_warl_haunt : public SpellScriptLoader         spell_warl_soulshatter() : SpellScriptLoader() { }         spell_warl_soulshatter() : SpellScriptLoader() 
Class:         class spell_warl_haunt_AuraScript : public AuraScript         {         
Class:         class spell_warl_health_funnel_AuraScript : public AuraScript         {         
Class:class spell_warl_demonic_circle_summon : public SpellScriptLoader  class spell_warl_ritual_of_doom_effect : public SpellScriptLoader         spell_warl_demonic_circle_summon() : SpellScriptLoader() { }         spell_warl_demonic_circle_summon() : SpellScriptLoader() 
Class:class spell_warl_demonic_circle_teleport : public SpellScriptLoader  class spell_warl_seed_of_corruption : public SpellScriptLoader         spell_warl_demonic_circle_teleport() : SpellScriptLoader() { }         spell_warl_demonic_circle_teleport() : SpellScriptLoader() 
Class:class spell_warl_haunt : public SpellScriptLoader  class spell_warl_soulshatter : public SpellScriptLoader         spell_warl_haunt() : SpellScriptLoader() { }         spell_warl_haunt() : SpellScriptLoader() 
Class:         class spell_warl_haunt_SpellScript : public SpellScript         {         
Class:class spell_warl_curse_of_doom : public SpellScriptLoader { 
Class:         class spell_warl_curse_of_doom_AuraScript : public AuraScript         {         
Class: class spell_warl_health_funnel : public SpellScriptLoader { 
Class:     class spell_warl_health_funnel_AuraScript : public AuraScript     {     
Class: class boss_mechano_lord_capacitus : public CreatureScript { 
Class:class instance_mechanar : public InstanceMapScript static DoorData const doorData[] =     public: instance_mechanar(): InstanceMapScript(, 554) { }     public: instance_mechanar(): InstanceMapScript(, 554) 
Class:class instance_mechanar : public InstanceMapScript { 
Class:class Boss_Gatewatcher_Gyrokill : public CreatureScript class boss_gatewatcher_gyrokill : public CreatureScript     public: Boss_Gatewatcher_Gyrokill() : CreatureScript() { }     public: Boss_Gatewatcher_Gyrokill() : CreatureScript() 
Class: class Boss_Gatewatcher_Gyrokill : public CreatureScript { 
Class:class boss_pathaleon_the_calculator : public CreatureScript { 
Class:  class spell_mage_polymorph_cast_visual : public SpellScriptLoader { 
Class:         class spell_mage_polymorph_cast_visual_SpellScript : public SpellScript         {         
Class: class spell_mage_summon_water_elemental : public SpellScriptLoader { 
Class:         class spell_mage_summon_water_elemental_SpellScript : public SpellScript         {         
Class:         class spell_mage_incanters_absorbtion_absorb_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript         {         
Class:    class spell_mage_incanters_absorbtion_absorb_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript     {     
Class:    class spell_mage_incanters_absorbtion_manashield_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript     {     
Class:        class spell_mage_incanters_absorbtion_manashield_AuraScript : public spell_mage_incanters_absorbtion_base_AuraScript         {         
Class:   class spell_mage_polymorph_cast_visual : public SpellScriptLoader { 
Class:         class spell_mage_polymorph_cast_visual_SpellScript : public SpellScript         {         
Class:  class spell_mage_summon_water_elemental : public SpellScriptLoader { 
Class:         class spell_mage_summon_water_elemental_SpellScript : public SpellScript         {         
Class: class spell_pal_guarded_by_the_light : public SpellScriptLoader { 
Class:         class spell_pal_guarded_by_the_light_SpellScript : public SpellScript         {         
Class: class spell_pal_holy_shock : public SpellScriptLoader  class spell_pal_divine_sacrifice : public SpellScriptLoader         spell_pal_holy_shock() : SpellScriptLoader() { }         spell_pal_holy_shock() : SpellScriptLoader() 
Class:class spell_pal_judgement_of_command : public SpellScriptLoader { 
Class:         class spell_pal_judgement_of_command_SpellScript : public SpellScript         {         
Class:class spell_pal_lay_on_hands : public SpellScriptLoader  class spell_pal_exorcism_and_holy_wrath_damage : public SpellScriptLoader         spell_pal_lay_on_hands() : SpellScriptLoader() { }         spell_pal_lay_on_hands() : SpellScriptLoader() 
Class:  class spell_pal_guarded_by_the_light : public SpellScriptLoader { 
Class:         class spell_pal_guarded_by_the_light_SpellScript : public SpellScript         {         
Class:  class spell_pal_hand_of_sacrifice : public SpellScriptLoader { 
Class:         class spell_pal_hand_of_sacrifice_AuraScript : public AuraScript         {         
Class:class spell_pal_righteous_defense : public SpellScriptLoader  class spell_pal_holy_shock : public SpellScriptLoader         spell_pal_righteous_defense() : SpellScriptLoader() { }         spell_pal_righteous_defense() : SpellScriptLoader() 
Class:class spell_pal_exorcism_and_holy_wrath_damage : public SpellScriptLoader  class spell_pal_judgement_of_command : public SpellScriptLoader         spell_pal_exorcism_and_holy_wrath_damage() : SpellScriptLoader() { }         spell_pal_exorcism_and_holy_wrath_damage() : SpellScriptLoader() 
Class:class spell_pal_hand_of_sacrifice : public SpellScriptLoader  class spell_pal_lay_on_hands : public SpellScriptLoader         spell_pal_hand_of_sacrifice() : SpellScriptLoader() { }         spell_pal_hand_of_sacrifice() : SpellScriptLoader() 
Class:class spell_pal_divine_sacrifice : public SpellScriptLoader  class spell_pal_righteous_defense : public SpellScriptLoader         spell_pal_divine_sacrifice() : SpellScriptLoader() { }         spell_pal_divine_sacrifice() : SpellScriptLoader() 
Class:  class spell_warr_bloodthirst : public SpellScriptLoader         spell_warr_last_stand() : SpellScriptLoader() { }         spell_warr_last_stand() : SpellScriptLoader() 
Class:class spell_warr_improved_spell_reflection : public SpellScriptLoader  class spell_warr_bloodthirst_heal : public SpellScriptLoader         spell_warr_improved_spell_reflection() : SpellScriptLoader() { }         spell_warr_improved_spell_reflection() : SpellScriptLoader() 
Class:class spell_warr_vigilance : public SpellScriptLoader { 
Class:        class spell_warr_charge_SpellScript : public SpellScript         {         
Class:    class spell_warr_vigilance_AuraScript : public AuraScript     {     
Class:         class spell_warr_concussion_blow_SpellScript : public SpellScript         {         
Class: class spell_warr_charge : public SpellScriptLoader  class spell_warr_execute : public SpellScriptLoader         spell_warr_charge() : SpellScriptLoader() { }         spell_warr_charge() : SpellScriptLoader() 
Class: class spell_warr_slam : public SpellScriptLoader  class spell_warr_improved_spell_reflection : public SpellScriptLoader         spell_warr_slam() : SpellScriptLoader() { }         spell_warr_slam() : SpellScriptLoader() 
Class: class spell_warr_execute : public SpellScriptLoader  class spell_warr_last_stand : public SpellScriptLoader         spell_warr_execute() : SpellScriptLoader() { }         spell_warr_execute() : SpellScriptLoader() 
Class:class spell_warr_concussion_blow : public SpellScriptLoader  class spell_warr_overpower : public SpellScriptLoader         spell_warr_concussion_blow() : SpellScriptLoader() { }         spell_warr_concussion_blow() : SpellScriptLoader() 
Class: class spell_warr_bloodthirst : public SpellScriptLoader  class spell_warr_slam : public SpellScriptLoader         spell_warr_bloodthirst() : SpellScriptLoader() { }         spell_warr_bloodthirst() : SpellScriptLoader() 
Class: class spell_warr_bloodthirst_heal : public SpellScriptLoader  class spell_warr_vigilance : public SpellScriptLoader         spell_warr_bloodthirst_heal() : SpellScriptLoader() { }         spell_warr_bloodthirst_heal() : SpellScriptLoader() 
Class: class spell_warr_overpower : public SpellScriptLoader { 
Class:    class spell_warr_overpower_SpellScript : public SpellScript     {     
Class: class spell_rog_shadowstep : public SpellScriptLoader { 
Class:         class spell_rog_shadowstep_SpellScript : public SpellScript         {         
Class: class npc_hive_zara_larva : public CreatureScript { 
Class:  class spell_dk_blood_boil : public SpellScriptLoader { 
Class:         class spell_dk_blood_boil_SpellScript : public SpellScript         {         
Class: class spell_dk_ghoul_explode : public SpellScriptLoader  class spell_dk_death_coil : public SpellScriptLoader         spell_dk_ghoul_explode() : SpellScriptLoader() { }         spell_dk_ghoul_explode() : SpellScriptLoader() 
Class: class spell_dk_death_grip : public SpellScriptLoader { 
Class:         class spell_dk_death_grip_SpellScript : public SpellScript         {         
Class: class spell_dk_scourge_strike : public SpellScriptLoader  class spell_dk_death_strike : public SpellScriptLoader         spell_dk_scourge_strike() : SpellScriptLoader() { }         spell_dk_scourge_strike() : SpellScriptLoader() 
Class: class spell_dk_spell_deflection : public SpellScriptLoader  class spell_dk_ghoul_explode : public SpellScriptLoader         spell_dk_spell_deflection() : SpellScriptLoader() { }         spell_dk_spell_deflection() : SpellScriptLoader() 
Class: class spell_dk_blood_boil : public SpellScriptLoader  class spell_dk_improved_blood_presence : public SpellScriptLoader         spell_dk_blood_boil() : SpellScriptLoader() { }         spell_dk_blood_boil() : SpellScriptLoader() 
Class: class spell_dk_will_of_the_necropolis : public SpellScriptLoader  class spell_dk_improved_unholy_presence : public SpellScriptLoader         spell_dk_will_of_the_necropolis() : SpellScriptLoader() { }         spell_dk_will_of_the_necropolis() : SpellScriptLoader() 
Class: class spell_dk_improved_blood_presence : public SpellScriptLoader  class spell_dk_scourge_strike : public SpellScriptLoader public:     spell_dk_improved_blood_presence() : SpellScriptLoader() { }     spell_dk_improved_blood_presence() : SpellScriptLoader() 
Class:     class spell_dk_improved_blood_presence_AuraScript : public AuraScript     {     
Class:  class spell_dk_improved_unholy_presence : public SpellScriptLoader { 
Class:     class spell_dk_improved_unholy_presence_AuraScript : public AuraScript     {     
Class: class spell_dk_death_strike : public SpellScriptLoader { 
Class:         class spell_dk_death_strike_SpellScript : public SpellScript         {         
Class: class spell_dk_death_coil : public SpellScriptLoader  class spell_dk_spell_deflection : public SpellScriptLoader         spell_dk_death_coil() : SpellScriptLoader() { }         spell_dk_death_coil() : SpellScriptLoader() 
Class:class spell_dk_death_grip : public SpellScriptLoader  class spell_dk_will_of_the_necropolis : public SpellScriptLoader         spell_dk_death_grip() : SpellScriptLoader() { }         spell_dk_death_grip() : SpellScriptLoader() 
Class:  class spell_hun_disengage : public SpellScriptLoader { 
Class:         class spell_hun_disengage_SpellScript : public SpellScript         {         
Class:class spell_hun_readiness : public SpellScriptLoader  class spell_hun_misdirection : public SpellScriptLoader         spell_hun_readiness() : SpellScriptLoader() { }         spell_hun_readiness() : SpellScriptLoader() 
Class: class spell_hun_scatter_shot : public SpellScriptLoader  class spell_hun_misdirection_proc : public SpellScriptLoader         spell_hun_scatter_shot() : SpellScriptLoader() { }         spell_hun_scatter_shot() : SpellScriptLoader() 
Class: class spell_hun_sniper_training : public SpellScriptLoader  class spell_hun_pet_carrion_feeder : public SpellScriptLoader         spell_hun_sniper_training() : SpellScriptLoader() { }         spell_hun_sniper_training() : SpellScriptLoader() 
Class:class spell_hun_pet_carrion_feeder : public SpellScriptLoader  class spell_hun_readiness : public SpellScriptLoader         spell_hun_pet_carrion_feeder() : SpellScriptLoader() { }         spell_hun_pet_carrion_feeder() : SpellScriptLoader() 
Class: class spell_hun_misdirection : public SpellScriptLoader  class spell_hun_scatter_shot : public SpellScriptLoader         spell_hun_misdirection() : SpellScriptLoader() { }         spell_hun_misdirection() : SpellScriptLoader() 
Class: class spell_hun_misdirection_proc : public SpellScriptLoader  class spell_hun_sniper_training : public SpellScriptLoader         spell_hun_misdirection_proc() : SpellScriptLoader() { }         spell_hun_misdirection_proc() : SpellScriptLoader() 
Class:class spell_hun_disengage : public SpellScriptLoader { 
Class:         class spell_hun_disengage_SpellScript : public SpellScript         {         
Class: class spell_pri_reflective_shield_trigger : public SpellScriptLoader  class spell_pri_prayer_of_mending_heal : public SpellScriptLoader         spell_pri_reflective_shield_trigger() : SpellScriptLoader() { }         spell_pri_reflective_shield_trigger() : SpellScriptLoader() 
Class: class spell_pri_prayer_of_mending_heal : public SpellScriptLoader { 
Class:     class spell_pri_prayer_of_mending_heal_SpellScript : public SpellScript     {     
Class:class spell_pri_vampiric_touch : public SpellScriptLoader  class spell_pri_reflective_shield_trigger : public SpellScriptLoader         spell_pri_vampiric_touch() : SpellScriptLoader() { }         spell_pri_vampiric_touch() : SpellScriptLoader() 
Class: class spell_pri_vampiric_touch : public SpellScriptLoader { 
Class:         class spell_pri_vampiric_touch_AuraScript : public AuraScript         {         
Class:  class spell_rog_deadly_poison : public SpellScriptLoader { 
Class:         class spell_rog_deadly_poison_SpellScript : public SpellScript         {         
Class:     class spell_rog_prey_on_the_weak_AuraScript : public AuraScript     {     
Class: class spell_rog_shiv : public SpellScriptLoader { 
Class:class spell_rog_deadly_poison : public SpellScriptLoader  class spell_rog_shadowstep : public SpellScriptLoader         spell_rog_deadly_poison() : SpellScriptLoader() { }         spell_rog_deadly_poison() : SpellScriptLoader() 
Class:class spell_rog_shadowstep : public SpellScriptLoader  class spell_rog_shiv : public SpellScriptLoader         spell_rog_shadowstep() : SpellScriptLoader() { }         spell_rog_shadowstep() : SpellScriptLoader() 
Class: class spell_shadow_portal : public SpellScriptLoader { 
Class: class spell_shadow_portal_rooms : public SpellScriptLoader { 
Class: class DialogueHelper { 
Class:  class npc_ranshalla : public CreatureScript { 
Class:  class go_elune_fire : public GameObjectScript { 
Class:class boss_doctor_theolen_krastinov : public CreatureScript enum Events public:     boss_doctor_theolen_krastinov() : CreatureScript() { }     boss_doctor_theolen_krastinov() : CreatureScript() 
Class:class boss_doctor_theolen_krastinov : public CreatureScript { 
Class:class boss_illucia_barov : public CreatureScript class boss_illucia_barov : public CreatureScript
Class:class boss_instructor_malicia : public CreatureScript { 
Class:class boss_lord_alexei_barov : public CreatureScript class boss_lord_alexei_barov : public CreatureScript
Class:class boss_lorekeeper_polkelt : public CreatureScript class boss_lorekeeper_polkelt : public CreatureScript
Class:class boss_the_ravenian : public CreatureScript class boss_the_ravenian : public CreatureScript
Class:class spell_banging_the_gong : public SpellScriptLoader { 
Class:         class spell_banging_the_gong_SpellScript : public SpellScript         {         
Class: class npc_harrison_jones : public CreatureScript { 
Class: class mob_crystal_handler : public CreatureScript class npc_crystal_channel_target : public CreatureScript     mob_crystal_handler() : CreatureScript() { }     mob_crystal_handler() : CreatureScript() 
Class:class mob_novos_minion : public CreatureScript class achievement_oh_novos : public AchievementCriteriaScript     mob_novos_minion() : CreatureScript() { }     mob_novos_minion() : CreatureScript() 
Class:class spell_summon_minions : public SpellScriptLoader { 
Class:class achievement_oh_novos : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(_status == STATUS_UNINSTALLING);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Vehicle::~Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(_status == STATUS_UNINSTALLING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(_status == STATUS_UNINSTALLING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(false);'), (11, 1, u'+        ASSERT(_me->SetCharmedBy(unit, CHARM_TYPE_VEHICLE))')]
===========================================
===========================================
Total add: 3
Total del: 7
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(false);'), (11, 1, u'+        ASSERT(_me->SetCharmedBy(unit, CHARM_TYPE_VEHICLE))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(false);'), (11, 1, u'+        ASSERT(_me->SetCharmedBy(unit, CHARM_TYPE_VEHICLE))')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(cInfo);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Player::KilledMonster
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(cInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(cInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: irand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: urand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: frand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(max >= min);'), (3, 1, u'+    ASSERT(max >= min);')]
===========================================
Class: class boss_kirtonos_the_herald : public CreatureScript { 
Class: class go_brazier_of_the_herald : public GameObjectScript { 
Class:  class boss_commander_stoutbeard : public CreatureScript { 
Class:  class boss_commander_stoutbeard : public CreatureScript { 
Class: class npc_professor_phizzlethorpe : public CreatureScript { 
Class:   class at_twilight_grove : public AreaTriggerScript { 
Class:  class npc_augustus_the_touched : public CreatureScript { 
Class:  class npc_second_trial_paladin : public CreatureScript { 
Class:  class npc_second_trial_controller : public CreatureScript { 
Class: class go_second_trial : public GameObjectScript { 
Class: class npc_infused_crystal : public CreatureScript { 
Class:  class npc_rathis_tomber : public CreatureScript { 
Class: class npc_ranger_lilatha : public CreatureScript { 
Class: class npc_00x09hl : public CreatureScript { 
Class: class npc_rinji : public CreatureScript { 
Class:  class npc_converted_sentry : public CreatureScript { 
Class: class npc_corporal_keeshan : public CreatureScript { 
Class: class npc_blood_knight_stillblade : public CreatureScript { 
Class: class npc_deathstalker_erland : public CreatureScript { 
Class: class npc_bartleby : public CreatureScript { 
Class: class npc_lord_gregor_lescovar : public CreatureScript { 
Class:  class npc_marzon_silent_blade : public CreatureScript { 
Class: class npc_tyrion_spybot : public CreatureScript { 
Class: class npc_tyrion : public CreatureScript { 
Class: class npc_galen_goodward : public CreatureScript { 
Class: class npc_calvin_montague : public CreatureScript { 
Class: class go_mausoleum_door : public GameObjectScript { 
Class: class go_mausoleum_trigger : public GameObjectScript { 
Class:  class npc_highborne_lamenter : public CreatureScript { 
Class:  class npc_the_scourge_cauldron : public CreatureScript { 
Class: class npc_andorhal_tower : public CreatureScript { 
Class: class npc_anchorite_truuen : public CreatureScript { 
Class: class npc_daphne_stilwell : public CreatureScript { 
Class: class npc_tapoke_slim_jahn : public CreatureScript { 
Class:  class npc_mikhail : public CreatureScript { 
Class: class npc_professor_phizzlethorpe : public CreatureScript { 
Class:   class at_twilight_grove : public AreaTriggerScript { 
Class:  class npc_augustus_the_touched : public CreatureScript { 
Class:  class npc_second_trial_paladin : public CreatureScript { 
Class:  class npc_second_trial_controller : public CreatureScript { 
Class: class go_second_trial : public GameObjectScript { 
Class: class npc_infused_crystal : public CreatureScript { 
Class:  class npc_rathis_tomber : public CreatureScript { 
Class: class npc_ranger_lilatha : public CreatureScript { 
Class: class npc_00x09hl : public CreatureScript { 
Class: class npc_rinji : public CreatureScript { 
Class:  class npc_converted_sentry : public CreatureScript { 
Class: class npc_corporal_keeshan : public CreatureScript { 
Class: class npc_blood_knight_stillblade : public CreatureScript { 
Class: class npc_deathstalker_erland : public CreatureScript { 
Class: class npc_bartleby : public CreatureScript { 
Class: class npc_lord_gregor_lescovar : public CreatureScript { 
Class:  class npc_marzon_silent_blade : public CreatureScript { 
Class: class npc_tyrion_spybot : public CreatureScript { 
Class: class npc_tyrion : public CreatureScript { 
Class: class npc_galen_goodward : public CreatureScript { 
Class: class npc_calvin_montague : public CreatureScript { 
Class: class go_mausoleum_door : public GameObjectScript { 
Class: class go_mausoleum_trigger : public GameObjectScript { 
Class:  class npc_highborne_lamenter : public CreatureScript { 
Class:  class npc_the_scourge_cauldron : public CreatureScript { 
Class: class npc_andorhal_tower : public CreatureScript { 
Class: class npc_anchorite_truuen : public CreatureScript { 
Class: class npc_daphne_stilwell : public CreatureScript { 
Class: class npc_tapoke_slim_jahn : public CreatureScript { 
Class:  class npc_mikhail : public CreatureScript { 
Class: class npc_torek : public CreatureScript { 
Class: class npc_ruul_snowhoof : public CreatureScript { 
Class: class npc_muglash : public CreatureScript { 
Class: class go_naga_brazier : public GameObjectScript { 
Class: class mob_rizzle_sprysprocket : public CreatureScript { 
Class: class mob_depth_charge : public CreatureScript { 
Class: class npc_draenei_survivor : public CreatureScript { 
Class:  class npc_injured_draenei : public CreatureScript { 
Class: class npc_magwin : public CreatureScript { 
Class: class npc_geezle : public CreatureScript { 
Class: class go_ravager_cage : public GameObjectScript { 
Class: class npc_death_ravager : public CreatureScript { 
Class: class npc_stillpine_capitive : public CreatureScript { 
Class: class go_bristlelimb_cage : public GameObjectScript { 
Class: class mob_webbed_creature : public CreatureScript { 
Class: class go_princess_stillpines_cage : public GameObjectScript { 
Class: class npc_princess_stillpine : public CreatureScript { 
Class:  class npc_kerlonian : public CreatureScript { 
Class: class npc_prospector_remtravel : public CreatureScript { 
Class: class npc_aged_dying_ancient_kodo : public CreatureScript { 
Class: class go_iruxos : public GameObjectScript { 
Class: class npc_dalinda : public CreatureScript { 
Class: class go_demon_portal : public GameObjectScript { 
Class: class npc_lazy_peon : public CreatureScript { 
Class: class npc_tiger_matriarch_credit : public CreatureScript { 
Class: class npc_tiger_matriarch : public CreatureScript { 
Class: class npc_troll_volunteer : public CreatureScript { 
Class: class spell_mount_check : public SpellScriptLoader { 
Class:         class spell_mount_check_AuraScript : public AuraScript         {         
Class: class spell_voljin_war_drums : public SpellScriptLoader { 
Class:         class spell_voljin_war_drums_SpellScript : public SpellScript         {         
Class:  class spell_voodoo : public SpellScriptLoader { 
Class:         class spell_voodoo_SpellScript : public SpellScript         {         
Class: class mobs_risen_husk_spirit : public CreatureScript { 
Class: class npc_nat_pagle : public CreatureScript { 
Class:  class npc_private_hendel : public CreatureScript { 
Class: class npc_zelfrax : public CreatureScript { 
Class: class npc_stinky : public CreatureScript { 
Class: class spell_ooze_zap : public SpellScriptLoader { 
Class:         class spell_ooze_zap_SpellScript : public SpellScript         {         
Class: class spell_ooze_zap_channel_end : public SpellScriptLoader { 
Class:         class spell_ooze_zap_channel_end_SpellScript : public SpellScript         {         
Class: class spell_energize_aoe : public SpellScriptLoader { 
Class:         class spell_energize_aoe_SpellScript : public SpellScript         {         
Class: class go_blackhoof_cage : public GameObjectScript { 
Class: class npcs_riverbreeze_and_silversky : public CreatureScript { 
Class: class npc_oox22fe : public CreatureScript { 
Class:  class npc_screecher_spirit : public CreatureScript { 
Class: class spell_gordunni_trap : public SpellScriptLoader { 
Class:         class spell_gordunni_trap_SpellScript : public SpellScript         {         
Class: class npc_clintar_spirit : public CreatureScript { 
Class: class npc_omen : public CreatureScript { 
Class: class npc_giant_spotlight : public CreatureScript { 
Class: class npc_kyle_frenzied : public CreatureScript { 
Class: class npc_plains_vision : public CreatureScript { 
Class: class npc_shenthul : public CreatureScript { 
Class: class npcs_rutgar_and_frankal : public CreatureScript { 
Class:class npc_anachronos_the_ancient : public CreatureScript { 
Class:  class mob_qiraj_war_spawn : public CreatureScript { 
Class:  class npc_anachronos_quest_trigger : public CreatureScript { 
Class:  class go_crystalline_tear : public GameObjectScript { 
Class: class npc_kaya_flathoof : public CreatureScript { 
Class: class mob_aquementas : public CreatureScript { 
Class: class npc_custodian_of_time : public CreatureScript { 
Class:  class npc_marin_noggenfogger : public CreatureScript { 
Class: class npc_OOX17 : public CreatureScript { 
Class: class npc_tooga : public CreatureScript { 
Class: class npc_mist : public CreatureScript { 
Class: class npc_beaten_corpse : public CreatureScript { 
Class: class npc_gilthares : public CreatureScript { 
Class: class npc_taskmaster_fizzule : public CreatureScript { 
Class: class npc_twiggy_flathead : public CreatureScript { 
Class: class npc_wizzlecrank_shredder : public CreatureScript { 
Class: class npc_kanati : public CreatureScript { 
Class: class npc_lakota_windsong : public CreatureScript { 
Class: class npc_paoka_swiftmountain : public CreatureScript { 
Class: class npc_plucky : public CreatureScript { 
Class: class go_panther_cage : public GameObjectScript { 
Class: class npc_enraged_panther : public CreatureScript { 
Class: class npc_ame : public CreatureScript { 
Class: class npc_ringo : public CreatureScript { 
Class: class npc_torek : public CreatureScript { 
Class: class npc_ruul_snowhoof : public CreatureScript { 
Class: class npc_muglash : public CreatureScript { 
Class: class go_naga_brazier : public GameObjectScript { 
Class: class mob_rizzle_sprysprocket : public CreatureScript { 
Class: class mob_depth_charge : public CreatureScript { 
Class: class npc_draenei_survivor : public CreatureScript { 
Class:  class npc_injured_draenei : public CreatureScript { 
Class: class npc_magwin : public CreatureScript { 
Class: class npc_geezle : public CreatureScript { 
Class: class go_ravager_cage : public GameObjectScript { 
Class: class npc_death_ravager : public CreatureScript { 
Class: class npc_stillpine_capitive : public CreatureScript { 
Class: class go_bristlelimb_cage : public GameObjectScript { 
Class: class mob_webbed_creature : public CreatureScript { 
Class: class go_princess_stillpines_cage : public GameObjectScript { 
Class: class npc_princess_stillpine : public CreatureScript { 
Class:  class npc_kerlonian : public CreatureScript { 
Class: class npc_prospector_remtravel : public CreatureScript { 
Class: class npc_aged_dying_ancient_kodo : public CreatureScript { 
Class: class go_iruxos : public GameObjectScript { 
Class: class npc_dalinda : public CreatureScript { 
Class: class go_demon_portal : public GameObjectScript { 
Class: class npc_lazy_peon : public CreatureScript { 
Class: class npc_tiger_matriarch_credit : public CreatureScript { 
Class: class npc_tiger_matriarch : public CreatureScript { 
Class: class npc_troll_volunteer : public CreatureScript { 
Class: class spell_mount_check : public SpellScriptLoader { 
Class:         class spell_mount_check_AuraScript : public AuraScript         {         
Class: class spell_voljin_war_drums : public SpellScriptLoader { 
Class:         class spell_voljin_war_drums_SpellScript : public SpellScript         {         
Class:  class spell_voodoo : public SpellScriptLoader { 
Class:         class spell_voodoo_SpellScript : public SpellScript         {         
Class: class mobs_risen_husk_spirit : public CreatureScript { 
Class: class npc_nat_pagle : public CreatureScript { 
Class:  class npc_private_hendel : public CreatureScript { 
Class: class npc_zelfrax : public CreatureScript { 
Class: class npc_stinky : public CreatureScript { 
Class: class spell_ooze_zap : public SpellScriptLoader { 
Class:         class spell_ooze_zap_SpellScript : public SpellScript         {         
Class: class spell_ooze_zap_channel_end : public SpellScriptLoader { 
Class:         class spell_ooze_zap_channel_end_SpellScript : public SpellScript         {         
Class: class spell_energize_aoe : public SpellScriptLoader { 
Class:         class spell_energize_aoe_SpellScript : public SpellScript         {         
Class: class go_blackhoof_cage : public GameObjectScript { 
Class: class npcs_riverbreeze_and_silversky : public CreatureScript { 
Class: class npc_oox22fe : public CreatureScript { 
Class:  class npc_screecher_spirit : public CreatureScript { 
Class: class spell_gordunni_trap : public SpellScriptLoader { 
Class:         class spell_gordunni_trap_SpellScript : public SpellScript         {         
Class: class npc_clintar_spirit : public CreatureScript { 
Class: class npc_omen : public CreatureScript { 
Class: class npc_giant_spotlight : public CreatureScript { 
Class: class npc_kyle_frenzied : public CreatureScript { 
Class: class npc_plains_vision : public CreatureScript { 
Class: class npc_shenthul : public CreatureScript { 
Class: class npcs_rutgar_and_frankal : public CreatureScript { 
Class:class npc_anachronos_the_ancient : public CreatureScript { 
Class:  class mob_qiraj_war_spawn : public CreatureScript { 
Class:  class npc_anachronos_quest_trigger : public CreatureScript { 
Class:  class go_crystalline_tear : public GameObjectScript { 
Class: class npc_kaya_flathoof : public CreatureScript { 
Class: class mob_aquementas : public CreatureScript { 
Class: class npc_custodian_of_time : public CreatureScript { 
Class:  class npc_marin_noggenfogger : public CreatureScript { 
Class: class npc_OOX17 : public CreatureScript { 
Class: class npc_tooga : public CreatureScript { 
Class: class npc_mist : public CreatureScript { 
Class: class npc_beaten_corpse : public CreatureScript { 
Class: class npc_gilthares : public CreatureScript { 
Class: class npc_taskmaster_fizzule : public CreatureScript { 
Class: class npc_twiggy_flathead : public CreatureScript { 
Class: class npc_wizzlecrank_shredder : public CreatureScript { 
Class: class npc_kanati : public CreatureScript { 
Class: class npc_lakota_windsong : public CreatureScript { 
Class: class npc_paoka_swiftmountain : public CreatureScript { 
Class: class npc_plucky : public CreatureScript { 
Class: class go_panther_cage : public GameObjectScript { 
Class: class npc_enraged_panther : public CreatureScript { 
Class: class npc_ame : public CreatureScript { 
Class: class npc_ringo : public CreatureScript { 
Class: class npc_sinkhole_kill_credit : public CreatureScript { 
Class:  class npc_khunok_the_behemoth : public CreatureScript { 
Class: class npc_corastrasza : public CreatureScript { 
Class: class npc_iruk : public CreatureScript { 
Class: class mob_nerubar_victim : public CreatureScript { 
Class: class npc_jenny : public CreatureScript { 
Class:  class npc_fezzix_geartwist : public CreatureScript { 
Class: class npc_nesingwary_trapper : public CreatureScript { 
Class: class npc_lurgglbr : public CreatureScript { 
Class: class npc_nexus_drake_hatchling : public CreatureScript { 
Class:  class npc_image_lich_king : public CreatureScript { 
Class:  class npc_general_arlos : public CreatureScript { 
Class: class npc_counselor_talbot : public CreatureScript { 
Class:  class npc_leryssa : public CreatureScript { 
Class: class npc_beryl_sorcerer : public CreatureScript { 
Class: class npc_imprisoned_beryl_sorcerer : public CreatureScript { 
Class: class npc_mootoo_the_younger : public CreatureScript { 
Class: class npc_bonker_togglevolt : public CreatureScript { 
Class: class npc_trapped_mammoth_calf : public CreatureScript { 
Class: class npc_magmoth_crusher : public CreatureScript { 
Class: class npc_valiance_keep_cannoneer : public CreatureScript { 
Class: class npc_warmage_coldarra : public CreatureScript { 
Class: class npc_hidden_cultist : public CreatureScript { 
Class: class npc_warmage_violetstand : public CreatureScript { 
Class: class npc_mageguard_dalaran : public CreatureScript { 
Class: class spell_q12096_q12092_dummy : public SpellScriptLoader  { 
Class:     class spell_q12096_q12092_dummy_SpellScript : public SpellScript     {     
Class: class spell_q12096_q12092_bark : public SpellScriptLoader  { 
Class:     class spell_q12096_q12092_bark_SpellScript : public SpellScript     {     
Class:  class npc_emily : public CreatureScript { 
Class:  class npc_mrfloppy : public CreatureScript { 
Class: class npc_outhouse_bunny : public CreatureScript { 
Class: class npc_tallhorn_stag : public CreatureScript { 
Class: class npc_amberpine_woodsman : public CreatureScript { 
Class: class npc_wounded_skirmisher : public CreatureScript { 
Class: class npc_lightning_sentry : public CreatureScript { 
Class: class npc_venture_co_straggler : public CreatureScript { 
Class: class npc_apothecary_hanes : public CreatureScript { 
Class: class npc_plaguehound_tracker : public CreatureScript { 
Class: class npc_razael_and_lyana : public CreatureScript { 
Class: class npc_mcgoyver : public CreatureScript { 
Class: class npc_daegarn : public CreatureScript { 
Class: class npc_arete : public CreatureScript { 
Class: class npc_argent_valiant : public CreatureScript { 
Class: class npc_guardian_pavilion : public CreatureScript { 
Class: class npc_vereth_the_cunning : public CreatureScript { 
Class: class npc_tournament_training_dummy : public CreatureScript { 
Class: class npc_blessed_banner : public CreatureScript { 
Class: class npc_injured_rainspeaker_oracle : public CreatureScript { 
Class: class npc_vekjik : public CreatureScript { 
Class: class npc_avatar_of_freya : public CreatureScript { 
Class:  class npc_bushwhacker : public CreatureScript { 
Class: class npc_engineer_helice : public CreatureScript { 
Class: class npc_jungle_punch_target : public CreatureScript { 
Class: class npc_adventurous_dwarf : public CreatureScript { 
Class: class spell_q12620_the_lifewarden_wrath : public SpellScriptLoader { 
Class:     class spell_q12620_the_lifewarden_wrath_SpellScript : public SpellScript     {     
Class: class spell_q12589_shoot_rjr : public SpellScriptLoader { 
Class:     class spell_q12589_shoot_rjr_SpellScript : public SpellScript     {     
Class: class npc_haiphoon : public CreatureScript { 
Class: class npc_agnetta_tyrsdottar : public CreatureScript { 
Class: class npc_frostborn_scout : public CreatureScript { 
Class: class npc_brunnhildar_prisoner : public CreatureScript { 
Class:  class npc_freed_protodrake : public CreatureScript { 
Class: class npc_icefang : public CreatureScript { 
Class: class npc_hyldsmeet_protodrake : public CreatureScript { 
Class:         class npc_hyldsmeet_protodrakeAI : public CreatureAI         {         
Class: class spell_close_rift : public SpellScriptLoader { 
Class:         class spell_close_rift_AuraScript : public AuraScript         {         
Class: class npc_wg_demolisher_engineer : public CreatureScript { 
Class: class npc_wg_spirit_guide : public CreatureScript { 
Class: class npc_wg_queue : public CreatureScript { 
Class: class go_wg_vehicle_teleporter : public GameObjectScript { 
Class: class npc_wg_quest_giver : public CreatureScript { 
Class: class spell_wintergrasp_force_building : public SpellScriptLoader { 
Class:         class spell_wintergrasp_force_building_SpellScript : public SpellScript         {         
Class: class spell_wintergrasp_grab_passenger : public SpellScriptLoader { 
Class:         class spell_wintergrasp_grab_passenger_SpellScript : public SpellScript         {         
Class: class achievement_wg_didnt_stand_a_chance : public AchievementCriteriaScript { 
Class: class spell_wintergrasp_defender_teleport : public SpellScriptLoader { 
Class:     class spell_wintergrasp_defender_teleport_SpellScript : public SpellScript     {     
Class: class spell_wintergrasp_defender_teleport_trigger : public SpellScriptLoader { 
Class:     class spell_wintergrasp_defender_teleport_trigger_SpellScript : public SpellScript     {     
Class: class npc_sinkhole_kill_credit : public CreatureScript { 
Class:  class npc_khunok_the_behemoth : public CreatureScript { 
Class: class npc_corastrasza : public CreatureScript { 
Class: class npc_iruk : public CreatureScript { 
Class: class mob_nerubar_victim : public CreatureScript { 
Class: class npc_jenny : public CreatureScript { 
Class:  class npc_fezzix_geartwist : public CreatureScript { 
Class: class npc_nesingwary_trapper : public CreatureScript { 
Class: class npc_lurgglbr : public CreatureScript { 
Class: class npc_nexus_drake_hatchling : public CreatureScript { 
Class:  class npc_image_lich_king : public CreatureScript { 
Class:  class npc_general_arlos : public CreatureScript { 
Class: class npc_counselor_talbot : public CreatureScript { 
Class:  class npc_leryssa : public CreatureScript { 
Class: class npc_beryl_sorcerer : public CreatureScript { 
Class: class npc_imprisoned_beryl_sorcerer : public CreatureScript { 
Class: class npc_mootoo_the_younger : public CreatureScript { 
Class: class npc_bonker_togglevolt : public CreatureScript { 
Class: class npc_trapped_mammoth_calf : public CreatureScript { 
Class: class npc_magmoth_crusher : public CreatureScript { 
Class: class npc_valiance_keep_cannoneer : public CreatureScript { 
Class: class npc_warmage_coldarra : public CreatureScript { 
Class: class npc_hidden_cultist : public CreatureScript { 
Class: class npc_warmage_violetstand : public CreatureScript { 
Class: class npc_mageguard_dalaran : public CreatureScript { 
Class: class spell_q12096_q12092_dummy : public SpellScriptLoader  { 
Class:     class spell_q12096_q12092_dummy_SpellScript : public SpellScript     {     
Class: class spell_q12096_q12092_bark : public SpellScriptLoader  { 
Class:     class spell_q12096_q12092_bark_SpellScript : public SpellScript     {     
Class:  class npc_emily : public CreatureScript { 
Class:  class npc_mrfloppy : public CreatureScript { 
Class: class npc_outhouse_bunny : public CreatureScript { 
Class: class npc_tallhorn_stag : public CreatureScript { 
Class: class npc_amberpine_woodsman : public CreatureScript { 
Class: class npc_wounded_skirmisher : public CreatureScript { 
Class: class npc_lightning_sentry : public CreatureScript { 
Class: class npc_venture_co_straggler : public CreatureScript { 
Class: class npc_apothecary_hanes : public CreatureScript { 
Class: class npc_plaguehound_tracker : public CreatureScript { 
Class: class npc_razael_and_lyana : public CreatureScript { 
Class: class npc_mcgoyver : public CreatureScript { 
Class: class npc_daegarn : public CreatureScript { 
Class: class npc_arete : public CreatureScript { 
Class: class npc_argent_valiant : public CreatureScript { 
Class: class npc_guardian_pavilion : public CreatureScript { 
Class: class npc_vereth_the_cunning : public CreatureScript { 
Class: class npc_tournament_training_dummy : public CreatureScript { 
Class: class npc_blessed_banner : public CreatureScript { 
Class: class npc_injured_rainspeaker_oracle : public CreatureScript { 
Class: class npc_vekjik : public CreatureScript { 
Class: class npc_avatar_of_freya : public CreatureScript { 
Class:  class npc_bushwhacker : public CreatureScript { 
Class: class npc_engineer_helice : public CreatureScript { 
Class: class npc_jungle_punch_target : public CreatureScript { 
Class: class npc_adventurous_dwarf : public CreatureScript { 
Class: class spell_q12620_the_lifewarden_wrath : public SpellScriptLoader { 
Class:     class spell_q12620_the_lifewarden_wrath_SpellScript : public SpellScript     {     
Class: class spell_q12589_shoot_rjr : public SpellScriptLoader { 
Class:     class spell_q12589_shoot_rjr_SpellScript : public SpellScript     {     
Class: class npc_haiphoon : public CreatureScript { 
Class: class npc_agnetta_tyrsdottar : public CreatureScript { 
Class: class npc_frostborn_scout : public CreatureScript { 
Class: class npc_brunnhildar_prisoner : public CreatureScript { 
Class:  class npc_freed_protodrake : public CreatureScript { 
Class: class npc_icefang : public CreatureScript { 
Class: class npc_hyldsmeet_protodrake : public CreatureScript { 
Class:         class npc_hyldsmeet_protodrakeAI : public CreatureAI         {         
Class: class spell_close_rift : public SpellScriptLoader { 
Class:         class spell_close_rift_AuraScript : public AuraScript         {         
Class: class npc_wg_demolisher_engineer : public CreatureScript { 
Class: class npc_wg_spirit_guide : public CreatureScript { 
Class: class npc_wg_queue : public CreatureScript { 
Class: class go_wg_vehicle_teleporter : public GameObjectScript { 
Class: class npc_wg_quest_giver : public CreatureScript { 
Class: class spell_wintergrasp_force_building : public SpellScriptLoader { 
Class:         class spell_wintergrasp_force_building_SpellScript : public SpellScript         {         
Class: class spell_wintergrasp_grab_passenger : public SpellScriptLoader { 
Class:         class spell_wintergrasp_grab_passenger_SpellScript : public SpellScript         {         
Class: class achievement_wg_didnt_stand_a_chance : public AchievementCriteriaScript { 
Class: class spell_wintergrasp_defender_teleport : public SpellScriptLoader { 
Class:     class spell_wintergrasp_defender_teleport_SpellScript : public SpellScript     {     
Class: class spell_wintergrasp_defender_teleport_trigger : public SpellScriptLoader { 
Class:     class spell_wintergrasp_defender_teleport_trigger_SpellScript : public SpellScript     {     
Class: class npc_drakuru_shackles : public CreatureScript { 
Class: class npc_gymer : public CreatureScript { 
Class: class npc_gurgthock : public CreatureScript { 
Class: class npc_orinoko_tuskbreaker : public CreatureScript { 
Class: class npc_korrak_bloodrager : public CreatureScript { 
Class: class npc_yggdras : public CreatureScript { 
Class: class npc_stinkbeard : public CreatureScript { 
Class:  class npc_elemental_lord : public CreatureScript { 
Class:  class npc_fiend_elemental : public CreatureScript { 
Class:  class npc_released_offspring_harkoa : public CreatureScript { 
Class: class go_scourge_enclosure : public GameObjectScript { 
Class: class npc_drakuru_shackles : public CreatureScript { 
Class: class npc_gymer : public CreatureScript { 
Class: class npc_gurgthock : public CreatureScript { 
Class: class npc_orinoko_tuskbreaker : public CreatureScript { 
Class: class npc_korrak_bloodrager : public CreatureScript { 
Class: class npc_yggdras : public CreatureScript { 
Class: class npc_stinkbeard : public CreatureScript { 
Class:  class npc_elemental_lord : public CreatureScript { 
Class:  class npc_fiend_elemental : public CreatureScript { 
Class:  class npc_released_offspring_harkoa : public CreatureScript { 
Class: class go_scourge_enclosure : public GameObjectScript { 
Class: class mobs_nether_drake : public CreatureScript { 
Class: class npc_daranelle : public CreatureScript { 
Class:  class go_legion_obelisk : public GameObjectScript { 
Class: class npc_bloodmaul_brutebane : public CreatureScript { 
Class:  class npc_ogre_brute : public CreatureScript { 
Class: class go_thunderspike : public GameObjectScript { 
Class: class npc_simon_bunny : public CreatureScript { 
Class: class go_simon_cluster : public GameObjectScript { 
Class: class go_apexis_relic : public GameObjectScript { 
Class: class npc_aeranas : public CreatureScript { 
Class: class npc_ancestral_wolf : public CreatureScript { 
Class: class npc_naladu : public CreatureScript { 
Class: class npc_tracy_proudwell : public CreatureScript { 
Class: class npc_trollbane : public CreatureScript { 
Class: class npc_wounded_blood_elf : public CreatureScript { 
Class: class npc_fel_guard_hound : public CreatureScript { 
Class: class npc_maghar_captive : public CreatureScript { 
Class:  class npc_creditmarker_visit_with_ancestors : public CreatureScript { 
Class: class go_corkis_prison : public GameObjectScript { 
Class: class npc_corki : public CreatureScript { 
Class: class npc_kurenai_captive : public CreatureScript { 
Class: class go_warmaul_prison : public GameObjectScript { 
Class: class npc_manaforge_control_console : public CreatureScript { 
Class:   class go_manaforge_control_console : public GameObjectScript { 
Class: class npc_commander_dawnforge : public CreatureScript { 
Class: class at_commander_dawnforge : public AreaTriggerScript { 
Class: class mob_phase_hunter : public CreatureScript { 
Class: class npc_bessy : public CreatureScript { 
Class: class npc_maxx_a_million_escort : public CreatureScript { 
Class: class go_captain_tyralius_prison : public GameObjectScript { 
Class: class mob_mature_netherwing_drake : public CreatureScript { 
Class:class mob_dragonmaw_peon : public CreatureScript class mob_dragonmaw_peon : public CreatureScript
Class: class npc_raliq_the_drunk : public CreatureScript { 
Class:  class npc_shattrathflaskvendors : public CreatureScript { 
Class: class npc_kservant : public CreatureScript { 
Class: class npc_dirty_larry : public CreatureScript { 
Class: class mob_unkor_the_ruthless : public CreatureScript { 
Class:  class mob_infested_root_walker : public CreatureScript { 
Class: class npc_skywing : public CreatureScript { 
Class:  class mob_rotting_forest_rager : public CreatureScript { 
Class:class mob_netherweb_victim : public CreatureScript { 
Class: class npc_floon : public CreatureScript { 
Class: class npc_isla_starmane : public CreatureScript { 
Class: class npc_slim : public CreatureScript { 
Class: class npc_akuno : public CreatureScript { 
Class: class npcs_ashyen_and_keleth : public CreatureScript { 
Class: class npc_cooshcoosh : public CreatureScript { 
Class: class npc_mortog_steamhead : public CreatureScript { 
Class: class npc_kayra_longmane : public CreatureScript { 
Class: class npc_timothy_daniels : public CreatureScript { 
Class: class mobs_nether_drake : public CreatureScript { 
Class: class npc_daranelle : public CreatureScript { 
Class:  class go_legion_obelisk : public GameObjectScript { 
Class: class npc_bloodmaul_brutebane : public CreatureScript { 
Class:  class npc_ogre_brute : public CreatureScript { 
Class: class go_thunderspike : public GameObjectScript { 
Class: class npc_simon_bunny : public CreatureScript { 
Class: class go_simon_cluster : public GameObjectScript { 
Class: class go_apexis_relic : public GameObjectScript { 
Class: class npc_aeranas : public CreatureScript { 
Class: class npc_ancestral_wolf : public CreatureScript { 
Class: class npc_naladu : public CreatureScript { 
Class: class npc_tracy_proudwell : public CreatureScript { 
Class: class npc_trollbane : public CreatureScript { 
Class: class npc_wounded_blood_elf : public CreatureScript { 
Class: class npc_fel_guard_hound : public CreatureScript { 
Class: class npc_maghar_captive : public CreatureScript { 
Class:  class npc_creditmarker_visit_with_ancestors : public CreatureScript { 
Class: class go_corkis_prison : public GameObjectScript { 
Class: class npc_corki : public CreatureScript { 
Class: class npc_kurenai_captive : public CreatureScript { 
Class: class go_warmaul_prison : public GameObjectScript { 
Class: class npc_manaforge_control_console : public CreatureScript { 
Class:   class go_manaforge_control_console : public GameObjectScript { 
Class: class npc_commander_dawnforge : public CreatureScript { 
Class: class at_commander_dawnforge : public AreaTriggerScript { 
Class: class mob_phase_hunter : public CreatureScript { 
Class: class npc_bessy : public CreatureScript { 
Class: class npc_maxx_a_million_escort : public CreatureScript { 
Class: class go_captain_tyralius_prison : public GameObjectScript { 
Class: class mob_mature_netherwing_drake : public CreatureScript { 
Class:class mob_dragonmaw_peon : public CreatureScript class mob_dragonmaw_peon : public CreatureScript
Class: class npc_raliq_the_drunk : public CreatureScript { 
Class:  class npc_shattrathflaskvendors : public CreatureScript { 
Class: class npc_kservant : public CreatureScript { 
Class: class npc_dirty_larry : public CreatureScript { 
Class: class mob_unkor_the_ruthless : public CreatureScript { 
Class:  class mob_infested_root_walker : public CreatureScript { 
Class: class npc_skywing : public CreatureScript { 
Class:  class mob_rotting_forest_rager : public CreatureScript { 
Class:class mob_netherweb_victim : public CreatureScript { 
Class: class npc_floon : public CreatureScript { 
Class: class npc_isla_starmane : public CreatureScript { 
Class: class npc_slim : public CreatureScript { 
Class: class npc_akuno : public CreatureScript { 
Class: class npcs_ashyen_and_keleth : public CreatureScript { 
Class: class npc_cooshcoosh : public CreatureScript { 
Class: class npc_mortog_steamhead : public CreatureScript { 
Class: class npc_kayra_longmane : public CreatureScript { 
Class: class npc_timothy_daniels : public CreatureScript { 
Class:class npc_buru_egg : public CreatureScript { 
Class: class spell_egg_explosion : public SpellScriptLoader { 
Class:         class spell_egg_explosion_SpellScript : public SpellScript         {         
Class: class boss_thorngrin_the_tender : public CreatureScript { 
Class: class boss_thorngrin_the_tender : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool ParementerIndexAssertFail(uint32 stmtIndex, uint8 index, uint32 paramCount)'), (3, 1, u'+static bool ParamenterIndexAssertFail(uint32 stmtIndex, uint8 index, uint32 paramCount)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MySQLPreparedStatement::ClearParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool ParementerIndexAssertFail(uint32 stmtIndex, uint8 index, uint32 paramCount)'), (3, 1, u'+static bool ParamenterIndexAssertFail(uint32 stmtIndex, uint8 index, uint32 paramCount)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool ParementerIndexAssertFail(uint32 stmtIndex, uint8 index, uint32 paramCount)'), (3, 1, u'+static bool ParamenterIndexAssertFail(uint32 stmtIndex, uint8 index, uint32 paramCount)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index < m_paramCount || ParementerIndexAssertFail(m_stmt->m_index, index, m_paramCount));'), (3, 1, u'+    ASSERT(index < m_paramCount || ParamenterIndexAssertFail(m_stmt->m_index, index, m_paramCount));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MySQLPreparedStatement::CheckValidIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index < m_paramCount || ParementerIndexAssertFail(m_stmt->m_index, index, m_paramCount));'), (3, 1, u'+    ASSERT(index < m_paramCount || ParamenterIndexAssertFail(m_stmt->m_index, index, m_paramCount));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index < m_paramCount || ParementerIndexAssertFail(m_stmt->m_index, index, m_paramCount));'), (3, 1, u'+    ASSERT(index < m_paramCount || ParamenterIndexAssertFail(m_stmt->m_index, index, m_paramCount));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(index < m_paramCount || ParementerIndexAssertFail(m_stmt->m_index, index, m_paramCount));')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: MySQLPreparedStatement::CheckValidIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(index < m_paramCount || ParementerIndexAssertFail(m_stmt->m_index, index, m_paramCount));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(index < m_paramCount || ParementerIndexAssertFail(m_stmt->m_index, index, m_paramCount));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (8, 1, u'+                ASSERT(range.first != range.second);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (8, 1, u'+                ASSERT(range.first != range.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (8, 1, u'+                ASSERT(range.first != range.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (8, 1, u'+                ASSERT(range.first != range.second);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (8, 1, u'+                ASSERT(range.first != range.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (8, 1, u'+                ASSERT(range.first != range.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (8, 1, u'+    ASSERT(range.first != range.second);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Player::SatisfyQuestExclusiveGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (8, 1, u'+    ASSERT(range.first != range.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (8, 1, u'+    ASSERT(range.first != range.second);')]
===========================================
Class: class spell_commander_sarannis_summon_reinforcements : public SpellScriptLoader { 
Class:         class spell_commander_sarannis_summon_reinforcements_SpellScript : public SpellScript         {         
Class: class boss_commander_sarannis : public CreatureScript { 
Class: class boss_thorngrin_the_tender : public CreatureScript { 
Class: class spell_q12372_azure_on_death_force_whisper : public SpellScriptLoader { 
Class:         class spell_q12372_azure_on_death_force_whisper_SpellScript : public SpellScript         {         
Class:class PlayerOrPetCheck { 
Class: class spell_skeram_arcane_explosion : public SpellScriptLoader { 
Class:         class spell_skeram_arcane_explosion_SpellScript : public SpellScript         {         
Class:class ov_mycoordinates class ov_mycoordinates
Class:class boss_skeram : public CreatureScript { 
Class: class spell_winter_veil_mistletoe : public SpellScriptLoader { 
Class:         class spell_winter_veil_mistletoe_SpellScript : public SpellScript         {         
Class: class npc_winter_reveler : public CreatureScript { 
Class: class boss_viscidus : public CreatureScript { 
Class: class npc_glob_of_viscidus : public CreatureScript { 
Class: class npc_clintar_dreamwalker : public CreatureScript { 
Class: class npc_haiphoon : public CreatureScript { 
Class:class spell_anubarak_leeching_swarm : public SpellScriptLoader { 
Class:         class spell_anubarak_leeching_swarm_AuraScript : public AuraScript         {         
Class: class spell_gen_leeching_swarm : public SpellScriptLoader { 
Class:         class spell_gen_leeching_swarm_AuraScript : public AuraScript         {         
Class:class spell_trick : public SpellScriptLoader class spell_hallow_end_trick : public SpellScriptLoader         spell_trick() : SpellScriptLoader() {}         spell_trick() : SpellScriptLoader() 
Class:class spell_trick_or_treat : public SpellScriptLoader class spell_hallow_end_trick_or_treat : public SpellScriptLoader         spell_trick_or_treat() : SpellScriptLoader() {}         spell_trick_or_treat() : SpellScriptLoader() 
Class:class spell_tricky_treat : public SpellScriptLoader class spell_hallow_end_tricky_treat : public SpellScriptLoader         spell_tricky_treat() : SpellScriptLoader() {}         spell_tricky_treat() : SpellScriptLoader() 
Class:class spell_priest_renew : public SpellScriptLoader class spell_pri_renew : public SpellScriptLoader         spell_priest_renew() : SpellScriptLoader() { }         spell_priest_renew() : SpellScriptLoader() 
Class: class spell_gen_trick : public SpellScriptLoader { 
Class:         class spell_gen_trick_SpellScript : public SpellScript         {         
Class: class spell_gen_trick_or_treat : public SpellScriptLoader { 
Class:         class spell_gen_trick_or_treat_SpellScript : public SpellScript         {         
Class: class spell_trick : public SpellScriptLoader { 
Class:         class spell_trick_SpellScript : public SpellScript         {         
Class: class spell_trick_or_treat : public SpellScriptLoader { 
Class:         class spell_trick_or_treat_SpellScript : public SpellScript         {         
Class: class spell_tricky_treat : public SpellScriptLoader { 
Class:         class spell_tricky_treat_SpellScript : public SpellScript         {         
Class:class spell_hun_furious_howl : public SpellScriptLoader class spell_hun_target_only_pet_and_owner : public SpellScriptLoader         spell_hun_furious_howl() : SpellScriptLoader() { }         spell_hun_furious_howl() : SpellScriptLoader() 
Class:class spell_hun_furious_howl : public SpellScriptLoader { 
Class:         class spell_hun_furious_howl_SpellScript : public SpellScript         {         
Class:class mob_rune_of_power : public CreatureScript { 
Class: class mob_lightning_elemental : public CreatureScript { 
Class: class mob_rune_of_summoning : public CreatureScript { 
Class:class spell_assembly_rune_of_summoning : public SpellScriptLoader { 
Class:         class spell_assembly_rune_of_summoning_AuraScript : public AuraScript         {         
Class: class spell_gen_replenishment : public SpellScriptLoader { 
Class:         class spell_gen_replenishment_AuraScript : public AuraScript         {         
Class:class achievement_shatter_resistant : public AchievementCriteriaScript { 
Class:class achievement_the_hundred_club : public AchievementCriteriaScript { 
Class: class npc_blessed_banner : public CreatureScript { 
Class: class npc_scourge_prisoner : public CreatureScript { 
Class:class boss_anubarak_trial : public CreatureScript enum PursuingSpikesPhases public:     boss_anubarak_trial() : CreatureScript() { }     boss_anubarak_trial() : CreatureScript() 
Class:class boss_anubarak_trial : public CreatureScript class boss_anubarak_trial : public CreatureScript
Class:class mob_nerubian_burrower : public CreatureScript { 
Class:class mob_nerubian_burrower : public CreatureScript { 
Class: class spell_impale : public SpellScriptLoader { 
Class:         class spell_impale_SpellScript : public SpellScript         {         
Class:class boss_toc_champion_controller : public CreatureScript { 
Class: class mob_toc_shaman : public CreatureScript { 
Class:class mob_toc_shaman : public CreatureScript { 
Class: class mob_toc_priest : public CreatureScript { 
Class:class mob_toc_paladin : public CreatureScript { 
Class: class mob_toc_priest : public CreatureScript class mob_toc_mage : public CreatureScript public:     mob_toc_priest() : CreatureScript() { }     mob_toc_priest() : CreatureScript() 
Class:class mob_toc_shadow_priest : public CreatureScript class mob_toc_shadow_priest : public CreatureScript
Class: class mob_toc_warlock : public CreatureScript class mob_toc_boomkin : public CreatureScript public:     mob_toc_warlock() : CreatureScript() { }     mob_toc_warlock() : CreatureScript() 
Class:class mob_toc_mage : public CreatureScript class mob_toc_mage : public CreatureScript
Class: class mob_toc_hunter : public CreatureScript class mob_toc_dk : public CreatureScript public:     mob_toc_hunter() : CreatureScript() { }     mob_toc_hunter() : CreatureScript() 
Class:class mob_toc_boomkin : public CreatureScript class mob_toc_boomkin : public CreatureScript
Class:class mob_toc_warrior : public CreatureScript class mob_toc_warrior : public CreatureScript
Class:class mob_toc_dk : public CreatureScript class mob_toc_dk : public CreatureScript
Class: class mob_toc_rogue : public CreatureScript class mob_toc_pet_warlock : public CreatureScript public:     mob_toc_rogue() : CreatureScript() { }     mob_toc_rogue() : CreatureScript() 
Class:class mob_toc_enh_shaman : public CreatureScript class mob_toc_enh_shaman : public CreatureScript
Class: class mob_toc_retro_paladin : public CreatureScript class spell_faction_champion_warl_unstable_affliction : public SpellScriptLoader public:     mob_toc_retro_paladin() : CreatureScript() { }     mob_toc_retro_paladin() : CreatureScript() 
Class:        class spell_faction_champion_warl_unstable_affliction_AuraScript : public AuraScript         class spell_faction_champion_warl_unstable_affliction_AuraScript : public AuraScript
Class: class mob_toc_pet_warlock : public CreatureScript { 
Class:        class spell_faction_champion_death_grip_SpellScript : public SpellScript         class spell_faction_champion_death_grip_SpellScript : public SpellScript
Class:class mob_toc_pet_hunter : public CreatureScript class mob_toc_pet_hunter : public CreatureScript
Class:        class spell_toc_bloodlust_SpellScript : public SpellScript         class spell_toc_bloodlust_SpellScript : public SpellScript
Class:class spell_faction_champion_warl_unstable_affliction : public SpellScriptLoader class spell_toc_heroism : public SpellScriptLoader         spell_faction_champion_warl_unstable_affliction() : SpellScriptLoader() { }         spell_faction_champion_warl_unstable_affliction() : SpellScriptLoader() 
Class:class spell_mistress_kiss : public SpellScriptLoader { 
Class:        class spell_mistress_kiss_area_SpellScript : public SpellScript         class spell_mistress_kiss_area_SpellScript : public SpellScript
Class:class boss_gormok : public CreatureScript class boss_gormok : public CreatureScript
Class: class npc_firebomb : public CreatureScript { 
Class:        class spell_gormok_fire_bomb_SpellScript : public SpellScript         class spell_gormok_fire_bomb_SpellScript : public SpellScript
Class: class boss_icehowl : public CreatureScript { 
Class: class spell_powering_up : public SpellScriptLoader { 
Class: class spell_powering_up : public SpellScriptLoader { 
Class:class go_ossirian_crystal : public GameObjectScript { 
Class:class mob_crystal_spike : public CreatureScript class mob_crystal_spike : public CreatureScript
Class:class mob_crystalline_tangler : public CreatureScript { 
Class:class spell_crystal_spike : public SpellScriptLoader class spell_crystal_spike : public SpellScriptLoader
Class:class PlayerTextBuilder { 
Class: class spell_dream_fog_sleep : public SpellScriptLoader { 
Class:         class spell_dream_fog_sleep_SpellScript : public SpellScript         {         
Class:  class MarkOfNatureTargetSelector { 
Class: class spell_mark_of_nature : public SpellScriptLoader { 
Class:         class spell_mark_of_nature_SpellScript : public SpellScript         {         
Class:class npc_spirit_shade : public CreatureScript { 
Class: class DreamFogTargetSelector { 
Class: class spell_dream_fog_sleep : public SpellScriptLoader { 
Class:         class spell_dream_fog_sleep_SpellScript : public SpellScript         {         
Class:  class MarkOfNatureTargetSelector { 
Class: class spell_mark_of_nature : public SpellScriptLoader { 
Class:         class spell_mark_of_nature_SpellScript : public SpellScript         {         
Class: class npc_enslaved_proto_drake : public CreatureScript { 
Class: class lfg_commandscript : public CommandScript { 
Class: class npc_winterfin_playmate : public CreatureScript { 
Class: class npc_snowfall_glade_playmate : public CreatureScript { 
Class: class npc_the_biggest_tree : public CreatureScript { 
Class: class npc_high_oracle_soo_roo : public CreatureScript { 
Class: class npc_elder_kekek : public CreatureScript { 
Class: class npc_the_etymidian : public CreatureScript { 
Class: class npc_alexstraza_the_lifebinder : public CreatureScript { 
Class:  class at_bring_your_orphan_to : public AreaTriggerScript { 
Class: class npc_cw_area_trigger : public CreatureScript { 
Class: class npc_grizzlemaw_cw_trigger : public CreatureScript { 
Class: class AreaTrigger_at_bring_your_orphan_to : public AreaTriggerScript { 
Class:class spell_gordunni_trap : public SpellScriptLoader { 
Class:         class spell_gordunni_trap_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-        ASSERT(dungeon);')]
===========================================
===========================================
Total add: 52
Total del: 113
Header: LFGMgr::UpdateProposal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-        ASSERT(dungeon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-        ASSERT(dungeon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pRoleCheck);')]
===========================================
===========================================
Total add: 7
Total del: 8
Header: WorldSession::SendLfgRoleChosen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pRoleCheck);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pRoleCheck);')]
===========================================
Class: class spell_close_rift : public SpellScriptLoader { 
Class:         class spell_close_rift_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: irand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: urand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: frand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(max >= min);')]
===========================================
Class: class boss_halion : public CreatureScript { 
Class: class boss_twilight_halion : public CreatureScript { 
Class: class npc_halion_controller : public CreatureScript { 
Class: class npc_orb_carrier : public CreatureScript { 
Class: class npc_meteor_strike_initial : public CreatureScript { 
Class: class npc_meteor_strike : public CreatureScript { 
Class: class npc_combustion_consumption : public CreatureScript { 
Class: class npc_living_inferno : public CreatureScript { 
Class:  class npc_living_ember : public CreatureScript { 
Class: class go_twilight_portal : public GameObjectScript { 
Class: class spell_halion_meteor_strike_marker : public SpellScriptLoader { 
Class:         class spell_halion_meteor_strike_marker_AuraScript : public AuraScript         {         
Class: class spell_halion_combustion_consumption : public SpellScriptLoader { 
Class:         class spell_halion_combustion_consumption_AuraScript : public AuraScript         {         
Class: class spell_halion_marks : public SpellScriptLoader { 
Class:         class spell_halion_marks_AuraScript : public AuraScript         {         
Class: class spell_halion_damage_aoe_summon : public SpellScriptLoader { 
Class:         class spell_halion_damage_aoe_summon_SpellScript : public SpellScript         {         
Class: class spell_halion_twilight_realm_handlers : public SpellScriptLoader { 
Class:         class spell_halion_twilight_realm_handlers_AuraScript : public AuraScript         {         
Class: class spell_halion_clear_debuffs : public SpellScriptLoader { 
Class:         class spell_halion_clear_debuffs_SpellScript : public SpellScript         {         
Class: class TwilightCutterSelector { 
Class: class spell_halion_twilight_cutter : public SpellScriptLoader { 
Class:         class spell_halion_twilight_cutter_SpellScript : public SpellScript         {         
Class: class spell_halion_twilight_phasing : public SpellScriptLoader { 
Class:         class spell_halion_twilight_phasing_SpellScript : public SpellScript         {         
Class: class spell_halion_summon_exit_portals : public SpellScriptLoader { 
Class:         class spell_halion_summon_exit_portals_SpellScript : public SpellScript         {         
Class:class spell_wintergrasp_defender_teleport_trigger : public SpellScriptLoader { 
Class:     class spell_wintergrasp_defender_teleport_trigger_SpellScript : public SpellScript     {     
Class:class achievement_respect_your_elders : public AchievementCriteriaScript class GuardianCheck     public:         achievement_respect_your_elders() : AchievementCriteriaScript() {}         achievement_respect_your_elders() : AchievementCriteriaScript() 
Class:    class spell_elder_nadox_guardian_SpellScript : public SpellScript     class spell_elder_nadox_guardian_SpellScript : public SpellScript
Class:class achievement_respect_your_elders : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattlegroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattlegroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattlegroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattlegroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 24
Total del: 7
Header: MPQManager::InitializeDBC
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 1, u'+        ASSERT(false);')]
===========================================
Class:class npc_ruby_emerald_amber_drake : public CreatureScript { 
Class:class spell_call_ruby_emerald_amber_drake : public SpellScriptLoader { 
Class:     class spell_call_ruby_emerald_amber_drake_SpellScript : public SpellScript     {     
Class:       class spell_ulduar_proximity_minesSpellScript : public SpellScript        {        
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(normalCount == Vertices.size(), "normalCount is different than the Vertices count");'), (3, 1, u'+    ASSERT(normalCount == Vertices.size() && "normalCount is different than the Vertices count");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldModelGroup::ReadNormals
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(normalCount == Vertices.size(), "normalCount is different than the Vertices count");'), (3, 1, u'+    ASSERT(normalCount == Vertices.size() && "normalCount is different than the Vertices count");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(normalCount == Vertices.size(), "normalCount is different than the Vertices count");'), (3, 1, u'+    ASSERT(normalCount == Vertices.size() && "normalCount is different than the Vertices count");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");'), (3, 1, u'+    ASSERT(triangleCount == TriangleFlags.size() && "triangleCount != TriangleFlags.size()");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldModelGroup::ReadTriangles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");'), (3, 1, u'+    ASSERT(triangleCount == TriangleFlags.size() && "triangleCount != TriangleFlags.size()");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");'), (3, 1, u'+    ASSERT(triangleCount == TriangleFlags.size() && "triangleCount != TriangleFlags.size()");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(chunk->Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");'), (3, 1, u'+    ASSERT(chunk->Length / 32 == Header.CountSets && "chunk.Length / 32 == Header.CountSets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldModelRoot::ReadDoodadSets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(chunk->Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");'), (3, 1, u'+    ASSERT(chunk->Length / 32 == Header.CountSets && "chunk.Length / 32 == Header.CountSets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(chunk->Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");'), (3, 1, u'+    ASSERT(chunk->Length / 32 == Header.CountSets && "chunk.Length / 32 == Header.CountSets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(normalCount == Vertices.size(), "normalCount is different than the Vertices count");'), (3, 1, u'+    ASSERT(normalCount == Vertices.size(), "normalCount is different than the Vertices count");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldModelGroup::ReadNormals
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(normalCount == Vertices.size(), "normalCount is different than the Vertices count");'), (3, 1, u'+    ASSERT(normalCount == Vertices.size(), "normalCount is different than the Vertices count");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(normalCount == Vertices.size(), "normalCount is different than the Vertices count");'), (3, 1, u'+    ASSERT(normalCount == Vertices.size(), "normalCount is different than the Vertices count");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    Assert(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");'), (6, 1, u'+    ASSERT(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: WorldModelGroup::ReadTriangles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    Assert(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");'), (6, 1, u'+    ASSERT(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    Assert(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");'), (6, 1, u'+    ASSERT(triangleCount == TriangleFlags.size(), "triangleCount != TriangleFlags.size()");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(chunk.Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");'), (3, 1, u'+    ASSERT(chunk->Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldModelRoot::ReadDoodadSets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(chunk.Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");'), (3, 1, u'+    ASSERT(chunk->Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(chunk.Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");'), (3, 1, u'+    ASSERT(chunk->Length / 32 == Header.CountSets, "chunk.Length / 32 == Header.CountSets");')]
===========================================
Class:class spell_pal_divine_sacrifice : public SpellScriptLoader { 
Class:         class spell_pal_divine_sacrifice_AuraScript : public AuraScript         {         
Class:class go_soulwell : public GameObjectScript enum SoulWellData public:     go_soulwell() : GameObjectScript() { }     go_soulwell() : GameObjectScript() 
Class: class npc_shadowmoon_tuber_node : public CreatureScript { 
Class:class SkarvaldChargePredicate { 
Class:class spell_ticking_time_bomb : public SpellScriptLoader { 
Class:         class spell_ticking_time_bomb_AuraScript : public AuraScript         {         
Class:class spell_fixate : public SpellScriptLoader { 
Class:         class spell_fixate_SpellScript : public SpellScript         {         
Class:class spell_pal_hand_of_sacrifice : public SpellScriptLoader { 
Class:         class spell_pal_hand_of_sacrifice_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  ACE_ASSERT (chunk_size > 0);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: ACE_Dynamic_Cached_Allocator<ACE_LOCK>::ACE_Dynamic_Cached_Allocator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  ACE_ASSERT (chunk_size > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  ACE_ASSERT (chunk_size > 0);')]
===========================================
Class:template <ACE_SYNCH_DECL> ACE_Message_Queue_Iterator<ACE_SYNCH_USE>::ACE_Message_Queue_Iterator (ACE_Message_Queue <ACE_SYNCH_USE> &q) template <class ACE_MESSAGE_TYPE, ACE_SYNCH_DECL, class TIME_POLICY> ACE_Time_Value_T<TIME_POLICY> ACE_Message_Queue_Ex<ACE_MESSAGE_TYPE, ACE_SYNCH_USE, TIME_POLICY>::gettimeofday () { 
Class:  class NULL_Time_Policy : public ACE_Dynamic_Time_Policy_Base { 
Class:template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::~ACE_Timer_Hash_Iterator_T () { 
Class:template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET, typename TIME_POLICY> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET, TIME_POLICY>::close (void) { 
Class:template <class TYPE, class FUNCTOR> ACE_INLINE template <class TYPE, class FUNCTOR> ACE_INLINE
Class:template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> ACE_Time_Value ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::current_time() { 
Class:template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dispatch_info_i (const ACE_Time_Value &cur_time, template <class TYPE, class FUNCTOR, class ACE_LOCK, typename TIME_POLICY> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK, TIME_POLICY>::expire_single (     ACE_Command_Base & pre_dispatch_command) { 
Class: class spell_dru_enrage : public SpellScriptLoader { 
Class:         class spell_dru_enrage_SpellScript : public SpellScript         {         
Class:class spell_dru_insect_swarm : public SpellScriptLoader { 
Class:         class spell_dru_insect_swarm_AuraScript : public AuraScript         {         
Class: class spell_dru_lifebloom : public SpellScriptLoader { 
Class:         class spell_dru_lifebloom_AuraScript : public AuraScript         {         
Class:class spell_dru_predatory_strikes : public SpellScriptLoader { 
Class:         class spell_dru_predatory_strikes_AuraScript : public AuraScript         {         
Class:class spell_dru_t10_restoration_4p_bonus : public SpellScriptLoader class spell_dru_savage_roar : public SpellScriptLoader         spell_dru_t10_restoration_4p_bonus() : SpellScriptLoader() { }         spell_dru_t10_restoration_4p_bonus() : SpellScriptLoader() 
Class:        class spell_dru_savage_roar_AuraScript : public AuraScript         {         
Class: class spell_dru_swift_flight_passive : public SpellScriptLoader class spell_dru_starfall_dummy : public SpellScriptLoader         spell_dru_swift_flight_passive() : SpellScriptLoader() { }         spell_dru_swift_flight_passive() : SpellScriptLoader() 
Class: class spell_dru_starfall_dummy : public SpellScriptLoader { 
Class:         class spell_dru_starfall_dummy_SpellScript : public SpellScript         {         
Class:class spell_dru_lifebloom : public SpellScriptLoader { 
Class:         class spell_dru_lifebloom_AuraScript : public AuraScript         {         
Class: class spell_dru_predatory_strikes : public SpellScriptLoader { 
Class:         class spell_dru_predatory_strikes_AuraScript : public AuraScript         {         
Class: class spell_dru_savage_roar : public SpellScriptLoader class spell_dru_survival_instincts : public SpellScriptLoader         spell_dru_savage_roar() : SpellScriptLoader() { }         spell_dru_savage_roar() : SpellScriptLoader() 
Class:class spell_dru_survival_instincts : public SpellScriptLoader  class spell_dru_swift_flight_passive : public SpellScriptLoader         spell_dru_survival_instincts() : SpellScriptLoader() { }         spell_dru_survival_instincts() : SpellScriptLoader() 
Class:class spell_dru_tiger_s_fury : public SpellScriptLoader { 
Class:        class spell_dru_tiger_s_fury_SpellScript : public SpellScript         {         
Class:class spell_dru_insect_swarm : public SpellScriptLoader class spell_dru_t10_restoration_4p_bonus : public SpellScriptLoader         spell_dru_insect_swarm() : SpellScriptLoader() { }         spell_dru_insect_swarm() : SpellScriptLoader() 
Class:class spell_q11010_q11102_q11023_throw_bomb : public SpellScriptLoader { 
Class:         class spell_q11010_q11102_q11023_throw_bomb_SpellScript : public SpellScript         {         
Class:  class spell_q11008_blasting_charge : public SpellScriptLoader  class spell_q11010_q11102_q11023_q11008_check_fly_mount : public SpellScriptLoader         spell_q11008_blasting_charge() : SpellScriptLoader() { }         spell_q11008_blasting_charge() : SpellScriptLoader() 
Class:  class spell_q11008_blasting_charge : public SpellScriptLoader { 
Class:         class spell_q11008_blasting_charge_SpellScript : public SpellScript         {         
Class:  class spell_q11010_q11102_q11023_aggro_check_aura : public SpellScriptLoader { 
Class:         class spell_q11010_q11102_q11023_aggro_check_aura_AuraScript : public AuraScript         {         
Class:  class spell_q11010_q11102_q11023_aggro_check : public SpellScriptLoader { 
Class:         class spell_q11010_q11102_q11023_aggro_check_SpellScript : public SpellScript         {         
Class:  class spell_q11010_q11102_q11023_aggro_burst : public SpellScriptLoader { 
Class:         class spell_q11010_q11102_q11023_aggro_burst_AuraScript : public AuraScript         {         
Class:  class spell_q11010_q11102_q11023_choose_loc : public SpellScriptLoader { 
Class:         class spell_q11010_q11102_q11023_choose_loc_SpellScript : public SpellScript         {         
Class: class spell_q11010_q11102_q11023_throw_bomb : public SpellScriptLoader { 
Class:         class spell_q11010_q11102_q11023_throw_bomb_SpellScript : public SpellScript         {         
Class:class npc_volatile_ooze : public CreatureScript class npc_putricide_oozeAI : public ScriptedAI         npc_volatile_ooze() : CreatureScript() { }         npc_volatile_ooze() : CreatureScript() 
Class:class npc_volatile_ooze : public CreatureScript { 
Class:class spell_gen_gift_of_naaru : public SpellScriptLoader { 
Class:         class spell_gen_gift_of_naaru_AuraScript : public AuraScript         {         
Class:class spell_warl_health_funnel : public SpellScriptLoader { 
Class:     class spell_warl_health_funnel_AuraScript : public AuraScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            ASSERT(m_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);'), (10, 1, u'+            ASSERT(_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: PathGenerator::BuildPolyPath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            ASSERT(m_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);'), (10, 1, u'+            ASSERT(_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            ASSERT(m_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);'), (10, 1, u'+            ASSERT(_pathPolyRefs[pathStartIndex] != INVALID_POLYREF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: fill_window
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: fill_window
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: deflate_rle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");')]
===========================================
Class:  class npc_freed_protodrake : public CreatureScript { 
Class: class spell_unlocking_zuluheds_chains : public SpellScriptLoader { 
Class:         class spell_unlocking_zuluheds_chains_SpellScript : public SpellScript         {         
Class: class npc_victorious_challenger : public CreatureScript { 
Class: class npc_thorim : public CreatureScript { 
Class: class npc_loklira_crone : public CreatureScript { 
Class: class npc_victorious_challenger : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_Workshop);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: WintergraspCapturePoint::ChangeTeam
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_Workshop);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_Workshop);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(count !=0 && "pProto->Stackable == 0 but checked at loading already");'), (3, 1, u'+        ASSERT(count != 0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Item::CreateItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(count !=0 && "pProto->Stackable == 0 but checked at loading already");'), (3, 1, u'+        ASSERT(count != 0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(count !=0 && "pProto->Stackable == 0 but checked at loading already");'), (3, 1, u'+        ASSERT(count != 0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
Class: class spell_gen_clone_weapon_aura : public SpellScriptLoader { 
Class:class go_broggok_lever : public GameObjectScript { 
Class: class spell_q12372_destabilize_azure_dragonshrine_dummy : public SpellScriptLoader { 
Class:         class spell_q12372_destabilize_azure_dragonshrine_dummy_SpellScript : public SpellScript         {         
Class: class spell_q12372_destabilize_azure_dragonshrine_dummy : public SpellScriptLoader { 
Class:         class spell_q12372_destabilize_azure_dragonshrine_dummy_SpellScript : public SpellScript         {         
Class: class spell_gen_upper_deck_create_foam_sword : public SpellScriptLoader { 
Class:         class spell_gen_upper_deck_create_foam_sword_SpellScript : public SpellScript         {         
Class: class spell_gen_bonked : public SpellScriptLoader { 
Class:         class spell_gen_bonked_SpellScript : public SpellScript         {         
Class: class spell_q12372_cast_from_gossip_trigger : public SpellScriptLoader { 
Class:         class spell_q12372_cast_from_gossip_trigger_SpellScript : public SpellScript         {         
Class:class spell_wintergrasp_defender_teleport : public SpellScriptLoader { 
Class:     class spell_wintergrasp_defender_teleport_SpellScript : public SpellScript     {     
Class:class achievement_wg_didnt_stand_a_chance : public AchievementCriteriaScript { 
Class:class spell_wintergrasp_grab_passenger : public SpellScriptLoader { 
Class:         class spell_wintergrasp_grab_passenger_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pl && pl->GetSession());'), (4, 1, u'+    ASSERT(player && player->GetSession());')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: Battlefield::SendAreaSpiritHealerQueryOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pl && pl->GetSession());'), (4, 1, u'+    ASSERT(player && player->GetSession());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pl && pl->GetSession());'), (4, 1, u'+    ASSERT(player && player->GetSession());')]
===========================================
Class: class npc_wg_demolisher_engineer : public CreatureScript { 
Class: class spell_wintergrasp_force_building : public SpellScriptLoader { 
Class:         class spell_wintergrasp_force_building_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(capturePoint);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: BfCapturePoint::SendChangePhase
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(capturePoint);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(capturePoint);')]
===========================================
Class:class achievement_wg_didnt_stand_a_chance : public AchievementCriteriaScript { 
Class: class npc_wg_demolisher_engineer : public CreatureScript { 
Class: class npc_wg_spirit_guide : public CreatureScript { 
Class: class npc_wg_queue : public CreatureScript { 
Class: class go_wg_vehicle_teleporter : public GameObjectScript { 
Class: class npc_wg_quest_giver : public CreatureScript { 
Class:class spell_pal_exorcism_and_holy_wrath_damage : public SpellScriptLoader { 
Class:         class spell_pal_exorcism_and_holy_wrath_damage_AuraScript : public AuraScript         {         
Class:            Class             = target->getClass();
Class:            Class             = fields[5].GetUInt8();
Class:            Class             = target->getClass();
Class:            Class             = fields[5].GetUInt8();
Class:class spell_dru_insect_swarm : public SpellScriptLoader { 
Class:         class spell_dru_insect_swarm_AuraScript : public AuraScript         {         
Class:class spell_pri_shadow_word_death : public SpellScriptLoader { 
Class:         class spell_pri_shadow_word_death_SpellScript : public SpellScript         {         
Class: class spell_q12735_song_of_cleansing : public SpellScriptLoader { 
Class:         class spell_q12735_song_of_cleansing_SpellScript : public SpellScript         {         
Class:class spell_gen_stop_time : public SpellScriptLoader { 
Class:     class spell_gen_stop_time_AuraScript : public AuraScript     {     
Class:class checkRitualTarget class RitualTargetCheck         explicit checkRitualTarget(Unit* _caster) : caster(_caster) { }         explicit checkRitualTarget(Unit* _caster) : caster(_caster) 
Class: class spell_q12066_bunny_kill_credit : public SpellScriptLoader { 
Class:     class spell_q12066_bunny_kill_credit_SpellScript : public SpellScript     {     
Class:class npc_arthas_teleport_visual : public CreatureScript { 
Class:class spell_icc_soul_missile : public SpellScriptLoader { 
Class:         class spell_icc_soul_missile_SpellScript : public SpellScript         {         
Class: class spell_item_uded : public SpellScriptLoader { 
Class:         class spell_item_uded_SpellScript : public SpellScript         {         
Class: class go_midsummer_bonfire : public GameObjectScript { 
Class:class spell_warr_bloodthirst_heal : public SpellScriptLoader enum BloodthirstHeal public:     spell_warr_bloodthirst_heal() : SpellScriptLoader() { }     spell_warr_bloodthirst_heal() : SpellScriptLoader() 
Class:    class spell_warr_bloodthirst_heal_SpellScript : public SpellScript     {     
Class:class spell_warr_bloodthirst_heal : public SpellScriptLoader { 
Class:class spell_warr_bloodthirst_heal : public SpellScriptLoader { 
Class:     class spell_warr_bloodthirst_heal_SpellScript : public SpellScript     {     
Class:class TriggerWickedSpirit : public BasicEvent { 
Class:class StarfallDummyTargetFilter { 
Class:class spell_warl_curse_of_doom : public SpellScriptLoader { 
Class:         class spell_warl_curse_of_doom_AuraScript : public AuraScript         {         
Class:class spell_priest_renew : public SpellScriptLoader { 
Class:         class spell_priest_renew_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(dungeon);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: LFGMgr::UpdateProposal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(dungeon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(dungeon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        ASSERT(dungeon);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: LFGMgr::UpdateProposal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        ASSERT(dungeon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        ASSERT(dungeon);')]
===========================================
Class:class spell_warl_pet_scaling_01 : public SpellScriptLoader { 
Class:     class spell_warl_pet_scaling_01_AuraScript : public AuraScript     {     
Class: class spell_warl_pet_scaling_02 : public SpellScriptLoader { 
Class:     class spell_warl_pet_scaling_02_AuraScript : public AuraScript     {     
Class: class spell_warl_pet_scaling_03 : public SpellScriptLoader { 
Class:     class spell_warl_pet_scaling_03_AuraScript : public AuraScript     {     
Class:  class spell_warl_pet_scaling_04 : public SpellScriptLoader { 
Class:     class spell_warl_pet_scaling_04_AuraScript : public AuraScript     {     
Class: class spell_warl_pet_scaling_05 : public SpellScriptLoader { 
Class:     class spell_warl_pet_scaling_05_AuraScript : public AuraScript     {     
Class: class spell_warl_pet_passive : public SpellScriptLoader { 
Class:     class spell_warl_pet_passive_AuraScript : public AuraScript     {     
Class: class spell_warl_pet_passive_damage_done : public SpellScriptLoader { 
Class:     class spell_warl_pet_passive_damage_done_AuraScript : public AuraScript     {     
Class: class spell_warl_pet_passive_voidwalker : public SpellScriptLoader { 
Class:     class spell_warl_pet_passive_voidwalker_AuraScript : public AuraScript     {     
Class:  class spell_sha_pet_scaling_04 : public SpellScriptLoader { 
Class:     class spell_sha_pet_scaling_04_AuraScript : public AuraScript     {     
Class: class spell_hun_pet_scaling_01 : public SpellScriptLoader { 
Class:     class spell_hun_pet_scaling_01_AuraScript : public AuraScript     {     
Class: class spell_hun_pet_scaling_02 : public SpellScriptLoader { 
Class:     class spell_hun_pet_scaling_02_AuraScript : public AuraScript     {     
Class: class spell_hun_pet_scaling_03 : public SpellScriptLoader { 
Class:     class spell_hun_pet_scaling_03_AuraScript : public AuraScript     {     
Class: class spell_hun_pet_scaling_04 : public SpellScriptLoader { 
Class:     class spell_hun_pet_scaling_04_AuraScript : public AuraScript     {     
Class: class spell_hun_pet_passive_crit : public SpellScriptLoader { 
Class:     class spell_hun_pet_passive_crit_AuraScript : public AuraScript     {     
Class: class spell_hun_pet_passive_damage_done : public SpellScriptLoader { 
Class:     class spell_hun_pet_passive_damage_done_AuraScript : public AuraScript     {     
Class: class spell_hun_animal_handler : public SpellScriptLoader { 
Class:     class spell_hun_animal_handler_AuraScript : public AuraScript     {     
Class:  class spell_dk_avoidance_passive : public SpellScriptLoader { 
Class:     class spell_dk_avoidance_passive_AuraScript : public AuraScript     {     
Class: class spell_dk_pet_scaling_01 : public SpellScriptLoader { 
Class:     class spell_dk_pet_scaling_01_AuraScript : public AuraScript     {     
Class: class spell_dk_pet_scaling_02 : public SpellScriptLoader { 
Class:     class spell_dk_pet_scaling_02_AuraScript : public AuraScript     {     
Class: class spell_dk_pet_scaling_03 : public SpellScriptLoader { 
Class:     class spell_dk_pet_scaling_03_AuraScript : public AuraScript     {     
Class: class spell_dk_rune_weapon_scaling_02 : public SpellScriptLoader { 
Class:     class spell_dk_rune_weapon_scaling_02_AuraScript : public AuraScript     {     
Class:class spell_gothic_shadow_bolt_volley : public SpellScriptLoader class spell_gothik_shadow_bolt_volley : public SpellScriptLoader         spell_gothic_shadow_bolt_volley() : SpellScriptLoader() { }         spell_gothic_shadow_bolt_volley() : SpellScriptLoader() 
Class: class spell_gen_pet_calculate : public SpellScriptLoader { 
Class:         class spell_gen_pet_calculate_AuraScript : public AuraScript         {         
Class: class go_frostblade_shrine : public GameObjectScript { 
Class:class MarkTargetFilter { 
Class: class spell_mark_of_kazrogal : public SpellScriptLoader { 
Class:         class spell_mark_of_kazrogal_SpellScript : public SpellScript         {         
Class:         class spell_mark_of_kazrogal_AuraScript : public AuraScript         {         
Class:class spell_krystallus_shatter : public SpellScriptLoader { 
Class:         class spell_krystallus_shatter_SpellScript : public SpellScript         {         
Class: class spell_krystallus_shatter_effect : public SpellScriptLoader { 
Class:         class spell_krystallus_shatter_effect_SpellScript : public SpellScript         {         
Class:class spell_gruul_shatter : public SpellScriptLoader { 
Class:         class spell_gruul_shatter_SpellScript : public SpellScript         {         
Class: class spell_gruul_shatter_effect : public SpellScriptLoader { 
Class:         class spell_gruul_shatter_effect_SpellScript : public SpellScript         {         
Class:class spell_mark_of_kazzak : public SpellScriptLoader { 
Class:         class spell_mark_of_kazzak_AuraScript : public AuraScript         {         
Class:class spell_dru_predatory_strikes : public SpellScriptLoader { 
Class:         class spell_dru_predatory_strikes_AuraScript : public AuraScript         {         
Class: class spell_dru_savage_roar : public SpellScriptLoader { 
Class:         class spell_dru_savage_roar_SpellScript : public SpellScript         {         
Class:         class spell_dru_savage_roar_AuraScript : public AuraScript         {         
Class: class spell_dru_survival_instincts : public SpellScriptLoader { 
Class:         class spell_dru_survival_instincts_SpellScript : public SpellScript         {         
Class:         class spell_dru_survival_instincts_AuraScript : public AuraScript         {         
Class: class spell_gen_summon_elemental : public SpellScriptLoader { 
Class:         class spell_gen_summon_elemental_AuraScript : public AuraScript         {         
Class: class spell_gen_mount : public SpellScriptLoader { 
Class:         class spell_gen_mount_SpellScript : public SpellScript         {         
Class:class spell_hun_tame_beast : public SpellScriptLoader { 
Class:         class spell_hun_tame_beast_SpellScript : public SpellScript         {         
Class:class spell_pal_righteous_defense : public SpellScriptLoader { 
Class:         class spell_pal_righteous_defense_SpellScript : public SpellScript         {         
Class:class spell_sha_sentry_totem : public SpellScriptLoader { 
Class:         class spell_sha_sentry_totem_AuraScript : public AuraScript         {         
Class: class spell_q12096_q12092_dummy : public SpellScriptLoader  { 
Class:     class spell_q12096_q12092_dummy_SpellScript : public SpellScript     {     
Class: class spell_q12096_q12092_bark : public SpellScriptLoader  { 
Class:     class spell_q12096_q12092_bark_SpellScript : public SpellScript     {     
Class: class spell_q12589_shoot_rjr : public SpellScriptLoader { 
Class:     class spell_q12589_shoot_rjr_SpellScript : public SpellScript     {     
Class: class npc_generic_harpoon_cannon : public CreatureScript { 
Class:class spell_gen_touch_the_nightmare : public SpellScriptLoader { 
Class:     class spell_gen_touch_the_nightmare_SpellScript : public SpellScript     {     
Class: class spell_gen_dream_funnel: public SpellScriptLoader { 
Class:     class spell_gen_dream_funnel_AuraScript : public AuraScript     {     
Class:class spell_shadowfang_keep_haunting_spirits : public SpellScriptLoader { 
Class:         class spell_shadowfang_keep_haunting_spirits_AuraScript : public AuraScript         {         
Class:class spell_hexlord_unstable_affliction : public SpellScriptLoader { 
Class:         class spell_hexlord_unstable_affliction_AuraScript : public AuraScript         {         
Class:class spell_faction_champion_warl_unstable_affliction : public SpellScriptLoader { 
Class:         class spell_faction_champion_warl_unstable_affliction_AuraScript : public AuraScript         {         
Class:class spell_four_horsemen_mark : public SpellScriptLoader { 
Class:         class spell_four_horsemen_mark_AuraScript : public AuraScript         {         
Class:class spell_gothic_shadow_bolt_volley : public SpellScriptLoader { 
Class:         class spell_gothic_shadow_bolt_volley_SpellScript : public SpellScript         {         
Class:class spell_kelthuzad_detonate_mana : public SpellScriptLoader { 
Class:         class spell_kelthuzad_detonate_mana_AuraScript : public AuraScript         {         
Class:class spell_loken_pulsing_shockwave : public SpellScriptLoader { 
Class:         class spell_loken_pulsing_shockwave_SpellScript : public SpellScript         {         
Class:class spell_general_vezax_saronite_vapors : public SpellScriptLoader { 
Class:         class spell_general_vezax_saronite_vapors_AuraScript : public AuraScript         {         
Class:class StarfallDummyTargetFilter { 
Class:class spell_dru_lifebloom : public SpellScriptLoader { 
Class:         class spell_dru_lifebloom_AuraScript : public AuraScript         {         
Class: class spell_gen_bandage : public SpellScriptLoader { 
Class:         class spell_gen_bandage_SpellScript : public SpellScript         {         
Class: class spell_gen_lifebloom : public SpellScriptLoader { 
Class:         class spell_gen_lifebloom_AuraScript : public AuraScript         {         
Class:class spell_hun_disengage : public SpellScriptLoader { 
Class:         class spell_hun_disengage_SpellScript : public SpellScript         {         
Class:class spell_mage_living_bomb : public SpellScriptLoader { 
Class:         class spell_mage_living_bomb_AuraScript : public AuraScript         {         
Class:class spell_pal_lay_on_hands : public SpellScriptLoader { 
Class:         class spell_pal_lay_on_hands_SpellScript : public SpellScript         {         
Class:class spell_pri_vampiric_touch : public SpellScriptLoader { 
Class:         class spell_pri_vampiric_touch_AuraScript : public AuraScript         {         
Class:class spell_sha_flame_shock : public SpellScriptLoader { 
Class:         class spell_sha_flame_shock_AuraScript : public AuraScript         {         
Class:class spell_warl_haunt : public SpellScriptLoader { 
Class:         class spell_warl_haunt_SpellScript : public SpellScript         {         
Class:         class spell_warl_haunt_AuraScript : public AuraScript         {         
Class: class spell_warl_unstable_affliction : public SpellScriptLoader { 
Class:         class spell_warl_unstable_affliction_AuraScript : public AuraScript         {         
Class: class go_dragonspire_hall_rune : public GameObjectScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattlegroundAB::_GetNodeNameId
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattlegroundSA::CaptureGraveyard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            ASSERT(_hiItemGuid < 0xFFFFFFFE && "Item guid overflow!");'), (18, 1, u'+            ASSERT(_hiCreatureGuid < 0x00FFFFFE && "Creature guid overflow!");'), (28, 1, u'+            ASSERT(_hiPetGuid < 0x00FFFFFE && "Pet guid overflow!");'), (38, 1, u'+            ASSERT(_hiVehicleGuid < 0x00FFFFFF && "Vehicle guid overflow!");'), (48, 1, u'+            ASSERT(_hiCharGuid < 0xFFFFFFFE && "Player guid overflow!");'), (58, 1, u'+            ASSERT(_hiGoGuid < 0x00FFFFFE && "Gameobject guid overflow!");'), (68, 1, u'+            ASSERT(_hiCorpseGuid < 0xFFFFFFFE && "Corpse guid overflow!");'), (78, 1, u'+            ASSERT(_hiDoGuid < 0xFFFFFFFE && "DynamicObject guid overflow!");'), (88, 1, u'+            ASSERT(_hiMoTransGuid < 0xFFFFFFFE && "MO Transport guid overflow!");'), (92, 2, u'-            ASSERT(0);'), (93, 1, u'+            ASSERT(false && "ObjectMgr::GenerateLowGuid - Unknown HIGHGUID type");'), (97, 2, u'-    ASSERT(0);')]
===========================================
===========================================
Total add: 29
Total del: 49
Header: ObjectMgr::GenerateLowGuid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            ASSERT(_hiItemGuid < 0xFFFFFFFE && "Item guid overflow!");'), (18, 1, u'+            ASSERT(_hiCreatureGuid < 0x00FFFFFE && "Creature guid overflow!");'), (28, 1, u'+            ASSERT(_hiPetGuid < 0x00FFFFFE && "Pet guid overflow!");'), (38, 1, u'+            ASSERT(_hiVehicleGuid < 0x00FFFFFF && "Vehicle guid overflow!");'), (48, 1, u'+            ASSERT(_hiCharGuid < 0xFFFFFFFE && "Player guid overflow!");'), (58, 1, u'+            ASSERT(_hiGoGuid < 0x00FFFFFE && "Gameobject guid overflow!");'), (68, 1, u'+            ASSERT(_hiCorpseGuid < 0xFFFFFFFE && "Corpse guid overflow!");'), (78, 1, u'+            ASSERT(_hiDoGuid < 0xFFFFFFFE && "DynamicObject guid overflow!");'), (88, 1, u'+            ASSERT(_hiMoTransGuid < 0xFFFFFFFE && "MO Transport guid overflow!");'), (92, 2, u'-            ASSERT(0);'), (93, 1, u'+            ASSERT(false && "ObjectMgr::GenerateLowGuid - Unknown HIGHGUID type");'), (97, 2, u'-    ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            ASSERT(_hiItemGuid < 0xFFFFFFFE && "Item guid overflow!");'), (18, 1, u'+            ASSERT(_hiCreatureGuid < 0x00FFFFFE && "Creature guid overflow!");'), (28, 1, u'+            ASSERT(_hiPetGuid < 0x00FFFFFE && "Pet guid overflow!");'), (38, 1, u'+            ASSERT(_hiVehicleGuid < 0x00FFFFFF && "Vehicle guid overflow!");'), (48, 1, u'+            ASSERT(_hiCharGuid < 0xFFFFFFFE && "Player guid overflow!");'), (58, 1, u'+            ASSERT(_hiGoGuid < 0x00FFFFFE && "Gameobject guid overflow!");'), (68, 1, u'+            ASSERT(_hiCorpseGuid < 0xFFFFFFFE && "Corpse guid overflow!");'), (78, 1, u'+            ASSERT(_hiDoGuid < 0xFFFFFFFE && "DynamicObject guid overflow!");'), (88, 1, u'+            ASSERT(_hiMoTransGuid < 0xFFFFFFFE && "MO Transport guid overflow!");'), (92, 2, u'-            ASSERT(0);'), (93, 1, u'+            ASSERT(false && "ObjectMgr::GenerateLowGuid - Unknown HIGHGUID type");'), (97, 2, u'-    ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(oldMap);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(oldMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(oldMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(mover != NULL);                                  // there must always be a mover'), (3, 1, u'+    ASSERT(mover != NULL);                      // there must always be a mover')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: WorldSession::HandleMovementOpcodes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(mover != NULL);                                  // there must always be a mover'), (3, 1, u'+    ASSERT(mover != NULL);                      // there must always be a mover')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(mover != NULL);                                  // there must always be a mover'), (3, 1, u'+    ASSERT(mover != NULL);                      // there must always be a mover')]
===========================================
Class: class go_dragonspire_hall_rune : public GameObjectScript { 
Class:class spell_rog_shadowstep : public SpellScriptLoader { 
Class:         class spell_rog_shadowstep_SpellScript : public SpellScript         {         
Class: class spell_q12277_wintergarde_mine_explosion : public SpellScriptLoader { 
Class:         class spell_q12277_wintergarde_mine_explosion_SpellScript : public SpellScript         {         
Class:class achievement_not_even_a_scratch : public AchievementCriteriaScript { 
Class:class mob_wrathbone_laborer : public CreatureScript { 
Class:class mob_spiteful_apparition : public CreatureScript { 
Class: class mob_spectral_warden : public CreatureScript { 
Class: class mob_soulguard_watchman : public CreatureScript { 
Class: class mob_soulguard_reaper : public CreatureScript { 
Class: class mob_soulguard_bonecaster : public CreatureScript { 
Class: class mob_soulguard_animator : public CreatureScript { 
Class: class mob_soulguard_adept : public CreatureScript { 
Class: class mob_soul_horror : public CreatureScript { 
Class:class spell_gen_despawn_self : public SpellScriptLoader { 
Class:     class spell_gen_despawn_self_SpellScript : public SpellScript     {     
Class: class spell_pri_prayer_of_mending_heal : public SpellScriptLoader { 
Class:     class spell_pri_prayer_of_mending_heal_SpellScript : public SpellScript     {     
Class:class spell_item_greatmothers_soulcatcher : public SpellScriptLoader { 
Class:     class spell_item_greatmothers_soulcatcher_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);'), (11, 1, u'+\tassert(run->magic == ARENA_RUN_MAGIC);'), (13, 2, u'-\tassert(bitmap_full(bitmap, &bin_info->bitmap_info) == false);'), (21, 2, u'-\tassert(regind < run->nextind);'), (25, 1, u'+\t\tassert(ret != NULL);'), (27, 1, u'+\t\tassert((uintptr_t)ret >= (uintptr_t)run +'), (29, 1, u'+\t\tassert((uintptr_t)ret < (uintptr_t)run->next);'), (30, 1, u'+\t\tassert(((uintptr_t)ret - ((uintptr_t)run +'), (38, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
Total add: 19
Total del: 12
Header: rb_gen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);'), (11, 1, u'+\tassert(run->magic == ARENA_RUN_MAGIC);'), (13, 2, u'-\tassert(bitmap_full(bitmap, &bin_info->bitmap_info) == false);'), (21, 2, u'-\tassert(regind < run->nextind);'), (25, 1, u'+\t\tassert(ret != NULL);'), (27, 1, u'+\t\tassert((uintptr_t)ret >= (uintptr_t)run +'), (29, 1, u'+\t\tassert((uintptr_t)ret < (uintptr_t)run->next);'), (30, 1, u'+\t\tassert(((uintptr_t)ret - ((uintptr_t)run +'), (38, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);'), (11, 1, u'+\tassert(run->magic == ARENA_RUN_MAGIC);'), (13, 2, u'-\tassert(bitmap_full(bitmap, &bin_info->bitmap_info) == false);'), (21, 2, u'-\tassert(regind < run->nextind);'), (25, 1, u'+\t\tassert(ret != NULL);'), (27, 1, u'+\t\tassert((uintptr_t)ret >= (uintptr_t)run +'), (29, 1, u'+\t\tassert((uintptr_t)ret < (uintptr_t)run->next);'), (30, 1, u'+\t\tassert(((uintptr_t)ret - ((uintptr_t)run +'), (38, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(run->nfree < bin_info->nregs);'), (11, 1, u'+\tassert(run->nfree < run->bin->nregs);'), (24, 2, u'-\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));'), (30, 1, u'+\tassert((uintptr_t)ptr < (uintptr_t)run->next);')]
===========================================
===========================================
Total add: 15
Total del: 13
Header: arena_run_reg_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(run->nfree < bin_info->nregs);'), (11, 1, u'+\tassert(run->nfree < run->bin->nregs);'), (24, 2, u'-\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));'), (30, 1, u'+\tassert((uintptr_t)ptr < (uintptr_t)run->next);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(run->nfree < bin_info->nregs);'), (11, 1, u'+\tassert(run->nfree < run->bin->nregs);'), (24, 2, u'-\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));'), (30, 1, u'+\tassert((uintptr_t)ptr < (uintptr_t)run->next);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (8, 1, u'+\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (8, 1, u'+\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (8, 1, u'+\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > arena->npurgatory || all);'), (3, 2, u'-\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);'), (4, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -'), (6, 1, u'+\tassert(arena->ndirty > arena->npurgatory);'), (7, 1, u'+\tassert(arena->ndirty > chunk_npages || all);'), (8, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > arena->npurgatory || all);'), (3, 2, u'-\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);'), (4, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -'), (6, 1, u'+\tassert(arena->ndirty > arena->npurgatory);'), (7, 1, u'+\tassert(arena->ndirty > chunk_npages || all);'), (8, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > arena->npurgatory || all);'), (3, 2, u'-\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);'), (4, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -'), (6, 1, u'+\tassert(arena->ndirty > arena->npurgatory);'), (7, 1, u'+\tassert(arena->ndirty > chunk_npages || all);'), (8, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (5, 1, u'+\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 3
Total del: 5
Header: arena_salloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (5, 1, u'+\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (5, 1, u'+\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= small_maxclass);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: arena_prof_promoted
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= small_maxclass);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= small_maxclass);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (5, 1, u'+\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 3
Total del: 5
Header: arena_salloc_demote
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (5, 1, u'+\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (5, 1, u'+\t\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: arena_dalloc_bin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(arena->magic == ARENA_MAGIC);'), (3, 1, u'+\t\tassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: arena_ralloc_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(arena->magic == ARENA_MAGIC);'), (3, 1, u'+\t\tassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(arena->magic == ARENA_MAGIC);'), (3, 1, u'+\t\tassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size'), (4, 1, u'+\t\t\tassert(choose_arena()->bins[small_size2bin[')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: arena_ralloc_no_move
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size'), (4, 1, u'+\t\t\tassert(choose_arena()->bins[small_size2bin[')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size'), (4, 1, u'+\t\t\tassert(choose_arena()->bins[small_size2bin[')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(small_size2bin[0] == 0xffU);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(small_size2bin[0] == 0xffU);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(small_size2bin[0] == 0xffU);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(SMALL_SIZE2BIN(i) == binind);'), (3, 1, u'+\t\tassert(small_size2bin[i] == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(sizeof(const_small_size2bin) == small_maxclass + 1);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: small_size2bin_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(sizeof(const_small_size2bin) == small_maxclass + 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(sizeof(const_small_size2bin) == small_maxclass + 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_isearch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_count
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_insert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_search
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);'), (3, 1, u'+\tassert(ckh->magic = CKH_MAGIG);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(alignment > chunksize);'), (3, 1, u'+\tassert(alignment >= chunksize);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: huge_palloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(alignment > chunksize);'), (3, 1, u'+\tassert(alignment >= chunksize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(alignment > chunksize);'), (3, 1, u'+\tassert(alignment >= chunksize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 44
Header: choose_arena_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\tassert(sa2u(small_maxclass+1,')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: imemalign
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\tassert(sa2u(small_maxclass+1,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\tassert(sa2u(small_maxclass+1,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,')]
===========================================
===========================================
Total add: 4
Total del: 7
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t\tassert(false);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: tcache_bin_flush_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: tcache_bin_flush_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: tcache_bin_flush_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
Class:class EarthenPowerTargetSelector { 
Class: class spell_sha_earthen_power : public SpellScriptLoader { 
Class:         class spell_sha_earthen_power_SpellScript : public SpellScript         {         
Class:class spell_spinning_pain_spike : public SpellScriptLoader { 
Class:         class spell_spinning_pain_spike_SpellScript : public SpellScript         {         
Class:class spell_gen_count_pct_from_max_hp : public SpellScriptLoader { 
Class:         class spell_gen_count_pct_from_max_hp_SpellScript : public SpellScript         {         
Class: class boss_algalon : public CreatureScript { 
Class:  class mob_collapsing_star : public CreatureScript { 
Class: class ActivateLivingConstellation : public BasicEvent { 
Class: class CosmicSmashDamageEvent : public BasicEvent { 
Class: class SummonUnleashedDarkMatter : public BasicEvent { 
Class: class boss_algalon_the_observer : public CreatureScript { 
Class: class npc_living_constellation : public CreatureScript { 
Class: class npc_collapsing_star : public CreatureScript { 
Class: class npc_brann_bronzebeard_algalon : public CreatureScript { 
Class: class go_celestial_planetarium_access : public GameObjectScript { 
Class: class spell_algalon_phase_punch : public SpellScriptLoader { 
Class:         class spell_algalon_phase_punch_AuraScript : public AuraScript         {         
Class: class NotVictimFilter { 
Class: class spell_algalon_arcane_barrage : public SpellScriptLoader { 
Class:         class spell_algalon_arcane_barrage_SpellScript : public SpellScript         {         
Class: class ActiveConstellationFilter { 
Class: class spell_algalon_trigger_3_adds : public SpellScriptLoader { 
Class:         class spell_algalon_trigger_3_adds_SpellScript : public SpellScript         {         
Class: class spell_algalon_collapse : public SpellScriptLoader { 
Class:         class spell_algalon_collapse_AuraScript : public AuraScript         {         
Class: class spell_algalon_big_bang : public SpellScriptLoader { 
Class:         class spell_algalon_big_bang_SpellScript : public SpellScript         {         
Class: class spell_algalon_remove_phase : public SpellScriptLoader { 
Class:         class spell_algalon_remove_phase_AuraScript : public AuraScript         {         
Class: class spell_algalon_cosmic_smash : public SpellScriptLoader { 
Class:         class spell_algalon_cosmic_smash_SpellScript : public SpellScript         {         
Class: class spell_algalon_cosmic_smash_damage : public SpellScriptLoader { 
Class:         class spell_algalon_cosmic_smash_damage_SpellScript : public SpellScript         {         
Class: class spell_algalon_supermassive_fail : public SpellScriptLoader { 
Class:         class spell_algalon_supermassive_fail_SpellScript : public SpellScript         {         
Class: class achievement_he_feeds_on_your_tears : public AchievementCriteriaScript { 
Class: class npc_gas_cloud : public CreatureScript { 
Class:class spell_putricide_ooze_summon : public SpellScriptLoader { 
Class:         class spell_putricide_ooze_summon_AuraScript : public AuraScript         {         
Class:class spell_putricide_clear_mutated_plague : public SpellScriptLoader  class spell_putricide_clear_aura_effect_value : public SpellScriptLoader         spell_putricide_clear_mutated_plague() : SpellScriptLoader() { }         spell_putricide_clear_mutated_plague() : SpellScriptLoader() 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);'), (11, 1, u'+\tdassert(run->magic == ARENA_RUN_MAGIC);'), (13, 1, u'+\tassert(bitmap_full(bitmap, &bin_info->bitmap_info) == false);'), (22, 2, u'-\t\tassert(ret != NULL);'), (24, 2, u'-\t\tassert((uintptr_t)ret >= (uintptr_t)run +'), (26, 2, u'-\t\tassert((uintptr_t)ret < (uintptr_t)run->next);'), (27, 2, u'-\t\tassert(((uintptr_t)ret - ((uintptr_t)run +'), (35, 2, u'-\tassert(ret != NULL);'), (38, 1, u'+\tassert(regind < run->nextind);')]
===========================================
===========================================
Total add: 12
Total del: 19
Header: rb_gen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);'), (11, 1, u'+\tdassert(run->magic == ARENA_RUN_MAGIC);'), (13, 1, u'+\tassert(bitmap_full(bitmap, &bin_info->bitmap_info) == false);'), (22, 2, u'-\t\tassert(ret != NULL);'), (24, 2, u'-\t\tassert((uintptr_t)ret >= (uintptr_t)run +'), (26, 2, u'-\t\tassert((uintptr_t)ret < (uintptr_t)run->next);'), (27, 2, u'-\t\tassert(((uintptr_t)ret - ((uintptr_t)run +'), (35, 2, u'-\tassert(ret != NULL);'), (38, 1, u'+\tassert(regind < run->nextind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);'), (11, 1, u'+\tdassert(run->magic == ARENA_RUN_MAGIC);'), (13, 1, u'+\tassert(bitmap_full(bitmap, &bin_info->bitmap_info) == false);'), (22, 2, u'-\t\tassert(ret != NULL);'), (24, 2, u'-\t\tassert((uintptr_t)ret >= (uintptr_t)run +'), (26, 2, u'-\t\tassert((uintptr_t)ret < (uintptr_t)run->next);'), (27, 2, u'-\t\tassert(((uintptr_t)ret - ((uintptr_t)run +'), (35, 2, u'-\tassert(ret != NULL);'), (38, 1, u'+\tassert(regind < run->nextind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(run->nfree < run->bin->nregs);'), (11, 1, u'+\tassert(run->nfree < bin_info->nregs);'), (27, 2, u'-\tassert((uintptr_t)ptr < (uintptr_t)run->next);'), (30, 1, u'+\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));')]
===========================================
===========================================
Total add: 13
Total del: 15
Header: arena_run_reg_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(run->nfree < run->bin->nregs);'), (11, 1, u'+\tassert(run->nfree < bin_info->nregs);'), (27, 2, u'-\tassert((uintptr_t)ptr < (uintptr_t)run->next);'), (30, 1, u'+\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(run->nfree < run->bin->nregs);'), (11, 1, u'+\tassert(run->nfree < bin_info->nregs);'), (27, 2, u'-\tassert((uintptr_t)ptr < (uintptr_t)run->next);'), (30, 1, u'+\tassert(bitmap_get(bitmap, &bin_info->bitmap_info, regind));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (4, 1, u'+\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (4, 1, u'+\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (4, 1, u'+\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > arena->npurgatory);'), (3, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (4, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);'), (5, 1, u'+\tassert(arena->ndirty > arena->npurgatory || all);'), (6, 1, u'+\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);'), (7, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > arena->npurgatory);'), (3, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (4, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);'), (5, 1, u'+\tassert(arena->ndirty > arena->npurgatory || all);'), (6, 1, u'+\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);'), (7, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > arena->npurgatory);'), (3, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (4, 2, u'-\tassert((arena->nactive >> opt_lg_dirty_mult) < arena->ndirty || all);'), (5, 1, u'+\tassert(arena->ndirty > arena->npurgatory || all);'), (6, 1, u'+\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);'), (7, 1, u'+\tassert((arena->nactive >> opt_lg_dirty_mult) < (arena->ndirty -')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(bin->runcur->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: arena_salloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size <= small_maxclass);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: arena_prof_promoted
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size <= small_maxclass);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size <= small_maxclass);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: arena_salloc_demote
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\t\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: arena_dalloc_bin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(run->magic == ARENA_RUN_MAGIC);'), (3, 1, u'+\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(arena->magic == ARENA_MAGIC);'), (3, 1, u'+\t\tdassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: arena_ralloc_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(arena->magic == ARENA_MAGIC);'), (3, 1, u'+\t\tdassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(arena->magic == ARENA_MAGIC);'), (3, 1, u'+\t\tdassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(choose_arena()->bins[small_size2bin['), (4, 1, u'+\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: arena_ralloc_no_move
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(choose_arena()->bins[small_size2bin['), (4, 1, u'+\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(choose_arena()->bins[small_size2bin['), (4, 1, u'+\t\t\tassert(arena_bin_info[SMALL_SIZE2BIN(oldsize)].reg_size')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(small_size2bin[0] == 0xffU);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(small_size2bin[0] == 0xffU);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(small_size2bin[0] == 0xffU);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: small_size2bin_validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(small_size2bin[i] == binind);'), (3, 1, u'+\t\tassert(SMALL_SIZE2BIN(i) == binind);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(sizeof(const_small_size2bin) == small_maxclass + 1);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: small_size2bin_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(sizeof(const_small_size2bin) == small_maxclass + 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(sizeof(const_small_size2bin) == small_maxclass + 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_isearch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_count
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_insert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ckh_search
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ckh->magic = CKH_MAGIG);'), (3, 1, u'+\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(alignment >= chunksize);'), (3, 1, u'+\tassert(alignment > chunksize);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: huge_palloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(alignment >= chunksize);'), (3, 1, u'+\tassert(alignment > chunksize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(alignment >= chunksize);'), (3, 1, u'+\tassert(alignment > chunksize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
Total add: 44
Total del: 4
Header: choose_arena_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(arenas[0] != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\t\t\tassert(sa2u(small_maxclass+1,')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\t\t\tassert(sa2u(small_maxclass+1,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\t\t\tassert(sa2u(small_maxclass+1,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tassert(usize_promoted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: tcache_bin_flush_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: tcache_bin_flush_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\t\tassert(merged_stats == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: tcache_bin_flush_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tbin->ncached > 0 || tbin->avail == NULL);')]
===========================================
Class:class AbominationDespawner { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: ConfusedMovementGenerator<T>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+        ASSERT(mesh);'), (93, 1, u'+        ASSERT(mmap->navMesh);'), (136, 1, u'+        ASSERT(data);'), (199, 1, u'+            ASSERT(false);'), (287, 1, u'+            ASSERT(query);')]
===========================================
Class: class spell_sha_chain_heal : public SpellScriptLoader { 
Class:         class spell_sha_chain_heal_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT( i_nextMove <= MAX_CONF_WAYPOINTS );'), (3, 1, u'+            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ConfusedMovementGenerator<T>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT( i_nextMove <= MAX_CONF_WAYPOINTS );'), (3, 1, u'+            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT( i_nextMove <= MAX_CONF_WAYPOINTS );'), (3, 1, u'+            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(p != NULL);'), (3, 1, u'+                ASSERT(p);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(p != NULL);'), (3, 1, u'+                ASSERT(p);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(p != NULL);'), (3, 1, u'+                ASSERT(p);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(creature->GetCreatureTemplate() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureTemplate());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(creature->GetCreatureTemplate() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureTemplate());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(creature->GetCreatureTemplate() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureTemplate());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    ASSERT(m != NULL);'), (11, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: MapManager::CreateBaseMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    ASSERT(m != NULL);'), (11, 1, u'+    ASSERT(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    ASSERT(m != NULL);'), (11, 1, u'+    ASSERT(map);')]
===========================================
Class:class MysticBuffetTargetFilter { 
Class: class spell_sindragosa_mystic_buffet : public SpellScriptLoader { 
Class:         class spell_sindragosa_mystic_buffet_SpellScript : public SpellScript         {         
Class:class FrostBombExplosion : public BasicEvent { 
Class: class spell_warr_overpower : public SpellScriptLoader { 
Class:     class spell_warr_overpower_SpellScript : public SpellScript     {     
Class:     class spell_gen_allow_cast_from_item_only_SpellScript : public SpellScript     {     
Class:class spell_gen_wg_water : public SpellScriptLoader { 
Class:         class spell_gen_wg_water_SpellScript : public SpellScript         {         
Class:class spell_spinning_pain_spike : public SpellScriptLoader { 
Class:         class spell_spinning_pain_spike_SpellScript : public SpellScript         {         
Class: class spell_hun_misdirection : public SpellScriptLoader { 
Class:         class spell_hun_misdirection_AuraScript : public AuraScript         {         
Class:  class spell_hun_misdirection_proc : public SpellScriptLoader { 
Class:         class spell_hun_misdirection_proc_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(item);'), (7, 1, u'+    ASSERT(pItem);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Guild::PlayerMoveItemData::RemoveItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(item);'), (7, 1, u'+    ASSERT(pItem);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(item);'), (7, 1, u'+    ASSERT(pItem);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pItem);'), (7, 1, u'+    ASSERT(item);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Guild::PlayerMoveItemData::RemoveItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pItem);'), (7, 1, u'+    ASSERT(item);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pItem);'), (7, 1, u'+    ASSERT(item);')]
===========================================
Class:class spell_deathbringer_remove_marks : public SpellScriptLoader { 
Class:         class spell_deathbringer_remove_marks_SpellScript : public SpellScript         {         
Class: class mob_shadow_of_aran : public CreatureScript { 
Class: class mob_ancient_core_hound : public CreatureScript { 
Class:  class mob_coilfang_elite : public CreatureScript { 
Class:   class mob_coilfang_strider : public CreatureScript { 
Class:class mob_coilfang_guardian : public CreatureScript { 
Class: class AreaTrigger_at_area_52_entrance : public AreaTriggerScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");'), (3, 1, u'+                            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::SelectEffectImplicitTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");'), (3, 1, u'+                            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");'), (3, 1, u'+                            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                             ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");'), (3, 1, u'+                             ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::SelectEffectImplicitTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                             ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");'), (3, 1, u'+                             ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                             ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");'), (3, 1, u'+                             ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");'), (3, 1, u'+                            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::SelectEffectImplicitTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");'), (3, 1, u'+                            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");'), (3, 1, u'+                            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");')]
===========================================
Class:class spell_gen_ds_flush_knockback : public SpellScriptLoader { 
Class:         class spell_gen_ds_flush_knockback_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-                ASSERT(victim->GetCharmer()->GetTypeId() == TYPEID_PLAYER);'), (12, 2, u'-                ASSERT(victim->GetTypeId() == TYPEID_PLAYER);'), (16, 2, u'-            ASSERT(he->duel);'), (17, 1, u'+            ASSERT(he && he->duel);')]
===========================================
===========================================
Total add: 2
Total del: 13
Header: Unit::DealDamage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-                ASSERT(victim->GetCharmer()->GetTypeId() == TYPEID_PLAYER);'), (12, 2, u'-                ASSERT(victim->GetTypeId() == TYPEID_PLAYER);'), (16, 2, u'-            ASSERT(he->duel);'), (17, 1, u'+            ASSERT(he && he->duel);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-                ASSERT(victim->GetCharmer()->GetTypeId() == TYPEID_PLAYER);'), (12, 2, u'-                ASSERT(victim->GetTypeId() == TYPEID_PLAYER);'), (16, 2, u'-            ASSERT(he->duel);'), (17, 1, u'+            ASSERT(he && he->duel);')]
===========================================
Class:class TrinityStringTextBuilder { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(passenger->IsOnVehicle(GetBase()));'), (3, 2, u'-            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: Vehicle::RelocatePassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(passenger->IsOnVehicle(GetBase()));'), (3, 2, u'-            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(passenger->IsOnVehicle(GetBase()));'), (3, 2, u'-            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(creature->GetCreatureInfo() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureTemplate() != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(creature->GetCreatureInfo() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureTemplate() != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(creature->GetCreatureInfo() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureTemplate() != NULL);')]
===========================================
Class:class spell_warl_demonic_circle_summon : public SpellScriptLoader { 
Class:         class spell_warl_demonic_circle_summon_AuraScript : public AuraScript         {         
Class: class spell_warl_demonic_circle_teleport : public SpellScriptLoader { 
Class:         class spell_warl_demonic_circle_teleport_AuraScript : public AuraScript         {         
Class: class npc_goblin_prisoner : public CreatureScript { 
Class: class go_rusty_cage : public GameObjectScript { 
Class: class go_black_cage : public GameObjectScript { 
Class:class FrostBombTargetSelector { 
Class: class spell_sindragosa_collision_filter : public SpellScriptLoader { 
Class:         class spell_sindragosa_collision_filter_SpellScript : public SpellScript         {         
Class:class spell_item_muisek_vessel : public SpellScriptLoader { 
Class:         class spell_item_muisek_vessel_SpellScript : public SpellScript         {         
Class:    class spell_q12987_read_pronouncement_AuraScript : public AuraScript     class spell_q12987_read_pronouncement_AuraScript : public AuraScript
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetObjectTargets - no explicit object target available!");'), (3, 1, u'+    ASSERT((m_targets.GetObjectTarget() || m_targets.GetItemTarget()) && "Spell::SelectImplicitTargetObjectTargets - no explicit object or item target available!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::SelectImplicitTargetObjectTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetObjectTargets - no explicit object target available!");'), (3, 1, u'+    ASSERT((m_targets.GetObjectTarget() || m_targets.GetItemTarget()) && "Spell::SelectImplicitTargetObjectTargets - no explicit object or item target available!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_targets.GetObjectTarget() && "Spell::SelectImplicitTargetObjectTargets - no explicit object target available!");'), (3, 1, u'+    ASSERT((m_targets.GetObjectTarget() || m_targets.GetItemTarget()) && "Spell::SelectImplicitTargetObjectTargets - no explicit object or item target available!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");'), (79, 1, u'+                             ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");'), (93, 1, u'+                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");'), (104, 1, u'+            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target category");')]
===========================================
===========================================
Total add: 117
Total del: 53
Header: Spell::SelectSpellTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");'), (79, 1, u'+                             ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");'), (93, 1, u'+                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");'), (104, 1, u'+            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target category");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_SRC");'), (79, 1, u'+                             ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT_DEST");'), (93, 1, u'+                            ASSERT("Spell::SelectEffectImplicitTargets: received not implemented select target reference type for TARGET_TYPE_OBJECT");'), (104, 1, u'+            ASSERT(false && "Spell::SelectEffectImplicitTargets: received not implemented select target category");')]
===========================================
Class:class spell_thaddius_polarity_shift : public SpellScriptLoader { 
Class:         class spell_thaddius_polarity_shift_SpellScript : public SpellScript         {         
Class:class spell_vehicle_throw_passenger : public SpellScriptLoader { 
Class:         class spell_vehicle_throw_passenger_SpellScript : public SpellScript         {         
Class: class spell_astromancer_wrath_of_the_astromancer : public SpellScriptLoader { 
Class:         class spell_astromancer_wrath_of_the_astromancer_SpellScript : public SpellScript         {         
Class: class spell_capacitus_polarity_shift : public SpellScriptLoader { 
Class:         class spell_capacitus_polarity_shift_SpellScript : public SpellScript         {         
Class: class spell_dk_death_strike : public SpellScriptLoader { 
Class:         class spell_dk_death_strike_SpellScript : public SpellScript         {         
Class: class spell_dk_death_coil : public SpellScriptLoader { 
Class:         class spell_dk_death_coil_SpellScript : public SpellScript         {         
Class: class spell_dk_death_grip : public SpellScriptLoader { 
Class:         class spell_dk_death_grip_SpellScript : public SpellScript         {         
Class:class spell_dru_starfall_dummy : public SpellScriptLoader { 
Class:         class spell_dru_starfall_dummy_SpellScript : public SpellScript         {         
Class:class spell_gen_oracle_wolvar_reputation: public SpellScriptLoader class spell_gen_oracle_wolvar_reputation : public SpellScriptLoader public:     spell_gen_oracle_wolvar_reputation() : SpellScriptLoader() { }     spell_gen_oracle_wolvar_reputation() : SpellScriptLoader() 
Class:     class spell_gen_oracle_wolvar_reputation_SpellScript : public SpellScript     {     
Class:     class spell_gen_damage_reduction_AuraScript : public AuraScript     {     
Class: class spell_gen_dummy_trigger : public SpellScriptLoader { 
Class:         class spell_gen_dummy_trigger_SpellScript : public SpellScript         {         
Class: class spell_gen_spirit_healer_res : public SpellScriptLoader { 
Class:         class spell_gen_spirit_healer_res_SpellScript : public SpellScript         {         
Class: class spell_gen_gadgetzan_transporter_backfire : public SpellScriptLoader { 
Class:         class spell_gen_gadgetzan_transporter_backfire_SpellScript : public SpellScript         {         
Class: class spell_gen_gnomish_transporter : public SpellScriptLoader { 
Class:         class spell_gen_gnomish_transporter_SpellScript : public SpellScript         {         
Class: class spell_gen_chaos_blast : public SpellScriptLoader { 
Class:         class spell_gen_chaos_blast_SpellScript : public SpellScript         {         
Class:     class spell_hun_aspect_of_the_beast_AuraScript : public AuraScript     {     
Class:    class spell_hun_chimera_shot_SpellScript : public SpellScript     {     
Class:    class spell_hun_invigoration_SpellScript : public SpellScript     {     
Class:    class spell_hun_last_stand_pet_SpellScript : public SpellScript     {     
Class:    class spell_hun_readiness_SpellScript : public SpellScript     {     
Class:    class spell_hun_scatter_shot_SpellScript : public SpellScript     {     
Class:     class spell_hun_sniper_training_AuraScript : public AuraScript     {     
Class:    class spell_hun_pet_heart_of_the_phoenix_SpellScript : public SpellScript     {     
Class:    class spell_hun_pet_carrion_feeder_SpellScript : public SpellScript     {     
Class:     class spell_item_trigger_spell_SpellScript : public SpellScript     {     
Class:     class spell_item_deviate_fish_SpellScript : public SpellScript     {     
Class:     class spell_item_flask_of_the_north_SpellScript : public SpellScript     {     
Class:     class spell_item_gnomish_death_ray_SpellScript : public SpellScript     {     
Class:     class spell_item_make_a_wish_SpellScript : public SpellScript     {     
Class:    class spell_item_mingos_fortune_generator_SpellScript : public SpellScript     {     
Class:     class spell_item_net_o_matic_SpellScript : public SpellScript     {     
Class:     class spell_item_noggenfogger_elixir_SpellScript : public SpellScript     {     
Class:     class spell_item_savory_deviate_delight_SpellScript : public SpellScript     {     
Class:     class spell_item_six_demon_bag_SpellScript : public SpellScript     {     
Class:     class spell_item_underbelly_elixir_SpellScript : public SpellScript     {     
Class: class spell_item_red_rider_air_rifle : public SpellScriptLoader { 
Class:         class spell_item_red_rider_air_rifle_SpellScript : public SpellScript         {         
Class: class spell_item_create_heart_candy : public SpellScriptLoader { 
Class:         class spell_item_create_heart_candy_SpellScript : public SpellScript         {         
Class: class spell_item_book_of_glyph_mastery : public SpellScriptLoader { 
Class:         class spell_item_book_of_glyph_mastery_SpellScript : public SpellScript         {         
Class: class spell_item_gift_of_the_harvester : public SpellScriptLoader { 
Class:         class spell_item_gift_of_the_harvester_SpellScript : public SpellScript         {         
Class: class spell_item_map_of_the_geyser_fields : public SpellScriptLoader { 
Class:         class spell_item_map_of_the_geyser_fields_SpellScript : public SpellScript         {         
Class: class spell_item_vanquished_clutches : public SpellScriptLoader { 
Class:         class spell_item_vanquished_clutches_SpellScript : public SpellScript         {         
Class: class spell_item_ashbringer : public SpellScriptLoader { 
Class:         class spell_item_ashbringer_SpellScript : public SpellScript         {         
Class: class spell_magic_eater_food : public SpellScriptLoader { 
Class:         class spell_magic_eater_food_AuraScript : public AuraScript         {         
Class: class spell_item_shimmering_vessel : public SpellScriptLoader { 
Class:         class spell_item_shimmering_vessel_SpellScript : public SpellScript         {         
Class: class spell_item_purify_helboar_meat : public SpellScriptLoader { 
Class:         class spell_item_purify_helboar_meat_SpellScript : public SpellScript         {         
Class: class spell_item_crystal_prison_dummy_dnd : public SpellScriptLoader { 
Class:         class spell_item_crystal_prison_dummy_dnd_SpellScript : public SpellScript         {         
Class: class spell_item_reindeer_transformation : public SpellScriptLoader { 
Class:         class spell_item_reindeer_transformation_SpellScript : public SpellScript         {         
Class: class spell_item_nigh_invulnerability : public SpellScriptLoader { 
Class:         class spell_item_nigh_invulnerability_SpellScript : public SpellScript         {         
Class: class spell_item_poultryizer : public SpellScriptLoader { 
Class:         class spell_item_poultryizer_SpellScript : public SpellScript         {         
Class: class spell_item_socrethars_stone : public SpellScriptLoader { 
Class:         class spell_item_socrethars_stone_SpellScript : public SpellScript         {         
Class: class spell_item_demon_broiled_surprise : public SpellScriptLoader { 
Class:         class spell_item_demon_broiled_surprise_SpellScript : public SpellScript         {         
Class: class spell_item_complete_raptor_capture : public SpellScriptLoader { 
Class:         class spell_item_complete_raptor_capture_SpellScript : public SpellScript         {         
Class:class spell_item_book_of_glyph_mastery : public SpellScriptLoader enum NitroBoots { 
Class: class spell_item_nitro_boots : public SpellScriptLoader         spell_item_book_of_glyph_mastery() : SpellScriptLoader() {}         spell_item_book_of_glyph_mastery() : SpellScriptLoader() 
Class:         class spell_item_unusual_compass_SpellScript : public SpellScript         {         
Class:class spell_item_ashbringer : public SpellScriptLoader enum UDED { 
Class: class spell_item_uded : public SpellScriptLoader         spell_item_ashbringer() : SpellScriptLoader() {}         spell_item_ashbringer() : SpellScriptLoader() 
Class:     class spell_mage_frost_warding_trigger_AuraScript : public AuraScript     {     
Class:    class spell_pal_ardent_defender_AuraScript : public AuraScript     {     
Class:        class spell_pal_ardent_defender_AuraScript : public AuraScript         {         
Class:    class spell_pal_blessing_of_faith_SpellScript : public SpellScript     {     
Class:    class spell_pal_blessing_of_sanctuary_AuraScript : public AuraScript     {     
Class:    class spell_pal_guarded_by_the_light_SpellScript : public SpellScript     {     
Class:    class spell_pal_holy_shock_SpellScript : public SpellScript     {     
Class:    class spell_pal_judgement_of_command_SpellScript : public SpellScript     {     
Class:         class spell_pal_divine_storm_SpellScript : public SpellScript         {         
Class:    class spell_pal_divine_storm_SpellScript : public SpellScript     {     
Class:        class spell_pal_divine_storm_dummy_SpellScript : public SpellScript         class spell_pal_divine_storm_dummy_SpellScript : public SpellScript
Class:    class spell_q5206_test_fetid_skull_SpellScript : public SpellScript     {     
Class:    class spell_q6124_6129_apply_salve_SpellScript : public SpellScript     {     
Class:    class spell_q11396_11399_force_shield_arcane_purple_x3_AuraScript : public AuraScript     {     
Class:    class spell_q11396_11399_scourging_crystal_controller_SpellScript : public SpellScript     {     
Class:    class spell_q11396_11399_scourging_crystal_controller_dummy_SpellScript : public SpellScript     {     
Class:    class spell_q11587_arcane_prisoner_rescue_SpellScript : public SpellScript     {     
Class:    class spell_q11730_ultrasonic_screwdriver_SpellScript : public SpellScript     {     
Class:     class spell_q12459_seeds_of_natures_wrath_SpellScript : public SpellScript     {     
Class:     class spell_q12634_despawn_fruit_tosser_SpellScript : public SpellScript     {     
Class:     class spell_q12683_take_sputum_sample_SpellScript : public SpellScript     {     
Class:     class spell_q12851_going_bearback_AuraScript : public AuraScript     {     
Class:     class spell_q12937_relief_for_the_fallen_SpellScript : public SpellScript     {     
Class:     class spell_symbol_of_life_dummy_SpellScript : public SpellScript     {     
Class:     class spell_q12659_ahunaes_knife_SpellScript : public SpellScript     {     
Class:    class spell_q13280_13283_plant_battle_standard_SpellScript : public SpellScript     {     
Class:     class spell_q14112_14145_chum_the_water_SpellScript : public SpellScript     {     
Class:    class spell_rog_cheat_death_AuraScript : public AuraScript     {     
Class:        class spell_rog_cheat_death_AuraScript : public AuraScript         {         
Class:    class spell_rog_nerves_of_steel_AuraScript : public AuraScript     {     
Class:        class spell_rog_nerves_of_steel_AuraScript : public AuraScript         {         
Class: class spell_sha_ancestral_awakening_proc : public SpellScriptLoader { 
Class:         class spell_sha_ancestral_awakening_proc_SpellScript : public SpellScript         {         
Class: class spell_sha_cleansing_totem_pulse : public SpellScriptLoader { 
Class:         class spell_sha_cleansing_totem_pulse_SpellScript : public SpellScript         {         
Class: class spell_sha_healing_stream_totem : public SpellScriptLoader { 
Class:         class spell_sha_healing_stream_totem_SpellScript : public SpellScript         {         
Class: class spell_sha_mana_spring_totem : public SpellScriptLoader { 
Class:         class spell_sha_mana_spring_totem_SpellScript : public SpellScript         {         
Class: class spell_sha_lava_lash : public SpellScriptLoader { 
Class:         class spell_sha_lava_lash_SpellScript : public SpellScript         {         
Class: class spell_warl_soulshatter : public SpellScriptLoader { 
Class:         class spell_warl_soulshatter_SpellScript : public SpellScript         {         
Class: class spell_warl_life_tap : public SpellScriptLoader { 
Class:         class spell_warl_life_tap_SpellScript : public SpellScript         {         
Class: class spell_warr_deep_wounds : public SpellScriptLoader { 
Class:         class spell_warr_deep_wounds_SpellScript : public SpellScript         {         
Class: class spell_warr_charge : public SpellScriptLoader { 
Class:         class spell_warr_charge_SpellScript : public SpellScript         {         
Class: class spell_warr_slam : public SpellScriptLoader { 
Class:         class spell_warr_slam_SpellScript : public SpellScript         {         
Class: class spell_warr_execute : public SpellScriptLoader { 
Class:         class spell_warr_execute_SpellScript : public SpellScript         {         
Class: class spell_warr_concussion_blow : public SpellScriptLoader { 
Class:         class spell_warr_concussion_blow_SpellScript : public SpellScript         {         
Class: class spell_warr_bloodthirst : public SpellScriptLoader { 
Class:         class spell_warr_bloodthirst_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(mConditionTarget < MAX_CONDITION_TARGETS);'), (4, 1, u'+    ASSERT(ConditionTarget < MAX_CONDITION_TARGETS);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Condition::Meets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(mConditionTarget < MAX_CONDITION_TARGETS);'), (4, 1, u'+    ASSERT(ConditionTarget < MAX_CONDITION_TARGETS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(mConditionTarget < MAX_CONDITION_TARGETS);'), (4, 1, u'+    ASSERT(ConditionTarget < MAX_CONDITION_TARGETS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(mConditionValue2);'), (5, 1, u'+                ASSERT(ConditionValue2);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Condition::Meets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(mConditionValue2);'), (5, 1, u'+                ASSERT(ConditionValue2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(mConditionValue2);'), (5, 1, u'+                ASSERT(ConditionValue2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT((1<<effIndex) & m_effectsToApply);'), (3, 1, u'+    ASSERT((1<<effIndex) & _effectsToApply);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT((1<<effIndex) & m_effectsToApply);'), (3, 1, u'+    ASSERT((1<<effIndex) & _effectsToApply);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT((1<<effIndex) & m_effectsToApply);'), (3, 1, u'+    ASSERT((1<<effIndex) & _effectsToApply);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!(m_flags & (1<<effIndex)));'), (4, 1, u'+        ASSERT(!(_flags & (1<<effIndex)));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!(m_flags & (1<<effIndex)));'), (4, 1, u'+        ASSERT(!(_flags & (1<<effIndex)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!(m_flags & (1<<effIndex)));'), (4, 1, u'+        ASSERT(!(_flags & (1<<effIndex)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(m_flags & (1<<effIndex));'), (4, 1, u'+        ASSERT(_flags & (1<<effIndex));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(m_flags & (1<<effIndex));'), (4, 1, u'+        ASSERT(_flags & (1<<effIndex));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(m_flags & (1<<effIndex));'), (4, 1, u'+        ASSERT(_flags & (1<<effIndex));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!m_target->GetVisibleAura(m_slot));'), (3, 1, u'+        ASSERT(!_target->GetVisibleAura(_slot));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraApplication::BuildUpdatePacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!m_target->GetVisibleAura(m_slot));'), (3, 1, u'+        ASSERT(!_target->GetVisibleAura(_slot));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!m_target->GetVisibleAura(m_slot));'), (3, 1, u'+        ASSERT(!_target->GetVisibleAura(_slot));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_target->GetVisibleAura(m_slot));'), (3, 1, u'+    ASSERT(_target->GetVisibleAura(_slot));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraApplication::BuildUpdatePacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_target->GetVisibleAura(m_slot));'), (3, 1, u'+    ASSERT(_target->GetVisibleAura(_slot));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_target->GetVisibleAura(m_slot));'), (3, 1, u'+    ASSERT(_target->GetVisibleAura(_slot));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    ASSERT(m_currentRow);'), (14, 1, u'+    ASSERT(_currentRow);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(type < m_BgObjects.size());'), (5, 1, u'+    ASSERT(type < BgObjects.size());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Battleground::AddObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(type < m_BgObjects.size());'), (5, 1, u'+    ASSERT(type < BgObjects.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(type < m_BgObjects.size());'), (5, 1, u'+    ASSERT(type < BgObjects.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(type < m_BgCreatures.size());'), (5, 1, u'+    ASSERT(type < BgCreatures.size());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Battleground::AddCreature
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(type < m_BgCreatures.size());'), (5, 1, u'+    ASSERT(type < BgCreatures.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(type < m_BgCreatures.size());'), (5, 1, u'+    ASSERT(type < BgCreatures.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 48
Total del: 0
Header: struct DynamicTreeIntersectionCallback_WithLogger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(mConditionTarget < MAX_CONDITION_TARGETS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(object);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: ScriptMgr::OnAuctionExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(object);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(object);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                ASSERT(mConditionValue2);')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: Condition::Meets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                ASSERT(mConditionValue2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                ASSERT(mConditionValue2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(player);'), (7, 1, u'+    ASSERT(object);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ScriptMgr::OnAuctionExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(player);'), (7, 1, u'+    ASSERT(object);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(player);'), (7, 1, u'+    ASSERT(object);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(_me->IsInWorld());'), (3, 1, u'+    ASSERT(_me->GetMap());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::RelocatePassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(_me->IsInWorld());'), (3, 1, u'+    ASSERT(_me->GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(_me->IsInWorld());'), (3, 1, u'+    ASSERT(_me->GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (GetMap());'), (3, 1, u'+    ASSERT(GetMap());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Transport::TeleportTransport
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (GetMap());'), (3, 1, u'+    ASSERT(GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (GetMap());'), (3, 1, u'+    ASSERT(GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(map != NULL);'), (4, 1, u'+    ASSERT(_me->IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Vehicle::RelocatePassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(map != NULL);'), (4, 1, u'+    ASSERT(_me->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(map != NULL);'), (4, 1, u'+    ASSERT(_me->IsInWorld());')]
===========================================
Class: class npc_spring_rabbit : public CreatureScript { 
Class:     class spell_love_is_in_the_air_romantic_picnic_AuraScript : public AuraScript     {     
Class: class spell_love_is_in_the_air_romantic_picnic : public SpellScriptLoader { 
Class:     class spell_love_is_in_the_air_romantic_picnic_AuraScript : public AuraScript     {     
Class: class spell_q12620_the_lifewarden_wrath : public SpellScriptLoader { 
Class:     class spell_q12620_the_lifewarden_wrath_SpellScript : public SpellScript     {     
Class: class npc_tournament_training_dummy : public CreatureScript { 
Class:     class spell_gen_break_shield_SpellScript : public SpellScript     {     
Class:     class spell_gen_mounted_charge_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(log_slot < MAX_QUEST_LOG_SIZE);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Player::AddQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(log_slot < MAX_QUEST_LOG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(log_slot < MAX_QUEST_LOG_SIZE);')]
===========================================
Class:class spell_putricide_clear_mutated_plague : public SpellScriptLoader { 
Class:         class spell_putricide_clear_mutated_plague_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(victim->GetTypeId() == TYPEID_PLAYER);'), (8, 1, u'+                ASSERT(victim->GetCharmer()->GetTypeId() == TYPEID_PLAYER);'), (13, 1, u'+                ASSERT(victim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Total add: 12
Total del: 2
Header: Unit::DealDamage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(victim->GetTypeId() == TYPEID_PLAYER);'), (8, 1, u'+                ASSERT(victim->GetCharmer()->GetTypeId() == TYPEID_PLAYER);'), (13, 1, u'+                ASSERT(victim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(victim->GetTypeId() == TYPEID_PLAYER);'), (8, 1, u'+                ASSERT(victim->GetCharmer()->GetTypeId() == TYPEID_PLAYER);'), (13, 1, u'+                ASSERT(victim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
Class: class spell_gen_break_shield: public SpellScriptLoader { 
Class:     class spell_gen_break_shield_SpellScript : public SpellScript     {     
Class: class spell_gen_mounted_charge: public SpellScriptLoader { 
Class:     class spell_gen_mounted_charge_SpellScript : public SpellScript     {     
Class: class spell_gen_defend : public SpellScriptLoader { 
Class:         class spell_gen_defendAuraScript : public AuraScript         {         
Class: class spell_gen_tournament_duel : public SpellScriptLoader { 
Class:         class spell_gen_tournament_duel_SpellScript : public SpellScript         {         
Class: class spell_gen_summon_tournament_mount : public SpellScriptLoader { 
Class:         class spell_gen_summon_tournament_mount_SpellScript : public SpellScript         {         
Class: class spell_gen_on_tournament_mount : public SpellScriptLoader { 
Class:         class spell_gen_on_tournament_mountAuraScript : public AuraScript         {         
Class: class spell_gen_tournament_pennant : public SpellScriptLoader { 
Class:         class spell_gen_tournament_pennantAuraScript : public AuraScript         {         
Class:class achievement_tilted : public AchievementCriteriaScript { 
Class: class npc_omen : public CreatureScript { 
Class: class npc_giant_spotlight : public CreatureScript { 
Class: class spell_gen_elune_candle : public SpellScriptLoader { 
Class:         class spell_gen_elune_candle_SpellScript : public SpellScript         {         
Class: class npc_firework : public CreatureScript { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
Class:    class EmoteChatBuilder     class EmoteChatBuilder
Class: class spell_item_refocus : public SpellScriptLoader { 
Class:         class spell_item_refocus_SpellScript : public SpellScript         {         
Class: class npc_dame_evniki_kapsalis : public CreatureScript { 
Class: class npc_alorah_and_grimmin : public CreatureScript { 
Class: class mob_frost_tomb : public CreatureScript class npc_frost_tomb : public CreatureScript     mob_frost_tomb() : CreatureScript() { }     mob_frost_tomb() : CreatureScript() 
Class: class spell_frost_tomb : public SpellScriptLoader { 
Class:         class spell_frost_tomb_AuraScript : public AuraScript         {         
Class: class achievement_on_the_rocks : public AchievementCriteriaScript { 
Class: class spell_gen_dalaran_disguise : public SpellScriptLoader { 
Class:         class spell_gen_dalaran_disguise_SpellScript : public SpellScript         {         
Class: class npc_dashel_stonefist : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                WPAssert(const_cast<Unit*>(this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Total add: 0
Total del: 19
Header: Unit::BuildMovementPacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                WPAssert(const_cast<Unit*>(this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                WPAssert(const_cast<Unit*>(this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);'), (14, 1, u'+            ASSERT( i_nextMove <= MAX_CONF_WAYPOINTS );')]
===========================================
===========================================
Total add: 12
Total del: 7
Header: ConfusedMovementGenerator<T>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);'), (14, 1, u'+            ASSERT( i_nextMove <= MAX_CONF_WAYPOINTS );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);'), (14, 1, u'+            ASSERT( i_nextMove <= MAX_CONF_WAYPOINTS );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(215, 2, u'-                ASSERT(node);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    ASSERT(Initialized());'), (250, 1, u'+    ASSERT(minimal_diff >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(118, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (124, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (131, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (137, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (143, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (150, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (156, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (162, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (183, 1, u'+    ASSERT(index >= index_lo && index < index_hi);'), (222, 1, u'+    ASSERT(count >= 2);')]
===========================================
Class: class npc_orsonn_and_kodian : public CreatureScript { 
Class:class achievement_polarity_switch : public AchievementCriteriaScript { 
Class: class spell_capacitus_polarity_shift : public SpellScriptLoader { 
Class:         class spell_capacitus_polarity_shift_SpellScript : public SpellScript         {         
Class:class spell_thaddius_pos_neg_charge : public SpellScriptLoader { 
Class:         class spell_thaddius_pos_neg_charge_SpellScript : public SpellScript         {         
Class:class achievement_spore_loser : public AchievementCriteriaScript class achievement_spore_loser : public AchievementCriteriaScript
Class: class spell_loatheb_necrotic_aura_warning : public SpellScriptLoader { 
Class:         class spell_loatheb_necrotic_aura_warning_AuraScript : public AuraScript         {         
Class:class mob_ritual_channeler : public CreatureScript class npc_ritual_channeler : public CreatureScript     mob_ritual_channeler() : CreatureScript() { }     mob_ritual_channeler() : CreatureScript() 
Class:class checkRitualTarget { 
Class:class spell_paralyze_pinnacle : public SpellScriptLoader { 
Class:class npc_scourge_hulk : public CreatureScript { 
Class:class achievement_lightning_struck : public AchievementCriteriaScript { 
Class:class achievement_lightning_struck : public AchievementCriteriaScript { 
Class: class npc_simon_bunny : public CreatureScript { 
Class: class go_simon_cluster : public GameObjectScript { 
Class: class go_apexis_relic : public GameObjectScript { 
Class: class go_thunderspike : public GameObjectScript { 
Class: class AreaTrigger_at_brewfest : public AreaTriggerScript { 
Class: class AreaTrigger_at_bring_your_orphan_to : public AreaTriggerScript { 
Class: class go_demon_portal : public GameObjectScript { 
Class: class go_captain_tyralius_prison : public GameObjectScript { 
Class: class AreaTrigger_at_nats_landing : public AreaTriggerScript { 
Class: class spell_q9452_cast_net: public SpellScriptLoader { 
Class:         class spell_q9452_cast_net_SpellScript : public SpellScript         {         
Class: class go_veil_skith_cage : public GameObjectScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(triggeredByAura);'), (85, 1, u'+                ASSERT(triggeredByAura);')]
===========================================
===========================================
Total add: 160
Total del: 157
Header: Unit::ProcDamageAndSpellFor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(triggeredByAura);'), (85, 1, u'+                ASSERT(triggeredByAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(triggeredByAura);'), (85, 1, u'+                ASSERT(triggeredByAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(obj->m_isWorldObject);'), (3, 1, u'+        ASSERT(obj->IsWorldObject());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::~Map
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(obj->m_isWorldObject);'), (3, 1, u'+        ASSERT(obj->IsWorldObject());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(obj->m_isWorldObject);'), (3, 1, u'+        ASSERT(obj->IsWorldObject());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(!obj->IsPermanentWorldObject());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Map::AddToGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(!obj->IsPermanentWorldObject());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(!obj->IsPermanentWorldObject());')]
===========================================
Class:class spell_gen_luck_of_the_draw : public SpellScriptLoader { 
Class:         class spell_gen_luck_of_the_draw_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT(*itr);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: Player::UpdateSoulboundTradeItems
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT(*itr);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT(*itr);')]
===========================================
Class: class go_ethereal_teleport_pad : public GameObjectScript { 
Class:class npc_image_belgaristrasz : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        ASSERT(seat);')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: WorldSession::HandleAttackSwingOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        ASSERT(seat);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        ASSERT(seat);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(cellCoord.IsCoordValid());')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: Map::AddToMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(cellCoord.IsCoordValid());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(cellCoord.IsCoordValid());')]
===========================================
Class:class achievement_storm_glory : public AchievementCriteriaScript { 
Class: class spell_warr_vigilance : public SpellScriptLoader { 
Class:     class spell_warr_vigilance_AuraScript : public AuraScript     {     
Class: class spell_gen_damage_reduction_aura : public SpellScriptLoader { 
Class:     class spell_gen_damage_reduction_auraScript : public AuraScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(obj);')]
===========================================
===========================================
Total add: 4
Total del: 6
Header: MapManager::_createBaseMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(obj);')]
===========================================
Class: class AreaTrigger_at_aldurthar_gate : public AreaTriggerScript { 
Class: class AreaTrigger_at_ravenholdt : public AreaTriggerScript { 
Class: class AreaTrigger_at_warsong_farms : public AreaTriggerScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(remove); //maybe deleted in logoutplayer when player is not in a map')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: Map::RemovePlayerFromMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(remove); //maybe deleted in logoutplayer when player is not in a map')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(remove); //maybe deleted in logoutplayer when player is not in a map')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
Total add: 4
Total del: 6
Header: Map::LoadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Map::AddToMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        ASSERT(obj->IsInGrid());')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Map::InitializeObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        ASSERT(obj->IsInGrid());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        ASSERT(obj->IsInGrid());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (9, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Total add: 8
Total del: 1
Header: Aura::UpdateTargetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (9, 1, u'+                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (9, 1, u'+                ASSERT(false);')]
===========================================
Class:class achievement_snakes_whyd_it_have_to_be_snakes : public AchievementCriteriaScript { 
Class: class boss_amanitar : public CreatureScript { 
Class: class mob_amanitar_mushrooms : public CreatureScript { 
Class: class mob_ahnkahar_nerubian : public CreatureScript { 
Class:  class mob_nadox_eggs : public CreatureScript { 
Class: class achievement_respect_your_elders : public AchievementCriteriaScript { 
Class: class boss_volazj : public CreatureScript { 
Class: class mob_jedoga_initiand : public CreatureScript { 
Class: class npc_jedogas_aufseher_trigger : public CreatureScript { 
Class: class achievement_volunteer_work : public AchievementCriteriaScript { 
Class: class boss_taldaram : public CreatureScript { 
Class: class mob_taldaram_flamesphere : public CreatureScript { 
Class: class prince_taldaram_sphere : public GameObjectScript { 
Class: class instance_ahnkahet : public InstanceMapScript { 
Class: class boss_amanitar : public CreatureScript { 
Class: class mob_amanitar_mushrooms : public CreatureScript { 
Class: class mob_ahnkahar_nerubian : public CreatureScript { 
Class:  class mob_nadox_eggs : public CreatureScript { 
Class: class achievement_respect_your_elders : public AchievementCriteriaScript { 
Class: class boss_volazj : public CreatureScript { 
Class: class mob_jedoga_initiand : public CreatureScript { 
Class: class npc_jedogas_aufseher_trigger : public CreatureScript { 
Class: class achievement_volunteer_work : public AchievementCriteriaScript { 
Class: class boss_taldaram : public CreatureScript { 
Class: class mob_taldaram_flamesphere : public CreatureScript { 
Class: class prince_taldaram_sphere : public GameObjectScript { 
Class: class instance_ahnkahet : public InstanceMapScript { 
Class: class boss_algalon : public CreatureScript { 
Class:  class mob_collapsing_star : public CreatureScript { 
Class: class boss_steelbreaker : public CreatureScript { 
Class: class boss_runemaster_molgeim : public CreatureScript { 
Class: class mob_rune_of_power : public CreatureScript { 
Class: class mob_lightning_elemental : public CreatureScript { 
Class: class mob_rune_of_summoning : public CreatureScript { 
Class: class boss_stormcaller_brundir : public CreatureScript { 
Class: class spell_shield_of_runes : public SpellScriptLoader { 
Class:         class spell_shield_of_runes_AuraScript : public AuraScript         {         
Class: class spell_assembly_meltdown : public SpellScriptLoader { 
Class:         class spell_assembly_meltdown_SpellScript : public SpellScript         {         
Class: class npc_auriaya_seeping_trigger : public CreatureScript { 
Class: class npc_sanctum_sentry : public CreatureScript { 
Class: class npc_feral_defender : public CreatureScript { 
Class: class SanctumSentryCheck { 
Class: class spell_auriaya_strenght_of_the_pack : public SpellScriptLoader { 
Class:         class spell_auriaya_strenght_of_the_pack_SpellScript : public SpellScript         {         
Class: class spell_auriaya_sentinel_blast : public SpellScriptLoader { 
Class:         class spell_auriaya_sentinel_blast_SpellScript : public SpellScript         {         
Class:  class achievement_nine_lives : public AchievementCriteriaScript { 
Class: class achievement_crazy_cat_lady : public AchievementCriteriaScript { 
Class: class boss_flame_leviathan : public CreatureScript { 
Class: class boss_flame_leviathan_seat : public CreatureScript { 
Class: class boss_flame_leviathan_defense_cannon : public CreatureScript { 
Class: class boss_flame_leviathan_defense_turret : public CreatureScript { 
Class: class boss_flame_leviathan_overload_device : public CreatureScript { 
Class: class boss_flame_leviathan_safety_container : public CreatureScript { 
Class: class npc_mechanolift : public CreatureScript { 
Class: class npc_pool_of_tar : public CreatureScript { 
Class: class npc_colossus : public CreatureScript { 
Class: class npc_thorims_hammer : public CreatureScript { 
Class: class npc_mimirons_inferno : public CreatureScript { 
Class: class npc_hodirs_fury : public CreatureScript { 
Class: class npc_freyas_ward : public CreatureScript { 
Class: class npc_freya_ward_summon : public CreatureScript { 
Class:       class go_ulduar_tower : public GameObjectScript { 
Class: class achievement_three_car_garage_demolisher : public AchievementCriteriaScript { 
Class: class achievement_three_car_garage_chopper : public AchievementCriteriaScript { 
Class: class achievement_three_car_garage_siege : public AchievementCriteriaScript { 
Class: class achievement_shutout : public AchievementCriteriaScript { 
Class: class achievement_unbroken : public AchievementCriteriaScript { 
Class: class achievement_orbital_bombardment : public AchievementCriteriaScript { 
Class: class achievement_orbital_devastation : public AchievementCriteriaScript { 
Class: class achievement_nuked_from_orbit : public AchievementCriteriaScript { 
Class: class achievement_orbit_uary : public AchievementCriteriaScript { 
Class: class spell_load_into_catapult : public SpellScriptLoader { 
Class:         class spell_load_into_catapult_AuraScript : public AuraScript         {         
Class: class spell_auto_repair : public SpellScriptLoader { 
Class:         class spell_auto_repair_SpellScript : public SpellScript         {         
Class: class spell_systems_shutdown : public SpellScriptLoader { 
Class:         class spell_systems_shutdown_AuraScript : public AuraScript         {         
Class: class FlameLeviathanPursuedTargetSelector { 
Class: class spell_pursue : public SpellScriptLoader { 
Class:         class spell_pursue_SpellScript : public SpellScript         {         
Class: class boss_freya : public CreatureScript { 
Class: class boss_elder_brightleaf : public CreatureScript { 
Class: class boss_elder_stonebark : public CreatureScript { 
Class: class boss_elder_ironbranch : public CreatureScript { 
Class: class npc_detonating_lasher : public CreatureScript { 
Class: class npc_ancient_water_spirit : public CreatureScript { 
Class: class npc_storm_lasher : public CreatureScript { 
Class: class npc_snaplasher : public CreatureScript { 
Class: class npc_ancient_conservator : public CreatureScript { 
Class: class npc_sun_beam : public CreatureScript { 
Class: class npc_healthy_spore : public CreatureScript { 
Class: class npc_eonars_gift : public CreatureScript { 
Class: class npc_nature_bomb : public CreatureScript { 
Class: class npc_unstable_sun_beam : public CreatureScript { 
Class: class spell_freya_attuned_to_nature_dose_reduction : public SpellScriptLoader { 
Class:         class spell_freya_attuned_to_nature_dose_reduction_SpellScript : public SpellScript         {         
Class: class spell_freya_iron_roots : public SpellScriptLoader { 
Class:         class spell_freya_iron_roots_SpellScript : public SpellScript         {         
Class: class achievement_getting_back_to_nature : public AchievementCriteriaScript { 
Class: class achievement_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class boss_saronite_animus : public CreatureScript { 
Class: class npc_saronite_vapors : public CreatureScript { 
Class: class spell_mark_of_the_faceless : public SpellScriptLoader { 
Class:         class spell_mark_of_the_faceless_AuraScript : public AuraScript         {         
Class: class achievement_shadowdodger : public AchievementCriteriaScript { 
Class: class achievement_smell_saronite : public AchievementCriteriaScript { 
Class: class npc_flash_freeze : public CreatureScript { 
Class: class npc_ice_block : public CreatureScript { 
Class: class boss_hodir : public CreatureScript { 
Class: class npc_icicle : public CreatureScript { 
Class: class npc_snowpacked_icicle : public CreatureScript { 
Class: class npc_hodir_priest : public CreatureScript { 
Class: class npc_hodir_shaman : public CreatureScript { 
Class: class npc_hodir_druid : public CreatureScript { 
Class: class npc_hodir_mage : public CreatureScript { 
Class: class npc_toasty_fire : public CreatureScript { 
Class: class spell_biting_cold : public SpellScriptLoader { 
Class:         class spell_biting_cold_AuraScript : public AuraScript         {         
Class: class spell_biting_cold_dot : public SpellScriptLoader { 
Class:     class spell_biting_cold_dot_AuraScript : public AuraScript     {     
Class: class boss_ignis : public CreatureScript { 
Class: class npc_iron_construct : public CreatureScript { 
Class: class npc_scorch_ground : public CreatureScript { 
Class: class spell_ignis_slag_pot : public SpellScriptLoader { 
Class:         class spell_ignis_slag_pot_AuraScript : public AuraScript         {         
Class: class achievement_ignis_shattered : public AchievementCriteriaScript { 
Class: class boss_kologarn : public CreatureScript { 
Class: class spell_ulduar_rubble_summon : public SpellScriptLoader { 
Class:         class spell_ulduar_rubble_summonSpellScript : public SpellScript         {         
Class:  class StoneGripTargetSelector : public std::unary_function<Unit*, bool> { 
Class: class spell_ulduar_stone_grip_cast_target : public SpellScriptLoader { 
Class:         class spell_ulduar_stone_grip_cast_target_SpellScript : public SpellScript         {         
Class: class spell_ulduar_cancel_stone_grip : public SpellScriptLoader { 
Class:         class spell_ulduar_cancel_stone_gripSpellScript : public SpellScript         {         
Class: class spell_ulduar_squeezed_lifeless : public SpellScriptLoader { 
Class:         class spell_ulduar_squeezed_lifeless_SpellScript : public SpellScript         {         
Class: class spell_ulduar_stone_grip_absorb : public SpellScriptLoader { 
Class:         class spell_ulduar_stone_grip_absorb_AuraScript : public AuraScript         {         
Class: class spell_ulduar_stone_grip : public SpellScriptLoader { 
Class:         class spell_ulduar_stone_grip_AuraScript : public AuraScript         {         
Class: class spell_kologarn_stone_shout : public SpellScriptLoader { 
Class:         class spell_kologarn_stone_shout_SpellScript : public SpellScript         {         
Class: class spell_kologarn_summon_focused_eyebeam : public SpellScriptLoader { 
Class:         class spell_kologarn_summon_focused_eyebeam_SpellScript : public SpellScript         {         
Class: class spell_ulduar_proximity_mines : public SpellScriptLoader { 
Class:        class spell_ulduar_proximity_minesSpellScript : public SpellScript        {        
Class: class boss_razorscale_controller : public CreatureScript { 
Class: class go_razorscale_harpoon : public GameObjectScript { 
Class: class boss_razorscale : public CreatureScript { 
Class: class npc_expedition_commander : public CreatureScript { 
Class: class npc_mole_machine_trigger : public CreatureScript { 
Class: class npc_devouring_flame : public CreatureScript { 
Class: class npc_darkrune_watcher : public CreatureScript { 
Class: class npc_darkrune_guardian : public CreatureScript { 
Class: class npc_darkrune_sentinel : public CreatureScript { 
Class: class spell_razorscale_devouring_flame : public SpellScriptLoader { 
Class:         class spell_razorscale_devouring_flame_SpellScript : public SpellScript         {         
Class: class spell_razorscale_flame_breath : public SpellScriptLoader { 
Class:         class spell_razorscale_flame_breath_SpellScript : public SpellScript         {         
Class: class achievement_iron_dwarf_medium_rare : public AchievementCriteriaScript { 
Class: class achievement_quick_shave : public AchievementCriteriaScript { 
Class: class boss_thorim : public CreatureScript { 
Class: class instance_ulduar : public InstanceMapScript { 
Class: class ulduar_teleporter : public GameObjectScript { 
Class: class boss_algalon : public CreatureScript { 
Class:  class mob_collapsing_star : public CreatureScript { 
Class: class boss_steelbreaker : public CreatureScript { 
Class: class boss_runemaster_molgeim : public CreatureScript { 
Class: class mob_rune_of_power : public CreatureScript { 
Class: class mob_lightning_elemental : public CreatureScript { 
Class: class mob_rune_of_summoning : public CreatureScript { 
Class: class boss_stormcaller_brundir : public CreatureScript { 
Class: class spell_shield_of_runes : public SpellScriptLoader { 
Class:         class spell_shield_of_runes_AuraScript : public AuraScript         {         
Class: class spell_assembly_meltdown : public SpellScriptLoader { 
Class:         class spell_assembly_meltdown_SpellScript : public SpellScript         {         
Class: class npc_auriaya_seeping_trigger : public CreatureScript { 
Class: class npc_sanctum_sentry : public CreatureScript { 
Class: class npc_feral_defender : public CreatureScript { 
Class: class SanctumSentryCheck { 
Class: class spell_auriaya_strenght_of_the_pack : public SpellScriptLoader { 
Class:         class spell_auriaya_strenght_of_the_pack_SpellScript : public SpellScript         {         
Class: class spell_auriaya_sentinel_blast : public SpellScriptLoader { 
Class:         class spell_auriaya_sentinel_blast_SpellScript : public SpellScript         {         
Class:  class achievement_nine_lives : public AchievementCriteriaScript { 
Class: class achievement_crazy_cat_lady : public AchievementCriteriaScript { 
Class: class boss_flame_leviathan : public CreatureScript { 
Class: class boss_flame_leviathan_seat : public CreatureScript { 
Class: class boss_flame_leviathan_defense_cannon : public CreatureScript { 
Class: class boss_flame_leviathan_defense_turret : public CreatureScript { 
Class: class boss_flame_leviathan_overload_device : public CreatureScript { 
Class: class boss_flame_leviathan_safety_container : public CreatureScript { 
Class: class npc_mechanolift : public CreatureScript { 
Class: class npc_pool_of_tar : public CreatureScript { 
Class: class npc_colossus : public CreatureScript { 
Class: class npc_thorims_hammer : public CreatureScript { 
Class: class npc_mimirons_inferno : public CreatureScript { 
Class: class npc_hodirs_fury : public CreatureScript { 
Class: class npc_freyas_ward : public CreatureScript { 
Class: class npc_freya_ward_summon : public CreatureScript { 
Class:       class go_ulduar_tower : public GameObjectScript { 
Class: class achievement_three_car_garage_demolisher : public AchievementCriteriaScript { 
Class: class achievement_three_car_garage_chopper : public AchievementCriteriaScript { 
Class: class achievement_three_car_garage_siege : public AchievementCriteriaScript { 
Class: class achievement_shutout : public AchievementCriteriaScript { 
Class: class achievement_unbroken : public AchievementCriteriaScript { 
Class: class achievement_orbital_bombardment : public AchievementCriteriaScript { 
Class: class achievement_orbital_devastation : public AchievementCriteriaScript { 
Class: class achievement_nuked_from_orbit : public AchievementCriteriaScript { 
Class: class achievement_orbit_uary : public AchievementCriteriaScript { 
Class: class spell_load_into_catapult : public SpellScriptLoader { 
Class:         class spell_load_into_catapult_AuraScript : public AuraScript         {         
Class: class spell_auto_repair : public SpellScriptLoader { 
Class:         class spell_auto_repair_SpellScript : public SpellScript         {         
Class: class spell_systems_shutdown : public SpellScriptLoader { 
Class:         class spell_systems_shutdown_AuraScript : public AuraScript         {         
Class: class FlameLeviathanPursuedTargetSelector { 
Class: class spell_pursue : public SpellScriptLoader { 
Class:         class spell_pursue_SpellScript : public SpellScript         {         
Class: class boss_freya : public CreatureScript { 
Class: class boss_elder_brightleaf : public CreatureScript { 
Class: class boss_elder_stonebark : public CreatureScript { 
Class: class boss_elder_ironbranch : public CreatureScript { 
Class: class npc_detonating_lasher : public CreatureScript { 
Class: class npc_ancient_water_spirit : public CreatureScript { 
Class: class npc_storm_lasher : public CreatureScript { 
Class: class npc_snaplasher : public CreatureScript { 
Class: class npc_ancient_conservator : public CreatureScript { 
Class: class npc_sun_beam : public CreatureScript { 
Class: class npc_healthy_spore : public CreatureScript { 
Class: class npc_eonars_gift : public CreatureScript { 
Class: class npc_nature_bomb : public CreatureScript { 
Class: class npc_unstable_sun_beam : public CreatureScript { 
Class: class spell_freya_attuned_to_nature_dose_reduction : public SpellScriptLoader { 
Class:         class spell_freya_attuned_to_nature_dose_reduction_SpellScript : public SpellScript         {         
Class: class spell_freya_iron_roots : public SpellScriptLoader { 
Class:         class spell_freya_iron_roots_SpellScript : public SpellScript         {         
Class: class achievement_getting_back_to_nature : public AchievementCriteriaScript { 
Class: class achievement_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class boss_saronite_animus : public CreatureScript { 
Class: class npc_saronite_vapors : public CreatureScript { 
Class: class spell_mark_of_the_faceless : public SpellScriptLoader { 
Class:         class spell_mark_of_the_faceless_AuraScript : public AuraScript         {         
Class: class achievement_shadowdodger : public AchievementCriteriaScript { 
Class: class achievement_smell_saronite : public AchievementCriteriaScript { 
Class: class npc_flash_freeze : public CreatureScript { 
Class: class npc_ice_block : public CreatureScript { 
Class: class boss_hodir : public CreatureScript { 
Class: class npc_icicle : public CreatureScript { 
Class: class npc_snowpacked_icicle : public CreatureScript { 
Class: class npc_hodir_priest : public CreatureScript { 
Class: class npc_hodir_shaman : public CreatureScript { 
Class: class npc_hodir_druid : public CreatureScript { 
Class: class npc_hodir_mage : public CreatureScript { 
Class: class npc_toasty_fire : public CreatureScript { 
Class: class spell_biting_cold : public SpellScriptLoader { 
Class:         class spell_biting_cold_AuraScript : public AuraScript         {         
Class: class spell_biting_cold_dot : public SpellScriptLoader { 
Class:     class spell_biting_cold_dot_AuraScript : public AuraScript     {     
Class: class boss_ignis : public CreatureScript { 
Class: class npc_iron_construct : public CreatureScript { 
Class: class npc_scorch_ground : public CreatureScript { 
Class: class spell_ignis_slag_pot : public SpellScriptLoader { 
Class:         class spell_ignis_slag_pot_AuraScript : public AuraScript         {         
Class: class achievement_ignis_shattered : public AchievementCriteriaScript { 
Class: class boss_kologarn : public CreatureScript { 
Class: class spell_ulduar_rubble_summon : public SpellScriptLoader { 
Class:         class spell_ulduar_rubble_summonSpellScript : public SpellScript         {         
Class:  class StoneGripTargetSelector : public std::unary_function<Unit*, bool> { 
Class: class spell_ulduar_stone_grip_cast_target : public SpellScriptLoader { 
Class:         class spell_ulduar_stone_grip_cast_target_SpellScript : public SpellScript         {         
Class: class spell_ulduar_cancel_stone_grip : public SpellScriptLoader { 
Class:         class spell_ulduar_cancel_stone_gripSpellScript : public SpellScript         {         
Class: class spell_ulduar_squeezed_lifeless : public SpellScriptLoader { 
Class:         class spell_ulduar_squeezed_lifeless_SpellScript : public SpellScript         {         
Class: class spell_ulduar_stone_grip_absorb : public SpellScriptLoader { 
Class:         class spell_ulduar_stone_grip_absorb_AuraScript : public AuraScript         {         
Class: class spell_ulduar_stone_grip : public SpellScriptLoader { 
Class:         class spell_ulduar_stone_grip_AuraScript : public AuraScript         {         
Class: class spell_kologarn_stone_shout : public SpellScriptLoader { 
Class:         class spell_kologarn_stone_shout_SpellScript : public SpellScript         {         
Class: class spell_kologarn_summon_focused_eyebeam : public SpellScriptLoader { 
Class:         class spell_kologarn_summon_focused_eyebeam_SpellScript : public SpellScript         {         
Class: class spell_ulduar_proximity_mines : public SpellScriptLoader { 
Class:        class spell_ulduar_proximity_minesSpellScript : public SpellScript        {        
Class: class boss_razorscale_controller : public CreatureScript { 
Class: class go_razorscale_harpoon : public GameObjectScript { 
Class: class boss_razorscale : public CreatureScript { 
Class: class npc_expedition_commander : public CreatureScript { 
Class: class npc_mole_machine_trigger : public CreatureScript { 
Class: class npc_devouring_flame : public CreatureScript { 
Class: class npc_darkrune_watcher : public CreatureScript { 
Class: class npc_darkrune_guardian : public CreatureScript { 
Class: class npc_darkrune_sentinel : public CreatureScript { 
Class: class spell_razorscale_devouring_flame : public SpellScriptLoader { 
Class:         class spell_razorscale_devouring_flame_SpellScript : public SpellScript         {         
Class: class spell_razorscale_flame_breath : public SpellScriptLoader { 
Class:         class spell_razorscale_flame_breath_SpellScript : public SpellScript         {         
Class: class achievement_iron_dwarf_medium_rare : public AchievementCriteriaScript { 
Class: class achievement_quick_shave : public AchievementCriteriaScript { 
Class: class boss_thorim : public CreatureScript { 
Class: class instance_ulduar : public InstanceMapScript { 
Class: class ulduar_teleporter : public GameObjectScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            ASSERT(obj && obj->IsInWorld());'), (15, 1, u'+        ASSERT(obj && obj->IsInWorld());')]
===========================================
===========================================
Total add: 5
Total del: 10
Header: ObjectAccessor::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            ASSERT(obj && obj->IsInWorld());'), (15, 1, u'+        ASSERT(obj && obj->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            ASSERT(obj && obj->IsInWorld());'), (15, 1, u'+        ASSERT(obj && obj->IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    ASSERT (!GetOwnerGUID());')]
===========================================
===========================================
Total add: 1
Total del: 8
Header: GameObject::Delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    ASSERT (!GetOwnerGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    ASSERT (!GetOwnerGUID());')]
===========================================
Class: class go_gjalerbron_cage : public GameObjectScript { 
Class:  class go_large_gjalerbron_cage : public GameObjectScript { 
Class: class npc_prospector_anvilward : public CreatureScript { 
Class: class go_warmaul_prison : public GameObjectScript { 
Class: class npc_kurenai_captive : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Map::CreatureRespawnRelocation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(x < MAX_NUMBER_OF_GRIDS && y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: Map::SendToPlayers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(x < MAX_NUMBER_OF_GRIDS && y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(x < MAX_NUMBER_OF_GRIDS && y < MAX_NUMBER_OF_GRIDS);')]
===========================================
Class: class spell_q14112_14145_chum_the_water: public SpellScriptLoader { 
Class:     class spell_q14112_14145_chum_the_water_SpellScript : public SpellScript     {     
Class:class spell_pri_shadowfiend : public SpellScriptLoader { 
Class:         class spell_pri_shadowfiend_SpellScript : public SpellScript         {         
Class:class spell_pri_shadowfiend : public SpellScriptLoader { 
Class:         class spell_pri_shadowfiend_SpellScript : public SpellScript         {         
Class:class ObjectGridRespawnMover { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: Map::AddToMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: Map::AddToMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: Map::RemoveFromMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: Map::RemoveFromMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(x < MAX_NUMBER_OF_GRIDS);'), (3, 2, u'-    ASSERT(y < MAX_NUMBER_OF_GRIDS);'), (4, 1, u'+    ASSERT(x < MAX_NUMBER_OF_GRIDS && y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Map::ActiveObjectsNearGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(x < MAX_NUMBER_OF_GRIDS);'), (3, 2, u'-    ASSERT(y < MAX_NUMBER_OF_GRIDS);'), (4, 1, u'+    ASSERT(x < MAX_NUMBER_OF_GRIDS && y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(x < MAX_NUMBER_OF_GRIDS);'), (3, 2, u'-    ASSERT(y < MAX_NUMBER_OF_GRIDS);'), (4, 1, u'+    ASSERT(x < MAX_NUMBER_OF_GRIDS && y < MAX_NUMBER_OF_GRIDS);')]
===========================================
Class:class ExactDistanceCheck { 
Class:class spell_pal_divine_storm : public SpellScriptLoader { 
Class:     class spell_pal_divine_storm_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(_target);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class spell_pursue : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(_target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(_target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (16, 1, u'+        ASSERT(!c->isPet() && "ObjectGridRespawnMover must not be called for pets");')]
===========================================
===========================================
Total add: 2
Total del: 14
Header: ObjectGridRespawnMover::Visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (16, 1, u'+        ASSERT(!c->isPet() && "ObjectGridRespawnMover must not be called for pets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (16, 1, u'+        ASSERT(!c->isPet() && "ObjectGridRespawnMover must not be called for pets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pCreature);'), (6, 1, u'+    ASSERT(creature);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Group::SendLootAllPassed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pCreature);'), (6, 1, u'+    ASSERT(creature);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(pCreature);'), (6, 1, u'+    ASSERT(creature);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+                ASSERT(_target);')]
===========================================
===========================================
Total add: 16
Total del: 1
Header: class spell_pursue : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+                ASSERT(_target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+                ASSERT(_target);')]
===========================================
Class: class spell_dru_swift_flight_passive : public SpellScriptLoader { 
Class:         class spell_dru_swift_flight_passive_AuraScript : public AuraScript         {         
Class: class HeightDifferenceCheck { 
Class: class FrozenThroneResetWorker { 
Class: class StartMovementEvent : public BasicEvent { 
Class: class VileSpiritActivateEvent : public BasicEvent { 
Class: class boss_the_lich_king : public CreatureScript { 
Class: class npc_tirion_fordring_tft : public CreatureScript { 
Class: class npc_shambling_horror_icc : public CreatureScript { 
Class: class npc_raging_spirit : public CreatureScript { 
Class: class npc_valkyr_shadowguard : public CreatureScript { 
Class: class npc_strangulate_vehicle : public CreatureScript { 
Class: class npc_terenas_menethil : public CreatureScript { 
Class: class npc_spirit_warden : public CreatureScript { 
Class: class npc_spirit_bomb : public CreatureScript { 
Class: class npc_broken_frostmourne : public CreatureScript { 
Class: class spell_the_lich_king_infest : public SpellScriptLoader { 
Class:         class spell_the_lich_king_infest_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_necrotic_plague : public SpellScriptLoader { 
Class:         class spell_the_lich_king_necrotic_plague_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_necrotic_plague_jump : public SpellScriptLoader { 
Class:         class spell_the_lich_king_necrotic_plague_SpellScript : public SpellScript         {         
Class:         class spell_the_lich_king_necrotic_plague_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_shadow_trap_visual : public SpellScriptLoader { 
Class:         class spell_the_lich_king_shadow_trap_visual_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_shadow_trap_periodic : public SpellScriptLoader { 
Class:         class spell_the_lich_king_shadow_trap_periodic_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_quake : public SpellScriptLoader { 
Class:         class spell_the_lich_king_quake_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_ice_burst_target_search : public SpellScriptLoader { 
Class:         class spell_the_lich_king_ice_burst_target_search_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_raging_spirit : public SpellScriptLoader { 
Class:         class spell_the_lich_king_raging_spirit_SpellScript : public SpellScript         {         
Class: class ExactDistanceCheck { 
Class: class spell_the_lich_king_defile : public SpellScriptLoader { 
Class:         class spell_the_lich_king_defile_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_summon_into_air : public SpellScriptLoader { 
Class:         class spell_the_lich_king_summon_into_air_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_soul_reaper : public SpellScriptLoader { 
Class:         class spell_the_lich_king_soul_reaper_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_valkyr_target_search : public SpellScriptLoader { 
Class:         class spell_the_lich_king_valkyr_target_search_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_eject_all_passengers : public SpellScriptLoader { 
Class:         class spell_the_lich_king_eject_all_passengers_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_cast_back_to_caster : public SpellScriptLoader { 
Class:         class spell_the_lich_king_cast_back_to_caster_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_life_siphon : public SpellScriptLoader { 
Class:         class spell_the_lich_king_life_siphon_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_vile_spirits : public SpellScriptLoader { 
Class:         class spell_the_lich_king_vile_spirits_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_vile_spirits_visual : public SpellScriptLoader { 
Class:         class spell_the_lich_king_vile_spirits_visual_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_vile_spirit_move_target_search : public SpellScriptLoader { 
Class:         class spell_the_lich_king_vile_spirit_move_target_search_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_vile_spirit_damage_target_search : public SpellScriptLoader { 
Class:         class spell_the_lich_king_vile_spirit_damage_target_search_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_harvest_soul : public SpellScriptLoader { 
Class:         class spell_the_lich_king_harvest_soul_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_lights_favor : public SpellScriptLoader { 
Class:         class spell_the_lich_king_lights_favor_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_soul_rip : public SpellScriptLoader { 
Class:         class spell_the_lich_king_soul_rip_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_restore_soul : public SpellScriptLoader { 
Class:         class spell_the_lich_king_restore_soul_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_in_frostmourne_room : public SpellScriptLoader { 
Class:         class spell_the_lich_king_in_frostmourne_room_AuraScript : public AuraScript         {         
Class: class spell_the_lich_king_summon_spirit_bomb : public SpellScriptLoader { 
Class:         class spell_the_lich_king_summon_spirit_bomb_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_trigger_vile_spirit : public SpellScriptLoader { 
Class:         class spell_the_lich_king_trigger_vile_spirit_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_jump : public SpellScriptLoader { 
Class:         class spell_the_lich_king_jump_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_jump_remove_aura : public SpellScriptLoader { 
Class:         class spell_the_lich_king_jump_SpellScript : public SpellScript         {         
Class: class spell_the_lich_king_play_movie : public SpellScriptLoader { 
Class:         class spell_the_lich_king_play_movie_SpellScript : public SpellScript         {         
Class: class achievement_been_waiting_long_time : public AchievementCriteriaScript { 
Class: class achievement_neck_deep_in_vile : public AchievementCriteriaScript { 
Class: class go_blackhoof_cage : public GameObjectScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::AddUInt64Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::RemoveUInt64Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
Class:class spell_systems_shutdown : public SpellScriptLoader { 
Class:         class spell_systems_shutdown_AuraScript : public AuraScript         {         
Class: class FlameLeviathanPursuedTargetSelector { 
Class: class spell_pursue : public SpellScriptLoader { 
Class:         class spell_pursue_SpellScript : public SpellScript         {         
Class:    class spell_sha_astral_shift_AuraScript : public AuraScript     {     
Class:        class spell_sha_astral_shift_AuraScript : public AuraScript         {         
Class:    class spell_sha_fire_nova_SpellScript : public SpellScript     {     
Class:    class spell_sha_mana_tide_totem_SpellScript : public SpellScript     {     
Class:         class spell_sha_earthbind_totem_AuraScript : public AuraScript         {         
Class:    class spell_sha_earthbind_totem_AuraScript : public AuraScript     {     
Class: class spell_sha_bloodlust : public SpellScriptLoader { 
Class: class spell_sha_heroism : public SpellScriptLoader { 
Class:         class spell_sha_heroism_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Total add: 29
Total del: 2
Header: Spell::CallScriptEffectHandlers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(_spellInfo);')]
===========================================
===========================================
Total add: 45
Total del: 0
Header: SimpleCharmedAI::UpdateAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(_spellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(_spellInfo);')]
===========================================
Class:class at_RX_214_repair_o_matic_station : public AreaTriggerScript { 
Class:class spell_auto_repair : public SpellScriptLoader { 
Class:         class spell_auto_repair_SpellScript : public SpellScript         {         
Class:class spell_kologarn_summon_focused_eyebeam : public SpellScriptLoader { 
Class:         class spell_kologarn_summon_focused_eyebeam_SpellScript : public SpellScript         {         
Class: class spell_gen_oracle_wolvar_reputation: public SpellScriptLoader { 
Class:     class spell_gen_oracle_wolvar_reputation_SpellScript : public SpellScript     {     
Class:class spell_dreamwalker_summon_suppresser_effect : public SpellScriptLoader { 
Class:         class spell_dreamwalker_summon_suppresser_effect_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(target);')]
===========================================
===========================================
Total add: 0
Total del: 47
Header: Unit::_IsValidAttackTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Unit::_IsValidAttackTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Unit::_IsValidAssistTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(target);')]
===========================================
Class:class spell_dreamwalker_twisted_nightmares : public SpellScriptLoader { 
Class:         class spell_dreamwalker_twisted_nightmares_SpellScript : public SpellScript         {         
Class:class spell_warl_banish : public SpellScriptLoader { 
Class:     class spell_warl_banish_SpellScript : public SpellScript     {     
Class:class spell_warl_seed_of_corruption : public SpellScriptLoader  class spell_warl_ritual_of_doom_effect : public SpellScriptLoader     public:         spell_warl_seed_of_corruption() : SpellScriptLoader() { }         spell_warl_seed_of_corruption() : SpellScriptLoader() 
Class:        class spell_warl_seed_of_corruption_SpellScript : public SpellScript         {         
Class:    class spell_warl_ritual_of_doom_effect_SpellScript : public SpellScript     {     
Class:class spell_warl_banish : public SpellScriptLoader class spell_warl_seed_of_corruption : public SpellScriptLoader         spell_warl_banish() : SpellScriptLoader() { }         spell_warl_banish() : SpellScriptLoader() 
Class:class spell_baltharus_enervating_brand : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_AuraScript : public AuraScript         {         
Class: class EnervatingBrandSelector { 
Class:class OrbsDespawner : public BasicEvent { 
Class:class mob_bullet_controller : public CreatureScript { 
Class:class achievement_everything_counts : public AchievementCriteriaScript { 
Class: class achievement_bg_av_perfection : public AchievementCriteriaScript { 
Class: class npc_vereth_the_cunning : public CreatureScript { 
Class:class spell_q13280_13283_plant_battle_standard: public SpellScriptLoader { 
Class:     class spell_q13280_13283_plant_battle_standard_SpellScript : public SpellScript     {     
Class:class PactOfTheDarkfallenCheck { 
Class:class spell_rotface_mutated_infection : public SpellScriptLoader { 
Class:         class spell_rotface_mutated_infection_SpellScript : public SpellScript         {         
Class:class SummonTargetSelector { 
Class:class spell_power_of_the_twins : public SpellScriptLoader { 
Class:         class spell_power_of_the_twins_AuraScript : public AuraScript         {         
Class:  class spell_hun_aspect_of_the_beast : public SpellScriptLoader { 
Class:     class spell_hun_aspect_of_the_beast_AuraScript : public AuraScript     {     
Class:class BeamProtectionCheck { 
Class:class spell_putricide_expunged_gas : public SpellScriptLoader { 
Class:         class spell_putricide_expunged_gas_SpellScript : public SpellScript         {         
Class:     class spell_putricide_mutated_transformation_dmg_SpellScript : public SpellScript     {     
Class: class spell_marrowgar_coldflame_bonestorm : public SpellScriptLoader { 
Class:         class spell_marrowgar_coldflame_SpellScript : public SpellScript         {         
Class:class achievement_bg_sa_defense_of_ancients : public AchievementCriteriaScript { 
Class: class spell_q12805_lifeblood_dummy : public SpellScriptLoader { 
Class:         class spell_q12805_lifeblood_dummy_SpellScript : public SpellScript         {         
Class: class mob_sunspring_villager : public CreatureScript { 
Class: class spell_q9874_liquid_fire : public SpellScriptLoader { 
Class:         class spell_q9874_liquid_fire_SpellScript : public SpellScript         {         
Class:class spell_powering_up : public SpellScriptLoader { 
Class:         class spell_powering_up_AuraScript : public AuraScript         {         
Class:         class spell_powering_up_SpellScript : public SpellScript         {         
Class: class spell_valkyr_essences : public SpellScriptLoader { 
Class:         class spell_valkyr_essences_AuraScript : public AuraScript         {         
Class:class npc_kelthuzad_abomination : public CreatureScript { 
Class: class achievement_just_cant_get_enough : public AchievementCriteriaScript { 
Class: class spell_gen_cannibalize : public SpellScriptLoader { 
Class:         class spell_gen_cannibalize_SpellScript : public SpellScript         {         
Class:class spell_assembly_meltdown : public SpellScriptLoader { 
Class:         class spell_assembly_meltdown_SpellScript : public SpellScript         {         
Class: class spell_magic_eater_food : public SpellScriptLoader { 
Class:         class spell_magic_eater_food_AuraScript : public AuraScript         {         
Class:class spell_load_into_catapult : public SpellScriptLoader { 
Class:         class spell_load_into_catapult_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                    ASSERT(false); // Error that should be fixed ASAP.')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                    ASSERT(false); // Error that should be fixed ASAP.')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                    ASSERT(false); // Error that should be fixed ASAP.')]
===========================================
Class:class npc_hyldsmeet_protodrake : public CreatureScript { 
Class:         class npc_hyldsmeet_protodrakeAI : public CreatureAI         {         
Class:class spell_gen_soul_preserver : public SpellScriptLoader { 
Class:         class spell_gen_soul_preserver_SpellScript : public SpellScript         {         
Class:    class spell_hun_masters_call_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: BattlegroundAV::EventPlayerAssaultsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(m_Nodes[node].State != POINT_CONTROLED);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: BattlegroundAV::EventPlayerAssaultsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(m_Nodes[node].State != POINT_CONTROLED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(m_Nodes[node].State != POINT_CONTROLED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    ASSERT(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 25
Total del: 38
Header: ThreatManager::clearReferences
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    ASSERT(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    ASSERT(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
Class:class BloodboltHitCheck { 
Class:class spell_gen_soul_preserver : public SpellScriptLoader { 
Class:         class spell_gen_soul_preserver_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        ASSERT(script);'), (66, 1, u'+                    ASSERT(false); // Error that should be fixed ASAP.')]
===========================================
Class:class achievement_wg_didnt_stand_a_chance : public AchievementCriteriaScript { 
Class: class AreaTrigger_at_sholazar_waygate : public AreaTriggerScript { 
Class: class spell_dk_improved_blood_presence : public SpellScriptLoader { 
Class:     class spell_dk_improved_blood_presence_AuraScript : public AuraScript     {     
Class:  class spell_dk_improved_unholy_presence : public SpellScriptLoader { 
Class:     class spell_dk_improved_unholy_presence_AuraScript : public AuraScript     {     
Class:class spell_festergut_gaseous_blight : public SpellScriptLoader { 
Class:         class spell_festergut_gaseous_blight_SpellScript : public SpellScript         {         
Class:class spell_rotface_slime_spray : public SpellScriptLoader { 
Class:         class spell_rotface_slime_spray_SpellScript : public SpellScript         {         
Class: class spell_dk_gnoul_explode : public SpellScriptLoader  class spell_dk_ghoul_explode : public SpellScriptLoader         spell_dk_gnoul_explode() : SpellScriptLoader() { }         spell_dk_gnoul_explode() : SpellScriptLoader() 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(pVictim->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+            ASSERT(victim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::DealDamage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(pVictim->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+            ASSERT(victim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(pVictim->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+            ASSERT(victim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-                ASSERT(floor < std::numeric_limits<float>::max());'), (72, 1, u'+                    ASSERT(floor < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 36
Total del: 29
Header: namespace VMAP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-                ASSERT(floor < std::numeric_limits<float>::max());'), (72, 1, u'+                    ASSERT(floor < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-                ASSERT(floor < std::numeric_limits<float>::max());'), (72, 1, u'+                    ASSERT(floor < std::numeric_limits<float>::max());')]
===========================================
Class:  class spell_voodoo : public SpellScriptLoader { 
Class:         class spell_voodoo_SpellScript : public SpellScript         {         
Class:class at_frozen_throne_teleport : public AreaTriggerScript { 
Class:class achievement_sickly_gazelle : public AchievementCriteriaScript { 
Class:class spell_razorscale_flame_breath : public SpellScriptLoader { 
Class:         class spell_razorscale_flame_breath_SpellScript : public SpellScript         {         
Class: class achievement_iron_dwarf_medium_rare : public AchievementCriteriaScript { 
Class: class npc_demolisher_engineerer : public CreatureScript { 
Class: class npc_wg_spiritguide : public CreatureScript { 
Class: class npc_wg_dalaran_queue : public CreatureScript { 
Class: class npc_wintergrasp_quest_giver : public CreatureScript { 
Class: class npc_demolisher_engineerer : public CreatureScript { 
Class: class npc_wg_spiritguide : public CreatureScript { 
Class: class npc_wg_dalaran_queue : public CreatureScript { 
Class: class npc_wintergrasp_quest_giver : public CreatureScript { 
Class:     class spell_ulduar_squeezed_lifeless_SpellScript : public SpellScript     {     
Class:class achievement_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_knock_on_wood : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(!itr->second.passenger);'), (5, 1, u'+        ASSERT(!itr->second.Passenger);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Vehicle::~Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(!itr->second.passenger);'), (5, 1, u'+        ASSERT(!itr->second.Passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(!itr->second.passenger);'), (5, 1, u'+        ASSERT(!itr->second.Passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        ASSERT(!seat->second.passenger);'), (20, 1, u'+        ASSERT(!seat->second.Passenger);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        ASSERT(!seat->second.passenger);'), (20, 1, u'+        ASSERT(!seat->second.Passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        ASSERT(!seat->second.passenger);'), (20, 1, u'+        ASSERT(!seat->second.Passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(seat != m_Seats.end());'), (3, 1, u'+    ASSERT(seat != Seats.end());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::RemovePassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(seat != m_Seats.end());'), (3, 1, u'+    ASSERT(seat != Seats.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(seat != m_Seats.end());'), (3, 1, u'+    ASSERT(seat != Seats.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(m_usableSeatNum);'), (5, 1, u'+        ASSERT(_usableSeatNum);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(m_usableSeatNum);'), (5, 1, u'+        ASSERT(_usableSeatNum);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(m_usableSeatNum);'), (5, 1, u'+        ASSERT(_usableSeatNum);')]
===========================================
Class:class spell_gen_vehicle_scaling : public SpellScriptLoader { 
Class:         class spell_gen_vehicle_scaling_AuraScript : public AuraScript         {         
Class: class spell_gen_launch : public SpellScriptLoader { 
Class:         class spell_gen_launch_SpellScript : public SpellScript         {         
Class:class achievement_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_knock_on_wood : public AchievementCriteriaScript { 
Class:class spell_deathbringer_boiling_blood : public SpellScriptLoader { 
Class:         class spell_deathbringer_boiling_blood_SpellScript : public SpellScript         {         
Class:class MarkOfTheFallenChampionCheck { 
Class: class spell_deathbringer_mark_of_the_fallen_champion : public SpellScriptLoader { 
Class:         class spell_deathbringer_mark_of_the_fallen_champion_SpellScript : public SpellScript         {         
Class:class achievement_orbital_bombardment : public AchievementCriteriaScript { 
Class: class achievement_orbital_devastation : public AchievementCriteriaScript { 
Class: class achievement_nuked_from_orbit : public AchievementCriteriaScript { 
Class: class achievement_orbit_uary : public AchievementCriteriaScript { 
Class:class spell_intense_cold : public SpellScriptLoader { 
Class:         class spell_intense_cold_AuraScript : public AuraScript         {         
Class: class achievement_intense_cold : public AchievementCriteriaScript { 
Class:class achievement_twilight_assist : public AchievementCriteriaScript { 
Class: class achievement_twilight_duo : public AchievementCriteriaScript { 
Class: class achievement_twilight_zone : public AchievementCriteriaScript { 
Class:class achievement_volunteer_work : public AchievementCriteriaScript { 
Class:class achievement_three_faced : public AchievementCriteriaScript { 
Class:class achievement_consumption_junction : public AchievementCriteriaScript { 
Class:class achievement_abuse_the_ooze : public AchievementCriteriaScript { 
Class:class achievement_oh_novos : public AchievementCriteriaScript { 
Class:class achievement_brann_sparklin_news : public AchievementCriteriaScript { 
Class:class spell_gen_allow_cast_from_item_only : public SpellScriptLoader { 
Class:     class spell_gen_allow_cast_from_item_only_SpellScript : public SpellScript     {     
Class:class achievement_dehydration : public AchievementCriteriaScript { 
Class:class achievement_split_personality : public AchievementCriteriaScript { 
Class:class achievement_less_rabi : public AchievementCriteriaScript { 
Class:class achievement_defenseless : public AchievementCriteriaScript { 
Class:class spell_auriaya_sentinel_blast : public SpellScriptLoader { 
Class:         class spell_auriaya_sentinel_blast_SpellScript : public SpellScript         {         
Class:class achievement_watch_him_die : public AchievementCriteriaScript { 
Class:class spell_gen_shroud_of_death : public SpellScriptLoader { 
Class:         class spell_gen_shroud_of_death_AuraScript : public AuraScript         {         
Class:class achievement_share_the_love : public AchievementCriteriaScript { 
Class:class achievement_chaos_theory : public AchievementCriteriaScript { 
Class:class achievement_respect_your_elders : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(_charCreateCallback.GetParam() == createInfo);'), (3, 1, u'+            ASSERT(_charCreateCallback.GetParam() == createInfo);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldSession::HandleCharCreateCallback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(_charCreateCallback.GetParam() == createInfo);'), (3, 1, u'+            ASSERT(_charCreateCallback.GetParam() == createInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(_charCreateCallback.GetParam() == createInfo);'), (3, 1, u'+            ASSERT(_charCreateCallback.GetParam() == createInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(_charCreateCallback.GetParam() == createInfo);'), (3, 1, u'+            ASSERT(_charCreateCallback.GetParam() == createInfo);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldSession::HandleCharCreateCallback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(_charCreateCallback.GetParam() == createInfo);'), (3, 1, u'+            ASSERT(_charCreateCallback.GetParam() == createInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(_charCreateCallback.GetParam() == createInfo);'), (3, 1, u'+            ASSERT(_charCreateCallback.GetParam() == createInfo);')]
===========================================
Class:class achievement_getting_back_to_nature : public AchievementCriteriaScript { 
Class:class achievement_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_on_wood : public AchievementCriteriaScript { 
Class: class achievement_knock_knock_knock_on_wood : public AchievementCriteriaScript { 
Class:class achievement_shadowdodger : public AchievementCriteriaScript { 
Class: class achievement_smell_saronite : public AchievementCriteriaScript { 
Class:class npc_scorch_ground : public CreatureScript { 
Class:class npc_scorch_ground : public CreatureScript { 
Class:class achievement_ignis_shattered : public AchievementCriteriaScript { 
Class:class spell_dru_starfall_aoe : public SpellScriptLoader { 
Class:         class spell_dru_starfall_aoe_SpellScript : public SpellScript         {         
Class: class spell_pool_of_tar : public CreatureScript class npc_pool_of_tar : public CreatureScript         spell_pool_of_tar() : CreatureScript() { }         spell_pool_of_tar() : CreatureScript() 
Class:class spell_kologarn_stone_shout : public SpellScriptLoader { 
Class:         class spell_kologarn_stone_shout_SpellScript : public SpellScript         {         
Class:class PlayerOrPetCheck { 
Class:class spell_heigan_eruption : public SpellScriptLoader { 
Class:         class spell_heigan_eruption_SpellScript : public SpellScript         {         
Class: class achievement_safety_dance : public AchievementCriteriaScript { 
Class:class achievement_void_dance : public AchievementCriteriaScript { 
Class:class achievement_kings_bane : public AchievementCriteriaScript { 
Class:class achievement_nine_lives : public AchievementCriteriaScript { 
Class: class achievement_crazy_cat_lady : public AchievementCriteriaScript { 
Class:class npc_auriaya_seeping_trigger : public CreatureScript class npc_auriaya_seeping_trigger : public CreatureScript
Class:class npc_feral_defender : public CreatureScript { 
Class: class SanctumSentryCheck { 
Class: class spell_auriaya_strenght_of_the_pack : public SpellScriptLoader { 
Class:         class spell_auriaya_strenght_of_the_pack_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(_aura);'), (6, 1, u'+    ASSERT(_aura && !_removedAura);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: DynamicObject::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(_aura);'), (6, 1, u'+    ASSERT(_aura && !_removedAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(_aura);'), (6, 1, u'+    ASSERT(_aura && !_removedAura);')]
===========================================
Class:     class spell_attuned_to_nature_dose_reduction_SpellScript : public SpellScript     {     
Class:class boss_kurinnaxx : public CreatureScript { 
Class:class boss_rajaxx : public CreatureScript class boss_rajaxx : public CreatureScript
Class: class spell_q12659_ahunaes_knife : public SpellScriptLoader { 
Class:     class spell_q12659_ahunaes_knife_SpellScript : public SpellScript     {     
Class: class spell_mark_of_nature : public SpellScriptLoader { 
Class:         class spell_mark_of_nature_SpellScript : public SpellScript         {         
Class: class npc_demented_druid : public CreatureScript { 
Class: class boss_shadeoftaerar : public CreatureScript { 
Class:class spell_xt002_gravity_bomb_spawn_void_zone : public SpellScriptLoader class spell_xt002_gravity_bomb_aura : public SpellScriptLoader         spell_xt002_gravity_bomb_spawn_void_zone() : SpellScriptLoader() { }         spell_xt002_gravity_bomb_spawn_void_zone() : SpellScriptLoader() 
Class: class spell_xt002_gravity_bomb_damage : public SpellScriptLoader { 
Class:         class spell_xt002_gravity_bomb_damage_SpellScript : public SpellScript         {         
Class:class achievement_nerf_engineering : public AchievementCriteriaScript { 
Class: class achievement_heartbreaker : public AchievementCriteriaScript { 
Class: class achievement_nerf_gravity_bombs : public AchievementCriteriaScript { 
Class:class BoomEvent : public BasicEvent { 
Class:class spell_xt002_submerged : public SpellScriptLoader { 
Class:         class spell_xt002_submerged_SpellScript : public SpellScript         {         
Class: class spell_xt002_stand : public SpellScriptLoader { 
Class:         class spell_xt002_stand_SpellScript : public SpellScript         {         
Class:class PlayerOrPetCheck { 
Class: class spell_xt002_tympanic_tantrum : public SpellScriptLoader { 
Class:         class spell_xt002_tympanic_tantrum_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!mode'), (4, 1, u'+    ASSERT(mode == AURA_EFFECT_HANDLE_REAL')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: AuraEffect::HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!mode'), (4, 1, u'+    ASSERT(mode == AURA_EFFECT_HANDLE_REAL')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!mode'), (4, 1, u'+    ASSERT(mode == AURA_EFFECT_HANDLE_REAL')]
===========================================
Class:class spell_xt002_searing_light_spawn_life_spark : public SpellScriptLoader { 
Class:         class spell_xt002_searing_light_spawn_life_spark_AuraScript : public AuraScript         {         
Class: class spell_xt002_gravity_bomb_spawn_void_zone : public SpellScriptLoader { 
Class:         class spell_xt002_gravity_bomb_spawn_void_zone_AuraScript : public AuraScript         {         
Class: class spell_xt002_heart_overload_periodic : public SpellScriptLoader { 
Class:         class spell_xt002_heart_overload_periodic_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(casterGUID);'), (3, 1, u'+    ASSERT(casterGUID || caster);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: Unit::_TryStackingOrRefreshingExistingAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(casterGUID);'), (3, 1, u'+    ASSERT(casterGUID || caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(casterGUID);'), (3, 1, u'+    ASSERT(casterGUID || caster);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(spellproto);'), (6, 1, u'+    ASSERT(spellProto);'), (8, 2, u'-    ASSERT(caster || casterGUID);'), (9, 2, u'-    ASSERT(tryEffMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: AuraApplication::ClientUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(spellproto);'), (6, 1, u'+    ASSERT(spellProto);'), (8, 2, u'-    ASSERT(caster || casterGUID);'), (9, 2, u'-    ASSERT(tryEffMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(spellproto);'), (6, 1, u'+    ASSERT(spellProto);'), (8, 2, u'-    ASSERT(caster || casterGUID);'), (9, 2, u'-    ASSERT(tryEffMask <= MAX_EFFECT_MASK);')]
===========================================
Class:class npc_baltarhus_the_warborn_clone : public CreatureScript class npc_baltharus_the_warborn_clone : public CreatureScript         npc_baltarhus_the_warborn_clone() : CreatureScript() { }         npc_baltarhus_the_warborn_clone() : CreatureScript() 
Class: class boss_general_zarithrian : public CreatureScript { 
Class: class npc_onyx_flamecaller : public CreatureScript { 
Class: class spell_gen_magic_rooster : public SpellScriptLoader { 
Class:         class spell_gen_magic_rooster_SpellScript : public SpellScript         {         
Class:class spell_gen_av_drekthar_presence : public SpellScriptLoader { 
Class:         class spell_gen_av_drekthar_presence_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    ASSERT(GetOwner() != target);')]
===========================================
===========================================
Total add: 4
Total del: 39
Header: Aura::CanBeAppliedOn
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    ASSERT(GetOwner() != target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    ASSERT(GetOwner() != target);')]
===========================================
Class:  class spell_ex_463 : public SpellScriptLoader { 
Class:         class spell_ex_463AuraScript : public AuraScript         {         
Class: class spell_dream_fog_sleep : public SpellScriptLoader { 
Class:         class spell_dream_fog_sleep_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(vehicle);'), (5, 1, u'+            ASSERT(vehicle);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(vehicle);'), (5, 1, u'+            ASSERT(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(vehicle);'), (5, 1, u'+            ASSERT(vehicle);')]
===========================================
Class:     class MonsterCustomChatBuilder     {     
Class:  class boss_sartharion : public CreatureScript { 
Class:  class mob_tenebron : public CreatureScript { 
Class:  class mob_shadron : public CreatureScript { 
Class:  class mob_vesperon : public CreatureScript { 
Class:  class mob_acolyte_of_shadron : public CreatureScript { 
Class:  class mob_acolyte_of_vesperon : public CreatureScript { 
Class:  class mob_twilight_eggs : public CreatureScript { 
Class: class npc_flame_tsunami : public CreatureScript { 
Class:  class npc_twilight_fissure : public CreatureScript { 
Class:  class mob_twilight_whelp : public CreatureScript { 
Class: class boss_baltharus_the_warborn : public CreatureScript { 
Class: class npc_baltarhus_the_warborn_clone : public CreatureScript { 
Class: class spell_baltharus_enervating_brand : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_AuraScript : public AuraScript         {         
Class: class EnervatingBrandSelector { 
Class: class spell_baltharus_enervating_brand_trigger : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_trigger_SpellScript : public SpellScript         {         
Class: class boss_saviana_ragefire : public CreatureScript { 
Class: class ConflagrationTargetSelector { 
Class: class spell_saviana_conflagration_init : public SpellScriptLoader { 
Class:         class spell_saviana_conflagration_init_SpellScript : public SpellScript         {         
Class: class spell_saviana_conflagration_throwback : public SpellScriptLoader { 
Class:         class spell_saviana_conflagration_throwback_SpellScript : public SpellScript         {         
Class: class instance_ruby_sanctum : public InstanceMapScript { 
Class: class npc_xerestrasza : public CreatureScript { 
Class: class at_baltharus_plateau : public AreaTriggerScript { 
Class:  class boss_sartharion : public CreatureScript { 
Class:  class mob_tenebron : public CreatureScript { 
Class:  class mob_shadron : public CreatureScript { 
Class:  class mob_vesperon : public CreatureScript { 
Class:  class mob_acolyte_of_shadron : public CreatureScript { 
Class:  class mob_acolyte_of_vesperon : public CreatureScript { 
Class:  class mob_twilight_eggs : public CreatureScript { 
Class: class npc_flame_tsunami : public CreatureScript { 
Class:  class npc_twilight_fissure : public CreatureScript { 
Class:  class mob_twilight_whelp : public CreatureScript { 
Class: class boss_baltharus_the_warborn : public CreatureScript { 
Class: class npc_baltarhus_the_warborn_clone : public CreatureScript { 
Class: class spell_baltharus_enervating_brand : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_AuraScript : public AuraScript         {         
Class: class EnervatingBrandSelector { 
Class: class spell_baltharus_enervating_brand_trigger : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_trigger_SpellScript : public SpellScript         {         
Class: class boss_saviana_ragefire : public CreatureScript { 
Class: class ConflagrationTargetSelector { 
Class: class spell_saviana_conflagration_init : public SpellScriptLoader { 
Class:         class spell_saviana_conflagration_init_SpellScript : public SpellScript         {         
Class: class spell_saviana_conflagration_throwback : public SpellScriptLoader { 
Class:         class spell_saviana_conflagration_throwback_SpellScript : public SpellScript         {         
Class: class instance_ruby_sanctum : public InstanceMapScript { 
Class: class npc_xerestrasza : public CreatureScript { 
Class: class at_baltharus_plateau : public AreaTriggerScript { 
Class:class npc_baltarhus_the_warborn_clone : public CreatureScript { 
Class: class boss_saviana_ragefire : public CreatureScript { 
Class: class ConflagrationTargetSelector { 
Class: class spell_saviana_conflagration_init : public SpellScriptLoader { 
Class:         class spell_saviana_conflagration_init_SpellScript : public SpellScript         {         
Class: class spell_saviana_conflagration_throwback : public SpellScriptLoader { 
Class:         class spell_saviana_conflagration_throwback_SpellScript : public SpellScript         {         
Class:  class npc_dream_fog : public CreatureScript { 
Class: class boss_ysondre : public CreatureScript { 
Class: class npc_demented_druid : public CreatureScript { 
Class: class boss_lethon : public CreatureScript { 
Class: class boss_emeriss : public CreatureScript { 
Class: class boss_taerar : public CreatureScript { 
Class: class boss_shadeoftaerar : public CreatureScript { 
Class: class boss_emeriss : public CreatureScript { 
Class: class boss_taerar : public CreatureScript { 
Class: class boss_shadeoftaerar : public CreatureScript { 
Class:  class boss_ysondre : public CreatureScript { 
Class:  class mob_dementeddruids : public CreatureScript { 
Class:class EnervatingBrandSelector { 
Class: class spell_baltharus_enervating_brand_trigger : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_trigger_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(!m_cleanupDone);'), (8, 1, u'+    ASSERT(casterGUID);')]
===========================================
===========================================
Total add: 44
Total del: 17
Header: Unit::DeMorph
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(!m_cleanupDone);'), (8, 1, u'+    ASSERT(casterGUID);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(!m_cleanupDone);'), (8, 1, u'+    ASSERT(casterGUID);')]
===========================================
Class: class boss_baltharus_the_warborn : public CreatureScript { 
Class: class spell_baltharus_enervating_brand : public SpellScriptLoader { 
Class:         class spell_baltharus_enervating_brand_AuraScript : public AuraScript         {         
Class: class instance_ruby_sanctum : public InstanceMapScript { 
Class: class npc_xerestrasza : public CreatureScript { 
Class: class at_baltharus_plateau : public AreaTriggerScript { 
Class: class spell_dk_runic_power_feed : public SpellScriptLoader { 
Class:         class spell_dk_runic_power_feed_SpellScript : public SpellScript         {         
Class: class mob_loatheb_spore : public CreatureScript { 
Class: class spell_dk_blood_boil : public SpellScriptLoader { 
Class:         class spell_dk_blood_boil_SpellScript : public SpellScript         {         
Class:class spell_freya_attuned_to_nature : public SpellScriptLoader { 
Class:         class spell_freya_attuned_to_nature_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT(m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS);'), (8, 1, u'+    ASSERT(_questMenuItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
Total add: 11
Total del: 14
Header: QuestMenu::AddMenuItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT(m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS);'), (8, 1, u'+    ASSERT(_questMenuItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT(m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS);'), (8, 1, u'+    ASSERT(_questMenuItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            ASSERT(false && "AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: AuraScript::_IsDefaultActionPrevented
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            ASSERT(false && "AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            ASSERT(false && "AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Total add: 15
Total del: 2
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(false);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(false);')]
===========================================
Class:        class spell_putricide_gaseous_bloat_SpellScript : public SpellScript         {         
Class:class spell_icc_stoneform : public SpellScriptLoader { 
Class:         class spell_icc_stoneform_AuraScript : public AuraScript         {         
Class: class spell_icc_sprit_alarm : public SpellScriptLoader { 
Class:         class spell_icc_sprit_alarm_SpellScript : public SpellScript         {         
Class:class npc_iron_roots : public CreatureScript class npc_iron_roots : public CreatureScript
Class: class boss_elder_brightleaf : public CreatureScript { 
Class: class boss_elder_stonebark : public CreatureScript { 
Class: class boss_elder_ironbranch : public CreatureScript { 
Class: class npc_detonating_lasher : public CreatureScript { 
Class: class npc_ancient_water_spirit : public CreatureScript { 
Class: class npc_storm_lasher : public CreatureScript { 
Class: class npc_ancient_conservator : public CreatureScript { 
Class: class npc_healthy_spore : public CreatureScript { 
Class: class npc_eonars_gift : public CreatureScript { 
Class: class npc_nature_bomb : public CreatureScript { 
Class:class spell_freya_iron_roots : public SpellScriptLoader { 
Class:         class spell_freya_iron_roots_SpellScript : public SpellScript         {         
Class: class spell_freya_attuned_to_nature : public SpellScriptLoader { 
Class:         class spell_freya_attuned_to_nature_SpellScript : public SpellScript         {         
Class: class spell_putricide_slime_puddle_aura : public SpellScriptLoader { 
Class:         class spell_putricide_slime_puddle_aura_SpellScript : public SpellScript         {         
Class: class RisenArchmageCheck { 
Class: class DelayedCastEvent : public BasicEvent { 
Class: class AuraRemoveEvent : public BasicEvent { 
Class: class SummonTargetSelector { 
Class: class ValithriaDespawner : public BasicEvent { 
Class: class boss_valithria_dreamwalker : public CreatureScript { 
Class: class npc_green_dragon_combat_trigger : public CreatureScript { 
Class: class npc_the_lich_king_controller : public CreatureScript { 
Class: class npc_risen_archmage : public CreatureScript { 
Class: class npc_blazing_skeleton : public CreatureScript { 
Class: class npc_suppresser : public CreatureScript { 
Class: class npc_blistering_zombie : public CreatureScript { 
Class: class npc_gluttonous_abomination : public CreatureScript { 
Class: class npc_dream_portal : public CreatureScript { 
Class: class npc_dream_cloud : public CreatureScript { 
Class: class spell_dreamwalker_mana_void : public SpellScriptLoader { 
Class:         class spell_dreamwalker_mana_void_AuraScript : public AuraScript         {         
Class: class spell_dreamwalker_decay_periodic_timer : public SpellScriptLoader { 
Class:         class spell_dreamwalker_decay_periodic_timer_AuraScript : public AuraScript         {         
Class: class spell_dreamwalker_summoner : public SpellScriptLoader { 
Class:         class spell_dreamwalker_summoner_SpellScript : public SpellScript         {         
Class: class spell_dreamwalker_summon_suppresser : public SpellScriptLoader { 
Class:         class spell_dreamwalker_summon_suppresser_AuraScript : public AuraScript         {         
Class: class spell_dreamwalker_summon_dream_portal : public SpellScriptLoader { 
Class:         class spell_dreamwalker_summon_dream_portal_SpellScript : public SpellScript         {         
Class: class spell_dreamwalker_summon_nightmare_portal : public SpellScriptLoader { 
Class:         class spell_dreamwalker_summon_nightmare_portal_SpellScript : public SpellScript         {         
Class: class spell_dreamwalker_nightmare_cloud : public SpellScriptLoader { 
Class:         class spell_dreamwalker_nightmare_cloud_AuraScript : public AuraScript         {         
Class: class achievement_portal_jockey : public AchievementCriteriaScript { 
Class: class npc_flash_freeze : public CreatureScript { 
Class: class boss_hodir : public CreatureScript { 
Class: class npc_icicle : public CreatureScript { 
Class: class npc_snowpacked_icicle : public CreatureScript { 
Class: class npc_hodir_priest : public CreatureScript { 
Class: class npc_hodir_shaman : public CreatureScript { 
Class: class npc_hodir_druid : public CreatureScript { 
Class: class npc_hodir_mage : public CreatureScript { 
Class: class npc_toasty_fire : public CreatureScript { 
Class: class spell_biting_cold : public SpellScriptLoader { 
Class:         class spell_biting_cold_AuraScript : public AuraScript         {         
Class: class spell_biting_cold_dot : public SpellScriptLoader { 
Class:     class spell_biting_cold_dot_AuraScript : public AuraScript     {     
Class:class spell_gen_lifeblood : public SpellScriptLoader { 
Class:         class spell_gen_lifeblood_AuraScript : public AuraScript         {         
Class: class spell_mage_incanters_absorbtion_absorb : public SpellScriptLoader class spell_mage_incanters_absorbtion_base_AuraScript : public AuraScript public:     spell_mage_incanters_absorbtion_absorb() : SpellScriptLoader() { }     spell_mage_incanters_absorbtion_absorb() : SpellScriptLoader() 
Class:class spell_warl_banish : public SpellScriptLoader { 
Class:         class spell_warl_banish_SpellScript : public SpellScript         {         
Class:class npc_deaths_head_ward_keeper : public CreatureScript { 
Class:class achievement_denyin_the_scion : public AchievementCriteriaScript { 
Class:class achievement_arena_kills : public AchievementCriteriaScript { 
Class:class boss_doomwalker : public CreatureScript { 
Class: class FrostwingVrykulSearcher { 
Class: class FrostwingGauntletRespawner { 
Class: class CaptainSurviveTalk : public BasicEvent { 
Class:class DeathPlagueTargetSelector class boss_sister_svalna : public CreatureScript         explicit DeathPlagueTargetSelector(Unit* caster) : _caster(caster) {}         explicit DeathPlagueTargetSelector(Unit* caster) : _caster(caster) 
Class:class spell_icc_harvest_blight_specimen : public SpellScriptLoader class npc_crok_scourgebane : public CreatureScript         spell_icc_harvest_blight_specimen() : SpellScriptLoader() { }         spell_icc_harvest_blight_specimen() : SpellScriptLoader() 
Class:class at_icc_saurfang_portal : public AreaTriggerScript { 
Class: class npc_captain_arnath : public CreatureScript { 
Class: class npc_captain_brandon : public CreatureScript { 
Class: class npc_captain_grondel : public CreatureScript { 
Class: class npc_captain_rupert : public CreatureScript { 
Class: class npc_frostwing_vrykul : public CreatureScript { 
Class: class npc_impaling_spear : public CreatureScript { 
Class: class DeathPlagueTargetSelector { 
Class: class spell_frost_giant_death_plague : public SpellScriptLoader { 
Class:         class spell_frost_giant_death_plague_SpellScript : public SpellScript         {         
Class: class spell_icc_harvest_blight_specimen : public SpellScriptLoader { 
Class:         class spell_icc_harvest_blight_specimen_SpellScript : public SpellScript         {         
Class: class AliveCheck { 
Class: class spell_svalna_revive_champion : public SpellScriptLoader { 
Class:         class spell_svalna_revive_champion_SpellScript : public SpellScript         {         
Class: class spell_svalna_remove_spear : public SpellScriptLoader { 
Class:         class spell_svalna_remove_spear_SpellScript : public SpellScript         {         
Class: class at_icc_saurfang_portal : public AreaTriggerScript { 
Class:class at_icc_start_frostwing_gauntlet : public AreaTriggerScript { 
Class:class spell_rog_deadly_poison : public SpellScriptLoader { 
Class:         class spell_rog_deadly_poison_SpellScript : public SpellScript         {         
Class: class spell_item_ashbringer : public SpellScriptLoader { 
Class:         class spell_item_ashbringer_SpellScript : public SpellScript         {         
Class:class spell_doomlord_kazzak_mark_of_kazzak : public SpellScriptLoader { 
Class:         class spell_doomlord_kazzak_mark_of_kazzak_AuraScript : public AuraScript         {         
Class:class spell_doomlord_kazzak_mark_of_kazzak : public SpellScriptLoader { 
Class:         class spell_doomlord_kazzak_mark_of_kazzak_AuraScript : public AuraScript         {         
Class:class boss_doomlord_kazzak : public CreatureScript { 
Class:class spell_shield_of_runes : public SpellScriptLoader { 
Class:         class spell_shield_of_runes_AuraScript : public AuraScript         {         
Class:class spell_mark_of_the_faceless : public SpellScriptLoader { 
Class:         class spell_mark_of_the_faceless_AuraScript : public AuraScript         {         
Class: class spell_ooze_zap : public SpellScriptLoader { 
Class:         class spell_ooze_zap_SpellScript : public SpellScript         {         
Class: class spell_ooze_zap_channel_end : public SpellScriptLoader { 
Class:         class spell_ooze_zap_channel_end_SpellScript : public SpellScript         {         
Class: class spell_energize_aoe : public SpellScriptLoader { 
Class:         class spell_energize_aoe_SpellScript : public SpellScript         {         
Class: class spell_gen_turkey_marker : public SpellScriptLoader { 
Class:         class spell_gen_turkey_marker_AuraScript : public AuraScript         {         
Class:  class spell_dk_gnoul_explode : public SpellScriptLoader { 
Class:         class spell_dk_gnoul_explode_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(vehicle);'), (7, 1, u'+                ASSERT(creature->GetVehicleKit());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: class npc_high_overlord_saurfang_icc : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(vehicle);'), (7, 1, u'+                ASSERT(creature->GetVehicleKit());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(vehicle);'), (7, 1, u'+                ASSERT(creature->GetVehicleKit());')]
===========================================
Class:class BeamProtectionPred class BeamProtectionCheck         explicit BeamProtectionPred(uint32 excludeAura) : _excludeAura(excludeAura) { }         explicit BeamProtectionPred(uint32 excludeAura) : _excludeAura(excludeAura) 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(fieldTokens.size() != 0);')]
===========================================
===========================================
Total add: 0
Total del: 29
Header: InstanceSave::UnloadIfEmpty
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(fieldTokens.size() != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(fieldTokens.size() != 0);')]
===========================================
Class:class npc_crate_helper : public CreatureScript { 
Class:class achievement_has_orphan_out : public AchievementCriteriaScript { 
Class:class achievement_school_of_hard_knocks : public AchievementCriteriaScript class achievement_has_orphan_out : public AchievementCriteriaScript         achievement_school_of_hard_knocks() : AchievementCriteriaScript() { }         achievement_school_of_hard_knocks() : AchievementCriteriaScript() 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, const std::string& filename)'), (3, 1, u'+static bool LoadDBC_assert_print(uint32 fsize, uint32 rsize, const std::string& filename)')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: uint32 DBCFileCount = 0;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, const std::string& filename)'), (3, 1, u'+static bool LoadDBC_assert_print(uint32 fsize, uint32 rsize, const std::string& filename)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, const std::string& filename)'), (3, 1, u'+static bool LoadDBC_assert_print(uint32 fsize, uint32 rsize, const std::string& filename)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(CheckGridIntegrity(creature,false));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature, false));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::CreatureRelocation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(CheckGridIntegrity(creature,false));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature, false));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(CheckGridIntegrity(creature,false));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature, false));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(CheckGridIntegrity(creature,true));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature, true));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::CreatureRelocation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(CheckGridIntegrity(creature,true));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(CheckGridIntegrity(creature,true));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature, true));')]
===========================================
Class: class spell_item_vanquished_clutches : public SpellScriptLoader { 
Class:         class spell_item_vanquished_clutches_SpellScript : public SpellScript         {         
Class: class npc_narm_faulk : public CreatureScript { 
Class: class npc_henze_faulk : public CreatureScript { 
Class: class spell_gen_seaforium_blast : public SpellScriptLoader { 
Class:         class spell_gen_seaforium_blast_SpellScript : public SpellScript         {         
Class:class OrientationCheck : public std::unary_function<Unit*, bool> { 
Class: class spell_eadric_radiance : public SpellScriptLoader { 
Class:        class spell_eadric_radiance_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Vehicle::RemoveAllPassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        ASSERT(!itr->second.passenger);')]
===========================================
Class:class achievement_bg_sa_artillery_veteran : public AchievementCriteriaScript class achievement_bg_sa_artillery : public AchievementCriteriaScript         achievement_bg_sa_artillery_veteran() : AchievementCriteriaScript() { }         achievement_bg_sa_artillery_veteran() : AchievementCriteriaScript() 
Class:class achievement_bg_sa_artillery_expert : public AchievementCriteriaScript { 
Class: class achievement_bg_sa_drop_it : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_aura);'), (3, 2, u'-    ASSERT(!m_caster);'), (4, 2, u'-    ASSERT(!m_isViewpoint);'), (5, 1, u'+    ASSERT(!_aura);'), (6, 1, u'+    ASSERT(!_caster);'), (7, 1, u'+    ASSERT(!_isViewpoint);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: DynamicObject::~DynamicObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_aura);'), (3, 2, u'-    ASSERT(!m_caster);'), (4, 2, u'-    ASSERT(!m_isViewpoint);'), (5, 1, u'+    ASSERT(!_aura);'), (6, 1, u'+    ASSERT(!_caster);'), (7, 1, u'+    ASSERT(!_isViewpoint);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_aura);'), (3, 2, u'-    ASSERT(!m_caster);'), (4, 2, u'-    ASSERT(!m_isViewpoint);'), (5, 1, u'+    ASSERT(!_aura);'), (6, 1, u'+    ASSERT(!_caster);'), (7, 1, u'+    ASSERT(!_isViewpoint);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_caster);'), (3, 2, u'-    ASSERT(m_caster->GetMap() == GetMap());'), (4, 1, u'+    ASSERT(_caster);'), (5, 1, u'+    ASSERT(_caster->GetMap() == GetMap());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: DynamicObject::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_caster);'), (3, 2, u'-    ASSERT(m_caster->GetMap() == GetMap());'), (4, 1, u'+    ASSERT(_caster);'), (5, 1, u'+    ASSERT(_caster->GetMap() == GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_caster);'), (3, 2, u'-    ASSERT(m_caster->GetMap() == GetMap());'), (4, 1, u'+    ASSERT(_caster);'), (5, 1, u'+    ASSERT(_caster->GetMap() == GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT (!m_aura && aura);'), (7, 1, u'+    ASSERT(!_aura && aura);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: DynamicObject::Delay
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT (!m_aura && aura);'), (7, 1, u'+    ASSERT(!_aura && aura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT (!m_aura && aura);'), (7, 1, u'+    ASSERT(!_aura && aura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (m_aura);'), (7, 1, u'+    ASSERT(_aura);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: DynamicObject::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (m_aura);'), (7, 1, u'+    ASSERT(_aura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT (m_aura);'), (7, 1, u'+    ASSERT(_aura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_caster);'), (4, 2, u'-    ASSERT(m_caster);'), (5, 2, u'-    ASSERT(m_caster->GetMap() == GetMap());'), (7, 1, u'+    ASSERT(!_caster);'), (9, 1, u'+    ASSERT(_caster);'), (10, 1, u'+    ASSERT(_caster->GetMap() == GetMap());')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: DynamicObject::BindToCaster
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_caster);'), (4, 2, u'-    ASSERT(m_caster);'), (5, 2, u'-    ASSERT(m_caster->GetMap() == GetMap());'), (7, 1, u'+    ASSERT(!_caster);'), (9, 1, u'+    ASSERT(_caster);'), (10, 1, u'+    ASSERT(_caster->GetMap() == GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_caster);'), (4, 2, u'-    ASSERT(m_caster);'), (5, 2, u'-    ASSERT(m_caster->GetMap() == GetMap());'), (7, 1, u'+    ASSERT(!_caster);'), (9, 1, u'+    ASSERT(_caster);'), (10, 1, u'+    ASSERT(_caster->GetMap() == GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_caster);'), (5, 1, u'+    ASSERT(_caster);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: DynamicObject::UnbindFromCaster
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_caster);'), (5, 1, u'+    ASSERT(_caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(m_caster);'), (5, 1, u'+    ASSERT(_caster);')]
===========================================
Class:class spell_generic_clone : public SpellScriptLoader { 
Class:         class spell_generic_clone_SpellScript : public SpellScript         {         
Class: class spell_generic_clone_weapon : public SpellScriptLoader { 
Class:         class spell_generic_clone_weapon_SpellScript : public SpellScript         {         
Class:class achievement_bg_sa_artillery_veteran : public AchievementCriteriaScript { 
Class: class achievement_bg_sa_artillery_expert : public AchievementCriteriaScript { 
Class: class achievement_bg_sa_drop_it : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));'), (7, 1, u'+    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()), sizeof(T), filename));')]
===========================================
===========================================
Total add: 7
Total del: 6
Header: LoadDBC_assert_print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));'), (7, 1, u'+    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()), sizeof(T), filename));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));'), (7, 1, u'+    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()), sizeof(T), filename));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                ASSERT(false);')]
===========================================
Class:class StartMovementEvent : public BasicEvent { 
Class:class BeamProtectionPred { 
Class: class spell_putricide_ooze_channel : public SpellScriptLoader { 
Class:         class spell_putricide_ooze_channel_SpellScript : public SpellScript         {         
Class:class spell_valanar_kinetic_bomb_absorb : public SpellScriptLoader { 
Class:         class spell_valanar_kinetic_bomb_absorb_AuraScript : public AuraScript         {         
Class: class go_princess_stillpines_cage : public GameObjectScript { 
Class: class npc_princess_stillpine : public CreatureScript { 
Class:class go_corkis_prison : public GameObjectScript class go_corkis_prison : public GameObjectScript
Class:  class npc_corki : public CreatureScript { 
Class: class spell_ulduar_proximity_mines : public SpellScriptLoader { 
Class:        class spell_ulduar_proximity_minesSpellScript : public SpellScript        {        
Class:  class spell_symbol_of_life_dummy : public SpellScriptLoader { 
Class:     class spell_symbol_of_life_dummy_SpellScript : public SpellScript     {     
Class: class npc_argent_tournament_post : public CreatureScript { 
Class: class npc_tiger_matriarch_credit : public CreatureScript { 
Class: class npc_tiger_matriarch : public CreatureScript { 
Class: class npc_troll_volunteer : public CreatureScript { 
Class: class spell_mount_check : public SpellScriptLoader { 
Class:         class spell_mount_check_AuraScript : public AuraScript         {         
Class: class spell_voljin_war_drums : public SpellScriptLoader { 
Class:         class spell_voljin_war_drums_SpellScript : public SpellScript         {         
Class: class spell_malygos_vortex_dummy : public SpellScriptLoader { 
Class:     class spell_malygos_vortex_dummy_SpellScript : public SpellScript     {     
Class: class spell_malygos_vortex_visual : public SpellScriptLoader { 
Class:         class spell_malygos_vortex_visual_AuraScript : public AuraScript         {         
Class: class npc_portal_eoe: public CreatureScript { 
Class:  class npc_power_spark: public CreatureScript { 
Class: class npc_hover_disk : public CreatureScript { 
Class:class npc_arcane_overload : public CreatureScript class npc_arcane_overload : public CreatureScript
Class:  class npc_wyrmrest_skytalon : public CreatureScript { 
Class: class npc_alexstrasza_eoe : public CreatureScript { 
Class: class achievement_three_car_garage_demolisher : public AchievementCriteriaScript { 
Class: class achievement_three_car_garage_chopper : public AchievementCriteriaScript { 
Class: class achievement_three_car_garage_siege : public AchievementCriteriaScript { 
Class: class achievement_shutout : public AchievementCriteriaScript { 
Class: class achievement_unbroken : public AchievementCriteriaScript { 
Class:class boss_razorscale : public CreatureScript { 
Class:class boss_razorscale_controller : public CreatureScript { 
Class:class spell_trigger_spell_from_caster : public SpellScriptLoader { 
Class:         class spell_trigger_spell_from_caster_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (7, 1, u'+                ASSERT(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (10, 2, u'-                assert(false && "Unknown field format character in DBCfmt.h");'), (12, 1, u'+                ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: DBCFileLoader::GetFormatRecordSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (7, 1, u'+                ASSERT(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (10, 2, u'-                assert(false && "Unknown field format character in DBCfmt.h");'), (12, 1, u'+                ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (7, 1, u'+                ASSERT(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (10, 2, u'-                assert(false && "Unknown field format character in DBCfmt.h");'), (12, 1, u'+                ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                    ASSERT(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DBCFileLoader::AutoProduceData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                    ASSERT(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                    ASSERT(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Unknown field format character in DBCfmt.h");'), (3, 1, u'+                    ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DBCFileLoader::AutoProduceData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Unknown field format character in DBCfmt.h");'), (3, 1, u'+                    ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Unknown field format character in DBCfmt.h");'), (3, 1, u'+                    ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                     ASSERT(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DBCFileLoader::AutoProduceStrings
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                     ASSERT(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                     ASSERT(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Unknown field format character in DBCfmt.h");'), (3, 1, u'+                     ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DBCFileLoader::AutoProduceStrings
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Unknown field format character in DBCfmt.h");'), (3, 1, u'+                     ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Unknown field format character in DBCfmt.h");'), (3, 1, u'+                     ASSERT(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DBCFileLoader::AutoProduceData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                     assert(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DBCFileLoader::AutoProduceStrings
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                     assert(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                     assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (3, 1, u'+                     assert(false && "Attempted to load DBC files that does not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (30, 1, u'+                assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Total add: 14
Total del: 6
Header: DBCFileLoader::GetFormatRecordSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (30, 1, u'+                assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (30, 1, u'+                assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (27, 1, u'+                    assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Total add: 16
Total del: 6
Header: DBCFileLoader::AutoProduceData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (27, 1, u'+                    assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+                    assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (27, 1, u'+                    assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+                     assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (70, 1, u'+                     assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Total add: 40
Total del: 24
Header: DBCFileLoader::AutoProduceStrings
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+                     assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (70, 1, u'+                     assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+                     assert(false && "Attempted to load DBC files that do not have field types that match what is in the core. Check DBCfmt.h or your DBC files.");'), (70, 1, u'+                     assert(false && "Unknown field format character in DBCfmt.h");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+                assert(false && "SQL storage has a field type that does not match what is in the core. Check SQLStorage.cpp or your database.");'), (43, 1, u'+                assert(false && "Unknown field format character in SQLStorage.cpp");')]
===========================================
===========================================
Total add: 35
Total del: 13
Header: SQLStorage::Free
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+                assert(false && "SQL storage has a field type that does not match what is in the core. Check SQLStorage.cpp or your database.");'), (43, 1, u'+                assert(false && "Unknown field format character in SQLStorage.cpp");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+                assert(false && "SQL storage has a field type that does not match what is in the core. Check SQLStorage.cpp or your database.");'), (43, 1, u'+                assert(false && "Unknown field format character in SQLStorage.cpp");')]
===========================================
Class:class at_icc_start_blood_quickening : public AreaTriggerScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(_instanceIds.size() == _instanceIds.capacity());')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: MapManager::GenerateInstanceId
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(_instanceIds.size() == _instanceIds.capacity());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(_instanceIds.size() == _instanceIds.capacity());')]
===========================================
Class:  class npc_highlord_tirion_fordring_lh : public CreatureScript { 
Class: class spell_q10041_q10040_who_are_they : public SpellScriptLoader { 
Class:         class spell_q10041_q10040_who_are_they_SpellScript : public SpellScript         {         
Class: class spell_item_map_of_the_geyser_fields : public SpellScriptLoader { 
Class:         class spell_item_map_of_the_geyser_fields_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    assert(i < limit);'), (85, 2, u'-    assert(!buffer_);       // find realloc error'), (143, 2, u'-    assert (i == AUTO);'), (240, 2, u'-    assert(!buffer_);   // find realloc error'), (256, 2, u'-    assert(i == AUTO);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(329, 2, u'-    assert(peerX509_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(1099, 2, u'-    assert(keyOutput == (keyLen + ivLen));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(928, 2, u'-    assert(write_buffer_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(89, 2, u'-    assert( (keylen == 16) || (keylen == 24) || (keylen == 32) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(250, 2, u'-        assert(expBegin->NotNegative());')]
===========================================
Class:class BadCertificate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-    assert((bytes % 2) == 0);'), (108, 2, u'-        assert( b  < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (109, 2, u'-        assert( b2 < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (114, 2, u'-        assert( b != bad && b2 != bad );'), (177, 2, u'-    assert(i == outSz);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 2, u'-    assert(!!r_ && !!s_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-    assert(digSz  <= MaxDigestSz);'), (35, 2, u'-    assert(buffSz <= MaxBufferSz);'), (116, 2, u'-    assert(digSz  <= MaxDigestSz);'), (117, 2, u'-    assert(buffSz <= MaxBufferSz);')]
===========================================
Class:class DWord { class DWord 
Class:  class Word { class Word 
Class:    template <class S, class D> S DivideThreeWordsByTwo(S* A, S B0, S B1, D* dummy_VC6_WorkAround = 0) { 
Class:    class Portable { 
Class:   class PentiumOptimized : public Portable { 
Class: class P4Optimized { 
Class:  class LowLevel : public PentiumOptimized { 
Class:class BadBER 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-    assert(modn.Exponentiate(y, e_) == x);  // check'), (127, 2, u'-    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);'), (182, 2, u'-    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  DBUG_ASSERT(mysql->field_count);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: alloc_stmt_fields
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  DBUG_ASSERT(mysql->field_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  DBUG_ASSERT(mysql->field_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tDBUG_ASSERT(info->end_of_file == my_tell(info->file,MYF(0)));'), (3, 1, u'+\tDBUG_ASSERT(info->end_of_file == mysql_file_tell(info->file, MYF(0)));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: my_b_flush_io_cache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tDBUG_ASSERT(info->end_of_file == my_tell(info->file,MYF(0)));'), (3, 1, u'+\tDBUG_ASSERT(info->end_of_file == mysql_file_tell(info->file, MYF(0)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tDBUG_ASSERT(info->end_of_file == my_tell(info->file,MYF(0)));'), (3, 1, u'+\tDBUG_ASSERT(info->end_of_file == mysql_file_tell(info->file, MYF(0)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+              DBUG_ASSERT(optend > *pos);'), (17, 1, u'+              DBUG_ASSERT(optend >= cur_arg);'), (18, 1, u'+              DBUG_ASSERT(optend <= *pos + strlen(*pos));'), (19, 1, u'+              DBUG_ASSERT(*optend);')]
===========================================
===========================================
Total add: 32
Total del: 6
Header: handle_options
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+              DBUG_ASSERT(optend > *pos);'), (17, 1, u'+              DBUG_ASSERT(optend >= cur_arg);'), (18, 1, u'+              DBUG_ASSERT(optend <= *pos + strlen(*pos));'), (19, 1, u'+              DBUG_ASSERT(*optend);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+              DBUG_ASSERT(optend > *pos);'), (17, 1, u'+              DBUG_ASSERT(optend >= cur_arg);'), (18, 1, u'+              DBUG_ASSERT(optend <= *pos + strlen(*pos));'), (19, 1, u'+              DBUG_ASSERT(*optend);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-    DBUG_ASSERT(sizeof(LARGE_INTEGER) == sizeof(query_performance_frequency));')]
===========================================
===========================================
Total add: 3
Total del: 99
Header: my_win_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-    DBUG_ASSERT(sizeof(LARGE_INTEGER) == sizeof(query_performance_frequency));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-    DBUG_ASSERT(sizeof(LARGE_INTEGER) == sizeof(query_performance_frequency));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  DBUG_ASSERT(cs->caseup_multiply == 1);'), (4, 1, u'+  DBUG_ASSERT(cs->mbmaxlen == 2);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: my_caseup_mb
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  DBUG_ASSERT(cs->caseup_multiply == 1);'), (4, 1, u'+  DBUG_ASSERT(cs->mbmaxlen == 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  DBUG_ASSERT(cs->caseup_multiply == 1);'), (4, 1, u'+  DBUG_ASSERT(cs->mbmaxlen == 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  DBUG_ASSERT(cs->casedn_multiply == 1);'), (4, 1, u'+  DBUG_ASSERT(cs->mbmaxlen == 2);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: my_casedn_mb
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  DBUG_ASSERT(cs->casedn_multiply == 1);'), (4, 1, u'+  DBUG_ASSERT(cs->mbmaxlen == 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  DBUG_ASSERT(cs->casedn_multiply == 1);'), (4, 1, u'+  DBUG_ASSERT(cs->mbmaxlen == 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: my_hash_sort_ucs2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  DBUG_ASSERT(src == dst && srclen == dstlen);'), (25, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
Total add: 5
Total del: 19
Header: my_caseup_str_ucs2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  DBUG_ASSERT(src == dst && srclen == dstlen);'), (25, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  DBUG_ASSERT(src == dst && srclen == dstlen);'), (25, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: my_casedn_ucs2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+  DBUG_ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(385, 2, u'-  DBUG_ASSERT(dst <= end);')]
===========================================
===========================================
Total add: 106
Total del: 290
Header: my_casedn_str_ucs2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(385, 2, u'-  DBUG_ASSERT(dst <= end);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(385, 2, u'-  DBUG_ASSERT(dst <= end);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      DBUG_ASSERT(to <= end);')]
===========================================
===========================================
Total add: 21
Total del: 41
Header: my_vsnprintf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      DBUG_ASSERT(to <= end);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      DBUG_ASSERT(to <= end);')]
===========================================
Class:        class spell_putricide_mutation_init_SpellScript : public SpellScript         {         
Class:class spell_dk_death_gate : public SpellScriptLoader { 
Class:         class spell_dk_death_gate_SpellScript : public SpellScript         {         
Class: class spell_item_gift_of_the_harvester : public SpellScriptLoader { 
Class:         class spell_item_gift_of_the_harvester_SpellScript : public SpellScript         {         
Class:class spell_gen_profession_research : public SpellScriptLoader { 
Class:         class spell_gen_profession_research_SpellScript : public SpellScript         {         
Class:class spell_item_book_of_glyph_mastery : public SpellScriptLoader { 
Class:         class spell_item_book_of_glyph_mastery_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            ASSERT(passenger->IsInWorld());'), (7, 2, u'-            ASSERT(passenger->IsOnVehicle(GetBase()));'), (8, 2, u'-            ASSERT(GetSeatForPassenger(passenger));'), (36, 1, u'+        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
Total add: 10
Total del: 23
Header: Vehicle::RemoveAllPassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            ASSERT(passenger->IsInWorld());'), (7, 2, u'-            ASSERT(passenger->IsOnVehicle(GetBase()));'), (8, 2, u'-            ASSERT(GetSeatForPassenger(passenger));'), (36, 1, u'+        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            ASSERT(passenger->IsInWorld());'), (7, 2, u'-            ASSERT(passenger->IsOnVehicle(GetBase()));'), (8, 2, u'-            ASSERT(GetSeatForPassenger(passenger));'), (36, 1, u'+        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-                    ASSERT(!GetPassenger(seatId))')]
===========================================
===========================================
Total add: 1
Total del: 9
Header: Vehicle::InstallAccessory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-                    ASSERT(!GetPassenger(seatId))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-                    ASSERT(!GetPassenger(seatId))')]
===========================================
Class:    class spell_gen_absorb0_hitlimit1_AuraScript : public AuraScript     {     
Class:        class spell_gen_absorb0_hitlimit1_AuraScript : public AuraScript         {         
Class:    class spell_gen_aura_of_anger_AuraScript : public AuraScript     {     
Class:    class spell_gen_burn_brutallus_AuraScript : public AuraScript     {     
Class:     class spell_gen_parachute_AuraScript : public AuraScript     {     
Class:    class spell_gen_pet_summonedSpellScript : public SpellScript     {     
Class:     class spell_gen_remove_flight_auras_SpellScript : public SpellScript     {     
Class:     class spell_gen_leeching_swarm_AuraScript : public AuraScript     {     
Class:     class spell_gen_trick_SpellScript : public SpellScript     {     
Class:     class spell_gen_trick_or_treat_SpellScript : public SpellScript     {     
Class:     class spell_pvp_trinket_wotf_shared_cd_SpellScript : public SpellScript     {     
Class:    class spell_gen_divine_storm_cd_reset_SpellScript : public SpellScript     {     
Class:    class spell_gen_gunship_portalSpellScript : public SpellScript     {     
Class: class npc_nestlewood_owlkin : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT (GetCaster()->ToCreature())'), (4, 2, u'-                ASSERT (plr)')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: class spell_ulduar_stone_grip_cast_target : public SpellScriptLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT (GetCaster()->ToCreature())'), (4, 2, u'-                ASSERT (plr)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT (GetCaster()->ToCreature())'), (4, 2, u'-                ASSERT (plr)')]
===========================================
Class:class spell_ulduar_squeezed_lifeless : public SpellScriptLoader { 
Class:     class spell_ulduar_squeezed_lifeless_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    ASSERT(!GetPassenger(seatId))')]
===========================================
===========================================
Total add: 16
Total del: 4
Header: Vehicle::InstallAccessory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    ASSERT(!GetPassenger(seatId))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    ASSERT(!GetPassenger(seatId))')]
===========================================
Class: class spell_ulduar_rubble_summon : public SpellScriptLoader { 
Class:class spell_ulduar_rubble_summon : public SpellScriptLoader  class StoneGripTargetSelector : public std::unary_function<Unit *, bool> public:     spell_ulduar_rubble_summon() : SpellScriptLoader() { }     spell_ulduar_rubble_summon() : SpellScriptLoader() 
Class:    class spell_ulduar_rubble_summonSpellScript : public SpellScript     {     
Class: class spell_ulduar_stone_grip_cast_target : public SpellScriptLoader { 
Class:    class spell_ulduar_cancel_stone_gripSpellScript : public SpellScript     {     
Class:    class spell_ulduar_stone_grip_absorb_AuraScript : public AuraScript     {     
Class:     class spell_ulduar_stone_grip_AuraScript : public AuraScript     {     
Class:class npc_right_arm : public CreatureScript class spell_ulduar_rubble_summon : public SpellScriptLoader     npc_right_arm() : CreatureScript() { }     npc_right_arm() : CreatureScript() 
Class: class spell_ulduar_stone_grip : public SpellScriptLoader { 
Class:     class spell_ulduar_stone_grip_AuraScript : public AuraScript     {     
Class:class spell_festergut_gaseous_blight : public SpellScriptLoader { 
Class:         class spell_festergut_gaseous_blight_SpellScript : public SpellScript         {         
Class:class spell_rotface_slime_spray : public SpellScriptLoader { 
Class:         class spell_rotface_slime_spray_SpellScript : public SpellScript         {         
Class:class npc_alchemist_adrianna : public CreatureScript { 
Class:class spell_icc_harvest_blight_specimen : public SpellScriptLoader { 
Class:         class spell_icc_harvest_blight_specimen_SpellScript : public SpellScript         {         
Class:class DaranavanMoveEvent : public BasicEvent { 
Class:class npc_darnavan : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    ASSERT(player_guid);')]
===========================================
===========================================
Total add: 1
Total del: 12
Header: Player::SendSavedInstances
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    ASSERT(player_guid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    ASSERT(player_guid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u"+        ASSERT(AddMember(leader)); // If the leader can't be added to a new group because it appears full, something is clearly wrong.")]
===========================================
===========================================
Total add: 11
Total del: 19
Header: Group::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u"+        ASSERT(AddMember(leader)); // If the leader can't be added to a new group because it appears full, something is clearly wrong.")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u"+        ASSERT(AddMember(leader)); // If the leader can't be added to a new group because it appears full, something is clearly wrong.")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        ASSERT(leader);')]
===========================================
===========================================
Total add: 12
Total del: 4
Header: WorldSession::HandleGroupAcceptOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        ASSERT(leader);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        ASSERT(leader);')]
===========================================
Class:class spell_sindragosa_icy_grip : public SpellScriptLoader { 
Class:         class spell_sindragosa_icy_grip_SpellScript : public SpellScript         {         
Class: class npc_rotting_frost_giant : public CreatureScript { 
Class:class DeathPlagueTargetSelector { 
Class: class spell_frost_giant_death_plague : public SpellScriptLoader { 
Class:         class spell_frost_giant_death_plague_SpellScript : public SpellScript         {         
Class: class spell_item_create_heart_candy : public SpellScriptLoader { 
Class:         class spell_item_create_heart_candy_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(aurApp->GetTarget());'), (9, 2, u'-            ASSERT(aurApp->GetTarget()->GetGUID() == itr->first->GetGUID());'), (11, 2, u'-            ASSERT(aurApp->GetBase() == this);'), (13, 2, u'-            ASSERT(aurApp->GetTarget() == itr->first);'), (15, 2, u'-            ASSERT(false);'), (30, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Total add: 17
Total del: 12
Header: Aura::UpdateTargetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(aurApp->GetTarget());'), (9, 2, u'-            ASSERT(aurApp->GetTarget()->GetGUID() == itr->first->GetGUID());'), (11, 2, u'-            ASSERT(aurApp->GetBase() == this);'), (13, 2, u'-            ASSERT(aurApp->GetTarget() == itr->first);'), (15, 2, u'-            ASSERT(false);'), (30, 1, u'+                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            ASSERT(aurApp->GetTarget());'), (9, 2, u'-            ASSERT(aurApp->GetTarget()->GetGUID() == itr->first->GetGUID());'), (11, 2, u'-            ASSERT(aurApp->GetBase() == this);'), (13, 2, u'-            ASSERT(aurApp->GetTarget() == itr->first);'), (15, 2, u'-            ASSERT(false);'), (30, 1, u'+                ASSERT(false);')]
===========================================
Class:class guard_orgrimmar : public CreatureScript { 
Class:class guard_shattrath_aldor : public CreatureScript class guard_shattrath_scryer : public CreatureScript     guard_shattrath_aldor() : CreatureScript() { }     guard_shattrath_aldor() : CreatureScript() 
Class: class guard_shattrath_scryer : public CreatureScript class guard_shattrath_aldor : public CreatureScript     guard_shattrath_scryer() : CreatureScript() { }     guard_shattrath_scryer() : CreatureScript() 
Class:  class guard_stormwind : public CreatureScript { 
Class: class npc_frost_freeze_trap : public CreatureScript { 
Class: class at_icc_saurfang_portal : public AreaTriggerScript { 
Class: class at_icc_shutdown_traps : public AreaTriggerScript { 
Class: class FrostwyrmLandEvent : public BasicEvent { 
Class: class boss_sindragosa : public CreatureScript { 
Class: class npc_ice_tomb : public CreatureScript { 
Class: class npc_spinestalker : public CreatureScript { 
Class: class npc_rimefang : public CreatureScript { 
Class: class npc_sindragosa_trash : public CreatureScript { 
Class: class spell_sindragosa_s_fury : public SpellScriptLoader { 
Class:         class spell_sindragosa_s_fury_SpellScript : public SpellScript         {         
Class: class UnchainedMagicTargetSelector { 
Class: class spell_sindragosa_unchained_magic : public SpellScriptLoader { 
Class:         class spell_sindragosa_unchained_magic_SpellScript : public SpellScript         {         
Class: class spell_sindragosa_instability : public SpellScriptLoader { 
Class:         class spell_sindragosa_instability_AuraScript : public AuraScript         {         
Class: class spell_sindragosa_frost_beacon : public SpellScriptLoader { 
Class:         class spell_sindragosa_frost_beacon_AuraScript : public AuraScript         {         
Class: class spell_sindragosa_ice_tomb : public SpellScriptLoader { 
Class:         class spell_sindragosa_ice_tomb_SpellScript : public SpellScript         {         
Class:         class spell_sindragosa_ice_tomb_AuraScript : public AuraScript         {         
Class: class FrostBombTargetSelector { 
Class: class spell_sindragosa_collision_filter : public SpellScriptLoader { 
Class:         class spell_sindragosa_collision_filter_SpellScript : public SpellScript         {         
Class: class spell_rimefang_icy_blast : public SpellScriptLoader { 
Class:         class spell_rimefang_icy_blast_SpellScript : public SpellScript         {         
Class: class OrderWhelpTargetSelector { 
Class: class spell_frostwarden_handler_order_whelp : public SpellScriptLoader { 
Class:         class spell_frostwarden_handler_order_whelp_SpellScript : public SpellScript         {         
Class: class spell_frostwarden_handler_focus_fire : public SpellScriptLoader { 
Class:         class spell_frostwarden_handler_focus_fire_SpellScript : public SpellScript         {         
Class:         class spell_frostwarden_handler_focus_fire_AuraScript : public AuraScript         {         
Class: class spell_trigger_spell_from_caster : public SpellScriptLoader { 
Class:         class spell_trigger_spell_from_caster_SpellScript : public SpellScript         {         
Class: class at_sindragosa_lair : public AreaTriggerScript { 
Class: class achievement_all_you_can_eat : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (!IsAppliedOnTarget(itr->first->GetGUID()) && "Aura::UpdateTargetMap: aura musn\'t be applied on target");'), (7, 1, u'+            ASSERT(aurApp->GetTarget());'), (9, 1, u'+            ASSERT(aurApp->GetTarget()->GetGUID() == itr->first->GetGUID());'), (11, 1, u'+            ASSERT(aurApp->GetBase() == this);'), (13, 1, u'+            ASSERT(aurApp->GetTarget() == itr->first);'), (15, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 14
Total del: 1
Header: Aura::UpdateTargetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (!IsAppliedOnTarget(itr->first->GetGUID()) && "Aura::UpdateTargetMap: aura musn\'t be applied on target");'), (7, 1, u'+            ASSERT(aurApp->GetTarget());'), (9, 1, u'+            ASSERT(aurApp->GetTarget()->GetGUID() == itr->first->GetGUID());'), (11, 1, u'+            ASSERT(aurApp->GetBase() == this);'), (13, 1, u'+            ASSERT(aurApp->GetTarget() == itr->first);'), (15, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT (!IsAppliedOnTarget(itr->first->GetGUID()) && "Aura::UpdateTargetMap: aura musn\'t be applied on target");'), (7, 1, u'+            ASSERT(aurApp->GetTarget());'), (9, 1, u'+            ASSERT(aurApp->GetTarget()->GetGUID() == itr->first->GetGUID());'), (11, 1, u'+            ASSERT(aurApp->GetBase() == this);'), (13, 1, u'+            ASSERT(aurApp->GetTarget() == itr->first);'), (15, 1, u'+            ASSERT(false);')]
===========================================
Class:class spell_gen_dungeon_credit : public SpellScriptLoader { 
Class:         class spell_gen_dungeon_credit_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_charmInfo);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_charmInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_charmInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT(!m_charmInfo);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT(!m_charmInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT(!m_charmInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_gameObj.empty());'), (3, 1, u'+    ASSERT(m_dynObj.empty());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_gameObj.empty());'), (3, 1, u'+    ASSERT(m_dynObj.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_gameObj.empty());'), (3, 1, u'+    ASSERT(m_dynObj.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT(!m_aura);'), (13, 1, u'+    ASSERT(!m_caster);'), (14, 1, u'+    ASSERT(!m_isViewpoint);')]
===========================================
===========================================
Total add: 11
Total del: 1
Header: DynamicObject::DynamicObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT(!m_aura);'), (13, 1, u'+    ASSERT(!m_caster);'), (14, 1, u'+    ASSERT(!m_isViewpoint);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT(!m_aura);'), (13, 1, u'+    ASSERT(!m_caster);'), (14, 1, u'+    ASSERT(!m_isViewpoint);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    ASSERT(m_caster);'), (19, 1, u'+    ASSERT(m_caster->GetMap() == GetMap());')]
===========================================
===========================================
Total add: 3
Total del: 13
Header: DynamicObject::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    ASSERT(m_caster);'), (19, 1, u'+    ASSERT(m_caster->GetMap() == GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    ASSERT(m_caster);'), (19, 1, u'+    ASSERT(m_caster->GetMap() == GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(false);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: Spell::EffectPersistentAA
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ASSERT(false);')]
===========================================
Class:class boss_baron_geddon : public CreatureScript { 
Class:class boss_gehennas : public CreatureScript { 
Class:class boss_golemagg : public CreatureScript enum Events public:     boss_golemagg() : CreatureScript() { }     boss_golemagg() : CreatureScript() 
Class:class boss_golemagg : public CreatureScript { 
Class:class boss_lucifron : public CreatureScript { 
Class:class boss_magmadar : public CreatureScript { 
Class:class boss_majordomo : public CreatureScript { 
Class:class boss_ragnaros : public CreatureScript enum Spells public:     boss_ragnaros() : CreatureScript() { }     boss_ragnaros() : CreatureScript() 
Class:class boss_ragnaros : public CreatureScript class boss_ragnaros : public CreatureScript
Class:class mob_SonOfFlame : public CreatureScript class mob_son_of_flame : public CreatureScript public:     mob_SonOfFlame() : CreatureScript() { }     mob_SonOfFlame() : CreatureScript() 
Class:class boss_shazzrah : public CreatureScript { 
Class:class spell_trash_mob_glacial_strike : public SpellScriptLoader { 
Class:         class spell_trash_mob_glacial_strike_AuraScript : public AuraScript         {         
Class:    class spell_dru_glyph_of_starfire_SpellScript : public SpellScript     {     
Class:     class spell_dru_moonkin_form_passive_AuraScript : public AuraScript     {     
Class:     class spell_dru_primal_tenacity_AuraScript : public AuraScript     {     
Class:     class spell_dru_savage_defense_AuraScript : public AuraScript     {     
Class:class spell_dru_t10_restoration_4p_bonus : public SpellScriptLoader { 
Class:class npc_icefang : public CreatureScript { 
Class: class spell_q12851_going_bearback : public SpellScriptLoader { 
Class:     class spell_q12851_going_bearback_AuraScript : public AuraScript     {     
Class:class PactOfTheDarkfallenChack class PactOfTheDarkfallenCheck         PactOfTheDarkfallenCheck(bool hasPact) : _hasPact(hasPact) { }         PactOfTheDarkfallenCheck(bool hasPact) : _hasPact(hasPact) 
Class:class spell_blood_queen_pact_of_the_darkfallen_dmg_target : public SpellScriptLoader { 
Class:         class spell_blood_queen_pact_of_the_darkfallen_dmg_SpellScript : public SpellScript         {         
Class:class spell_blood_queen_pact_of_the_darkfallen_dmg : public SpellScriptLoader { 
Class:         class spell_blood_queen_pact_of_the_darkfallen_dmg_AuraScript : public AuraScript         {         
Class:class spell_eregos_planar_shift : public SpellScriptLoader { 
Class:         class spell_eregos_planar_shift_AuraScript : public AuraScript         {         
Class:class spell_varos_energize_core_area_enemy : public SpellScriptLoader { 
Class:         class spell_varos_energize_core_area_enemySpellScript : public SpellScript         {         
Class: class spell_varos_energize_core_area_entry : public SpellScriptLoader { 
Class:         class spell_varos_energize_core_area_entrySpellScript : public SpellScript         {         
Class:class DistanceCheck { 
Class: class spell_bronjahm_soulstorm_targeting : public SpellScriptLoader { 
Class:         class spell_bronjahm_soulstorm_targeting_SpellScript : public SpellScript         {         
Class:class PactOfTheDarkfallenChack { 
Class: class spell_blood_queen_pact_of_the_darkfallen : public SpellScriptLoader { 
Class:         class spell_blood_queen_pact_of_the_darkfallen_SpellScript : public SpellScript         {         
Class:class spell_deathbringer_blood_nova_targeting : public SpellScriptLoader { 
Class:         class spell_deathbringer_blood_nova_targeting_SpellScript : public SpellScript         {         
Class: class MarkOfTheFallenChampionCheck { 
Class: class spell_deathbringer_mark_of_the_fallen_champion : public SpellScriptLoader { 
Class:         class spell_deathbringer_mark_of_the_fallen_champion_SpellScript : public SpellScript         {         
Class:class spell_putricide_mutated_transformation_dmg : public SpellScriptLoader { 
Class:     class spell_putricide_mutated_transformation_dmg_SpellScript : public SpellScript     {     
Class:    class spell_dk_anti_magic_shell_raid_AuraScript : public AuraScript     {     
Class:        class spell_dk_anti_magic_shell_raid_AuraScript : public AuraScript         {         
Class:    class spell_dk_anti_magic_shell_self_AuraScript : public AuraScript     {     
Class:     class spell_dk_anti_magic_zone_AuraScript : public AuraScript     {     
Class:    class spell_dk_corpse_explosion_SpellScript : public SpellScript     {     
Class: class spell_dk_death_pact : public SpellScriptLoader { 
Class:    class spell_dk_runic_power_feed_SpellScript : public SpellScript     {     
Class:    class spell_dk_scourge_strike_SpellScript : public SpellScript     {     
Class:    class spell_dk_spell_deflection_AuraScript : public AuraScript     {     
Class:        class spell_dk_spell_deflection_AuraScript : public AuraScript         {         
Class:     class spell_dk_will_of_the_necropolis_AuraScript : public AuraScript     {     
Class:    class spell_pri_guardian_spirit_AuraScript : public AuraScript     {     
Class:        class spell_pri_guardian_spirit_AuraScript : public AuraScript         {         
Class:class spell_pri_mind_sear : public SpellScriptLoader { 
Class:         class spell_pri_mind_sear_SpellScript : public SpellScript         {         
Class:     class spell_pri_reflective_shield_trigger_AuraScript : public AuraScript     {     
Class:    class spell_warl_demonic_empowerment_SpellScript : public SpellScript     {     
Class: class spell_warl_everlasting_affliction : public SpellScriptLoader { 
Class:     class spell_warl_everlasting_affliction_SpellScript : public SpellScript     {     
Class:    class spell_warl_create_healthstone_SpellScript : public SpellScript     {     
Class: class spell_warl_everlasting_affliction : public SpellScriptLoader { 
Class:         class spell_warl_everlasting_affliction_SpellScript : public SpellScript         {         
Class: class spell_warl_seed_of_corruption : public SpellScriptLoader { 
Class:         class spell_warl_seed_of_corruption_SpellScript : public SpellScript         {         
Class:class spell_warr_improved_spell_reflection : public SpellScriptLoader { 
Class:         class spell_warr_improved_spell_reflection_SpellScript : public SpellScript         {         
Class:class npc_azure_ring_captain : public CreatureScript { 
Class:class spell_varos_centrifuge_shield : public SpellScriptLoader { 
Class:         class spell_varos_centrifuge_shield_AuraScript : public AuraScript         {         
Class:class spell_marrowgar_coldflame_damage : public SpellScriptLoader { 
Class:         class spell_marrowgar_coldflame_damage_AuraScript : public AuraScript         {         
Class:class boss_drakkari_colossus : public CreatureScript class boss_drakkari_colossus : public CreatureScript
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-                ASSERT(stmt);'), (31, 2, u'-                ASSERT(sql);')]
===========================================
===========================================
Total add: 9
Total del: 38
Header: TransactionTask::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-                ASSERT(stmt);'), (31, 2, u'-                ASSERT(sql);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-                ASSERT(stmt);'), (31, 2, u'-                ASSERT(sql);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(type < m_BgObjects.size());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Battleground::AddObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(type < m_BgObjects.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(type < m_BgObjects.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(type < m_BgCreatures.size());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Battleground::AddCreature
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(type < m_BgCreatures.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(type < m_BgCreatures.size());')]
===========================================
Class:class spell_gen_gunship_portal : public SpellScriptLoader { 
Class:     class spell_gen_gunship_portalSpellScript : public SpellScript     {     
Class: class spell_gen_parachute_ic : public SpellScriptLoader { 
Class:         class spell_gen_parachute_icAuraScript : public AuraScript         {         
Class:class achievement_bg_ic_resource_glut : public AchievementCriteriaScript { 
Class: class achievement_bg_ic_glaive_grave : public AchievementCriteriaScript { 
Class: class achievement_bg_ic_mowed_down : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(vehicle);'), (6, 1, u'+            ASSERT(vehicle);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(vehicle);'), (6, 1, u'+            ASSERT(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(vehicle);'), (6, 1, u'+            ASSERT(vehicle);')]
===========================================
Class: class npc_right_arm : public CreatureScript { 
Class:class npc_left_arm : public CreatureScript { 
Class: class spell_attuned_to_nature_dose_reduction : public SpellScriptLoader { 
Class:     class spell_attuned_to_nature_dose_reduction_SpellScript : public SpellScript     {     
Class: class npc_jungle_punch_target : public CreatureScript { 
Class: class npc_brunnhildar_prisoner : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-                ASSERT(seat);'), (44, 2, u'-                    ASSERT(GetPlayer() == vehicle->GetBase());'), (47, 2, u'-                    ASSERT(!unit->IsOnVehicle(vehicle->GetBase()));'), (59, 1, u'+        ASSERT(seat);')]
===========================================
===========================================
Total add: 52
Total del: 33
Header: WorldSession::HandleEjectPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-                ASSERT(seat);'), (44, 2, u'-                    ASSERT(GetPlayer() == vehicle->GetBase());'), (47, 2, u'-                    ASSERT(!unit->IsOnVehicle(vehicle->GetBase()));'), (59, 1, u'+        ASSERT(seat);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-                ASSERT(seat);'), (44, 2, u'-                    ASSERT(GetPlayer() == vehicle->GetBase());'), (47, 2, u'-                    ASSERT(!unit->IsOnVehicle(vehicle->GetBase()));'), (59, 1, u'+        ASSERT(seat);')]
===========================================
Class:  class spell_gen_divine_storm_cd_reset : public SpellScriptLoader { 
Class:     class spell_gen_divine_storm_cd_reset_SpellScript : public SpellScript     {     
Class: class spell_garfrost_permafrost : public SpellScriptLoader { 
Class:class achievement_doesnt_go_to_eleven : public AchievementCriteriaScript { 
Class: class boss_krick : public CreatureScript { 
Class: class boss_krick : public CreatureScript class spell_krick_explosive_barrage : public SpellScriptLoader public:     boss_krick() : CreatureScript() { }     boss_krick() : CreatureScript() 
Class:        class spell_krick_explosive_barrage_AuraScript : public AuraScript         class spell_krick_explosive_barrage_AuraScript : public AuraScript
Class:class spell_ick_explosive_barrage : public SpellScriptLoader { 
Class: class spell_exploding_orb_hasty_grow : public SpellScriptLoader { 
Class: class spell_krick_pursuit : public SpellScriptLoader { 
Class:         class spell_krick_pursuit_AuraScript : public AuraScript         {         
Class:class spell_krick_pursuit_confusion : public SpellScriptLoader { 
Class:         class spell_krick_pursuit_confusion_AuraScript : public AuraScript         {         
Class:class boss_tyrannus : public CreatureScript class boss_tyrannus : public CreatureScript
Class:class boss_rimefang : public CreatureScript { 
Class:class boss_rimefang : public CreatureScript { 
Class:class spell_tyrannus_mark_of_rimefang : public SpellScriptLoader { 
Class:         class spell_tyrannus_mark_of_rimefang_AuraScript : public AuraScript         {         
Class: class at_tyrannus_event_starter : public AreaTriggerScript { 
Class: class mob_ymirjar_skycaller : public CreatureScript { 
Class: class mob_ymirjar_flamebearer : public CreatureScript { 
Class: class mob_ymirjar_deathbringer : public CreatureScript { 
Class: class mob_wrathbone_laborer : public CreatureScript { 
Class: class mob_wrathbone_coldwraith : public CreatureScript class mob_iceborn_protodrake : public CreatureScript public:     mob_wrathbone_coldwraith() : CreatureScript() { }     mob_wrathbone_coldwraith() : CreatureScript() 
Class: class mob_stonespine_gargoyle : public CreatureScript { 
Class: class mob_plagueborn_horror : public CreatureScript { 
Class: class mob_iceborn_protodrake : public CreatureScript { 
Class: class mob_hungering_ghoul : public CreatureScript { 
Class: class mob_fallen_warrior : public CreatureScript class mob_wrathbone_laborer : public CreatureScript public:     mob_fallen_warrior() : CreatureScript() { }     mob_fallen_warrior() : CreatureScript() 
Class: class mob_deathwhisper_torturer : public CreatureScript { 
Class: class mob_deathwhisper_shadowcaster : public CreatureScript { 
Class: class mob_deathwhisper_necrolyte : public CreatureScript { 
Class: class mob_wrathbone_sorcerer : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            ASSERT(passenger->IsInWorld());'), (6, 1, u'+            ASSERT(passenger->IsOnVehicle(GetBase()));'), (7, 1, u'+            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
Total add: 8
Total del: 2
Header: Vehicle::RemoveAllPassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            ASSERT(passenger->IsInWorld());'), (6, 1, u'+            ASSERT(passenger->IsOnVehicle(GetBase()));'), (7, 1, u'+            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            ASSERT(passenger->IsInWorld());'), (6, 1, u'+            ASSERT(passenger->IsOnVehicle(GetBase()));'), (7, 1, u'+            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            ASSERT(passenger->IsOnVehicle(GetBase()));'), (7, 1, u'+            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Vehicle::RelocatePassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            ASSERT(passenger->IsOnVehicle(GetBase()));'), (7, 1, u'+            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            ASSERT(passenger->IsOnVehicle(GetBase()));'), (7, 1, u'+            ASSERT(GetSeatForPassenger(passenger));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(seat);'), (5, 1, u'+                    ASSERT(GetPlayer() == vehicle->GetBase());'), (8, 1, u'+                    ASSERT(!unit->IsOnVehicle(vehicle->GetBase()));')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: WorldSession::HandleEjectPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(seat);'), (5, 1, u'+                    ASSERT(GetPlayer() == vehicle->GetBase());'), (8, 1, u'+                    ASSERT(!unit->IsOnVehicle(vehicle->GetBase()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(seat);'), (5, 1, u'+                    ASSERT(GetPlayer() == vehicle->GetBase());'), (8, 1, u'+                    ASSERT(!unit->IsOnVehicle(vehicle->GetBase()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(passenger->IsInWorld());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Vehicle::RelocatePassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(passenger->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(passenger->IsInWorld());')]
===========================================
Class: class spell_mage_incanters_absorbtion_absorb : public SpellScriptLoader { 
Class:     class spell_mage_incanters_absorbtion_absorb_AuraScript : public AuraScript     {     
Class:  class spell_mage_incanters_absorbtion_manashield : public SpellScriptLoader { 
Class:     class spell_mage_incanters_absorbtion_manashield_AuraScript : public AuraScript     {     
Class:  class spell_boss_lady_malande_shield : public SpellScriptLoader { 
Class:    class spell_boss_lady_malande_shield_AuraScript : public AuraScript     {     
Class: class spell_dk_anti_magic_shell_raid : public SpellScriptLoader { 
Class:     class spell_dk_anti_magic_shell_raid_AuraScript : public AuraScript     {     
Class:  class spell_dk_anti_magic_shell_self : public SpellScriptLoader { 
Class:     class spell_dk_anti_magic_shell_self_AuraScript : public AuraScript     {     
Class:  class spell_dk_anti_magic_zone : public SpellScriptLoader { 
Class:     class spell_dk_anti_magic_zone_AuraScript : public AuraScript     {     
Class: class spell_dk_will_of_the_necropolis : public SpellScriptLoader { 
Class:     class spell_dk_will_of_the_necropolis_AuraScript : public AuraScript     {     
Class:class spell_gen_absorb0_hitlimit1 : public SpellScriptLoader { 
Class:     class spell_gen_absorb0_hitlimit1_AuraScript : public AuraScript     {     
Class:class spell_mage_blast_wave : public SpellScriptLoader { 
Class:         class spell_mage_blast_wave_SpellScript : public SpellScript         {         
Class:class spell_mage_blast_wave : public SpellScriptLoader  class spell_mage_frost_warding_trigger : public SpellScriptLoader     public:         spell_mage_blast_wave() : SpellScriptLoader() { }         spell_mage_blast_wave() : SpellScriptLoader() 
Class:        class spell_mage_blast_wave_SpellScript : public SpellScript     class spell_mage_frost_warding_trigger_AuraScript : public AuraScript     {     
Class: class spell_pal_ardent_defender : public SpellScriptLoader { 
Class:     class spell_pal_ardent_defender_AuraScript : public AuraScript     {     
Class: class spell_pri_guardian_spirit : public SpellScriptLoader { 
Class:     class spell_pri_guardian_spirit_AuraScript : public AuraScript     {     
Class: class spell_pri_reflective_shield_trigger : public SpellScriptLoader { 
Class:     class spell_pri_reflective_shield_trigger_AuraScript : public AuraScript     {     
Class: class spell_rog_cheat_death : public SpellScriptLoader { 
Class:     class spell_rog_cheat_death_AuraScript : public AuraScript     {     
Class: class spell_ex_absorb_aura : public SpellScriptLoader { 
Class:         class spell_ex_absorb_auraAuraScript : public AuraScript         {         
Class: class spell_dk_spell_deflection : public SpellScriptLoader { 
Class:     class spell_dk_spell_deflection_AuraScript : public AuraScript     {     
Class: class spell_dru_moonkin_form_passive : public SpellScriptLoader { 
Class:     class spell_dru_moonkin_form_passive_AuraScript : public AuraScript     {     
Class:  class spell_dru_primal_tenacity : public SpellScriptLoader { 
Class:     class spell_dru_primal_tenacity_AuraScript : public AuraScript     {     
Class:  class spell_dru_savage_defense : public SpellScriptLoader { 
Class:     class spell_dru_savage_defense_AuraScript : public AuraScript     {     
Class: class spell_rog_nerves_of_steel : public SpellScriptLoader { 
Class:     class spell_rog_nerves_of_steel_AuraScript : public AuraScript     {     
Class: class spell_sha_astral_shift : public SpellScriptLoader { 
Class:     class spell_sha_astral_shift_AuraScript : public AuraScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(vehicle);')]
===========================================
===========================================
Total add: 2
Total del: 8
Header: class npc_bone_spike : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(vehicle);')]
===========================================
Class: class boss_saronite_animus : public CreatureScript { 
Class: class npc_saronite_vapors : public CreatureScript { 
Class:class go_strange_pool : public GameObjectScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT (!aura->IsAppliedOnTarget(GetGUID()) && "Unit::_CreateAuraApplication: aura musn\'t be applied on target");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Unit::_CreateAuraApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT (!aura->IsAppliedOnTarget(GetGUID()) && "Unit::_CreateAuraApplication: aura musn\'t be applied on target");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT (!aura->IsAppliedOnTarget(GetGUID()) && "Unit::_CreateAuraApplication: aura musn\'t be applied on target");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT (m_applications.find(target->GetGUID()) == m_applications.end());'), (5, 1, u'+    ASSERT (!IsAppliedOnTarget(target->GetGUID()) && "Aura::_ApplyForTarget: aura musn\'t be already applied on target");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Aura::_ApplyForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT (m_applications.find(target->GetGUID()) == m_applications.end());'), (5, 1, u'+    ASSERT (!IsAppliedOnTarget(target->GetGUID()) && "Aura::_ApplyForTarget: aura musn\'t be already applied on target");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT (m_applications.find(target->GetGUID()) == m_applications.end());'), (5, 1, u'+    ASSERT (!IsAppliedOnTarget(target->GetGUID()) && "Aura::_ApplyForTarget: aura musn\'t be already applied on target");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT (!IsAppliedOnTarget(itr->first->GetGUID()) && "Aura::UpdateTargetMap: aura musn\'t be applied on target");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Aura::UpdateTargetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT (!IsAppliedOnTarget(itr->first->GetGUID()) && "Aura::UpdateTargetMap: aura musn\'t be applied on target");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT (!IsAppliedOnTarget(itr->first->GetGUID()) && "Aura::UpdateTargetMap: aura musn\'t be applied on target");')]
===========================================
Class: class spell_item_red_rider_air_rifle : public SpellScriptLoader { 
Class:         class spell_item_red_rider_air_rifle_SpellScript : public SpellScript         {         
Class:class npc_neeru_fireblade : public CreatureScript { 
Class: class mob_rune_of_power : public CreatureScript { 
Class:    class npc_volkhan_anvil : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(!(m_flags & (1<<effIndex)));')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(!(m_flags & (1<<effIndex)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(!(m_flags & (1<<effIndex)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(m_flags & (1<<effIndex));')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(m_flags & (1<<effIndex));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(m_flags & (1<<effIndex));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(false);'), (9, 1, u'+    ASSERT(itr->second == auraApp);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: Aura::_UnapplyForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(false);'), (9, 1, u'+    ASSERT(itr->second == auraApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(false);'), (9, 1, u'+    ASSERT(itr->second == auraApp);')]
===========================================
Class:class VampiricBiteTargetSelector : public std::unary_function<Unit*, bool> { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-\t\tACE_ASSERT(n == sizeof(byte));'), (51, 1, u'+        ACE_ASSERT(n == sizeof(byte));')]
===========================================
===========================================
Total add: 32
Total del: 32
Header: RASocket::recv_line
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-\t\tACE_ASSERT(n == sizeof(byte));'), (51, 1, u'+        ACE_ASSERT(n == sizeof(byte));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-\t\tACE_ASSERT(n == sizeof(byte));'), (51, 1, u'+        ACE_ASSERT(n == sizeof(byte));')]
===========================================
Class:  class spell_q11396_11399_force_shield_arcane_purple_x3 : public SpellScriptLoader { 
Class:     class spell_q11396_11399_force_shield_arcane_purple_x3_AuraScript : public AuraScript     {     
Class:  class spell_q11396_11399_scourging_crystal_controller : public SpellScriptLoader { 
Class:     class spell_q11396_11399_scourging_crystal_controller_SpellScript : public SpellScript     {     
Class:  class spell_q11396_11399_scourging_crystal_controller_dummy : public SpellScriptLoader { 
Class:     class spell_q11396_11399_scourging_crystal_controller_dummy_SpellScript : public SpellScript     {     
Class:class RARunnable : public ACE_Based::Runnable { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(false && "m_defaultActionPrevented has incorrect value, or AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: AuraScript::_IsDefaultActionPrevented
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(false && "m_defaultActionPrevented has incorrect value, or AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(false && "m_defaultActionPrevented has incorrect value, or AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(false && "m_defaultActionPrevented has incorrect value, or AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: AuraScript::_IsDefaultActionPrevented
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(false && "m_defaultActionPrevented has incorrect value, or AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(false && "m_defaultActionPrevented has incorrect value, or AuraScript::_IsDefaultActionPrevented is called in a wrong place");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
Total add: 7
Total del: 9
Header: LFGMgr::Leave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    ASSERT(grp);')]
===========================================
Class: class npc_daegarn : public CreatureScript { 
Class: class VampiricBiteTargetSelector : public std::unary_function<Unit*, bool> { 
Class: class boss_blood_queen_lana_thel : public CreatureScript { 
Class: class spell_blood_queen_vampiric_bite : public SpellScriptLoader { 
Class:         class spell_blood_queen_vampiric_bite_SpellScript : public SpellScript         {         
Class: class spell_blood_queen_frenzied_bloodthirst : public SpellScriptLoader { 
Class:         class spell_blood_queen_frenzied_bloodthirst_AuraScript : public AuraScript         {         
Class: class spell_blood_queen_bloodbolt : public SpellScriptLoader { 
Class:         class spell_blood_queen_bloodbolt_SpellScript : public SpellScript         {         
Class: class achievement_once_bitten_twice_shy_n : public AchievementCriteriaScript { 
Class: class achievement_once_bitten_twice_shy_v : public AchievementCriteriaScript { 
Class: class item_captured_frog : public ItemScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(pCreature->GetVehicleKit()); // we dont actually use it, just check if exists'), (8, 1, u'+                ASSERT(creature->GetVehicleKit()); // we dont actually use it, just check if exists')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: class boss_deathbringer_saurfang : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(pCreature->GetVehicleKit()); // we dont actually use it, just check if exists'), (8, 1, u'+                ASSERT(creature->GetVehicleKit()); // we dont actually use it, just check if exists')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(pCreature->GetVehicleKit()); // we dont actually use it, just check if exists'), (8, 1, u'+                ASSERT(creature->GetVehicleKit()); // we dont actually use it, just check if exists')]
===========================================
Class: class spell_sha_earthbind_totem : public SpellScriptLoader { 
Class:     class spell_sha_earthbind_totem_AuraScript : public AuraScript     {     
Class: class npc_lightning_sentry : public CreatureScript { 
Class: class npc_venture_co_straggler : public CreatureScript { 
Class:class npc_theramore_guard : public CreatureScript class npc_theramore_guard : public CreatureScript
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-                    ASSERT(false);')]
===========================================
===========================================
Total add: 36
Total del: 34
Header: class boss_deathbringer_saurfang : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-                    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-                    ASSERT(false);')]
===========================================
Class:class spell_gen_shroud_of_death : public SpellScriptLoader { 
Class:         class spell_gen_shroud_of_deathAuraScript : public AuraScript         {         
Class: class spell_gen_animal_blood : public SpellScriptLoader { 
Class:         class spell_gen_animal_blood_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-ACE_RCSID(ace, Assert, "$Id: Assert.cpp 80826 2008-03-04 14:51:23Z wotte $")')]
===========================================
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (7, 2, u'-  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (13, 2, u'-  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (14, 2, u'-  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (15, 2, u'-  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (24, 2, u'-  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (33, 2, u'-  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
===========================================
Total add: 0
Total del: 35
Header: ACE_Intrusive_List<T>::unsafe_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (7, 2, u'-  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (13, 2, u'-  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (14, 2, u'-  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (15, 2, u'-  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (24, 2, u'-  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (33, 2, u'-  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (7, 2, u'-  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (13, 2, u'-  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (14, 2, u'-  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (15, 2, u'-  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (24, 2, u'-  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (33, 2, u'-  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class:template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  ACE_ASSERT (result != 0);'), (28, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Total add: 0
Total del: 32
Header: ACE_LOCK>::dump_i
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  ACE_ASSERT (result != 0);'), (28, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  ACE_ASSERT (result != 0);'), (28, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            ACE_ASSERT(commandTableCache);')]
===========================================
===========================================
Total add: 17
Total del: 0
Header: ChatHandler::getCommandTable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            ACE_ASSERT(commandTableCache);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            ACE_ASSERT(commandTableCache);')]
===========================================
Class: class SmartTrigger : public AreaTriggerScript { 
Class:class player_overlord_brandAI : public PlayerAI { 
Class: class spell_tyrannus_overlord_brand : public SpellScriptLoader { 
Class:         class spell_tyrannus_overlord_brand_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT(proposals);')]
===========================================
===========================================
Total add: 11
Total del: 32
Header: LFGMgr::OfferContinue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT(proposals);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT(proposals);')]
===========================================
Class: class StandUpEvent : public BasicEvent { 
Class: class boss_blood_council_controller : public CreatureScript { 
Class: class boss_prince_keleseth_icc : public CreatureScript { 
Class: class boss_prince_taldaram_icc : public CreatureScript { 
Class: class boss_prince_valanar_icc : public CreatureScript { 
Class: class npc_blood_queen_lana_thel : public CreatureScript { 
Class: class npc_ball_of_flame : public CreatureScript { 
Class: class npc_kinetic_bomb : public CreatureScript { 
Class: class npc_dark_nucleus : public CreatureScript { 
Class: class spell_taldaram_glittering_sparks : public SpellScriptLoader { 
Class:         class spell_taldaram_glittering_sparks_SpellScript : public SpellScript         {         
Class: class spell_taldaram_summon_flame_ball : public SpellScriptLoader { 
Class:         class spell_taldaram_summon_flame_ball_SpellScript : public SpellScript         {         
Class: class spell_taldaram_flame_ball_visual : public SpellScriptLoader { 
Class:         class spell_flame_ball_visual_AuraScript : public AuraScript         {         
Class: class spell_taldaram_ball_of_inferno_flame : public SpellScriptLoader { 
Class:         class spell_taldaram_ball_of_inferno_flame_SpellScript : public SpellScript         {         
Class: class spell_valanar_kinetic_bomb : public SpellScriptLoader { 
Class:         class spell_valanar_kinetic_bomb_SpellScript : public SpellScript         {         
Class:         class spell_valanar_kinetic_bomb_AuraScript : public AuraScript         {         
Class: class spell_valanar_kinetic_bomb_knockback : public SpellScriptLoader { 
Class:         class spell_valanar_kinetic_bomb_knockback_SpellScript : public SpellScript         {         
Class: class spell_blood_council_shadow_prison : public SpellScriptLoader { 
Class:         class spell_blood_council_shadow_prison_AuraScript : public AuraScript         {         
Class: class spell_blood_council_shadow_prison_damage : public SpellScriptLoader { 
Class:         class spell_blood_council_shadow_prison_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class boss_deathbringer_saurfang : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class boss_festergut : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class boss_lady_deathwhisper : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class boss_lord_marrowgar : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class boss_professor_putricide : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: class boss_rotface : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(instance);')]
===========================================
Class:   class go_keystone_chamber : public GameObjectScript { 
Class:class mob_corrupted_soul_fragment : public CreatureScript { 
Class:class mob_corrupted_soul_fragment : public CreatureScript class spell_bronjahm_magic_bane : public SpellScriptLoader public:     mob_corrupted_soul_fragment() : CreatureScript() { }     mob_corrupted_soul_fragment() : CreatureScript() 
Class:        class spell_bronjahm_magic_bane_SpellScript : public SpellScript         class spell_bronjahm_magic_bane_SpellScript : public SpellScript
Class: class spell_bronjahm_consume_soul : public SpellScriptLoader { 
Class:        class spell_bronjahm_consume_soul_SpellScript : public SpellScript         {         
Class:        class spell_bronjahm_soulstorm_channel_AuraScript : public AuraScript         class spell_bronjahm_soulstorm_channel_AuraScript : public AuraScript
Class:class spell_bronjahm_soulstorm_visual : public SpellScriptLoader { 
Class:         class spell_bronjahm_soulstorm_visual_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(101, 2, u'-    ASSERT(pSrcItem);')]
===========================================
===========================================
Total add: 835
Total del: 518
Header: Guild::_StoreItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(101, 2, u'-    ASSERT(pSrcItem);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(101, 2, u'-    ASSERT(pSrcItem);')]
===========================================
Class:class npc_volatile_ooze : public CreatureScript { 
Class: class spell_putricide_gaseous_bloat : public SpellScriptLoader { 
Class:         class spell_putricide_gaseous_bloat_SpellScript : public SpellScript         {         
Class:         class spell_putricide_gaseous_bloat_AuraScript : public AuraScript         {         
Class: class spell_putricide_expunged_gas : public SpellScriptLoader { 
Class:         class spell_putricide_expunged_gas_SpellScript : public SpellScript         {         
Class: class spell_putricide_slime_puddle : public SpellScriptLoader { 
Class:         class spell_putricide_slime_puddle_AuraScript : public AuraScript         {         
Class: class spell_putricide_unstable_experiment : public SpellScriptLoader { 
Class:         class spell_putricide_unstable_experiment_SpellScript : public SpellScript         {         
Class: class spell_putricide_ooze_summon : public SpellScriptLoader { 
Class:         class spell_putricide_ooze_summon_AuraScript : public AuraScript         {         
Class: class spell_putricide_ooze_eruption_searcher : public SpellScriptLoader { 
Class:         class spell_putricide_ooze_eruption_searcher_SpellScript : public SpellScript         {         
Class: class spell_putricide_choking_gas_bomb : public SpellScriptLoader { 
Class:         class spell_putricide_choking_gas_bomb_SpellScript : public SpellScript         {         
Class: class spell_putricide_unbound_plague : public SpellScriptLoader { 
Class:         class spell_putricide_unbound_plague_SpellScript : public SpellScript         {         
Class: class spell_putricide_eat_ooze : public SpellScriptLoader { 
Class:         class spell_putricide_eat_ooze_SpellScript : public SpellScript         {         
Class: class spell_putricide_mutated_plague : public SpellScriptLoader { 
Class:         class spell_putricide_mutated_plague_AuraScript : public AuraScript         {         
Class: class spell_putricide_mutation_init : public SpellScriptLoader { 
Class:         class spell_putricide_mutation_init_AuraScript : public AuraScript         {         
Class: class spell_putricide_mutated_transformation_dismiss : public SpellScriptLoader { 
Class:         class spell_putricide_mutated_transformation_dismiss_AuraScript : public AuraScript         {         
Class: class spell_putricide_mutated_transformation : public SpellScriptLoader { 
Class:         class spell_putricide_mutated_transformation_SpellScript : public SpellScript         {         
Class: class spell_putricide_regurgitated_ooze : public SpellScriptLoader { 
Class:         class spell_putricide_regurgitated_ooze_SpellScript : public SpellScript         {         
Class:class npc_expedition_commander : public CreatureScript { 
Class:class npc_mole_machine_trigger : public CreatureScript class npc_mole_machine_trigger : public CreatureScript
Class:  class npc_darkrune_watcher : public CreatureScript { 
Class:  class npc_darkrune_guardian : public CreatureScript { 
Class:  class npc_darkrune_sentinel : public CreatureScript { 
Class: class boss_rotface : public CreatureScript { 
Class: class npc_little_ooze : public CreatureScript { 
Class: class npc_big_ooze : public CreatureScript { 
Class: class npc_precious_icc : public CreatureScript { 
Class: class spell_rotface_ooze_flood : public SpellScriptLoader { 
Class:         class spell_rotface_ooze_flood_SpellScript : public SpellScript         {         
Class: class spell_rotface_little_ooze_combine : public SpellScriptLoader { 
Class:         class spell_rotface_little_ooze_combine_SpellScript : public SpellScript         {         
Class: class spell_rotface_large_ooze_combine : public SpellScriptLoader { 
Class:         class spell_rotface_large_ooze_combine_SpellScript : public SpellScript         {         
Class: class spell_rotface_large_ooze_buff_combine : public SpellScriptLoader { 
Class:         class spell_rotface_large_ooze_buff_combine_SpellScript : public SpellScript         {         
Class: class spell_rotface_unstable_ooze_explosion_init : public SpellScriptLoader { 
Class:         class spell_rotface_unstable_ooze_explosion_init_SpellScript : public SpellScript         {         
Class: class spell_rotface_unstable_ooze_explosion : public SpellScriptLoader { 
Class:         class spell_rotface_unstable_ooze_explosion_SpellScript : public SpellScript         {         
Class: class spell_rotface_unstable_ooze_explosion_suicide : public SpellScriptLoader { 
Class:         class spell_rotface_unstable_ooze_explosion_suicide_AuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(vehicle);')]
===========================================
===========================================
Total add: 14
Total del: 4
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(vehicle);')]
===========================================
Class: class npc_iron_construct : public CreatureScript { 
Class:class npc_scorch_ground : public CreatureScript { 
Class: class spell_ignis_slag_pot : public SpellScriptLoader { 
Class:         class spell_ignis_slag_pot_AuraScript : public AuraScript         {         
Class: class spell_item_shadowmourne : public SpellScriptLoader { 
Class:     class spell_item_shadowmourne_AuraScript : public AuraScript     {     
Class:class spell_mage_blast_wave : public SpellScriptLoader { 
Class:         class spell_mage_blast_wave_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT (m_Mysql); /// MySQL context must be present at this point')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: MySQLConnection::~MySQLConnection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT (m_Mysql); /// MySQL context must be present at this point')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT (m_Mysql); /// MySQL context must be present at this point')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ScriptMgr::OnGroupAddMember
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ScriptMgr::OnGroupInviteMember
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ScriptMgr::OnGroupRemoveMember
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ScriptMgr::OnGroupChangeLeader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ScriptMgr::OnGroupDisband
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT(group);'), (3, 1, u'+    ASSERT(group);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_uint32Values);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Object::RemoveFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_uint32Values);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_uint32Values);')]
===========================================
Class:    class spell_gen_aura_of_anger_AuraScript : public AuraScript     class spell_gen_aura_of_anger_AuraScript : public AuraScript
Class:  class spell_gen_burn_brutallus : public SpellScriptLoader { 
Class:     class spell_gen_burn_brutallus_AuraScript : public AuraScript     {     
Class: class spell_gen_parachute : public SpellScriptLoader { 
Class:     class spell_gen_parachute_AuraScript : public AuraScript     {     
Class: class spell_gen_leeching_swarm : public SpellScriptLoader { 
Class:     class spell_gen_leeching_swarm_AuraScript : public AuraScript     {     
Class: class spell_hun_sniper_training : public SpellScriptLoader { 
Class:     class spell_hun_sniper_training_AuraScript : public AuraScript     {     
Class:  class spell_pal_blessing_of_sanctuary : public SpellScriptLoader { 
Class:     class spell_pal_blessing_of_sanctuary_AuraScript : public AuraScript     {     
Class: class spell_rog_cheat_death : public SpellScriptLoader { 
Class:         class spell_rog_cheat_death_SpellScript : public SpellScript         {         
Class: class spell_rog_hunger_for_blood : public SpellScriptLoader { 
Class:         class spell_rog_hunger_for_blood_SpellScript : public SpellScript         {         
Class: class spell_rog_prey_on_the_weak : public SpellScriptLoader { 
Class:     class spell_rog_prey_on_the_weak_AuraScript : public AuraScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MySQLConnection::PrepareStatement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        ASSERT(false);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: MySQLConnection::PrepareStatement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: LFGMgr::Leave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MySQLConnection::PrepareStatement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MySQLConnection::PrepareStatement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(false);')]
===========================================
Class:class spell_pri_mana_burn : public SpellScriptLoader { 
Class:         class spell_pri_mana_burn_SpellScript : public SpellScript         {         
Class: class spell_gen_trick : public SpellScriptLoader { 
Class:     class spell_gen_trick_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(sql)'), (3, 1, u'+                ASSERT(sql);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TransactionTask::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(sql)'), (3, 1, u'+                ASSERT(sql);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(sql)'), (3, 1, u'+                ASSERT(sql);')]
===========================================
Class: class spell_gen_trick_or_treat : public SpellScriptLoader { 
Class:     class spell_gen_trick_or_treat_SpellScript : public SpellScript     {     
Class: class npc_adventurous_dwarf : public CreatureScript { 
Class: class spell_q6124_6129_apply_salve : public SpellScriptLoader { 
Class:     class spell_q6124_6129_apply_salve_SpellScript : public SpellScript     {     
Class: class spell_q12459_seeds_of_natures_wrath : public SpellScriptLoader { 
Class:     class spell_q12459_seeds_of_natures_wrath_SpellScript : public SpellScript     {     
Class: class spell_q12634_despawn_fruit_tosser : public SpellScriptLoader { 
Class:     class spell_q12634_despawn_fruit_tosser_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ScriptMgr::OnGameObjectDestroyed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(player);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1061, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1102, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1145, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1206, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1218, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 2, u'-        Assert(more >= 2, "more < 2");'), (1409, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1666, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(pRoleCheck);')]
===========================================
===========================================
Total add: 62
Total del: 5
Header: WorldSession::SendLfgRoleChosen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(pRoleCheck);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT(pRoleCheck);')]
===========================================
Class:class spell_pvp_trinket_wotf_shared_cd : public SpellScriptLoader { 
Class:     class spell_pvp_trinket_wotf_shared_cd_SpellScript : public SpellScript     {     
Class:class spell_creature_permanent_feign_death : public SpellScriptLoader { 
Class:         class spell_creature_permanent_feign_deathAuraScript : public AuraScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+    assert(i < limit);'), (85, 1, u'+    assert(!buffer_);       // find realloc error'), (143, 1, u'+    assert (i == AUTO);'), (240, 1, u'+    assert(!buffer_);   // find realloc error'), (256, 1, u'+    assert(i == AUTO);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(329, 1, u'+    assert(peerX509_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(1099, 1, u'+    assert(keyOutput == (keyLen + ivLen));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(928, 1, u'+    assert(write_buffer_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(89, 1, u'+    assert( (keylen == 16) || (keylen == 24) || (keylen == 32) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(250, 1, u'+        assert(expBegin->NotNegative());')]
===========================================
Class:class BadCertificate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+    assert((bytes % 2) == 0);'), (108, 1, u'+        assert( b  < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (109, 1, u'+        assert( b2 < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (114, 1, u'+        assert( b != bad && b2 != bad );'), (177, 1, u'+    assert(i == outSz);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+    assert(!!r_ && !!s_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+    assert(digSz  <= MaxDigestSz);'), (35, 1, u'+    assert(buffSz <= MaxBufferSz);'), (116, 1, u'+    assert(digSz  <= MaxDigestSz);'), (117, 1, u'+    assert(buffSz <= MaxBufferSz);')]
===========================================
Class:class DWord { class DWord 
Class:  class Word { class Word 
Class:    template <class S, class D> S DivideThreeWordsByTwo(S* A, S B0, S B1, D* dummy_VC6_WorkAround = 0) { 
Class:    class Portable { 
Class:   class PentiumOptimized : public Portable { 
Class: class P4Optimized { 
Class:  class LowLevel : public PentiumOptimized { 
Class:class BadBER 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    assert(modn.Exponentiate(y, e_) == x);  // check'), (127, 1, u'+    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);'), (182, 1, u'+    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1061, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1102, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1145, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1206, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1218, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 1, u'+        Assert(more >= 2, "more < 2");'), (1409, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1666, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(proposals);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: LFGMgr::FindNewGroups
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(proposals);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(proposals);')]
===========================================
Class: class npc_wyrmrest_temple_bottom_taxi : public CreatureScript { 
Class: class npc_wyrmrest_temple_top_taxi : public CreatureScript { 
Class: class test : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
Total add: 0
Total del: 5
Header: MySQLConnection::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: MySQLConnection::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(sql);'), (16, 1, u'+                ASSERT(stmt);'), (29, 1, u'+                ASSERT(sql)')]
===========================================
===========================================
Total add: 28
Total del: 11
Header: TransactionTask::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(sql);'), (16, 1, u'+                ASSERT(stmt);'), (29, 1, u'+                ASSERT(sql)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        ASSERT(sql);'), (16, 1, u'+                ASSERT(stmt);'), (29, 1, u'+                ASSERT(sql)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(sql);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: TransactionTask::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(sql);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(sql);')]
===========================================
Class: class spell_item_trigger_spell : public SpellScriptLoader { 
Class:     class spell_item_trigger_spell_SpellScript : public SpellScript     {     
Class:  class spell_item_mingos_fortune_generator : public SpellScriptLoader { 
Class:     class spell_item_mingos_fortune_generator_SpellScript : public SpellScript     {     
Class: class spell_item_six_demon_bag : public SpellScriptLoader { 
Class:     class spell_item_six_demon_bag_SpellScript : public SpellScript     {     
Class: class spell_q55_sacred_cleansing : public SpellScriptLoader { 
Class: class spell_q5206_test_fetid_skull : public SpellScriptLoader { 
Class:     class spell_q5206_test_fetid_skull_SpellScript : public SpellScript     {     
Class: class spell_q10255_administer_antidote : public SpellScriptLoader { 
Class: class spell_q11515_fel_siphon_dummy : public SpellScriptLoader { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(index < m_stmts.size());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: MySQLConnection::GetPreparedStatement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(index < m_stmts.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(index < m_stmts.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: MySQLConnection::Execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(m_mStmt);            // Can only be null if preparation failed, server side error or bad query')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    ASSERT (conn);')]
===========================================
===========================================
Total add: 3
Total del: 49
Header: DatabaseWorkerPool::BeginTransaction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    ASSERT (conn);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    ASSERT (conn);')]
===========================================
Class: class npc_stinky_icc : public CreatureScript { 
Class: class spell_festergut_pungent_blight : public SpellScriptLoader { 
Class:         class spell_festergut_pungent_blight_SpellScript : public SpellScript         {         
Class: class spell_festergut_gastric_bloat : public SpellScriptLoader { 
Class:         class spell_festergut_gastric_bloat_SpellScript : public SpellScript         {         
Class: class spell_festergut_blighted_spores : public SpellScriptLoader { 
Class:         class spell_festergut_blighted_spores_AuraScript : public AuraScript         {         
Class: class achievement_flu_shot_shortage : public AchievementCriteriaScript { 
Class: class boss_professor_putricide : public CreatureScript { 
Class:  class spell_stinky_precious_decimate : public SpellScriptLoader { 
Class:         class spell_stinky_precious_decimate_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: class boss_deathbringer_saurfang : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: class boss_lady_deathwhisper : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: class boss_lord_marrowgar : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                ASSERT(instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                ASSERT(instance);')]
===========================================
Class:class spell_gen_remove_flight_auras : public SpellScriptLoader { 
Class:     class spell_gen_remove_flight_auras_SpellScript : public SpellScript     {     
Class: class spell_gen_remove_flight_auras : public SpellScriptLoader { 
Class:     class spell_gen_remove_flight_auras_SpellScript : public SpellScript     {     
Class:  class spell_item_deviate_fish : public SpellScriptLoader { 
Class:     class spell_item_deviate_fish_SpellScript : public SpellScript     {     
Class:  class spell_item_flask_of_the_north : public SpellScriptLoader { 
Class:     class spell_item_flask_of_the_north_SpellScript : public SpellScript     {     
Class:  class spell_item_gnomish_death_ray : public SpellScriptLoader { 
Class:     class spell_item_gnomish_death_ray_SpellScript : public SpellScript     {     
Class:  class spell_item_make_a_wish : public SpellScriptLoader { 
Class:     class spell_item_make_a_wish_SpellScript : public SpellScript     {     
Class:  class spell_item_net_o_matic : public SpellScriptLoader { 
Class:     class spell_item_net_o_matic_SpellScript : public SpellScript     {     
Class:  class spell_item_noggenfogger_elixir : public SpellScriptLoader { 
Class:     class spell_item_noggenfogger_elixir_SpellScript : public SpellScript     {     
Class:  class spell_item_savory_deviate_delight : public SpellScriptLoader { 
Class:     class spell_item_savory_deviate_delight_SpellScript : public SpellScript     {     
Class:  class spell_item_underbelly_elixir : public SpellScriptLoader { 
Class:     class spell_item_underbelly_elixir_SpellScript : public SpellScript     {     
Class:  class spell_q12683_take_sputum_sample : public SpellScriptLoader { 
Class:     class spell_q12683_take_sputum_sample_SpellScript : public SpellScript     {     
Class:   class spell_q12937_relief_for_the_fallen : public SpellScriptLoader { 
Class:     class spell_q12937_relief_for_the_fallen_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 2, u'-    assert(plane.size() < 31);'), (228, 2, u'-\tassert(plane.size() < 31);'), (358, 2, u'-        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-        alwaysAssertM(m_data, "Corrupt placeholder");'), (135, 2, u'-    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (140, 2, u'-        debugAssert(value.s != NULL);'), (145, 2, u'-        debugAssert(value.a != NULL);'), (150, 2, u'-        debugAssert(value.t != NULL);'), (156, 2, u'-        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (253, 2, u'-    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (338, 2, u'-        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (439, 2, u'-    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (465, 2, u'-    debugAssert(m_data != NULL);'), (483, 2, u'-    debugAssert(m_data != NULL);'), (492, 2, u'-    debugAssert(m_data != NULL);'), (500, 2, u'-    debugAssert(m_data != NULL);'), (532, 2, u'-    debugAssert(m_data != NULL);'), (540, 2, u'-    debugAssert(m_data != NULL);'), (582, 2, u'-    debugAssert(m_data != NULL);'), (617, 2, u'-        debugAssert(m_data != NULL);'), (624, 2, u'-        debugAssert(m_data != NULL);'), (644, 2, u'-        debugAssert(m_data != NULL);'), (661, 2, u'-        alwaysAssertM(false, "Unknown type.");'), (777, 2, u'-        debugAssert(m_data != NULL);'), (782, 2, u'-        debugAssert(m_data != NULL);'), (819, 2, u'-        debugAssert(m_data != NULL);'), (880, 2, u'-    debugAssert(token.type() == Token::SYMBOL);'), (1231, 2, u'-        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 2, u'-        debugAssert(m_freeBuffer);'), (152, 2, u'-        debugAssert(file);'), (154, 2, u'-        debugAssert(ret == 0);'), (157, 2, u'-        debugAssert(ret == toRead);'), (163, 2, u'-        debugAssert(file);'), (165, 2, u'-        debugAssert(ret == 0);'), (168, 2, u'-        debugAssert((size_t)ret == (size_t)toRead);'), (174, 2, u'-    debugAssert(m_pos >= 0);'), (229, 2, u'-        debugAssert(m_freeBuffer);'), (237, 2, u'-        debugAssert(result == Z_OK); (void)result;'), (243, 2, u'- \t        debugAssert(!m_freeBuffer);'), (246, 2, u'-\t        debugAssert(m_freeBuffer);'), (316, 2, u'-    debugAssert(m_freeBuffer);'), (330, 2, u'-    debugAssert(m_buffer);'), (354, 2, u'-    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 2, u'-    debugAssert(m_buffer);'), (360, 2, u'-    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 2, u'-    debugAssert(isValidHeapPointer(m_buffer));'), (368, 2, u'-    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 2, u'-    debugAssert(isValidPointer(bytes));'), (417, 2, u'-    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 2, u'-    assert(s != NULL);'), (521, 2, u'-    debugAssert(m_beginEndBits == 0);'), (525, 2, u'-    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 2, u'-    debugAssert(m_beginEndBits == 1);'), (559, 2, u'-    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (153, 2, u'-        debugAssert(writeBytes > 0);'), (159, 2, u'-        debugAssert(file);'), (162, 2, u'-        debugAssert((int)count == writeBytes); (void)count;'), (172, 2, u'-        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 2, u'-        debugAssert(m_bufferLen >= 0);'), (174, 2, u'-        debugAssert(m_pos >= 0);'), (175, 2, u'-        debugAssert(m_pos <= m_bufferLen);'), (178, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (180, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (232, 2, u'-    debugAssert(m_beginEndBits == 0);'), (233, 2, u'-    alwaysAssertM(m_filename == "<memory>",'), (248, 2, u'-    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 2, u'-    debugAssert(result == Z_OK); (void)result;'), (310, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 2, u'-    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 2, u'-        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (338, 2, u'-            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (351, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (379, 2, u'-    debugAssert(m_beginEndBits == 0);'), (420, 2, u'-    debugAssert(m_beginEndBits == 0);'), (485, 2, u'-    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (513, 2, u'-    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-    debugAssert('), (118, 2, u'-    debugAssert(! isNaN(_extent.x));'), (191, 2, u'-        debugAssert((f >= 0) && (f < 6));'), (206, 2, u'-    assert(plane.size() < 31);'), (265, 2, u'-\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-    debugAssert(separatingAxisIndex >= 0);'), (50, 2, u'-    debugAssert(separatingAxisIndex < 15);'), (176, 2, u'-        debugAssertM(false, "fell through switch statement");'), (365, 2, u'-    debugAssert(lastSeparatingAxis >= -1);'), (366, 2, u'-    debugAssert(lastSeparatingAxis < 15);'), (627, 2, u'-            debugAssertM(false,'), (758, 2, u'-        debugAssertM(false, "Fell through switch");'), (897, 2, u'-    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 2, u'-            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 2, u'-            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 2, u'-            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 2, u'-                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 2, u'-    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 2, u'-    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 2, u'-        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 2, u'-        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 2, u'-        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 2, u'-        debugAssertM(false, "Should not get here.");'), (2055, 2, u'-    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(270, 2, u'-        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 2, u'-        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 2, u'-    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 2, u'-    assert((0 <= iCol) && (iCol < 3));'), (200, 2, u'-    assert((0 <= iRow) && (iRow < 3));'), (206, 2, u'-    debugAssert((iCol >= 0) && (iCol < 3));'), (214, 2, u'-    debugAssert((iRow >= 0) && (iRow < 3));'), (1075, 2, u'-    assert(iter < MAX_ITERS);'), (1080, 2, u'-    assert(resid < eps);'), (1085, 2, u'-    assert(resid < eps);'), (1090, 2, u'-    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 2, u'-    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (207, 2, u'-    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (217, 2, u'-    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (218, 2, u'-    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (219, 2, u'-    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (220, 2, u'-    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (221, 2, u'-    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (222, 2, u'-    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (223, 2, u'-    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (224, 2, u'-    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (225, 2, u'-    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (226, 2, u'-    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    debugAssertM(isValidHeapPointer(this),'), (49, 2, u'-    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 2, u'-        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 2, u'-            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 2, u'-    debugAssert(data);'), (219, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 2, u'-    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 2, u'-\tassert(numPlanes < 31);'), (165, 2, u'-\tassert(numPlanes < 31);')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(753, 2, u'-    debugAssertM(false,'), (1056, 2, u'-        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-    debugAssert(option.numColumns > 1);'), (239, 2, u"-            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 2, u'-    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(211, 2, u'-    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (231, 2, u'-    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-AssertionHook _debugHook = _handleDebugAssert_;'), (37, 2, u'-AssertionHook _failureHook = _handleErrorCheck_;'), (134, 2, u'-bool _handleDebugAssert_('), (305, 2, u'-void setAssertionHook(AssertionHook hook) {'), (309, 2, u'-AssertionHook assertionHook() {'), (313, 2, u'-void setFailureHook(AssertionHook hook) {'), (317, 2, u'-AssertionHook failureHook() {')]
===========================================
Class:class FileSystemCache { class FileSystemCache 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-      debugAssert(heapBuffer);'), (142, 2, u'-      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 1, u'+    assert(plane.size() < 31);'), (228, 1, u'+\tassert(plane.size() < 31);'), (358, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+        alwaysAssertM(m_data, "Corrupt placeholder");'), (197, 1, u'+    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (202, 1, u'+        debugAssert(value.s != NULL);'), (207, 1, u'+        debugAssert(value.a != NULL);'), (212, 1, u'+        debugAssert(value.t != NULL);'), (218, 1, u'+        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (315, 1, u'+    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (400, 1, u'+        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (501, 1, u'+    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (527, 1, u'+    debugAssert(m_data != NULL);'), (545, 1, u'+    debugAssert(m_data != NULL);'), (554, 1, u'+    debugAssert(m_data != NULL);'), (562, 1, u'+    debugAssert(m_data != NULL);'), (594, 1, u'+    debugAssert(m_data != NULL);'), (602, 1, u'+    debugAssert(m_data != NULL);'), (644, 1, u'+    debugAssert(m_data != NULL);'), (679, 1, u'+        debugAssert(m_data != NULL);'), (686, 1, u'+        debugAssert(m_data != NULL);'), (706, 1, u'+        debugAssert(m_data != NULL);'), (723, 1, u'+        alwaysAssertM(false, "Unknown type.");'), (838, 1, u'+        debugAssert(m_data != NULL);'), (843, 1, u'+        debugAssert(m_data != NULL);'), (880, 1, u'+        debugAssert(m_data != NULL);'), (935, 1, u'+    debugAssert(token.type() == Token::SYMBOL);'), (1344, 1, u'+        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(172, 1, u'+        debugAssertM(false, "Cannot construct AnyVal from constants except ARRAY or TABLE.");'), (275, 1, u'+        debugAssertM(false, "Internal error: no destructor for this type.");'), (360, 1, u'+        debugAssertM(false, "Internal error: no assignment operator for this type.");'), (558, 1, u'+        debugAssertM(false, "Internal error: no serialize method for this type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+    debugAssert(sizeHint > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 1, u'+    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (142, 1, u'+        debugAssert(m_freeBuffer);'), (153, 1, u'+        debugAssert(file);'), (155, 1, u'+        debugAssert(ret == 0);'), (158, 1, u'+        debugAssert(ret == toRead);'), (164, 1, u'+        debugAssert(file);'), (166, 1, u'+        debugAssert(ret == 0);'), (169, 1, u'+        debugAssert((size_t)ret == (size_t)toRead);'), (175, 1, u'+    debugAssert(m_pos >= 0);'), (230, 1, u'+        debugAssert(m_freeBuffer);'), (238, 1, u'+        debugAssert(result == Z_OK); (void)result;'), (244, 1, u'+ \t        debugAssert(!m_freeBuffer);'), (247, 1, u'+\t        debugAssert(m_freeBuffer);'), (293, 1, u'+                debugAssertM(test == m_length,'), (329, 1, u'+    debugAssert(m_freeBuffer);'), (343, 1, u'+    debugAssert(m_buffer);'), (367, 1, u'+    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (372, 1, u'+    debugAssert(m_buffer);'), (373, 1, u'+    debugAssert(isValidHeapPointer(tempBuffer));'), (374, 1, u'+    debugAssert(isValidHeapPointer(m_buffer));'), (381, 1, u'+    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (390, 1, u'+    debugAssert(isValidPointer(bytes));'), (430, 1, u'+    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (433, 1, u'+    assert(s != NULL);'), (570, 1, u'+    debugAssert(m_beginEndBits == 0);'), (574, 1, u'+    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (580, 1, u'+    debugAssert(m_beginEndBits == 1);'), (608, 1, u'+    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (158, 1, u'+        debugAssert(writeBytes > 0);'), (164, 1, u'+        debugAssert(file);'), (167, 1, u'+        debugAssert((int)count == writeBytes); (void)count;'), (177, 1, u'+        debugAssert(m_bufferLen < m_maxBufferLen);'), (178, 1, u'+        debugAssert(m_bufferLen >= 0);'), (179, 1, u'+        debugAssert(m_pos >= 0);'), (180, 1, u'+        debugAssert(m_pos <= m_bufferLen);'), (183, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (185, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (237, 1, u'+    debugAssert(m_beginEndBits == 0);'), (238, 1, u'+    alwaysAssertM(m_filename == "<memory>",'), (253, 1, u'+    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (286, 1, u'+    debugAssert(result == Z_OK); (void)result;'), (315, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (317, 1, u'+    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (339, 1, u'+        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (346, 1, u'+            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (359, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (387, 1, u'+    debugAssert(m_beginEndBits == 0);'), (428, 1, u'+    debugAssert(m_beginEndBits == 0);'), (493, 1, u'+    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (521, 1, u'+    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssert('), (118, 1, u'+    debugAssert(! isNaN(_extent.x));'), (191, 1, u'+        debugAssert((f >= 0) && (f < 6));'), (206, 1, u'+    assert(plane.size() < 31);'), (265, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+    debugAssert(separatingAxisIndex >= 0);'), (50, 1, u'+    debugAssert(separatingAxisIndex < 15);'), (176, 1, u'+        debugAssertM(false, "fell through switch statement");'), (365, 1, u'+    debugAssert(lastSeparatingAxis >= -1);'), (366, 1, u'+    debugAssert(lastSeparatingAxis < 15);'), (627, 1, u'+            debugAssertM(false,'), (758, 1, u'+        debugAssertM(false, "Fell through switch");'), (897, 1, u'+    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 1, u'+            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 1, u'+            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 1, u'+            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 1, u'+                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 1, u'+    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 1, u'+    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 1, u'+        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 1, u'+        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 1, u'+        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 1, u'+        debugAssertM(false, "Should not get here.");'), (2055, 1, u'+    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(281, 1, u'+    debugAssertM((_hsv.x <= 1.0f && _hsv.x >= 0.0f)'), (309, 1, u'+        debugAssertM(false, "fell through switch..");'), (316, 1, u'+\tdebugAssertM((_rgb.r <= 1.0f && _rgb.r >= 0.0f)'), (351, 1, u'+\tdebugAssertM(val <= 1.0f && val >= 0.0f , "value should be in [0,1]");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    debugAssert(angle >= 0);'), (26, 1, u'+    debugAssert(angle <= pi());'), (43, 1, u'+        debugAssert(dp > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(176, 1, u'+        debugAssertM(count < 2, "Convex polygons may only intersect planes at two edges.");'), (185, 1, u'+    debugAssertM((count == 2) || (count == 0), "Convex polygons may only intersect planes at two edges.");'), (377, 1, u'+        debugAssert(numVertices >= 3);'), (401, 1, u'+            debugAssertM(distance < 0.02, "Edge missing while closing polygon.");'), (414, 1, u'+    debugAssert((above.face.length() == 0) || (above.face.length() >= 4));'), (415, 1, u'+    debugAssert((below.face.length() == 0) || (below.face.length() >= 4));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(299, 1, u'+        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 1, u'+    debugAssert(z);'), (164, 1, u'+                    debugAssert(handle != -1);'), (183, 1, u'+                    debugAssertM(listing, "opendir failed on \'" + key + "\'");'), (374, 1, u'+    debugAssert(base == "");'), (375, 1, u'+    debugAssert(ext == "");'), (484, 1, u'+                        debugAssertM(false, "Files of the form d:path are"'), (530, 1, u'+            debugAssertM(z != NULL, zip + ": zip open failed.");'), (535, 1, u'+                debugAssertM(success == 0, zip + ": " + contents + ": zip stat failed.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(107, 1, u'+    debugAssert((angle < pi()) && (angle > 0));'), (134, 1, u'+    debugAssert(m_fieldOfView < toRadians(180));'), (485, 1, u'+    debugAssert(nearPlaneZ() < 0.0f);'), (487, 1, u'+    debugAssert(farPlaneZ() < 0.0f);'), (498, 1, u'+    debugAssert(m_nearPlaneZ < 0.0f);'), (500, 1, u'+    debugAssert(m_farPlaneZ < 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(182, 1, u'+    alwaysAssertM(temp != NULL, "Out of memory");'), (210, 1, u'+    alwaysAssertM(temp != NULL, "Out of memory");'), (266, 1, u'+        debugAssert(false);'), (269, 1, u'+    debugAssert(m_width >= 0);'), (270, 1, u'+    debugAssert(m_height >= 0);'), (271, 1, u'+    debugAssert(m_channels == 1 || m_channels == 3 || m_channels == 4);'), (272, 1, u'+    debugAssert(m_byte != NULL);'), (346, 1, u'+                        debugAssert(p < m_width * m_height);'), (448, 1, u'+    debugAssert(data != NULL);'), (519, 1, u'+        alwaysAssertM(this != NULL, "Corrupt GImage");'), (567, 1, u'+    debugAssert(width >= 0);'), (568, 1, u'+    debugAssert(height >= 0);'), (569, 1, u'+    debugAssert(channels >= 1);'), (583, 1, u'+        debugAssert(isValidHeapPointer(m_byte));'), (598, 1, u'+    debugAssert(isValidHeapPointer(m_byte));'), (708, 1, u'+    debugAssert(ret);'), (795, 1, u'+    debugAssert(outData);'), (832, 1, u'+        debugAssert(false);'), (838, 1, u'+    debugAssert(alpha.width() == width());'), (839, 1, u'+    debugAssert(alpha.height() == height());'), (904, 1, u'+    debugAssert(whiteHeightInPixels >= 0);'), (1025, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");'), (1071, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");'), (1114, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    debugAssert(in != out);'), (37, 1, u'+    debugAssert(out != in);'), (80, 1, u'+    debugAssert(isEven(w));'), (81, 1, u'+    debugAssert(isEven(h));'), (165, 1, u'+    debugAssert(in != _out);'), (243, 1, u'+    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    debugAssert(m_channels == 1 || m_channels == 3);'), (205, 1, u'+        debugAssert(palette);'), (242, 1, u'+    debugAssert(m_byte);'), (440, 1, u'+\tdebugAssert(r == 0);'), (442, 1, u'+\tdebugAssert(r == 1);'), (450, 1, u'+\tdebugAssert(count > 0);'), (475, 1, u'+    debugAssert(m_byte);')]
===========================================
Class:class memory_destination_mgr { class memory_destination_mgr 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(184, 1, u'+            debugAssert(s); (void)s;'), (260, 1, u'+    debugAssert(m_channels == 3);'), (440, 1, u'+    alwaysAssertM(this, "Corrupt GImage");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+    debugAssert( png_ptr->io_ptr != NULL );'), (25, 1, u'+    debugAssert( length >= 0 );'), (26, 1, u'+    debugAssert( data != NULL );'), (36, 1, u'+    debugAssert( png_ptr->io_ptr != NULL );'), (37, 1, u'+    debugAssert( data != NULL );'), (55, 1, u'+    debugAssert( error_msg != NULL );'), (66, 1, u'+    debugAssert( warning_msg != NULL );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 1, u'+        alwaysAssertM(false, "PPM requires either 1 or 3 channels exactly.");'), (74, 1, u'+        alwaysAssertM(false, "PPM requires either 1 or 3 channels exactly.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(170, 1, u'+    debugAssert(m_byte);'), (232, 1, u'+        alwaysAssertM(false, "Unsupported type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(150, 1, u'+    debugAssert(cutOffAngleDegrees <= 90);')]
===========================================
Class:class BasicThread: public GThread { class BasicThread: public GThread 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+    alwaysAssertM(m_status != STATUS_RUNNING, "Deleting thread while running.");'), (77, 1, u'+    debugAssertM(! started(), "Thread has already executed.");'), (96, 1, u'+        debugAssert(m_event);'), (148, 1, u'+        debugAssert(m_event);'), (151, 1, u'+        debugAssert(m_handle);'), (160, 1, u'+    debugAssert(current->m_event);'), (185, 1, u'+    debugAssert(ret == 0);'), (187, 1, u'+    debugAssert(ret == 0);'), (189, 1, u'+    debugAssert(ret == 0);'), (199, 1, u'+    debugAssert(ret == 0);'), (201, 1, u'+    debugAssert(ret == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (206, 1, u'+    debugAssert(c >= 0 && c <= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (203, 1, u'+    debugAssert(c >= 0 && c <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+    debugAssert(_packedBitsPerTexel <= _hardwareBitsPerTexel);'), (74, 1, u'+        debugAssertM(false, "Depth must be 16, 24, or 32.");'), (95, 1, u'+        debugAssertM(false, "Stencil must be 1, 4, 8 or 16.");'), (200, 1, u'+    debugAssert(code < CODE_NUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(284, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (337, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (392, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (415, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (438, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (462, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (485, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (509, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (553, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (554, 1, u'+    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (591, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (592, 1, u'+    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (621, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (649, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (650, 1, u'+    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (680, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (681, 1, u'+    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (712, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (809, 1, u'+    debugAssert(isEven(w));'), (810, 1, u'+    debugAssert(isEven(h));'), (1039, 1, u'+    debugAssert(in != _out);'), (1094, 1, u'+    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 1, u'+    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+    debugAssert((d.rows() == 1) || (d.cols() == 1));'), (169, 1, u'+    debugAssertM(vec.cols() == cols(),'), (171, 1, u'+    debugAssertM(vec.rows() == 1,'), (174, 1, u'+    debugAssert(r >= 0);'), (175, 1, u'+    debugAssert(r < rows());'), (186, 1, u'+    debugAssertM(vec.rows() == rows(),'), (188, 1, u'+    debugAssertM(vec.cols() == 1,'), (191, 1, u'+    debugAssert(c >= 0);'), (193, 1, u'+    debugAssert(c < cols());'), (209, 1, u'+    debugAssert(r >= 0);'), (210, 1, u'+    debugAssert(r < rows());'), (218, 1, u'+    debugAssert(c >= 0);'), (219, 1, u'+    debugAssert(c < cols());'), (290, 1, u'+    debugAssert(r >= 0 && r < rows());'), (311, 1, u'+    debugAssert(impl->R == 3);'), (312, 1, u'+    debugAssert(impl->C == 3);'), (321, 1, u'+    debugAssert(impl->R == 4);'), (322, 1, u'+    debugAssert(impl->C == 4);'), (332, 1, u'+    debugAssert(impl->R * impl->C == 2);'), (342, 1, u'+    debugAssert(impl->R * impl->C == 3);'), (352, 1, u'+    debugAssert('), (365, 1, u'+    debugAssert(r0 >= 0 && r0 < rows());'), (366, 1, u'+    debugAssert(r1 >= 0 && r1 < rows());'), (381, 1, u'+    debugAssert(c0 >= 0 && c0 < cols());'), (382, 1, u'+    debugAssert(c1 >= 0 && c1 < cols());'), (396, 1, u'+    debugAssert(r2>=r1);'), (397, 1, u'+    debugAssert(c2>=c1);'), (398, 1, u'+    debugAssert(c2<cols());'), (399, 1, u'+    debugAssert(r2<rows());'), (400, 1, u'+    debugAssert(r1>=0);'), (401, 1, u'+    debugAssert(c1>=0);'), (426, 1, u'+    debugAssert(rows() >= cols());'), (427, 1, u'+    debugAssertM(&U != &V, "Arguments to SVD must be different matrices");'), (428, 1, u'+    debugAssertM(&U != this, "Arguments to SVD must be different matrices");'), (429, 1, u'+    debugAssertM(&V != this, "Arguments to SVD must be different matrices");'), (449, 1, u'+    debugAssertM(ret == NULL, ret);'), (635, 1, u'+    debugAssertM('), (639, 1, u'+    debugAssert(A.C == B.R);'), (640, 1, u'+    debugAssert(A.R == out.R);'), (641, 1, u'+    debugAssert(B.C == out.C);'), (663, 1, u'+    debugAssert(A.C == B.C);\\'), (664, 1, u'+    debugAssert(A.R == B.R);\\'), (665, 1, u'+    debugAssert(A.C == out.C);\\'), (666, 1, u'+    debugAssert(A.R == out.R);\\'), (678, 1, u'+    debugAssert(A.C == out.C);\\'), (679, 1, u'+    debugAssert(A.R == out.R);\\'), (691, 1, u'+    debugAssert(A.C == out.C);\\'), (692, 1, u'+    debugAssert(A.R == out.R);\\'), (725, 1, u'+    debugAssert(A.C == out.C);'), (726, 1, u'+    debugAssert(A.R == out.R);'), (735, 1, u'+    debugAssert(&out != this);'), (754, 1, u'+    debugAssert(out.R == C);'), (755, 1, u'+    debugAssert(out.C == R);'), (784, 1, u'+    debugAssert(&out != this);'), (802, 1, u'+    debugAssert(R > 0);'), (803, 1, u'+    debugAssert(C > 0);'), (811, 1, u'+    debugAssert(r >= 0);'), (825, 1, u'+    debugAssert(R == C);'), (874, 1, u'+    debugAssert(out.R == R - 1);'), (875, 1, u'+    debugAssert(out.C == C - 1);'), (980, 1, u'+        alwaysAssertM(A.cols() == r,'), (982, 1, u'+        alwaysAssertM(V.cols() >= r,'), (1034, 1, u'+    alwaysAssertM((m<=n),"Row-partitioned block matrix pseudoinverse requires R<C");'), (1066, 1, u'+        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1074, 1, u'+    alwaysAssertM((m>=n),"Column-partitioned block matrix pseudoinverse requires R>C");'), (1104, 1, u'+        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1352, 1, u'+    debugAssertM(R == C,'), (1421, 1, u'+        debugAssertM(piv != 0.0, "Matrix is singular");'), (1513, 1, u'+    debugAssertM(rows >= cols, "Must have more rows than columns");'), (1516, 1, u'+    debugAssert(rv1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(199, 1, u'+    assert((0 <= iCol) && (iCol < 3));'), (206, 1, u'+    assert((0 <= iRow) && (iRow < 3));'), (212, 1, u'+    debugAssert((iCol >= 0) && (iCol < 3));'), (220, 1, u'+    debugAssert((iRow >= 0) && (iRow < 3));'), (1081, 1, u'+    assert(iter < MAX_ITERS);'), (1086, 1, u'+    assert(resid < eps);'), (1091, 1, u'+    assert(resid < eps);'), (1096, 1, u'+    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(191, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (212, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (222, 1, u'+    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (223, 1, u'+    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (224, 1, u'+    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (225, 1, u'+    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (226, 1, u'+    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (227, 1, u'+    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (228, 1, u'+    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (229, 1, u'+    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (230, 1, u'+    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (231, 1, u'+    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(183, 1, u'+            debugAssert(vertex[j].isFinite());'), (189, 1, u'+            debugAssert(N.isFinite());'), (204, 1, u'+            debugAssert(N.isUnit() || N.isZero());'), (213, 1, u'+            debugAssert(N.isUnit() || N.isZero());'), (317, 1, u'+    debugAssert(skip >= 0);'), (318, 1, u'+    debugAssert(run >= 0);'), (355, 1, u'+    debugAssert(indexArray.size() % 3 == 0);'), (559, 1, u'+    debugAssertM(faceArray.size() != 0, "Unable to calculate valid tangent space without faces.");'), (624, 1, u'+        debugAssertM(N.isUnit() || N.isZero(), "Input normals must have unit length");')]
===========================================
Class:class MeshEdgeTable { class MeshEdgeTable 
Class:    class Edge {     class Edge 
Class:     class Iterator {     class Iterator 
Class:class Welder { class Welder 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 1, u'+    debugAssert(scale > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+    debugAssert(part.length() == 2);')]
===========================================
Class:class Dummy { class Dummy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(249, 1, u'+    debugAssert(! initialized);'), (333, 1, u'+    debugAssert(! initialized);'), (472, 1, u'+    debugAssert(initialized);'), (815, 1, u'+    debugAssertM(false, "Should not reach this point");'), (846, 1, u'+    debugAssert(ret == b.size());'), (871, 1, u'+    debugAssert(state == RECEIVING);'), (911, 1, u'+    debugAssert(messageSize < 6e7);'), (913, 1, u'+    debugAssert(receiveBufferUsedSize == 0);'), (934, 1, u'+    debugAssert(state == RECEIVING);'), (935, 1, u'+    debugAssert(messageType != 0);'), (936, 1, u'+    debugAssertM(receiveBufferUsedSize < messageSize, "Message already received.");'), (937, 1, u'+    debugAssertM(messageSize >= receiveBufferUsedSize, "Message size overflow.");'), (1009, 1, u'+        debugAssert(port != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    alwaysAssertM(isPow2(dataSize), "dataSize must be a power of 2");'), (54, 1, u'+    alwaysAssertM(isPow2(dataSize), "dataSize must be a power of 2");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    debugAssertM(isValidHeapPointer(this),'), (49, 1, u'+    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 1, u'+        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 1, u'+            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 1, u'+    debugAssert(data);'), (219, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 1, u'+    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 1, u'+\tassert(numPlanes < 31);'), (165, 1, u'+\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssertM(N > 0, "No control points");'), (113, 1, u'+            debugAssert(s - d * wraps >= t0);'), (114, 1, u'+            debugAssert(s - d * wraps < tn + getFinalInterval());'), (120, 1, u'+            debugAssert(s < tn + fi);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+    alwaysAssertM(! inBetween, "Stopwatch::tick() called twice in a row.");'), (95, 1, u'+    alwaysAssertM(inBetween, "Stopwatch::tock() called without matching tick.");')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(835, 1, u'+    debugAssertM(false,'), (1140, 1, u'+        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 1, u'+    debugAssert(option.numColumns > 1);'), (240, 1, u"+            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (401, 1, u'+    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 1, u'+        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (228, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
Class:class VN { class VN 
Class:class WeldHelper { class WeldHelper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+            debugAssertM(beginsWith(name, s), "Mismatched close tag");'), (138, 1, u'+        debugAssert(n.type() == Token::SYMBOL);'), (175, 1, u'+            debugAssert(n.type() == Token::SYMBOL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+AssertionHook _debugHook = _handleDebugAssert_;'), (37, 1, u'+AssertionHook _failureHook = _handleErrorCheck_;'), (134, 1, u'+bool _handleDebugAssert_('), (305, 1, u'+void setAssertionHook(AssertionHook hook) {'), (309, 1, u'+AssertionHook assertionHook() {'), (313, 1, u'+void setFailureHook(AssertionHook hook) {'), (317, 1, u'+AssertionHook failureHook() {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(76, 1, u'+                        debugAssertM(false, "Files of the form d:path are"'), (107, 1, u'+    debugAssert(filename != "");'), (108, 1, u'+    debugAssertM(FileSystem::exists(filename), filename + " not found");'), (114, 1, u'+        debugAssert(buffer);'), (116, 1, u'+        debugAssert(f);'), (118, 1, u'+\t    debugAssert(ret == length);(void)ret;'), (162, 1, u'+                debugAssertM((size_t)test == length,'), (194, 1, u'+                        debugAssertM(z != NULL, zip + ": zip open failed.");'), (200, 1, u'+                                debugAssertM(success == 0, zip + ": " + contents + ": zip stat failed.");'), (234, 1, u'+    debugAssert(file);'), (282, 1, u'+    debugAssert(base == "");'), (283, 1, u'+    debugAssert(ext == "");'), (788, 1, u'+            debugAssertM(filenameBaseExt(filespec) == "*", "Can only call getFiles/getDirs on zipfiles using \'*\' wildcard");'), (797, 1, u'+        debugAssertM(filenameBaseExt(filespec) == "*", "Can only call getFiles/getDirs on zipfiles using \'*\' wildcard");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+      debugAssert(heapBuffer);'), (142, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
Class: class boss_deathbringer_saurfang : public CreatureScript { 
Class: class npc_high_overlord_saurfang_icc : public CreatureScript { 
Class: class npc_muradin_bronzebeard_icc : public CreatureScript { 
Class: class npc_saurfang_event : public CreatureScript { 
Class: class spell_deathbringer_blood_link : public SpellScriptLoader { 
Class:         class spell_deathbringer_blood_link_SpellScript : public SpellScript         {         
Class: class spell_deathbringer_blood_link_aura : public SpellScriptLoader { 
Class:         class spell_deathbringer_blood_link_AuraScript : public AuraScript         {         
Class: class spell_deathbringer_blood_power : public SpellScriptLoader { 
Class:         class spell_deathbringer_blood_power_SpellScript : public SpellScript         {         
Class:         class spell_deathbringer_blood_power_AuraScript : public AuraScript         {         
Class: class spell_deathbringer_rune_of_blood : public SpellScriptLoader { 
Class:         class spell_deathbringer_rune_of_blood_SpellScript : public SpellScript         {         
Class: class spell_deathbringer_blood_nova : public SpellScriptLoader { 
Class:         class spell_deathbringer_blood_nova_SpellScript : public SpellScript         {         
Class: class achievement_ive_gone_and_made_a_mess : public AchievementCriteriaScript { 
Class:class spell_deathwhisper_mana_barrier : public SpellScriptLoader { 
Class:         class spell_deathwhisper_mana_barrier_AuraScript : public AuraScript         {         
Class: class npc_stinky : public CreatureScript { 
Class: class npc_maxx_a_million_escort : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-            assert(vehicle);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-            assert(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-            assert(vehicle);')]
===========================================
Class: class boss_flame_leviathan_defense_cannon : public CreatureScript { 
Class: class npc_galen_goodward : public CreatureScript { 
Class:        class spell_ex_49375SpellScript : public SpellScript         class spell_ex_5581SpellScript : public SpellScript             enum Spells             {             
Class: class spell_ex_66244 : public SpellScriptLoader { 
Class:         class spell_ex_66244AuraScript : public AuraScript         {         
Class: class spell_ex : public SpellHandlerScript class spell_ex : public SpellScriptLoader         spell_ex() : SpellHandlerScript() { }         spell_ex() : SpellHandlerScript() 
Class:class spell_cultist_dark_martyrdom : public SpellHandlerScript class spell_cultist_dark_martyrdom : public SpellScriptLoader         spell_cultist_dark_martyrdom() : SpellHandlerScript() { }         spell_cultist_dark_martyrdom() : SpellHandlerScript() 
Class:class spell_marrowgar_coldflame : public SpellHandlerScript class spell_marrowgar_coldflame : public SpellScriptLoader         spell_marrowgar_coldflame() : SpellHandlerScript() { }         spell_marrowgar_coldflame() : SpellHandlerScript() 
Class:class spell_marrowgar_bone_spike_graveyard : public SpellHandlerScript class spell_marrowgar_bone_spike_graveyard : public SpellScriptLoader         spell_marrowgar_bone_spike_graveyard() : SpellHandlerScript() { }         spell_marrowgar_bone_spike_graveyard() : SpellHandlerScript() 
Class:class spell_marrowgar_bone_storm : public SpellHandlerScript class spell_marrowgar_bone_storm : public SpellScriptLoader         spell_marrowgar_bone_storm() : SpellHandlerScript() { }         spell_marrowgar_bone_storm() : SpellHandlerScript() 
Class:class spell_dk_corpse_explosion : public SpellHandlerScript class spell_dk_corpse_explosion : public SpellScriptLoader     spell_dk_corpse_explosion() : SpellHandlerScript() { }     spell_dk_corpse_explosion() : SpellHandlerScript() 
Class:class spell_dk_runic_power_feed : public SpellHandlerScript class spell_dk_runic_power_feed : public SpellScriptLoader     spell_dk_runic_power_feed() : SpellHandlerScript() { }     spell_dk_runic_power_feed() : SpellHandlerScript() 
Class:class spell_dk_scourge_strike : public SpellHandlerScript class spell_dk_scourge_strike : public SpellScriptLoader     spell_dk_scourge_strike() : SpellHandlerScript() { }     spell_dk_scourge_strike() : SpellHandlerScript() 
Class:class spell_dru_glyph_of_starfire : public SpellHandlerScript class spell_dru_glyph_of_starfire : public SpellScriptLoader     spell_dru_glyph_of_starfire() : SpellHandlerScript() { }     spell_dru_glyph_of_starfire() : SpellHandlerScript() 
Class:class spell_gen_remove_flight_auras : public SpellHandlerScript class spell_gen_remove_flight_auras : public SpellScriptLoader     spell_gen_remove_flight_auras() : SpellHandlerScript() {}     spell_gen_remove_flight_auras() : SpellHandlerScript() 
Class:class spell_gen_pet_summoned : public SpellHandlerScript class spell_gen_pet_summoned : public SpellScriptLoader     spell_gen_pet_summoned() : SpellHandlerScript() { }     spell_gen_pet_summoned() : SpellHandlerScript() 
Class:class spell_hun_chimera_shot : public SpellHandlerScript class spell_hun_chimera_shot : public SpellScriptLoader     spell_hun_chimera_shot() : SpellHandlerScript() { }     spell_hun_chimera_shot() : SpellHandlerScript() 
Class:class spell_hun_invigoration : public SpellHandlerScript class spell_hun_invigoration : public SpellScriptLoader     spell_hun_invigoration() : SpellHandlerScript() { }     spell_hun_invigoration() : SpellHandlerScript() 
Class:class spell_hun_last_stand_pet : public SpellHandlerScript class spell_hun_last_stand_pet : public SpellScriptLoader     spell_hun_last_stand_pet() : SpellHandlerScript() { }     spell_hun_last_stand_pet() : SpellHandlerScript() 
Class:class spell_hun_masters_call : public SpellHandlerScript class spell_hun_masters_call : public SpellScriptLoader     spell_hun_masters_call() : SpellHandlerScript() { }     spell_hun_masters_call() : SpellHandlerScript() 
Class:class spell_hun_readiness : public SpellHandlerScript class spell_hun_readiness : public SpellScriptLoader     spell_hun_readiness() : SpellHandlerScript() { }     spell_hun_readiness() : SpellHandlerScript() 
Class:class spell_hun_scatter_shot : public SpellHandlerScript class spell_hun_scatter_shot : public SpellScriptLoader     spell_hun_scatter_shot() : SpellHandlerScript() { }     spell_hun_scatter_shot() : SpellHandlerScript() 
Class:class spell_hun_pet_heart_of_the_phoenix : public SpellHandlerScript class spell_hun_pet_heart_of_the_phoenix : public SpellScriptLoader     spell_hun_pet_heart_of_the_phoenix() : SpellHandlerScript() { }     spell_hun_pet_heart_of_the_phoenix() : SpellHandlerScript() 
Class:class spell_hun_pet_carrion_feeder : public SpellHandlerScript class spell_hun_pet_carrion_feeder : public SpellScriptLoader     spell_hun_pet_carrion_feeder() : SpellHandlerScript() { }     spell_hun_pet_carrion_feeder() : SpellHandlerScript() 
Class:class spell_mage_cold_snap : public SpellHandlerScript class spell_mage_cold_snap : public SpellScriptLoader         spell_mage_cold_snap() : SpellHandlerScript() { }         spell_mage_cold_snap() : SpellHandlerScript() 
Class:class spell_mage_polymorph_cast_visual : public SpellHandlerScript class spell_mage_polymorph_cast_visual : public SpellScriptLoader         spell_mage_polymorph_cast_visual() : SpellHandlerScript() { }         spell_mage_polymorph_cast_visual() : SpellHandlerScript() 
Class:class spell_mage_summon_water_elemental : public SpellHandlerScript class spell_mage_summon_water_elemental : public SpellScriptLoader         spell_mage_summon_water_elemental() : SpellHandlerScript() { }         spell_mage_summon_water_elemental() : SpellHandlerScript() 
Class:class spell_pal_blessing_of_faith : public SpellHandlerScript class spell_pal_blessing_of_faith : public SpellScriptLoader     spell_pal_blessing_of_faith() : SpellHandlerScript() { }     spell_pal_blessing_of_faith() : SpellHandlerScript() 
Class:class spell_pal_guarded_by_the_light : public SpellHandlerScript class spell_pal_guarded_by_the_light : public SpellScriptLoader     spell_pal_guarded_by_the_light() : SpellHandlerScript() { }     spell_pal_guarded_by_the_light() : SpellHandlerScript() 
Class:class spell_pal_holy_shock : public SpellHandlerScript class spell_pal_holy_shock : public SpellScriptLoader     spell_pal_holy_shock() : SpellHandlerScript() { }     spell_pal_holy_shock() : SpellHandlerScript() 
Class:class spell_pal_judgement_of_command : public SpellHandlerScript class spell_pal_judgement_of_command : public SpellScriptLoader     spell_pal_judgement_of_command() : SpellHandlerScript() { }     spell_pal_judgement_of_command() : SpellHandlerScript() 
Class:class spell_pri_pain_and_suffering_proc : public SpellHandlerScript class spell_pri_pain_and_suffering_proc : public SpellScriptLoader         spell_pri_pain_and_suffering_proc() : SpellHandlerScript() { }         spell_pri_pain_and_suffering_proc() : SpellHandlerScript() 
Class:class spell_pri_penance : public SpellHandlerScript class spell_pri_penance : public SpellScriptLoader         spell_pri_penance() : SpellHandlerScript() { }         spell_pri_penance() : SpellHandlerScript() 
Class:class spell_q11587_arcane_prisoner_rescue : public SpellHandlerScript class spell_q11587_arcane_prisoner_rescue : public SpellScriptLoader     spell_q11587_arcane_prisoner_rescue() : SpellHandlerScript() { }     spell_q11587_arcane_prisoner_rescue() : SpellHandlerScript() 
Class:class spell_q11730_ultrasonic_screwdriver : public SpellHandlerScript class spell_q11730_ultrasonic_screwdriver : public SpellScriptLoader     spell_q11730_ultrasonic_screwdriver() : SpellHandlerScript() { }     spell_q11730_ultrasonic_screwdriver() : SpellHandlerScript() 
Class:class spell_rog_cheat_death : public SpellHandlerScript class spell_rog_cheat_death : public SpellScriptLoader         spell_rog_cheat_death() : SpellHandlerScript() { }         spell_rog_cheat_death() : SpellHandlerScript() 
Class:class spell_rog_hunger_for_blood : public SpellHandlerScript class spell_rog_hunger_for_blood : public SpellScriptLoader         spell_rog_hunger_for_blood() : SpellHandlerScript() { }         spell_rog_hunger_for_blood() : SpellHandlerScript() 
Class:class spell_rog_preparation : public SpellHandlerScript class spell_rog_preparation : public SpellScriptLoader         spell_rog_preparation() : SpellHandlerScript() { }         spell_rog_preparation() : SpellHandlerScript() 
Class:class spell_rog_shiv : public SpellHandlerScript class spell_rog_shiv : public SpellScriptLoader         spell_rog_shiv() : SpellHandlerScript() { }         spell_rog_shiv() : SpellHandlerScript() 
Class:class spell_sha_fire_nova : public SpellHandlerScript class spell_sha_fire_nova : public SpellScriptLoader     spell_sha_fire_nova() : SpellHandlerScript() { }     spell_sha_fire_nova() : SpellHandlerScript() 
Class:class spell_sha_mana_tide_totem : public SpellHandlerScript class spell_sha_mana_tide_totem : public SpellScriptLoader     spell_sha_mana_tide_totem() : SpellHandlerScript() { }     spell_sha_mana_tide_totem() : SpellHandlerScript() 
Class:class spell_warl_demonic_empowerment : public SpellHandlerScript class spell_warl_demonic_empowerment : public SpellScriptLoader     spell_warl_demonic_empowerment() : SpellHandlerScript() { }     spell_warl_demonic_empowerment() : SpellHandlerScript() 
Class:class spell_warl_everlasting_affliction : public SpellHandlerScript class spell_warl_everlasting_affliction : public SpellScriptLoader     spell_warl_everlasting_affliction() : SpellHandlerScript() { }     spell_warl_everlasting_affliction() : SpellHandlerScript() 
Class:class spell_warl_create_healthstone : public SpellHandlerScript class spell_warl_create_healthstone : public SpellScriptLoader     spell_warl_create_healthstone() : SpellHandlerScript() { }     spell_warl_create_healthstone() : SpellHandlerScript() 
Class:class spell_warr_last_stand : public SpellHandlerScript class spell_warr_last_stand : public SpellScriptLoader         spell_warr_last_stand() : SpellHandlerScript() { }         spell_warr_last_stand() : SpellHandlerScript() 
Class:        class spell_gen_remove_flight_auras_SpellScript : public SpellScript     class spell_gen_remove_flight_auras_SpellScript : public SpellScript     {     
Class: class spell_gen_pet_summoned : public SpellHandlerScript { 
Class:     class spell_gen_pet_summonedSpellScript : public SpellScript     {     
Class: class npc_announcer_toc10 : public CreatureScript { 
Class: class boss_lich_king_toc : public CreatureScript { 
Class: class npc_fizzlebang_toc : public CreatureScript { 
Class: class npc_tirion_toc : public CreatureScript { 
Class: class npc_garrosh_toc : public CreatureScript { 
Class: class npc_varian_toc : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (3, 1, u'+    ASSERT(type != CHARM_TYPE_VEHICLE || (GetTypeId() == TYPEID_UNIT && IsVehicle()));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (3, 1, u'+    ASSERT(type != CHARM_TYPE_VEHICLE || (GetTypeId() == TYPEID_UNIT && IsVehicle()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (3, 1, u'+    ASSERT(type != CHARM_TYPE_VEHICLE || (GetTypeId() == TYPEID_UNIT && IsVehicle()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT (aurSpellInfo);'), (3, 1, u'+            ASSERT(aurSpellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::DoSpellHitOnUnit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT (aurSpellInfo);'), (3, 1, u'+            ASSERT(aurSpellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT (aurSpellInfo);'), (3, 1, u'+            ASSERT(aurSpellInfo);')]
===========================================
Class: class boss_lady_deathwhisper : public CreatureScript { 
Class: class npc_cult_fanatic : public CreatureScript { 
Class: class npc_cult_adherent : public CreatureScript { 
Class: class npc_vengeful_shade : public CreatureScript { 
Class: class spell_cultist_dark_martyrdom : public SpellHandlerScript { 
Class:         class spell_cultist_dark_martyrdom_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(413, 2, u'-    assert(initialized);'), (436, 2, u'-    assert(initialized);'), (437, 2, u'-    assert(idx % 2 == 0);'), (482, 2, u'-    assert(initialized);'), (483, 2, u'-    assert(idx == N32);'), (484, 2, u'-    assert(size % 4 == 0);'), (485, 2, u'-    assert(size >= N32);'), (518, 2, u'-    assert(initialized);'), (519, 2, u'-    assert(idx == N32);'), (520, 2, u'-    assert(size % 2 == 0);'), (521, 2, u'-    assert(size >= N64);')]
===========================================
Class: class boss_lord_marrowgar : public CreatureScript { 
Class: class npc_coldflame : public CreatureScript { 
Class: class npc_bone_spike : public CreatureScript { 
Class: class spell_marrowgar_coldflame : public SpellHandlerScript { 
Class:         class spell_marrowgar_coldflame_SpellScript : public SpellScript         {         
Class: class spell_marrowgar_bone_spike_graveyard : public SpellHandlerScript { 
Class:         class spell_marrowgar_bone_spike_graveyard_SpellScript : public SpellScript         {         
Class: class spell_marrowgar_bone_storm : public SpellHandlerScript { 
Class:         class spell_marrowgar_bone_storm_SpellScript : public SpellScript         {         
Class: class boss_lord_marrowgar : public CreatureScript { 
Class: class npc_coldflame : public CreatureScript { 
Class: class npc_bone_spike : public CreatureScript { 
Class: class spell_marrowgar_coldflame : public SpellHandlerScript { 
Class:         class spell_marrowgar_coldflame_SpellScript : public SpellScript         {         
Class: class spell_marrowgar_bone_spike_graveyard : public SpellHandlerScript { 
Class:         class spell_marrowgar_bone_spike_graveyard_SpellScript : public SpellScript         {         
Class: class spell_marrowgar_bone_storm : public SpellHandlerScript { 
Class:         class spell_marrowgar_bone_storm_SpellScript : public SpellScript         {         
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                ASSERT(vehicle);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: class npc_bone_spike : public CreatureScript
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                ASSERT(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                ASSERT(vehicle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_sync_connections.empty() );')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: DatabaseWorkerPool::Close
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_sync_connections.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_sync_connections.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT( m_sync_connections.empty() );')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: DatabaseWorkerPool::Close
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT( m_sync_connections.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT( m_sync_connections.empty() );')]
===========================================
Class:class instance_utgarde_pinnacle : public InstanceMapScript { 
Class:   class CharacterHandler { 
Class: class boss_lord_marrowgar : public CreatureScript { 
Class: class npc_coldflame : public CreatureScript { 
Class: class npc_bone_spike : public CreatureScript { 
Class: class spell_marrowgar_coldflame : public SpellHandlerScript { 
Class:         class spell_marrowgar_coldflame_SpellScript : public SpellScript         {         
Class: class spell_marrowgar_bone_spike_graveyard : public SpellHandlerScript { 
Class:         class spell_marrowgar_bone_spike_graveyard_SpellScript : public SpellScript         {         
Class: class spell_marrowgar_bone_storm : public SpellHandlerScript { 
Class:         class spell_marrowgar_bone_storm_SpellScript : public SpellScript         {         
Class:        class spell_pal_blessing_of_faith_SpellScript : public SpellScript     class spell_pal_blessing_of_faith_SpellScript : public SpellScript     {     
Class:class spell_pal_holy_shock : public SpellHandlerScript  class spell_pal_guarded_by_the_light : public SpellHandlerScript     public:         spell_pal_holy_shock() : SpellHandlerScript() { }         spell_pal_holy_shock() : SpellHandlerScript() 
Class:        class spell_pal_holy_shock_SpellScript : public SpellScript     class spell_pal_guarded_by_the_light_SpellScript : public SpellScript     {     
Class:        class spell_pal_judgement_of_command_SpellScript : public SpellScript     class spell_pal_judgement_of_command_SpellScript : public SpellScript     {     
Class: class spell_warl_guarded_by_the_light : public SpellHandlerScript { 
Class:     class spell_warl_guarded_by_the_light_SpellScript : public SpellScript     {     
Class:  class spell_dk_corpse_explosion : public SpellHandlerScript public:     spell_dk_corpse_explosion() : SpellHandlerScript() { }     spell_dk_corpse_explosion() : SpellHandlerScript() 
Class:     class spell_dk_corpse_explosion_SpellScript : public SpellScript     {     
Class:  class spell_dk_runic_power_feed : public SpellHandlerScript { 
Class:     class spell_dk_runic_power_feed_SpellScript : public SpellScript     {     
Class:  class spell_dk_scourge_strike : public SpellHandlerScript { 
Class:     class spell_dk_scourge_strike_SpellScript : public SpellScript     {     
Class:  class spell_dru_glyph_of_starfire : public SpellHandlerScript public:     spell_dru_glyph_of_starfire() : SpellHandlerScript() { }     spell_dru_glyph_of_starfire() : SpellHandlerScript() 
Class:     class spell_dru_glyph_of_starfire_SpellScript : public SpellScript     {     
Class:        class spell_hun_last_stand_pet_SpellScript : public SpellScript         class spell_hun_last_stand_pet_SpellScript : public SpellScript
Class:  class spell_hun_invigoration : public SpellHandlerScript { 
Class:     class spell_hun_invigoration_SpellScript : public SpellScript     {     
Class: class spell_hun_last_stand_pet : public SpellHandlerScript { 
Class:     class spell_hun_last_stand_pet_SpellScript : public SpellScript     {     
Class:        class spell_hun_masters_call_SpellScript : public SpellScript         class spell_hun_masters_call_SpellScript : public SpellScript
Class:        class spell_hun_readiness_SpellScript : public SpellScript         class spell_hun_readiness_SpellScript : public SpellScript
Class: class spell_hun_scatter_shot : public SpellHandlerScript { 
Class:        class spell_hun_pet_heart_of_the_phoenix_SpellScript : public SpellScript         class spell_hun_pet_heart_of_the_phoenix_SpellScript : public SpellScript
Class:        class spell_hun_pet_carrion_feeder_SpellScript : public SpellScript         class spell_hun_pet_carrion_feeder_SpellScript : public SpellScript
Class:   class spell_q11587_arcane_prisoner_rescue : public SpellHandlerScript { 
Class:     class spell_q11587_arcane_prisoner_rescue_SpellScript : public SpellScript     {     
Class:   class spell_q11730_ultrasonic_screwdriver : public SpellHandlerScript { 
Class:     class spell_q11730_ultrasonic_screwdriver_SpellScript : public SpellScript     {     
Class:  class spell_sha_fire_nova : public SpellHandlerScript { 
Class:     class spell_sha_fire_nova_SpellScript : public SpellScript     {     
Class:  class spell_sha_mana_tide_totem : public SpellHandlerScript public:     spell_sha_mana_tide_totem() : SpellHandlerScript() { }     spell_sha_mana_tide_totem() : SpellHandlerScript() 
Class:     class spell_sha_mana_tide_totem_SpellScript : public SpellScript     {     
Class:  class spell_warl_demonic_empowerment : public SpellHandlerScript public:     spell_warl_demonic_empowerment() : SpellHandlerScript() { }     spell_warl_demonic_empowerment() : SpellHandlerScript() 
Class:     class spell_warl_demonic_empowerment_SpellScript : public SpellScript     {     
Class:  class spell_warl_everlasting_affliction : public SpellHandlerScript { 
Class:     class spell_warl_everlasting_affliction_SpellScript : public SpellScript     {     
Class:  class spell_warl_guarded_by_the_light : public SpellHandlerScript { 
Class:     class spell_warl_guarded_by_the_light_SpellScript : public SpellScript     {     
Class:  class spell_warl_create_healthstone : public SpellHandlerScript { 
Class:     class spell_warl_create_healthstone_SpellScript : public SpellScript     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(413, 1, u'+    assert(initialized);'), (436, 1, u'+    assert(initialized);'), (437, 1, u'+    assert(idx % 2 == 0);'), (482, 1, u'+    assert(initialized);'), (483, 1, u'+    assert(idx == N32);'), (484, 1, u'+    assert(size % 4 == 0);'), (485, 1, u'+    assert(size >= N32);'), (518, 1, u'+    assert(initialized);'), (519, 1, u'+    assert(idx == N32);'), (520, 1, u'+    assert(size % 2 == 0);'), (521, 1, u'+    assert(size >= N64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 1, u'+  ACE_ASSERT (0); // not implemented.'), (116, 1, u'+  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 1, u'+              ACE_ASSERT (0);'), (637, 1, u'+              ACE_ASSERT (0);'), (645, 1, u'+          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> INT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(124, 1, u'+  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (125, 1, u'+  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (131, 1, u'+  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (132, 1, u'+  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (133, 1, u'+  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (142, 1, u'+  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (151, 1, u'+  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+  ACE_ASSERT (size != 0);'), (54, 1, u'+  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 1, u'+  ACE_ASSERT (result != 0);'), (669, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 1, u'+      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:    class TSS_Cleanup_Instance { 
Class:    class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class:  class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+      ACE_ASSERT (dynamic_instance != 0);'), (79, 1, u'+      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 1, u'+  ACE_ASSERT (0);'), (115, 1, u'+  ACE_ASSERT (0);'), (130, 1, u'+  ACE_ASSERT (0);'), (424, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (475, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (664, 1, u'+      ACE_ASSERT (result == 1);'), (811, 1, u'+          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::cancel (long timer_id,                                            const void **act) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::schedule_ualarm (void) { 
Class: template <class TQ, class TYPE> ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::ACE_Async_Timer_Queue_Adapter (ACE_Sig_Set *mask)         : mask_ (mask) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::recompute_next_abs_interval_time     (ACE_Timer_Node_T<TYPE> *expired,      const ACE_Time_Value &cur_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::return_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 1, u'+  ACE_ASSERT (result != 0);'), (477, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 1, u'+    assert(plane.size() < 31);'), (228, 1, u'+\tassert(plane.size() < 31);'), (358, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+        alwaysAssertM(m_data, "Corrupt placeholder");'), (135, 1, u'+    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (140, 1, u'+        debugAssert(value.s != NULL);'), (145, 1, u'+        debugAssert(value.a != NULL);'), (150, 1, u'+        debugAssert(value.t != NULL);'), (156, 1, u'+        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (253, 1, u'+    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (338, 1, u'+        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (439, 1, u'+    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (465, 1, u'+    debugAssert(m_data != NULL);'), (483, 1, u'+    debugAssert(m_data != NULL);'), (492, 1, u'+    debugAssert(m_data != NULL);'), (500, 1, u'+    debugAssert(m_data != NULL);'), (532, 1, u'+    debugAssert(m_data != NULL);'), (540, 1, u'+    debugAssert(m_data != NULL);'), (582, 1, u'+    debugAssert(m_data != NULL);'), (617, 1, u'+        debugAssert(m_data != NULL);'), (624, 1, u'+        debugAssert(m_data != NULL);'), (644, 1, u'+        debugAssert(m_data != NULL);'), (661, 1, u'+        alwaysAssertM(false, "Unknown type.");'), (777, 1, u'+        debugAssert(m_data != NULL);'), (782, 1, u'+        debugAssert(m_data != NULL);'), (819, 1, u'+        debugAssert(m_data != NULL);'), (880, 1, u'+    debugAssert(token.type() == Token::SYMBOL);'), (1231, 1, u'+        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 1, u'+        debugAssert(m_freeBuffer);'), (152, 1, u'+        debugAssert(file);'), (154, 1, u'+        debugAssert(ret == 0);'), (157, 1, u'+        debugAssert(ret == toRead);'), (163, 1, u'+        debugAssert(file);'), (165, 1, u'+        debugAssert(ret == 0);'), (168, 1, u'+        debugAssert((size_t)ret == (size_t)toRead);'), (174, 1, u'+    debugAssert(m_pos >= 0);'), (229, 1, u'+        debugAssert(m_freeBuffer);'), (237, 1, u'+        debugAssert(result == Z_OK); (void)result;'), (243, 1, u'+ \t        debugAssert(!m_freeBuffer);'), (246, 1, u'+\t        debugAssert(m_freeBuffer);'), (316, 1, u'+    debugAssert(m_freeBuffer);'), (330, 1, u'+    debugAssert(m_buffer);'), (354, 1, u'+    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 1, u'+    debugAssert(m_buffer);'), (360, 1, u'+    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 1, u'+    debugAssert(isValidHeapPointer(m_buffer));'), (368, 1, u'+    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 1, u'+    debugAssert(isValidPointer(bytes));'), (417, 1, u'+    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 1, u'+    assert(s != NULL);'), (521, 1, u'+    debugAssert(m_beginEndBits == 0);'), (525, 1, u'+    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 1, u'+    debugAssert(m_beginEndBits == 1);'), (559, 1, u'+    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (153, 1, u'+        debugAssert(writeBytes > 0);'), (159, 1, u'+        debugAssert(file);'), (162, 1, u'+        debugAssert((int)count == writeBytes); (void)count;'), (172, 1, u'+        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 1, u'+        debugAssert(m_bufferLen >= 0);'), (174, 1, u'+        debugAssert(m_pos >= 0);'), (175, 1, u'+        debugAssert(m_pos <= m_bufferLen);'), (178, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (180, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (232, 1, u'+    debugAssert(m_beginEndBits == 0);'), (233, 1, u'+    alwaysAssertM(m_filename == "<memory>",'), (248, 1, u'+    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 1, u'+    debugAssert(result == Z_OK); (void)result;'), (310, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 1, u'+    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 1, u'+        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (338, 1, u'+            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (351, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (379, 1, u'+    debugAssert(m_beginEndBits == 0);'), (420, 1, u'+    debugAssert(m_beginEndBits == 0);'), (485, 1, u'+    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (513, 1, u'+    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssert('), (118, 1, u'+    debugAssert(! isNaN(_extent.x));'), (191, 1, u'+        debugAssert((f >= 0) && (f < 6));'), (206, 1, u'+    assert(plane.size() < 31);'), (265, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+    debugAssert(separatingAxisIndex >= 0);'), (50, 1, u'+    debugAssert(separatingAxisIndex < 15);'), (176, 1, u'+        debugAssertM(false, "fell through switch statement");'), (365, 1, u'+    debugAssert(lastSeparatingAxis >= -1);'), (366, 1, u'+    debugAssert(lastSeparatingAxis < 15);'), (627, 1, u'+            debugAssertM(false,'), (758, 1, u'+        debugAssertM(false, "Fell through switch");'), (897, 1, u'+    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 1, u'+            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 1, u'+            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 1, u'+            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 1, u'+                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 1, u'+    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 1, u'+    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 1, u'+        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 1, u'+        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 1, u'+        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 1, u'+        debugAssertM(false, "Should not get here.");'), (2055, 1, u'+    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(270, 1, u'+        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 1, u'+    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 1, u'+    assert((0 <= iCol) && (iCol < 3));'), (200, 1, u'+    assert((0 <= iRow) && (iRow < 3));'), (206, 1, u'+    debugAssert((iCol >= 0) && (iCol < 3));'), (214, 1, u'+    debugAssert((iRow >= 0) && (iRow < 3));'), (1075, 1, u'+    assert(iter < MAX_ITERS);'), (1080, 1, u'+    assert(resid < eps);'), (1085, 1, u'+    assert(resid < eps);'), (1090, 1, u'+    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (207, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (217, 1, u'+    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (218, 1, u'+    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (219, 1, u'+    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (220, 1, u'+    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (221, 1, u'+    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (222, 1, u'+    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (223, 1, u'+    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (224, 1, u'+    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (225, 1, u'+    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (226, 1, u'+    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    debugAssertM(isValidHeapPointer(this),'), (49, 1, u'+    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 1, u'+        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 1, u'+            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 1, u'+    debugAssert(data);'), (219, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 1, u'+    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 1, u'+\tassert(numPlanes < 31);'), (165, 1, u'+\tassert(numPlanes < 31);')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(753, 1, u'+    debugAssertM(false,'), (1056, 1, u'+        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+    debugAssert(option.numColumns > 1);'), (239, 1, u"+            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 1, u'+    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 1, u'+        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(211, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (231, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+AssertionHook _debugHook = _handleDebugAssert_;'), (37, 1, u'+AssertionHook _failureHook = _handleErrorCheck_;'), (134, 1, u'+bool _handleDebugAssert_('), (305, 1, u'+void setAssertionHook(AssertionHook hook) {'), (309, 1, u'+AssertionHook assertionHook() {'), (313, 1, u'+void setFailureHook(AssertionHook hook) {'), (317, 1, u'+AssertionHook failureHook() {')]
===========================================
Class:class FileSystemCache { class FileSystemCache 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+      debugAssert(heapBuffer);'), (142, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1097, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1138, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1181, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1243, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1255, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 1, u'+        Assert(more >= 2, "more < 2");'), (1481, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1725, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(413, 2, u'-    assert(initialized);'), (436, 2, u'-    assert(initialized);'), (437, 2, u'-    assert(idx % 2 == 0);'), (482, 2, u'-    assert(initialized);'), (483, 2, u'-    assert(idx == N32);'), (484, 2, u'-    assert(size % 4 == 0);'), (485, 2, u'-    assert(size >= N32);'), (518, 2, u'-    assert(initialized);'), (519, 2, u'-    assert(idx == N32);'), (520, 2, u'-    assert(size % 2 == 0);'), (521, 2, u'-    assert(size >= N64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 2, u'-  ACE_ASSERT (0); // not implemented.'), (116, 2, u'-  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 2, u'-              ACE_ASSERT (0);'), (637, 2, u'-              ACE_ASSERT (0);'), (645, 2, u'-          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> INT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(124, 2, u'-  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (125, 2, u'-  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (131, 2, u'-  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (132, 2, u'-  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (133, 2, u'-  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (142, 2, u'-  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (151, 2, u'-  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-  ACE_ASSERT (size != 0);'), (54, 2, u'-  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 2, u'-  ACE_ASSERT (result != 0);'), (669, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 2, u'-      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:    class TSS_Cleanup_Instance { 
Class:    class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class:  class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-      ACE_ASSERT (dynamic_instance != 0);'), (79, 2, u'-      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 2, u'-  ACE_ASSERT (0);'), (115, 2, u'-  ACE_ASSERT (0);'), (130, 2, u'-  ACE_ASSERT (0);'), (424, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (475, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (664, 2, u'-      ACE_ASSERT (result == 1);'), (811, 2, u'-          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::cancel (long timer_id,                                            const void **act) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::schedule_ualarm (void) { 
Class: template <class TQ, class TYPE> ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::ACE_Async_Timer_Queue_Adapter (ACE_Sig_Set *mask)         : mask_ (mask) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::recompute_next_abs_interval_time     (ACE_Timer_Node_T<TYPE> *expired,      const ACE_Time_Value &cur_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::return_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 2, u'-  ACE_ASSERT (result != 0);'), (477, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 2, u'-    assert(plane.size() < 31);'), (228, 2, u'-\tassert(plane.size() < 31);'), (358, 2, u'-        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-        alwaysAssertM(m_data, "Corrupt placeholder");'), (135, 2, u'-    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (140, 2, u'-        debugAssert(value.s != NULL);'), (145, 2, u'-        debugAssert(value.a != NULL);'), (150, 2, u'-        debugAssert(value.t != NULL);'), (156, 2, u'-        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (253, 2, u'-    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (338, 2, u'-        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (439, 2, u'-    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (465, 2, u'-    debugAssert(m_data != NULL);'), (483, 2, u'-    debugAssert(m_data != NULL);'), (492, 2, u'-    debugAssert(m_data != NULL);'), (500, 2, u'-    debugAssert(m_data != NULL);'), (532, 2, u'-    debugAssert(m_data != NULL);'), (540, 2, u'-    debugAssert(m_data != NULL);'), (582, 2, u'-    debugAssert(m_data != NULL);'), (617, 2, u'-        debugAssert(m_data != NULL);'), (624, 2, u'-        debugAssert(m_data != NULL);'), (644, 2, u'-        debugAssert(m_data != NULL);'), (661, 2, u'-        alwaysAssertM(false, "Unknown type.");'), (777, 2, u'-        debugAssert(m_data != NULL);'), (782, 2, u'-        debugAssert(m_data != NULL);'), (819, 2, u'-        debugAssert(m_data != NULL);'), (880, 2, u'-    debugAssert(token.type() == Token::SYMBOL);'), (1231, 2, u'-        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 2, u'-        debugAssert(m_freeBuffer);'), (152, 2, u'-        debugAssert(file);'), (154, 2, u'-        debugAssert(ret == 0);'), (157, 2, u'-        debugAssert(ret == toRead);'), (163, 2, u'-        debugAssert(file);'), (165, 2, u'-        debugAssert(ret == 0);'), (168, 2, u'-        debugAssert((size_t)ret == (size_t)toRead);'), (174, 2, u'-    debugAssert(m_pos >= 0);'), (229, 2, u'-        debugAssert(m_freeBuffer);'), (237, 2, u'-        debugAssert(result == Z_OK); (void)result;'), (243, 2, u'- \t        debugAssert(!m_freeBuffer);'), (246, 2, u'-\t        debugAssert(m_freeBuffer);'), (316, 2, u'-    debugAssert(m_freeBuffer);'), (330, 2, u'-    debugAssert(m_buffer);'), (354, 2, u'-    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 2, u'-    debugAssert(m_buffer);'), (360, 2, u'-    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 2, u'-    debugAssert(isValidHeapPointer(m_buffer));'), (368, 2, u'-    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 2, u'-    debugAssert(isValidPointer(bytes));'), (417, 2, u'-    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 2, u'-    assert(s != NULL);'), (521, 2, u'-    debugAssert(m_beginEndBits == 0);'), (525, 2, u'-    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 2, u'-    debugAssert(m_beginEndBits == 1);'), (559, 2, u'-    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (153, 2, u'-        debugAssert(writeBytes > 0);'), (159, 2, u'-        debugAssert(file);'), (162, 2, u'-        debugAssert((int)count == writeBytes); (void)count;'), (172, 2, u'-        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 2, u'-        debugAssert(m_bufferLen >= 0);'), (174, 2, u'-        debugAssert(m_pos >= 0);'), (175, 2, u'-        debugAssert(m_pos <= m_bufferLen);'), (178, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (180, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (232, 2, u'-    debugAssert(m_beginEndBits == 0);'), (233, 2, u'-    alwaysAssertM(m_filename == "<memory>",'), (248, 2, u'-    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 2, u'-    debugAssert(result == Z_OK); (void)result;'), (310, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 2, u'-    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 2, u'-        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (338, 2, u'-            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (351, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (379, 2, u'-    debugAssert(m_beginEndBits == 0);'), (420, 2, u'-    debugAssert(m_beginEndBits == 0);'), (485, 2, u'-    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (513, 2, u'-    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-    debugAssert('), (118, 2, u'-    debugAssert(! isNaN(_extent.x));'), (191, 2, u'-        debugAssert((f >= 0) && (f < 6));'), (206, 2, u'-    assert(plane.size() < 31);'), (265, 2, u'-\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-    debugAssert(separatingAxisIndex >= 0);'), (50, 2, u'-    debugAssert(separatingAxisIndex < 15);'), (176, 2, u'-        debugAssertM(false, "fell through switch statement");'), (365, 2, u'-    debugAssert(lastSeparatingAxis >= -1);'), (366, 2, u'-    debugAssert(lastSeparatingAxis < 15);'), (627, 2, u'-            debugAssertM(false,'), (758, 2, u'-        debugAssertM(false, "Fell through switch");'), (897, 2, u'-    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 2, u'-            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 2, u'-            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 2, u'-            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 2, u'-                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 2, u'-    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 2, u'-    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 2, u'-        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 2, u'-        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 2, u'-        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 2, u'-        debugAssertM(false, "Should not get here.");'), (2055, 2, u'-    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(270, 2, u'-        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 2, u'-        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 2, u'-    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 2, u'-    assert((0 <= iCol) && (iCol < 3));'), (200, 2, u'-    assert((0 <= iRow) && (iRow < 3));'), (206, 2, u'-    debugAssert((iCol >= 0) && (iCol < 3));'), (214, 2, u'-    debugAssert((iRow >= 0) && (iRow < 3));'), (1075, 2, u'-    assert(iter < MAX_ITERS);'), (1080, 2, u'-    assert(resid < eps);'), (1085, 2, u'-    assert(resid < eps);'), (1090, 2, u'-    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 2, u'-    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (207, 2, u'-    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (217, 2, u'-    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (218, 2, u'-    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (219, 2, u'-    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (220, 2, u'-    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (221, 2, u'-    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (222, 2, u'-    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (223, 2, u'-    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (224, 2, u'-    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (225, 2, u'-    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (226, 2, u'-    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    debugAssertM(isValidHeapPointer(this),'), (49, 2, u'-    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 2, u'-        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 2, u'-            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 2, u'-    debugAssert(data);'), (219, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 2, u'-    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 2, u'-\tassert(numPlanes < 31);'), (165, 2, u'-\tassert(numPlanes < 31);')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(753, 2, u'-    debugAssertM(false,'), (1056, 2, u'-        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-    debugAssert(option.numColumns > 1);'), (239, 2, u"-            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 2, u'-    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(211, 2, u'-    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (231, 2, u'-    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-AssertionHook _debugHook = _handleDebugAssert_;'), (37, 2, u'-AssertionHook _failureHook = _handleErrorCheck_;'), (134, 2, u'-bool _handleDebugAssert_('), (305, 2, u'-void setAssertionHook(AssertionHook hook) {'), (309, 2, u'-AssertionHook assertionHook() {'), (313, 2, u'-void setFailureHook(AssertionHook hook) {'), (317, 2, u'-AssertionHook failureHook() {')]
===========================================
Class:class FileSystemCache { class FileSystemCache 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-      debugAssert(heapBuffer);'), (142, 2, u'-      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1097, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1138, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1181, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1243, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1255, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 2, u'-        Assert(more >= 2, "more < 2");'), (1481, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1725, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
Class:class achievement_resilient_victory : public AchievementCriteriaScript { 
Class: class achievement_bg_control_all_nodes : public AchievementCriteriaScript { 
Class: class achievement_save_the_day : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(guid);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: LFGMgr::Leave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(guid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(guid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: LFGMgr::OfferContinue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(roles);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LFGMgr::AddToQueue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(roles);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(roles);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: LFGMgr::UpdateRoleCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(grp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pProp);'), (3, 2, u'-    ASSERT(plr);'), (9, 2, u'-    ASSERT(itPlayer != pProp->players.end());               // Player MUST be in the proposal')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: LFGMgr::SendUpdateProposal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pProp);'), (3, 2, u'-    ASSERT(plr);'), (9, 2, u'-    ASSERT(itPlayer != pProp->players.end());               // Player MUST be in the proposal')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pProp);'), (3, 2, u'-    ASSERT(plr);'), (9, 2, u'-    ASSERT(itPlayer != pProp->players.end());               // Player MUST be in the proposal')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(reward);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: LFGMgr::SendLfgPlayerReward
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(reward);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(reward);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(lockMap);')]
===========================================
===========================================
Total add: 6
Total del: 8
Header: LFGMgr::BuildPartyLockDungeonBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(lockMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(lockMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(lockSet);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: LFGMgr::BuildPlayerLockDungeonBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(lockSet);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(lockSet);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pPlayers);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LFGMgr::GetGroupLockStatusDungeons
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pPlayers);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(pPlayers);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(plr);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: LFGMgr::GetPartyLockStatusDungeons
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(plr);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(plr);'), (3, 2, u'-    ASSERT(dungeons);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(dungeon); // Will never happen - We provide a list from sLFGDungeonStore')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: LFGMgr::GetPlayerLockStatusDungeons
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(dungeon); // Will never happen - We provide a list from sLFGDungeonStore')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(dungeon); // Will never happen - We provide a list from sLFGDungeonStore')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(script);')]
===========================================
===========================================
Total add: 0
Total del: 71
Header: AchievementCriteriaScript::RegisterSelf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(script);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(script);')]
===========================================
Class:class npc_mechanolift : public CreatureScript { 
Class:class mob_azure_spellbreaker : public CreatureScript { 
Class:class mob_janalai_firebomb : public CreatureScript { 
Class:class mob_janalai_hatcher : public CreatureScript { 
Class:class mob_janalai_egg : public CreatureScript { 
Class:  class mob_zealot_lorkhan : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(map->IsBattleGroundOrArena());'), (5, 1, u'+    ASSERT(map->IsBattlegroundOrArena());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MapInstanced::CreateBattleGround
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(map->IsBattleGroundOrArena());'), (5, 1, u'+    ASSERT(map->IsBattlegroundOrArena());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(map->IsBattleGroundOrArena());'), (5, 1, u'+    ASSERT(map->IsBattlegroundOrArena());')]
===========================================
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
Class:     class BattleGround2ChatBuilder     {     
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
Class:     class BattleGround2ChatBuilder     {     
Class:class boss_archaedas : public CreatureScript { 
Class:class mob_stonekeepers : public CreatureScript class mob_stonekeepers : public CreatureScript
Class:class boss_krik_thir : public CreatureScript class boss_krik_thir : public CreatureScript
Class: class npc_anub_ar_warrior : public CreatureScript { 
Class: class npc_watcher_narjil : public CreatureScript { 
Class: class npc_jaina_fos : public CreatureScript { 
Class: class boss_watchkeeper_gargolmar : public CreatureScript { 
Class:class mob_nerubar_victim : public CreatureScript class mob_nerubar_victim : public CreatureScript
Class:class npc_inquisitor_hallard : public CreatureScript class npc_inquisitor_hallard : public CreatureScript
Class:class npc_outhouse_bunny : public CreatureScript class npc_outhouse_bunny : public CreatureScript
Class: class boss_laj : public CreatureScript     boss_lajAI(Creature *c) : ScriptedAI(c) {}     boss_lajAI(Creature *c) : ScriptedAI(c) 
Class:class boss_warp_splinter : public CreatureScript { 
Class: class mob_ember_of_alar : public CreatureScript { 
Class:class mob_solarium_priest : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 2, u'-\t\tassert(m->coldp != NULL);'), (143, 2, u'-\t\t\tassert(m->coldp < m->endp);'), (180, 2, u'-\t\tassert(g->backrefs);\t/* must be back references doing it */'), (181, 2, u'-\t\tassert(g->nplus == 0 || m->lastpos != NULL);'), (192, 2, u'-\t\t\t\tassert(m->pmatch[i].rm_so == -1);'), (193, 2, u'-\t\t\t\tassert(m->pmatch[i].rm_eo == -1);'), (199, 2, u'-\t\tassert(dp == NULL || dp == endp);'), (206, 2, u'-\t\tassert(start <= stop);'), (215, 2, u'-\t\tassert(m->pmatch != NULL);'), (281, 2, u'-\t\t\tassert(nope);'), (297, 2, u'-\t\t\tassert(nope);'), (305, 2, u'-\t\t\t\tassert(rest != NULL);\t/* it did match */'), (312, 2, u'-\t\t\t\tassert(stp >= sp);\t/* it did work */'), (319, 2, u'-\t\t\t\tassert(dp == rest);'), (321, 2, u'-\t\t\t\tassert(sp == rest);'), (329, 2, u'-\t\t\t\tassert(rest != NULL);\t/* it did match */'), (336, 2, u'-\t\t\t\tassert(stp >= sp);\t/* it did work */'), (354, 2, u'-\t\t\tassert(sep == rest);\t/* must exhaust substring */'), (355, 2, u'-\t\t\tassert(slow(charset, m, ssp, sep, ssub, esub) == rest);'), (357, 2, u'-\t\t\tassert(dp == sep);'), (365, 2, u'-\t\t\t\tassert(rest != NULL);\t/* it did match */'), (372, 2, u'-\t\t\t\tassert(stp >= sp);\t/* it did work */'), (376, 2, u'-\t\t\tassert(OP(m->g->strip[esub]) == OOR1);'), (381, 2, u'-\t\t\t\tassert(OP(m->g->strip[esub]) == OOR1);'), (383, 2, u'-\t\t\t\tassert(OP(m->g->strip[esub]) == OOR2);'), (389, 2, u'-\t\t\t\t\tassert(OP(m->g->strip[esub]) == O_CH);'), (392, 2, u'-\t\t\tassert(dp == rest);'), (400, 2, u'-\t\t\tassert(nope);'), (404, 2, u'-\t\t\tassert(0 < i && i <= m->g->nsub);'), (409, 2, u'-\t\t\tassert(0 < i && i <= m->g->nsub);'), (413, 2, u'-\t\t\tassert(nope);'), (418, 2, u'-\tassert(sp == stop);'), (514, 2, u'-\t\t\t\tassert(OP(s) == OOR2);'), (536, 2, u'-\t\tassert(0 < i && i <= m->g->nsub);'), (539, 2, u'-\t\tassert(m->pmatch[i].rm_so != -1);'), (541, 2, u'-\t\tassert((size_t) (stop - m->beginp) >= len);'), (558, 2, u'-\t\tassert(m->lastpos != NULL);'), (559, 2, u'-\t\tassert(lev+1 <= m->g->nplus);'), (577, 2, u'-\t\tassert(OP(m->g->strip[esub]) == OOR1);'), (586, 2, u'-\t\t\tassert(OP(m->g->strip[esub]) == OOR2);'), (592, 2, u'-\t\t\t\tassert(OP(m->g->strip[esub]) == O_CH);'), (597, 2, u'-\t\tassert(0 < i && i <= m->g->nsub);'), (608, 2, u'-\t\tassert(0 < i && i <= m->g->nsub);'), (618, 2, u'-\t\tassert(nope);'), (623, 2, u'-\tassert(nope);'), (705, 2, u'-\t\tassert(c != OUT);'), (708, 2, u'-\t\tassert(EQ(step(m->g, startst, stopst, st, NOTHING, st), st));'), (712, 2, u'-\tassert(coldp != NULL);'), (797, 2, u'-\t\tassert(c != OUT);'), (800, 2, u'-\t\tassert(EQ(step(m->g, startst, stopst, st, NOTHING, st), st));'), (842, 2, u'-\t\t\tassert(pc == stop-1);'), (846, 2, u'-\t\t\tassert(!NONCHAR(ch) || ch != (char)OPND(s));'), (905, 2, u'-\t\t\tassert(OP(g->strip[pc+OPND(s)]) == OOR2);'), (913, 2, u'-\t\t\t\t\tassert(OP(s) == OOR2);'), (920, 2, u'-\t\t\t\tassert(OP(g->strip[pc+OPND(s)]) == OOR2);'), (928, 2, u'-\t\t\tassert(nope);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(489, 2, u'-\tassert(len <= sizeof(epbuf));'), (505, 2, u'-\tassert(strlen(efbuf) < sizeof(efbuf));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(197, 2, u'-\t\tSETERROR(REG_ASSERT);'), (249, 2, u'-\tassert(!MORE() || SEE(stop));'), (267, 2, u'-\tassert(MORE());\t\t/* caller should have ensured this */'), (283, 2, u'-\t\t\tassert(p->pend[subno] != 0);'), (476, 2, u'-\tassert(MORE());\t\t/* caller should have ensured this */'), (506, 2, u'-\t\t\tassert(p->pend[subno] != 0);'), (525, 2, u'-\t\tassert(i < NPAREN);'), (527, 2, u'-\t\t\tassert((uint) i <= p->g->nsub);'), (529, 2, u'-\t\t\tassert(p->pbegin[i] != 0);'), (530, 2, u'-\t\t\tassert(OP(p->strip[p->pbegin[i]]) == OLPAREN);'), (531, 2, u'-\t\t\tassert(OP(p->strip[p->pend[i]]) == ORPAREN);'), (663, 2, u'-\tassert(cs->multis == NULL);\t\t/* xxx */'), (874, 2, u'-\tassert(my_isalpha(charset,ch));'), (904, 2, u'-\tassert(othercase(p->charset, ch) != ch); /* p_bracket() would recurse */'), (911, 2, u'-\tassert(p->next == bracket+2);'), (958, 2, u'-\tassert(p->next == bracket+3);'), (984, 2, u'-\tassert(from <= to);'), (1014, 2, u'-\t\tassert(copy == finish+4);'), (1030, 2, u'-\t\tSETERROR(REG_ASSERT);\t/* just in case */'), (1069, 2, u'-\t\tassert(nc % CHAR_BIT == 0);'), (1095, 2, u'-\tassert(p->g->sets != NULL);\t/* xxx */'), (1180, 2, u'-\tassert(never);'), (1245, 2, u'-\tassert(fp != NULL);'), (1257, 2, u'-\tassert(cs->multis != NULL);'), (1304, 2, u'-\tassert(cs->multis == NULL);\t/* xxx */'), (1319, 2, u'-\tassert(cs->multis == NULL);\t/* xxx */'), (1405, 2, u'-\tassert(finish >= start);'), (1409, 2, u'-\tassert(p->ssize >= p->slen + len);'), (1435, 2, u'-\tassert(opnd < 1<<OPSHIFT);'), (1440, 2, u'-\tassert(p->slen < p->ssize);'), (1467, 2, u'-\tassert(HERE() == sn+1);'), (1471, 2, u'-\tassert(pos > 0);'), (1507, 2, u'-\tassert(value < 1<<OPSHIFT);'), (1631, 2, u'-\t\tassert(cp < g->must + g->mlen);'), (1634, 2, u'-\tassert(cp == g->must + g->mlen);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(129, 2, u'-\tassert(!(g->iflags&BAD));')]
===========================================
Class:			class = (CHARBITS & *(regparse - 2)) + 1;
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    assert(i < limit);'), (85, 2, u'-    assert(!buffer_);       // find realloc error'), (143, 2, u'-    assert (i == AUTO);'), (240, 2, u'-    assert(!buffer_);   // find realloc error'), (256, 2, u'-    assert(i == AUTO);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(329, 2, u'-    assert(peerX509_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(1099, 2, u'-    assert(keyOutput == (keyLen + ivLen));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-            base.ca_, 0) != SSL_SUCCESS) assert(0);'), (75, 2, u'-            base.cert_, SSL_FILETYPE_PEM) != SSL_SUCCESS) assert(0);'), (78, 2, u'-            SSL_FILETYPE_PEM) != SSL_SUCCESS) assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(930, 2, u'-    assert(write_buffer_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 2, u'-    assert( (keylen == 16) || (keylen == 24) || (keylen == 32) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(250, 2, u'-        assert(expBegin->NotNegative());')]
===========================================
Class:class BadCertificate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 2, u'-\tassert(keylength >= 4 && keylength <= 56);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-    assert((bytes % 2) == 0);'), (108, 2, u'-        assert( b  < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (109, 2, u'-        assert( b2 < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (114, 2, u'-        assert( b != bad && b2 != bad );'), (177, 2, u'-    assert(i == outSz);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 2, u'-    assert(!!r_ && !!s_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-    assert(digSz  <= MaxDigestSz);'), (35, 2, u'-    assert(buffSz <= MaxBufferSz);'), (116, 2, u'-    assert(digSz  <= MaxDigestSz);'), (117, 2, u'-    assert(buffSz <= MaxBufferSz);')]
===========================================
Class:class DWord { class DWord 
Class:  class Word { class Word 
Class:    template <class S, class D> S DivideThreeWordsByTwo(S* A, S B0, S B1, D* dummy_VC6_WorkAround = 0) { 
Class:    class Portable { 
Class:   class PentiumOptimized : public Portable { 
Class: class P4Optimized { 
Class:  class LowLevel : public PentiumOptimized { 
Class:class BadBER 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-    assert(modn.Exponentiate(y, e_) == x);  // check'), (127, 2, u'-    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);'), (182, 2, u'-    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 2, u'-\tassert(keylen >= 16 && keylen <= 32);')]
===========================================
Class: class achievement_storm_glory : public AchievementCriteriaScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(gmap);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ScriptMgr::OnLoadGridMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(gmap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(gmap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(gmap);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ScriptMgr::OnUnloadGridMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(gmap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(gmap);')]
===========================================
Class: class OutdoorPvP_eastern_plaguelands : public OutdoorPvPScript { 
Class: class OutdoorPvP_hellfire_peninsula : public OutdoorPvPScript { 
Class: class OutdoorPvP_nagrand : public OutdoorPvPScript { 
Class: class OutdoorPvP_silithus : public OutdoorPvPScript { 
Class: class OutdoorPvP_terokkar_forest : public OutdoorPvPScript { 
Class: class OutdoorPvP_zangarmarsh : public OutdoorPvPScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnInstall
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnUninstall
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnDie
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnReset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnInstallAccessory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnAddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ScriptMgr::OnRemovePassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(veh->GetBase()->GetTypeId() == TYPEID_UNIT);')]
===========================================
Class:class npc_warden_mellichar : public CreatureScript { 
Class:class boss_gatewatcher_iron_hand : public CreatureScript { 
Class: class boss_nethermancer_sepethrea : public CreatureScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(ah);'), (6, 1, u'+    ASSERT(auction);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: AuctionHouseMgr::GetAuctionHouseEntry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(ah);'), (6, 1, u'+    ASSERT(auction);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT(ah);'), (6, 1, u'+    ASSERT(auction);')]
===========================================
Class:class boss_balinda : public CreatureScript { 
Class:class npc_injured_patient : public CreatureScript class npc_injured_patient : public CreatureScript
Class: class npc_mirror_image : public CreatureScript { 
Class:class spell_warr_warriors_wrath : public SpellHandlerScript { 
Class:         class spell_warr_warriors_wrath_SpellScript : public SpellScript         {         
Class:        class spell_ex_49375SpellScript : public SpellScript         {         
Class:class spell_ex_SpellScript : public SpellScript class spell_ex : public SpellHandlerScript     void Function(SpellEffIndex effIndex){}     void Function(SpellEffIndex effIndex)
Class:         class spell_ex_SpellScript : public SpellScript         {         
Class:class spell_mage_polymorph_cast_visual_SpellScript : public SpellScript { 
Class:        class spell_mage_polymorph_cast_visual_SpellScript : public SpellScript         {         
Class:class spell_mage_summon_water_elemental_SpellScript : public SpellScript { 
Class:         class spell_mage_summon_water_elemental_SpellScript : public SpellScript         {         
Class:class spell_pal_holy_shock_SpellScript : public SpellScript { 
Class:         class spell_pal_judgement_of_command_SpellScript : public SpellScript         {         
Class:                  class spell_pri_pain_and_suffering_proc_SpellScript : public SpellScript         {         
Class:        class spell_pri_penance_SpellScript : public SpellScript         class spell_pri_penance_SpellScript : public SpellScript
Class:         class spell_rog_cheat_death_SpellScript : public SpellScript         {         
Class:class spell_rog_hunger_for_blood_SpellScript : public SpellScript { 
Class:        class spell_rog_hunger_for_blood_SpellScript : public SpellScript         {         
Class:class spell_rog_preparation_SpellScript : public SpellScript { 
Class:class spell_rog_shiv_SpellScript : public SpellScript { 
Class:        class spell_rog_shiv_SpellScript : public SpellScript         {         
Class:        class spell_warr_last_stand_SpellScript : public SpellScript         {         
Class:class spell_warr_warriors_wrath_SpellScript : public SpellScript { 
Class:        class spell_warr_warriors_wrath_SpellScript : public SpellScript         {         
Class:class spell_gen_remove_flight_auras : public SpellHandlerScript { 
Class:         class spell_gen_remove_flight_auras_SpellScript : public SpellScript         {         
Class:class spell_hun_masters_call_SpellScript : public SpellScript { 
Class:        class spell_hun_last_stand_pet_SpellScript : public SpellScript         {         
Class:        class spell_hun_masters_call_SpellScript : public SpellScript         class spell_hun_masters_call_SpellScript : public SpellScript
Class:        class spell_hun_readiness_SpellScript : public SpellScript         class spell_hun_readiness_SpellScript : public SpellScript
Class:        class spell_hun_pet_heart_of_the_phoenix_SpellScript : public SpellScript         class spell_hun_pet_heart_of_the_phoenix_SpellScript : public SpellScript
Class:         class spell_hun_pet_carrion_feeder_SpellScript : public SpellScript         {         
Class: class spell_pri_pain_and_suffering_proc_SpellScript : public SpellScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_Seats.empty());')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Vehicle::Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_Seats.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!m_Seats.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(entry);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: Player::CreateCorpse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(entry);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT(entry);')]
===========================================
Class:class spell_hun_pet_carrion_feeder : public SpellScript { 
Class:class spell_hun_pet_heart_of_the_phoenix : public SpellScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (GetCasterGUID() == GetGUID()));'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (GetCasterGUID() == GetGUID()));'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (GetCasterGUID() == GetGUID()));'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (aura->GetCasterGUID() == GetGUID()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(IsInWorld() && !IsDuringRemoveFromWorld());'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (GetCasterGUID() == GetGUID()));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(IsInWorld() && !IsDuringRemoveFromWorld());'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (GetCasterGUID() == GetGUID()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT(IsInWorld() && !IsDuringRemoveFromWorld());'), (3, 1, u'+        ASSERT((IsInWorld() && !IsDuringRemoveFromWorld()) || (GetCasterGUID() == GetGUID()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(!m_duringRemoveFromWorld);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(!m_duringRemoveFromWorld);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(!m_duringRemoveFromWorld);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(IsInWorld() && !IsDuringRemoveFromWorld());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(IsInWorld() && !IsDuringRemoveFromWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(IsInWorld() && !IsDuringRemoveFromWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(caster);'), (7, 1, u'+    ASSERT(caster);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: Aura::UnregisterSingleTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(caster);'), (7, 1, u'+    ASSERT(caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(caster);'), (7, 1, u'+    ASSERT(caster);')]
===========================================
Class: class spell_warr_last_stand_SpellScript : public SpellScript { 
Class: class spell_warr_warriors_wrath_SpellScript : public SpellScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(caster);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Aura::UnregisterSingleTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(caster);')]
===========================================
Class: class spell_pal_blessing_of_faith_SpellScript : public SpellScript { 
Class: class spell_pal_holy_shock_SpellScript : public SpellScript { 
Class: class spell_pal_judgement_of_command_SpellScript : public SpellScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(c->isTotem());'), (3, 1, u'+    ASSERT(c->isTotem());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TotemAI::TotemAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(c->isTotem());'), (3, 1, u'+    ASSERT(c->isTotem());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(c->isTotem());'), (3, 1, u'+    ASSERT(c->isTotem());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(p != NULL);'), (3, 1, u'+                ASSERT(p != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(p != NULL);'), (3, 1, u'+                ASSERT(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(p != NULL);'), (3, 1, u'+                ASSERT(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(creature->GetCreatureInfo() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureInfo() != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(creature->GetCreatureInfo() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureInfo() != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(creature->GetCreatureInfo() != NULL);'), (3, 1, u'+        ASSERT(creature->GetCreatureInfo() != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(p != NULL);'), (3, 1, u'+            ASSERT(p != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(p != NULL);'), (3, 1, u'+            ASSERT(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(p != NULL);'), (3, 1, u'+            ASSERT(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(team == ALLIANCE || team == HORDE);'), (3, 1, u'+    ASSERT(team == ALLIANCE || team == HORDE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::UpdateScore
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(team == ALLIANCE || team == HORDE);'), (3, 1, u'+    ASSERT(team == ALLIANCE || team == HORDE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(team == ALLIANCE || team == HORDE);'), (3, 1, u'+    ASSERT(team == ALLIANCE || team == HORDE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type <= AV_CPLACE_MAX + AV_STATICCPLACE_MAX);'), (3, 1, u'+    ASSERT(type <= AV_CPLACE_MAX + AV_STATICCPLACE_MAX);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::AddAVCreature
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type <= AV_CPLACE_MAX + AV_STATICCPLACE_MAX);'), (3, 1, u'+    ASSERT(type <= AV_CPLACE_MAX + AV_STATICCPLACE_MAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type <= AV_CPLACE_MAX + AV_STATICCPLACE_MAX);'), (3, 1, u'+    ASSERT(type <= AV_CPLACE_MAX + AV_STATICCPLACE_MAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);'), (3, 1, u'+    ASSERT(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::ChangeMineOwner
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);'), (3, 1, u'+    ASSERT(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);'), (3, 1, u'+    ASSERT(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner);'), (3, 1, u'+    ASSERT(owner);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::PopulateNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner);'), (3, 1, u'+    ASSERT(owner);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner);'), (3, 1, u'+    ASSERT(owner);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::GetNodeThroughObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::GetObjectThroughNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetStatus() == STATUS_IN_PROGRESS);'), (3, 1, u'+    ASSERT(GetStatus() == STATUS_IN_PROGRESS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::EventPlayerDefendsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetStatus() == STATUS_IN_PROGRESS);'), (3, 1, u'+    ASSERT(GetStatus() == STATUS_IN_PROGRESS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetStatus() == STATUS_IN_PROGRESS);'), (3, 1, u'+    ASSERT(GetStatus() == STATUS_IN_PROGRESS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(node == BG_AV_NODES_SNOWFALL_GRAVE); //currently the only neutral grave'), (3, 1, u'+        ASSERT(node == BG_AV_NODES_SNOWFALL_GRAVE); //currently the only neutral grave')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::EventPlayerDefendsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(node == BG_AV_NODES_SNOWFALL_GRAVE); //currently the only neutral grave'), (3, 1, u'+        ASSERT(node == BG_AV_NODES_SNOWFALL_GRAVE); //currently the only neutral grave')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(node == BG_AV_NODES_SNOWFALL_GRAVE); //currently the only neutral grave'), (3, 1, u'+        ASSERT(node == BG_AV_NODES_SNOWFALL_GRAVE); //currently the only neutral grave')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetStatus() == STATUS_IN_PROGRESS);'), (3, 1, u'+    ASSERT(GetStatus() == STATUS_IN_PROGRESS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::EventPlayerAssaultsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetStatus() == STATUS_IN_PROGRESS);'), (3, 1, u'+    ASSERT(GetStatus() == STATUS_IN_PROGRESS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetStatus() == STATUS_IN_PROGRESS);'), (3, 1, u'+    ASSERT(GetStatus() == STATUS_IN_PROGRESS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);'), (3, 1, u'+            ASSERT(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::EventPlayerAssaultsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);'), (3, 1, u'+            ASSERT(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);'), (3, 1, u'+            ASSERT(owner == AV_NEUTRAL_TEAM && m_Nodes[node].TotalOwner == AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(m_Nodes[node].State != POINT_CONTROLED);'), (3, 1, u'+            ASSERT(m_Nodes[node].State != POINT_CONTROLED);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::EventPlayerAssaultsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(m_Nodes[node].State != POINT_CONTROLED);'), (3, 1, u'+            ASSERT(m_Nodes[node].State != POINT_CONTROLED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(m_Nodes[node].State != POINT_CONTROLED);'), (3, 1, u'+            ASSERT(m_Nodes[node].State != POINT_CONTROLED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_Nodes[node].Owner != AV_NEUTRAL_TEAM);'), (3, 1, u'+        ASSERT(m_Nodes[node].Owner != AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::EventPlayerAssaultsPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_Nodes[node].Owner != AV_NEUTRAL_TEAM);'), (3, 1, u'+        ASSERT(m_Nodes[node].Owner != AV_NEUTRAL_TEAM);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_Nodes[node].Owner != AV_NEUTRAL_TEAM);'), (3, 1, u'+        ASSERT(m_Nodes[node].Owner != AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(team != AV_NEUTRAL_TEAM);'), (3, 1, u'+    ASSERT(team != AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::GetWorldStateType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(team != AV_NEUTRAL_TEAM);'), (3, 1, u'+    ASSERT(team != AV_NEUTRAL_TEAM);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(team != AV_NEUTRAL_TEAM);'), (3, 1, u'+    ASSERT(team != AV_NEUTRAL_TEAM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);'), (3, 1, u'+    ASSERT(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: BattleGroundAV::SendMineWorldStates
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);'), (3, 1, u'+    ASSERT(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);'), (3, 1, u'+    ASSERT(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (false);'), (3, 1, u'+        ASSERT (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].State == POINT_ASSAULTED);'), (3, 1, u'+    ASSERT(m_Nodes[node].State == POINT_ASSAULTED);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::DestroyNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].State == POINT_ASSAULTED);'), (3, 1, u'+    ASSERT(m_Nodes[node].State == POINT_ASSAULTED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].State == POINT_ASSAULTED);'), (3, 1, u'+    ASSERT(m_Nodes[node].State == POINT_ASSAULTED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner == team);'), (3, 2, u'-    assert(m_Nodes[node].Owner != team);'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_CONTROLED && m_Nodes[node].State != POINT_DESTROYED);'), (5, 1, u'+    ASSERT(m_Nodes[node].TotalOwner == team);'), (6, 1, u'+    ASSERT(m_Nodes[node].Owner != team);'), (7, 1, u'+    ASSERT(m_Nodes[node].State != POINT_CONTROLED && m_Nodes[node].State != POINT_DESTROYED);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: BattleGroundAV::DefendNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner == team);'), (3, 2, u'-    assert(m_Nodes[node].Owner != team);'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_CONTROLED && m_Nodes[node].State != POINT_DESTROYED);'), (5, 1, u'+    ASSERT(m_Nodes[node].TotalOwner == team);'), (6, 1, u'+    ASSERT(m_Nodes[node].Owner != team);'), (7, 1, u'+    ASSERT(m_Nodes[node].State != POINT_CONTROLED && m_Nodes[node].State != POINT_DESTROYED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner == team);'), (3, 2, u'-    assert(m_Nodes[node].Owner != team);'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_CONTROLED && m_Nodes[node].State != POINT_DESTROYED);'), (5, 1, u'+    ASSERT(m_Nodes[node].TotalOwner == team);'), (6, 1, u'+    ASSERT(m_Nodes[node].Owner != team);'), (7, 1, u'+    ASSERT(m_Nodes[node].State != POINT_CONTROLED && m_Nodes[node].State != POINT_DESTROYED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(target);                                     // if the ref has status online the target must be there !'), (3, 1, u'+        ASSERT(target);                                     // if the ref has status online the target must be there !')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ThreatContainer::selectNextVictim
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(target);                                     // if the ref has status online the target must be there !'), (3, 1, u'+        ASSERT(target);                                     // if the ref has status online the target must be there !')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(target);                                     // if the ref has status online the target must be there !'), (3, 1, u'+        ASSERT(target);                                     // if the ref has status online the target must be there !')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(getOwner()->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ThreatManager::addThreat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(getOwner()->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(getOwner()->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type < MAX_DISABLE_TYPES);'), (3, 1, u'+    ASSERT(type < MAX_DISABLE_TYPES);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DisableMgr::IsDisabledFor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type < MAX_DISABLE_TYPES);'), (3, 1, u'+    ASSERT(type < MAX_DISABLE_TYPES);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type < MAX_DISABLE_TYPES);'), (3, 1, u'+    ASSERT(type < MAX_DISABLE_TYPES);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));'), (3, 1, u'+    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LoadDBC
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));'), (3, 1, u'+    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));'), (3, 1, u'+    ASSERT(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()) == sizeof(T) || LoadDBC_assert_print(DBCFileLoader::GetFormatRecordSize(storage.GetFormat()),sizeof(T),filename));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");'), (3, 1, u'+                ASSERT(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LoadDBCStores
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");'), (3, 1, u'+                ASSERT(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");'), (3, 1, u'+                ASSERT(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(guid);'), (3, 1, u'+    ASSERT(guid);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LFGMgr::Leave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(guid);'), (3, 1, u'+    ASSERT(guid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(guid);'), (3, 1, u'+    ASSERT(guid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grp);'), (3, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LFGMgr::UpdateRoleCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grp);'), (3, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grp);'), (3, 1, u'+    ASSERT(grp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pRoleCheck);'), (3, 1, u'+    ASSERT(pRoleCheck);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LFGMgr::BuildLfgRoleCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pRoleCheck);'), (3, 1, u'+    ASSERT(pRoleCheck);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pRoleCheck);'), (3, 1, u'+    ASSERT(pRoleCheck);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(lockMap);'), (3, 1, u'+    ASSERT(lockMap);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LFGMgr::BuildPartyLockDungeonBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(lockMap);'), (3, 1, u'+    ASSERT(lockMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(lockMap);'), (3, 1, u'+    ASSERT(lockMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(lockSet);'), (3, 1, u'+    ASSERT(lockSet);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LFGMgr::BuildPlayerLockDungeonBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(lockSet);'), (3, 1, u'+    ASSERT(lockSet);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(lockSet);'), (3, 1, u'+    ASSERT(lockSet);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(plr);'), (3, 2, u'-    assert(dungeons);'), (4, 1, u'+    ASSERT(plr);'), (5, 1, u'+    ASSERT(dungeons);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LFGMgr::GetPartyLockStatusDungeons
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(plr);'), (3, 2, u'-    assert(dungeons);'), (4, 1, u'+    ASSERT(plr);'), (5, 1, u'+    ASSERT(dungeons);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(plr);'), (3, 2, u'-    assert(dungeons);'), (4, 1, u'+    ASSERT(plr);'), (5, 1, u'+    ASSERT(dungeons);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(dungeon); // Will never happen - We provide a list from sLFGDungeonStore'), (3, 1, u'+        ASSERT(dungeon); // Will never happen - We provide a list from sLFGDungeonStore')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LFGMgr::GetPlayerLockStatusDungeons
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(dungeon); // Will never happen - We provide a list from sLFGDungeonStore'), (3, 1, u'+        ASSERT(dungeon); // Will never happen - We provide a list from sLFGDungeonStore')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(dungeon); // Will never happen - We provide a list from sLFGDungeonStore'), (3, 1, u'+        ASSERT(dungeon); // Will never happen - We provide a list from sLFGDungeonStore')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetType() == CORPSE_BONES);'), (3, 1, u'+    ASSERT(GetType() == CORPSE_BONES);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Corpse::DeleteBonesFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetType() == CORPSE_BONES);'), (3, 1, u'+    ASSERT(GetType() == CORPSE_BONES);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetType() == CORPSE_BONES);'), (3, 1, u'+    ASSERT(GetType() == CORPSE_BONES);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Creature::_IsTargetAcceptable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 1, u'+    ASSERT(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!isPet());'), (3, 1, u'+    ASSERT(!isPet());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TempSummon::InitStats
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!isPet());'), (3, 1, u'+    ASSERT(!isPet());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!isPet());'), (3, 1, u'+    ASSERT(!isPet());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!IsInWorld());'), (3, 1, u'+        ASSERT(!IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TempSummon::UnSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!IsInWorld());'), (3, 1, u'+        ASSERT(!IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!IsInWorld());'), (3, 1, u'+        ASSERT(!IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_owner);'), (3, 1, u'+    ASSERT(m_owner);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Minion::Minion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_owner);'), (3, 1, u'+    ASSERT(m_owner);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_owner);'), (3, 1, u'+    ASSERT(m_owner);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    ASSERT(owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Puppet::Puppet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    ASSERT(owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    ASSERT(owner->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Puppet::InitSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!GetOwnerGUID());'), (3, 1, u'+    ASSERT (!GetOwnerGUID());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GameObject::Delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!GetOwnerGUID());'), (3, 1, u'+    ASSERT (!GetOwnerGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!GetOwnerGUID());'), (3, 1, u'+    ASSERT (!GetOwnerGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);'), (3, 1, u'+    ASSERT(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Bag::RemoveItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);'), (3, 1, u'+    ASSERT(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);'), (3, 1, u'+    ASSERT(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);'), (3, 1, u'+    ASSERT(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Bag::StoreItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);'), (3, 1, u'+    ASSERT(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);'), (3, 1, u'+    ASSERT(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(eff == player->ItemSetEff[setindex]);'), (3, 1, u'+        ASSERT(eff == player->ItemSetEff[setindex]);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RemoveItemsSetItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(eff == player->ItemSetEff[setindex]);'), (3, 1, u'+        ASSERT(eff == player->ItemSetEff[setindex]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(eff == player->ItemSetEff[setindex]);'), (3, 1, u'+        ASSERT(eff == player->ItemSetEff[setindex]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(count !=0 && "pProto->Stackable == 0 but checked at loading already");'), (3, 1, u'+        ASSERT(count !=0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Item::CreateItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(count !=0 && "pProto->Stackable == 0 but checked at loading already");'), (3, 1, u'+        ASSERT(count !=0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(count !=0 && "pProto->Stackable == 0 but checked at loading already");'), (3, 1, u'+        ASSERT(count !=0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Item::CreateItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::~WorldObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(p.second);'), (3, 1, u'+        ASSERT(p.second);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::BuildFieldsUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(p.second);'), (3, 1, u'+        ASSERT(p.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(p.second);'), (3, 1, u'+        ASSERT(p.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values);'), (3, 1, u'+    ASSERT(m_uint32Values);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::AddObjectToRemoveList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values);'), (3, 1, u'+    ASSERT(m_uint32Values);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values);'), (3, 1, u'+    ASSERT(m_uint32Values);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(creature);'), (3, 1, u'+    ASSERT(creature);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Pet::CreateBaseAtCreature
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(creature);'), (3, 1, u'+    ASSERT(creature);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(creature);'), (3, 1, u'+    ASSERT(creature);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(cinfo);'), (3, 1, u'+    ASSERT(cinfo);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Guardian::InitStatsForLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(cinfo);'), (3, 1, u'+    ASSERT(cinfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(cinfo);'), (3, 1, u'+    ASSERT(cinfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(map);'), (3, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Pet::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(map);'), (3, 1, u'+    ASSERT(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(map);'), (3, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::TeleportOutOfMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(entry);'), (3, 1, u'+    ASSERT(entry);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::CreateCorpse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(entry);'), (3, 1, u'+    ASSERT(entry);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(entry);'), (3, 1, u'+    ASSERT(entry);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(i < 3);'), (3, 1, u'+    ASSERT(i < 3);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SetVirtualItemSlot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(i < 3);'), (3, 1, u'+    ASSERT(i < 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(i < 3);'), (3, 1, u'+    ASSERT(i < 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(itr->item);'), (3, 1, u'+        ASSERT(itr->item);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::UpdateEnchantTime
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(itr->item);'), (3, 1, u'+        ASSERT(itr->item);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(itr->item);'), (3, 1, u'+        ASSERT(itr->item);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(log_slot < MAX_QUEST_LOG_SIZE);'), (3, 1, u'+    ASSERT(log_slot < MAX_QUEST_LOG_SIZE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::AddQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(log_slot < MAX_QUEST_LOG_SIZE);'), (3, 1, u'+    ASSERT(log_slot < MAX_QUEST_LOG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(log_slot < MAX_QUEST_LOG_SIZE);'), (3, 1, u'+    ASSERT(log_slot < MAX_QUEST_LOG_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                ASSERT(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (3, 1, u'+    ASSERT(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SatisfyQuestExclusiveGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (3, 1, u'+    ASSERT(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (3, 1, u'+    ASSERT(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");'), (3, 1, u'+    ASSERT(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SendQuestUpdateAddCreatureOrGo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");'), (3, 1, u'+    ASSERT(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");'), (3, 1, u'+    ASSERT(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString'), (3, 1, u'+                ASSERT(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString'), (3, 1, u'+                ASSERT(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString'), (3, 1, u'+                ASSERT(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(player_guid);'), (3, 1, u'+    ASSERT(player_guid);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::ConvertInstancesToGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(player_guid);'), (3, 1, u'+    ASSERT(player_guid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(player_guid);'), (3, 1, u'+    ASSERT(player_guid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::StopCastingCharm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(subgroup >= 0);'), (3, 1, u'+        ASSERT(subgroup >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SetGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(subgroup >= 0);'), (3, 1, u'+        ASSERT(subgroup >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(subgroup >= 0);'), (3, 1, u'+        ASSERT(subgroup >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(subgroup >= 0);'), (3, 1, u'+        ASSERT(subgroup >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SetOriginalGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(subgroup >= 0);'), (3, 1, u'+        ASSERT(subgroup >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(subgroup >= 0);'), (3, 1, u'+        ASSERT(subgroup >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (GetMap());'), (3, 1, u'+    ASSERT (GetMap());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Transport::TeleportTransport
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (GetMap());'), (3, 1, u'+    ASSERT (GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (GetMap());'), (3, 1, u'+    ASSERT (GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_attacking);'), (3, 2, u'-    assert(m_attackers.empty());'), (4, 2, u'-    assert(m_sharedVision.empty());'), (5, 2, u'-    assert(m_Controlled.empty());'), (6, 2, u'-    assert(m_appliedAuras.empty());'), (7, 2, u'-    assert(m_ownedAuras.empty());'), (8, 2, u'-    assert(m_removedAuras.empty());'), (9, 1, u'+    ASSERT(!m_attacking);'), (10, 1, u'+    ASSERT(m_attackers.empty());'), (11, 1, u'+    ASSERT(m_sharedVision.empty());'), (12, 1, u'+    ASSERT(m_Controlled.empty());'), (13, 1, u'+    ASSERT(m_appliedAuras.empty());'), (14, 1, u'+    ASSERT(m_ownedAuras.empty());'), (15, 1, u'+    ASSERT(m_removedAuras.empty());')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_attacking);'), (3, 2, u'-    assert(m_attackers.empty());'), (4, 2, u'-    assert(m_sharedVision.empty());'), (5, 2, u'-    assert(m_Controlled.empty());'), (6, 2, u'-    assert(m_appliedAuras.empty());'), (7, 2, u'-    assert(m_ownedAuras.empty());'), (8, 2, u'-    assert(m_removedAuras.empty());'), (9, 1, u'+    ASSERT(!m_attacking);'), (10, 1, u'+    ASSERT(m_attackers.empty());'), (11, 1, u'+    ASSERT(m_sharedVision.empty());'), (12, 1, u'+    ASSERT(m_Controlled.empty());'), (13, 1, u'+    ASSERT(m_appliedAuras.empty());'), (14, 1, u'+    ASSERT(m_ownedAuras.empty());'), (15, 1, u'+    ASSERT(m_removedAuras.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_attacking);'), (3, 2, u'-    assert(m_attackers.empty());'), (4, 2, u'-    assert(m_sharedVision.empty());'), (5, 2, u'-    assert(m_Controlled.empty());'), (6, 2, u'-    assert(m_appliedAuras.empty());'), (7, 2, u'-    assert(m_ownedAuras.empty());'), (8, 2, u'-    assert(m_removedAuras.empty());'), (9, 1, u'+    ASSERT(!m_attacking);'), (10, 1, u'+    ASSERT(m_attackers.empty());'), (11, 1, u'+    ASSERT(m_sharedVision.empty());'), (12, 1, u'+    ASSERT(m_Controlled.empty());'), (13, 1, u'+    ASSERT(m_appliedAuras.empty());'), (14, 1, u'+    ASSERT(m_ownedAuras.empty());'), (15, 1, u'+    ASSERT(m_removedAuras.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_procDeep);'), (3, 1, u'+    ASSERT(!m_procDeep);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_procDeep);'), (3, 1, u'+    ASSERT(!m_procDeep);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_procDeep);'), (3, 1, u'+    ASSERT(!m_procDeep);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(pVictim->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+            ASSERT(pVictim->GetTypeId() == TYPEID_PLAYER);'), (6, 2, u'-            assert(he->duel);'), (7, 1, u'+            ASSERT(he->duel);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::DealDamage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(pVictim->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+            ASSERT(pVictim->GetTypeId() == TYPEID_PLAYER);'), (6, 2, u'-            assert(he->duel);'), (7, 1, u'+            ASSERT(he->duel);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(pVictim->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+            ASSERT(pVictim->GetTypeId() == TYPEID_PLAYER);'), (6, 2, u'-            assert(he->duel);'), (7, 1, u'+            ASSERT(he->duel);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pSpell);                                         // NULL may be never passed here, use InterruptSpell or InterruptNonMeleeSpells'), (3, 1, u'+    ASSERT(pSpell);                                         // NULL may be never passed here, use InterruptSpell or InterruptNonMeleeSpells')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::SetCurrentCastedSpell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pSpell);                                         // NULL may be never passed here, use InterruptSpell or InterruptNonMeleeSpells'), (3, 1, u'+    ASSERT(pSpell);                                         // NULL may be never passed here, use InterruptSpell or InterruptNonMeleeSpells')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pSpell);                                         // NULL may be never passed here, use InterruptSpell or InterruptNonMeleeSpells'), (3, 1, u'+    ASSERT(pSpell);                                         // NULL may be never passed here, use InterruptSpell or InterruptNonMeleeSpells')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellType < CURRENT_MAX_SPELL);'), (3, 1, u'+    ASSERT(spellType < CURRENT_MAX_SPELL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::InterruptSpell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellType < CURRENT_MAX_SPELL);'), (3, 1, u'+    ASSERT(spellType < CURRENT_MAX_SPELL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellType < CURRENT_MAX_SPELL);'), (3, 1, u'+    ASSERT(spellType < CURRENT_MAX_SPELL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_cleanupDone);'), (3, 1, u'+    ASSERT(!m_cleanupDone);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_cleanupDone);'), (3, 1, u'+    ASSERT(!m_cleanupDone);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_cleanupDone);'), (3, 1, u'+    ASSERT(!m_cleanupDone);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_cleanupDone);'), (3, 1, u'+    ASSERT(!m_cleanupDone);'), (5, 2, u'-    assert(!aura->IsRemoved());'), (6, 1, u'+    ASSERT(!aura->IsRemoved());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::_CreateAuraApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_cleanupDone);'), (3, 1, u'+    ASSERT(!m_cleanupDone);'), (5, 2, u'-    assert(!aura->IsRemoved());'), (6, 1, u'+    ASSERT(!aura->IsRemoved());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_cleanupDone);'), (3, 1, u'+    ASSERT(!m_cleanupDone);'), (5, 2, u'-    assert(!aura->IsRemoved());'), (6, 1, u'+    ASSERT(!aura->IsRemoved());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aura);'), (3, 2, u'-    assert(aura->HasEffect(effIndex));'), (4, 1, u'+    ASSERT(aura);'), (5, 1, u'+    ASSERT(aura->HasEffect(effIndex));'), (7, 2, u'-    assert(aurApp);'), (8, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Unit::_ApplyAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aura);'), (3, 2, u'-    assert(aura->HasEffect(effIndex));'), (4, 1, u'+    ASSERT(aura);'), (5, 1, u'+    ASSERT(aura->HasEffect(effIndex));'), (7, 2, u'-    assert(aurApp);'), (8, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aura);'), (3, 2, u'-    assert(aura->HasEffect(effIndex));'), (4, 1, u'+    ASSERT(aura);'), (5, 1, u'+    ASSERT(aura->HasEffect(effIndex));'), (7, 2, u'-    assert(aurApp);'), (8, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp);'), (3, 2, u'-    assert(!aurApp->GetRemoveMode());'), (4, 2, u'-    assert(aurApp->GetTarget() == this);'), (5, 1, u'+    ASSERT(aurApp);'), (6, 1, u'+    ASSERT(!aurApp->GetRemoveMode());'), (7, 1, u'+    ASSERT(aurApp->GetTarget() == this);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Unit::_UnapplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp);'), (3, 2, u'-    assert(!aurApp->GetRemoveMode());'), (4, 2, u'-    assert(aurApp->GetTarget() == this);'), (5, 1, u'+    ASSERT(aurApp);'), (6, 1, u'+    ASSERT(!aurApp->GetRemoveMode());'), (7, 1, u'+    ASSERT(aurApp->GetTarget() == this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp);'), (3, 2, u'-    assert(!aurApp->GetRemoveMode());'), (4, 2, u'-    assert(aurApp->GetTarget() == this);'), (5, 1, u'+    ASSERT(aurApp);'), (6, 1, u'+    ASSERT(!aurApp->GetRemoveMode());'), (7, 1, u'+    ASSERT(aurApp->GetTarget() == this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_removedAurasCount < 0xFFFFFFFF);'), (3, 1, u'+    ASSERT(m_removedAurasCount < 0xFFFFFFFF);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_UnapplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_removedAurasCount < 0xFFFFFFFF);'), (3, 1, u'+    ASSERT(m_removedAurasCount < 0xFFFFFFFF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_removedAurasCount < 0xFFFFFFFF);'), (3, 1, u'+    ASSERT(m_removedAurasCount < 0xFFFFFFFF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!aurApp->GetEffectMask());'), (3, 1, u'+    ASSERT(!aurApp->GetEffectMask());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_UnapplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!aurApp->GetEffectMask());'), (3, 1, u'+    ASSERT(!aurApp->GetEffectMask());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!aurApp->GetEffectMask());'), (3, 1, u'+    ASSERT(!aurApp->GetEffectMask());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);'), (3, 1, u'+    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_UnapplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);'), (3, 1, u'+    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);'), (3, 1, u'+    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::_UnapplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!aura->IsRemoved());'), (3, 1, u'+    ASSERT(!aura->IsRemoved());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveOwnedAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!aura->IsRemoved());'), (3, 1, u'+    ASSERT(!aura->IsRemoved());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!aura->IsRemoved());'), (3, 1, u'+    ASSERT(!aura->IsRemoved());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aura->GetOwner() == this);'), (3, 1, u'+    ASSERT(aura->GetOwner() == this);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveOwnedAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aura->GetOwner() == this);'), (3, 1, u'+    ASSERT(aura->GetOwner() == this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aura->GetOwner() == this);'), (3, 1, u'+    ASSERT(aura->GetOwner() == this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveOwnedAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(false);'), (3, 1, u'+    ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);'), (3, 1, u'+    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);'), (3, 1, u'+    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);'), (3, 1, u'+    ASSERT(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(false);'), (3, 1, u'+                        ASSERT(false);'), (5, 2, u'-                    assert((*itr)->GetTypeId() == TYPEID_UNIT);'), (6, 1, u'+                    ASSERT((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::SetMinion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(false);'), (3, 1, u'+                        ASSERT(false);'), (5, 2, u'-                    assert((*itr)->GetTypeId() == TYPEID_UNIT);'), (6, 1, u'+                    ASSERT((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(false);'), (3, 1, u'+                        ASSERT(false);'), (5, 2, u'-                    assert((*itr)->GetTypeId() == TYPEID_UNIT);'), (6, 1, u'+                    ASSERT((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::canAttack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 1, u'+    ASSERT(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 1, u'+    ASSERT(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::TauntApply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::TauntFadeOut
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+    ASSERT(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetGUID());'), (3, 1, u'+    ASSERT(GetGUID());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetGUID());'), (3, 1, u'+    ASSERT(GetGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetGUID());'), (3, 1, u'+    ASSERT(GetGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(false);'), (3, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(false);'), (3, 1, u'+                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(false);'), (3, 1, u'+                ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetGUID());'), (3, 1, u'+    ASSERT(GetGUID());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::CleanupsBeforeDelete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetGUID());'), (3, 1, u'+    ASSERT(GetGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetGUID());'), (3, 1, u'+    ASSERT(GetGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(triggeredByAura);'), (3, 1, u'+            ASSERT(triggeredByAura);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::ProcDamageAndSpellFor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(triggeredByAura);'), (3, 1, u'+            ASSERT(triggeredByAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(triggeredByAura);'), (3, 1, u'+            ASSERT(triggeredByAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 2, u'-    assert((type == CHARM_TYPE_VEHICLE) == IsVehicle());'), (4, 1, u'+    ASSERT(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (5, 1, u'+    ASSERT((type == CHARM_TYPE_VEHICLE) == IsVehicle());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::SetCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 2, u'-    assert((type == CHARM_TYPE_VEHICLE) == IsVehicle());'), (4, 1, u'+    ASSERT(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (5, 1, u'+    ASSERT((type == CHARM_TYPE_VEHICLE) == IsVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 2, u'-    assert((type == CHARM_TYPE_VEHICLE) == IsVehicle());'), (4, 1, u'+    ASSERT(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (5, 1, u'+    ASSERT((type == CHARM_TYPE_VEHICLE) == IsVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (4, 1, u'+    ASSERT(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (5, 1, u'+    ASSERT(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::RemoveCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (4, 1, u'+    ASSERT(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (5, 1, u'+    ASSERT(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (4, 1, u'+    ASSERT(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (5, 1, u'+    ASSERT(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_vehicle);'), (3, 1, u'+    ASSERT(!m_vehicle);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::EnterVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_vehicle);'), (3, 1, u'+    ASSERT(!m_vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_vehicle);'), (3, 1, u'+    ASSERT(!m_vehicle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::ChangeSeat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_Seats.empty());'), (3, 1, u'+    ASSERT(!m_Seats.empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_Seats.empty());'), (3, 1, u'+    ASSERT(!m_Seats.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_Seats.empty());'), (3, 1, u'+    ASSERT(!m_Seats.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!itr->second.passenger);'), (3, 1, u'+        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::~Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!itr->second.passenger);'), (3, 1, u'+        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!itr->second.passenger);'), (3, 1, u'+        ASSERT(!itr->second.passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(passenger->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+            ASSERT(passenger->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::InstallAccessory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(passenger->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+            ASSERT(passenger->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(passenger->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+            ASSERT(passenger->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!seat->second.passenger);'), (3, 1, u'+        ASSERT(!seat->second.passenger);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!seat->second.passenger);'), (3, 1, u'+        ASSERT(!seat->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!seat->second.passenger);'), (3, 1, u'+        ASSERT(!seat->second.passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_usableSeatNum);'), (3, 1, u'+        ASSERT(m_usableSeatNum);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_usableSeatNum);'), (3, 1, u'+        ASSERT(m_usableSeatNum);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_usableSeatNum);'), (3, 1, u'+        ASSERT(m_usableSeatNum);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(seat != m_Seats.end());'), (3, 1, u'+    ASSERT(seat != m_Seats.end());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::RemovePassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(seat != m_Seats.end());'), (3, 1, u'+    ASSERT(seat != m_Seats.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(seat != m_Seats.end());'), (3, 1, u'+    ASSERT(seat != m_Seats.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(map != NULL);'), (3, 1, u'+    ASSERT(map != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Vehicle::RelocatePassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(map != NULL);'), (3, 1, u'+    ASSERT(map != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(map != NULL);'), (3, 1, u'+    ASSERT(map != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter->second->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(iter->second->GetType() != CORPSE_BONES);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectAccessor::GetCorpseForPlayerGUID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter->second->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(iter->second->GetType() != CORPSE_BONES);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter->second->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(iter->second->GetType() != CORPSE_BONES);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(corpse && corpse->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(corpse && corpse->GetType() != CORPSE_BONES);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectAccessor::RemoveCorpse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(corpse && corpse->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(corpse && corpse->GetType() != CORPSE_BONES);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(corpse && corpse->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(corpse && corpse->GetType() != CORPSE_BONES);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(corpse && corpse->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(corpse && corpse->GetType() != CORPSE_BONES);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectAccessor::AddCorpse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(corpse && corpse->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(corpse && corpse->GetType() != CORPSE_BONES);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(corpse && corpse->GetType() != CORPSE_BONES);'), (3, 1, u'+    ASSERT(corpse && corpse->GetType() != CORPSE_BONES);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());'), (3, 1, u'+        ASSERT(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectAccessor::AddCorpse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());'), (3, 1, u'+        ASSERT(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());'), (3, 1, u'+        ASSERT(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(obj && obj->IsInWorld());'), (3, 1, u'+            ASSERT(obj && obj->IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectAccessor::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(obj && obj->IsInWorld());'), (3, 1, u'+            ASSERT(obj && obj->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(obj && obj->IsInWorld());'), (3, 1, u'+            ASSERT(obj && obj->IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ticket);'), (3, 1, u'+    ASSERT(ticket);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectMgr::RemoveGMTicket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ticket);'), (3, 1, u'+    ASSERT(ticket);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ticket);'), (3, 1, u'+    ASSERT(ticket);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        ASSERT(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectGridRespawnMover::Visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        ASSERT(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        ASSERT(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pCreature);'), (3, 1, u'+    ASSERT(pCreature);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Group::SendLooter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pCreature);'), (3, 1, u'+    ASSERT(pCreature);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pCreature);'), (3, 1, u'+    ASSERT(pCreature);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pSrcItem);'), (3, 1, u'+    ASSERT(pSrcItem);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Guild::_CanStoreItem_InTab
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pSrcItem);'), (3, 1, u'+    ASSERT(pSrcItem);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pSrcItem);'), (3, 1, u'+    ASSERT(pSrcItem);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_playerList.empty() && m_groupList.empty());'), (3, 1, u'+    ASSERT(m_playerList.empty() && m_groupList.empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceSave::~InstanceSave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_playerList.empty() && m_groupList.empty());'), (3, 1, u'+    ASSERT(m_playerList.empty() && m_groupList.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_playerList.empty() && m_groupList.empty());'), (3, 1, u'+    ASSERT(m_playerList.empty() && m_groupList.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(map->IsDungeon());'), (3, 1, u'+        ASSERT(map->IsDungeon());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceSave::SaveToDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(map->IsDungeon());'), (3, 1, u'+        ASSERT(map->IsDungeon());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(map->IsDungeon());'), (3, 1, u'+        ASSERT(map->IsDungeon());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(fieldTokens.size() != 0);'), (3, 1, u'+    ASSERT(fieldTokens.size() != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceSaveManager::_DelHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(fieldTokens.size() != 0);'), (3, 1, u'+    ASSERT(fieldTokens.size() != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(fieldTokens.size() != 0);'), (3, 1, u'+    ASSERT(fieldTokens.size() != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(obj->m_isWorldObject);'), (4, 1, u'+        ASSERT(obj->m_isWorldObject);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Map::~Map
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(obj->m_isWorldObject);'), (4, 1, u'+        ASSERT(obj->m_isWorldObject);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(obj->m_isWorldObject);'), (4, 1, u'+        ASSERT(obj->m_isWorldObject);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ngrid != NULL);'), (3, 1, u'+    ASSERT(ngrid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ngrid != NULL);'), (3, 1, u'+    ASSERT(ngrid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ngrid != NULL);'), (3, 1, u'+    ASSERT(ngrid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::EnsureGridLoadedAtEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::EnsureGridLoaded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (player->GetMap() == this);'), (3, 1, u'+    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (player->GetMap() == this);'), (3, 1, u'+    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (player->GetMap() == this);'), (3, 1, u'+    ASSERT (player->GetMap() == this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid != NULL);'), (3, 1, u'+            ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid != NULL);'), (3, 1, u'+            ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid != NULL);'), (3, 1, u'+            ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid != NULL);'), (3, 1, u'+            ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid != NULL);'), (3, 1, u'+            ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid != NULL);'), (3, 1, u'+            ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(player);'), (3, 1, u'+    ASSERT(player);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::PlayerRelocation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(player);'), (3, 1, u'+    ASSERT(player);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(player);'), (3, 1, u'+    ASSERT(player);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(CheckGridIntegrity(creature,false));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature,false));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::CreatureRelocation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(CheckGridIntegrity(creature,false));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature,false));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(CheckGridIntegrity(creature,false));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature,false));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(CheckGridIntegrity(creature,true));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature,true));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::CreatureRelocation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(CheckGridIntegrity(creature,true));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature,true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(CheckGridIntegrity(creature,true));'), (3, 1, u'+    ASSERT(CheckGridIntegrity(creature,true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(grid != NULL);'), (3, 1, u'+    ASSERT(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i_objectsToRemove.empty());'), (3, 1, u'+        ASSERT(i_objectsToRemove.empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i_objectsToRemove.empty());'), (3, 1, u'+        ASSERT(i_objectsToRemove.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i_objectsToRemove.empty());'), (3, 1, u'+        ASSERT(i_objectsToRemove.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::setNGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);'), (3, 1, u'+            ASSERT(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Map::DelayedUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);'), (3, 1, u'+            ASSERT(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);'), (3, 1, u'+            ASSERT(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());'), (3, 1, u'+    ASSERT(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::AddObjectToRemoveList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());'), (3, 1, u'+    ASSERT(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());'), (3, 1, u'+    ASSERT(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());'), (3, 1, u'+    ASSERT(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::AddObjectToSwitchList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());'), (3, 1, u'+    ASSERT(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());'), (3, 1, u'+    ASSERT(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::AddObjectToSwitchList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::CanEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(playerBind->save == mapSave);'), (3, 1, u'+                        ASSERT(playerBind->save == mapSave);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(playerBind->save == mapSave);'), (3, 1, u'+                        ASSERT(playerBind->save == mapSave);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(playerBind->save == mapSave);'), (3, 1, u'+                        ASSERT(playerBind->save == mapSave);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!HavePlayers());'), (3, 1, u'+    ASSERT(!HavePlayers());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::UnloadAll
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!HavePlayers());'), (3, 1, u'+    ASSERT(!HavePlayers());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!HavePlayers());'), (3, 1, u'+    ASSERT(!HavePlayers());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundMap::CanEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MapInstanced::CreateInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MapInstanced::CreateInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);'), (3, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m != NULL);'), (3, 1, u'+    ASSERT(m != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MapManager::_createBaseMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m != NULL);'), (3, 1, u'+    ASSERT(m != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m != NULL);'), (3, 1, u'+    ASSERT(m != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!empty());'), (3, 1, u'+    ASSERT(!empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MotionMaster::UpdateMotion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!empty());'), (3, 1, u'+    ASSERT(!empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!empty());'), (3, 1, u'+    ASSERT(!empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(i_nextMove <= MAX_CONF_WAYPOINTS);'), (3, 1, u'+            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ConfusedMovementGenerator<T>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(i_nextMove <= MAX_CONF_WAYPOINTS);'), (3, 1, u'+            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(i_nextMove <= MAX_CONF_WAYPOINTS);'), (3, 1, u'+            ASSERT(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(node);'), (3, 1, u'+                ASSERT(node);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WaypointMovementGenerator<Creature>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(node);'), (3, 1, u'+                ASSERT(node);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(node);'), (3, 1, u'+                ASSERT(node);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(oldMap);'), (3, 1, u'+    ASSERT(oldMap);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(oldMap);'), (3, 1, u'+    ASSERT(oldMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(oldMap);'), (3, 1, u'+    ASSERT(oldMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mover != NULL);                                  // there must always be a mover'), (3, 1, u'+    ASSERT(mover != NULL);                                  // there must always be a mover')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldSession::HandleMovementOpcodes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mover != NULL);                                  // there must always be a mover'), (3, 1, u'+    ASSERT(mover != NULL);                                  // there must always be a mover')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mover != NULL);                                  // there must always be a mover'), (3, 1, u'+    ASSERT(mover != NULL);                                  // there must always be a mover')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(pet->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+                        ASSERT(pet->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldSession::HandlePetActionHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(pet->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+                        ASSERT(pet->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(pet->GetTypeId() == TYPEID_UNIT);'), (3, 1, u'+                        ASSERT(pet->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(m_spellmod->op < MAX_SPELLMOD);'), (3, 1, u'+                ASSERT(m_spellmod->op < MAX_SPELLMOD);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraEffect::CalculateSpellMod
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(m_spellmod->op < MAX_SPELLMOD);'), (3, 1, u'+                ASSERT(m_spellmod->op < MAX_SPELLMOD);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(m_spellmod->op < MAX_SPELLMOD);'), (3, 1, u'+                ASSERT(m_spellmod->op < MAX_SPELLMOD);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!mode'), (3, 1, u'+    ASSERT(!mode')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraEffect::HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!mode'), (3, 1, u'+    ASSERT(!mode')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!mode'), (3, 1, u'+    ASSERT(!mode')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp);'), (3, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraEffect::HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp);'), (3, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurApp);'), (3, 1, u'+    ASSERT(aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(caster);'), (3, 1, u'+    ASSERT(caster);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraEffect::IsPeriodicTickCrit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(caster);'), (3, 1, u'+    ASSERT(caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(caster);'), (3, 1, u'+    ASSERT(caster);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTarget() && GetBase());'), (3, 1, u'+    ASSERT(GetTarget() && GetBase());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraApplication::AuraApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTarget() && GetBase());'), (3, 1, u'+    ASSERT(GetTarget() && GetBase());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTarget() && GetBase());'), (3, 1, u'+    ASSERT(GetTarget() && GetBase());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurEff);'), (3, 2, u'-    assert(HasEffect(effIndex) == (!apply));'), (4, 2, u'-    assert((1<<effIndex) & m_effectsToApply);'), (5, 1, u'+    ASSERT(aurEff);'), (6, 1, u'+    ASSERT(HasEffect(effIndex) == (!apply));'), (7, 1, u'+    ASSERT((1<<effIndex) & m_effectsToApply);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurEff);'), (3, 2, u'-    assert(HasEffect(effIndex) == (!apply));'), (4, 2, u'-    assert((1<<effIndex) & m_effectsToApply);'), (5, 1, u'+    ASSERT(aurEff);'), (6, 1, u'+    ASSERT(HasEffect(effIndex) == (!apply));'), (7, 1, u'+    ASSERT((1<<effIndex) & m_effectsToApply);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(aurEff);'), (3, 2, u'-    assert(HasEffect(effIndex) == (!apply));'), (4, 2, u'-    assert((1<<effIndex) & m_effectsToApply);'), (5, 1, u'+    ASSERT(aurEff);'), (6, 1, u'+    ASSERT(HasEffect(effIndex) == (!apply));'), (7, 1, u'+    ASSERT((1<<effIndex) & m_effectsToApply);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!m_target->GetVisibleAura(m_slot));'), (3, 1, u'+        ASSERT(!m_target->GetVisibleAura(m_slot));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraApplication::ClientUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!m_target->GetVisibleAura(m_slot));'), (3, 1, u'+        ASSERT(!m_target->GetVisibleAura(m_slot));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!m_target->GetVisibleAura(m_slot));'), (3, 1, u'+        ASSERT(!m_target->GetVisibleAura(m_slot));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_target->GetVisibleAura(m_slot));'), (3, 1, u'+    ASSERT(m_target->GetVisibleAura(m_slot));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuraApplication::ClientUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_target->GetVisibleAura(m_slot));'), (3, 1, u'+    ASSERT(m_target->GetVisibleAura(m_slot));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_target->GetVisibleAura(m_slot));'), (3, 1, u'+    ASSERT(m_target->GetVisibleAura(m_slot));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellproto);'), (3, 2, u'-    assert(owner);'), (4, 2, u'-    assert(caster || casterGUID);'), (5, 2, u'-    assert(tryEffMask <= MAX_EFFECT_MASK);'), (6, 1, u'+    ASSERT(spellproto);'), (7, 1, u'+    ASSERT(owner);'), (8, 1, u'+    ASSERT(caster || casterGUID);'), (9, 1, u'+    ASSERT(tryEffMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Aura::TryCreate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellproto);'), (3, 2, u'-    assert(owner);'), (4, 2, u'-    assert(caster || casterGUID);'), (5, 2, u'-    assert(tryEffMask <= MAX_EFFECT_MASK);'), (6, 1, u'+    ASSERT(spellproto);'), (7, 1, u'+    ASSERT(owner);'), (8, 1, u'+    ASSERT(caster || casterGUID);'), (9, 1, u'+    ASSERT(tryEffMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellproto);'), (3, 2, u'-    assert(owner);'), (4, 2, u'-    assert(caster || casterGUID);'), (5, 2, u'-    assert(tryEffMask <= MAX_EFFECT_MASK);'), (6, 1, u'+    ASSERT(spellproto);'), (7, 1, u'+    ASSERT(owner);'), (8, 1, u'+    ASSERT(caster || casterGUID);'), (9, 1, u'+    ASSERT(tryEffMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellproto);'), (3, 2, u'-    assert(owner);'), (4, 2, u'-    assert(caster || casterGUID);'), (5, 1, u'+    ASSERT(spellproto);'), (6, 1, u'+    ASSERT(owner);'), (7, 1, u'+    ASSERT(caster || casterGUID);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Aura::TryCreate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellproto);'), (3, 2, u'-    assert(owner);'), (4, 2, u'-    assert(caster || casterGUID);'), (5, 1, u'+    ASSERT(spellproto);'), (6, 1, u'+    ASSERT(owner);'), (7, 1, u'+    ASSERT(caster || casterGUID);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(spellproto);'), (3, 2, u'-    assert(owner);'), (4, 2, u'-    assert(caster || casterGUID);'), (5, 1, u'+    ASSERT(spellproto);'), (6, 1, u'+    ASSERT(owner);'), (7, 1, u'+    ASSERT(caster || casterGUID);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(effMask);'), (3, 2, u'-    assert(spellproto);'), (4, 2, u'-    assert(owner);'), (5, 2, u'-    assert(caster || casterGUID);'), (6, 2, u'-    assert(effMask <= MAX_EFFECT_MASK);'), (7, 1, u'+    ASSERT(effMask);'), (8, 1, u'+    ASSERT(spellproto);'), (9, 1, u'+    ASSERT(owner);'), (10, 1, u'+    ASSERT(caster || casterGUID);'), (11, 1, u'+    ASSERT(effMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Aura::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(effMask);'), (3, 2, u'-    assert(spellproto);'), (4, 2, u'-    assert(owner);'), (5, 2, u'-    assert(caster || casterGUID);'), (6, 2, u'-    assert(effMask <= MAX_EFFECT_MASK);'), (7, 1, u'+    ASSERT(effMask);'), (8, 1, u'+    ASSERT(spellproto);'), (9, 1, u'+    ASSERT(owner);'), (10, 1, u'+    ASSERT(caster || casterGUID);'), (11, 1, u'+    ASSERT(effMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(effMask);'), (3, 2, u'-    assert(spellproto);'), (4, 2, u'-    assert(owner);'), (5, 2, u'-    assert(caster || casterGUID);'), (6, 2, u'-    assert(effMask <= MAX_EFFECT_MASK);'), (7, 1, u'+    ASSERT(effMask);'), (8, 1, u'+    ASSERT(spellproto);'), (9, 1, u'+    ASSERT(owner);'), (10, 1, u'+    ASSERT(caster || casterGUID);'), (11, 1, u'+    ASSERT(effMask <= MAX_EFFECT_MASK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_applications.empty());'), (3, 1, u'+    ASSERT(m_applications.empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::~Aura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_applications.empty());'), (3, 1, u'+    ASSERT(m_applications.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_applications.empty());'), (3, 1, u'+    ASSERT(m_applications.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 2, u'-    assert(auraApp);'), (4, 1, u'+    ASSERT(target);'), (5, 1, u'+    ASSERT(auraApp);'), (7, 2, u'-    assert (m_applications.find(target->GetGUID()) == m_applications.end());'), (8, 1, u'+    ASSERT (m_applications.find(target->GetGUID()) == m_applications.end());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Aura::_ApplyForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 2, u'-    assert(auraApp);'), (4, 1, u'+    ASSERT(target);'), (5, 1, u'+    ASSERT(auraApp);'), (7, 2, u'-    assert (m_applications.find(target->GetGUID()) == m_applications.end());'), (8, 1, u'+    ASSERT (m_applications.find(target->GetGUID()) == m_applications.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 2, u'-    assert(auraApp);'), (4, 1, u'+    ASSERT(target);'), (5, 1, u'+    ASSERT(auraApp);'), (7, 2, u'-    assert (m_applications.find(target->GetGUID()) == m_applications.end());'), (8, 1, u'+    ASSERT (m_applications.find(target->GetGUID()) == m_applications.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 2, u'-    assert(auraApp->GetRemoveMode());'), (4, 2, u'-    assert(auraApp);'), (5, 1, u'+    ASSERT(target);'), (6, 1, u'+    ASSERT(auraApp->GetRemoveMode());'), (7, 1, u'+    ASSERT(auraApp);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Aura::_UnapplyForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 2, u'-    assert(auraApp->GetRemoveMode());'), (4, 2, u'-    assert(auraApp);'), (5, 1, u'+    ASSERT(target);'), (6, 1, u'+    ASSERT(auraApp->GetRemoveMode());'), (7, 1, u'+    ASSERT(auraApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);'), (3, 2, u'-    assert(auraApp->GetRemoveMode());'), (4, 2, u'-    assert(auraApp);'), (5, 1, u'+    ASSERT(target);'), (6, 1, u'+    ASSERT(auraApp->GetRemoveMode());'), (7, 1, u'+    ASSERT(auraApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_isRemoved);'), (3, 1, u'+    ASSERT (!m_isRemoved);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::_Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_isRemoved);'), (3, 1, u'+    ASSERT (!m_isRemoved);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_isRemoved);'), (3, 1, u'+    ASSERT (!m_isRemoved);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::UpdateTargetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::UpdateTargetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == itr->first) || GetOwner()->IsInMap(itr->first));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == *itr) || GetOwner()->IsInMap(*itr));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == *itr) || GetOwner()->IsInMap(*itr));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::_ApplyEffectForTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == *itr) || GetOwner()->IsInMap(*itr));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == *itr) || GetOwner()->IsInMap(*itr));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert((!GetOwner()->IsInWorld() && GetOwner() == *itr) || GetOwner()->IsInMap(*itr));'), (3, 1, u'+            ASSERT((!GetOwner()->IsInWorld() && GetOwner() == *itr) || GetOwner()->IsInMap(*itr));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner == m_owner);'), (3, 1, u'+    ASSERT(owner == m_owner);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::UpdateOwner
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner == m_owner);'), (3, 1, u'+    ASSERT(owner == m_owner);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(owner == m_owner);'), (3, 1, u'+    ASSERT(owner == m_owner);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_isSingleTarget);'), (3, 1, u'+    ASSERT(m_isSingleTarget);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::UnregisterSingleTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_isSingleTarget);'), (3, 1, u'+    ASSERT(m_isSingleTarget);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_isSingleTarget);'), (3, 1, u'+    ASSERT(m_isSingleTarget);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!IsRemoved());'), (3, 1, u'+    ASSERT (!IsRemoved());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::RecalculateAmountOfEffects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!IsRemoved());'), (3, 1, u'+    ASSERT (!IsRemoved());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!IsRemoved());'), (3, 1, u'+    ASSERT (!IsRemoved());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!IsRemoved());'), (3, 1, u'+    ASSERT (!IsRemoved());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::HandleAllEffects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!IsRemoved());'), (3, 1, u'+    ASSERT (!IsRemoved());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!IsRemoved());'), (3, 1, u'+    ASSERT (!IsRemoved());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetOwner() != target);'), (3, 1, u'+    ASSERT(GetOwner() != target);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Aura::CheckAreaTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetOwner() != target);'), (3, 1, u'+    ASSERT(GetOwner() != target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetOwner() != target);'), (3, 1, u'+    ASSERT(GetOwner() != target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_caster->ToPlayer()->m_spellModTakingSpell != this);'), (3, 1, u'+        ASSERT(m_caster->ToPlayer()->m_spellModTakingSpell != this);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::~Spell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_caster->ToPlayer()->m_spellModTakingSpell != this);'), (3, 1, u'+        ASSERT(m_caster->ToPlayer()->m_spellModTakingSpell != this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_caster->ToPlayer()->m_spellModTakingSpell != this);'), (3, 1, u'+        ASSERT(m_caster->ToPlayer()->m_spellModTakingSpell != this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (aurSpellInfo);'), (3, 1, u'+            ASSERT (aurSpellInfo);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::DoSpellHitOnUnit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (aurSpellInfo);'), (3, 1, u'+            ASSERT (aurSpellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (aurSpellInfo);'), (3, 1, u'+            ASSERT (aurSpellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(unitTarget == m_spellAura->GetOwner());'), (3, 1, u'+    ASSERT(unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::EffectApplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(unitTarget == m_spellAura->GetOwner());'), (3, 1, u'+    ASSERT(unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(unitTarget == m_spellAura->GetOwner());'), (3, 1, u'+    ASSERT(unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (unitTarget == m_spellAura->GetOwner());'), (3, 1, u'+    ASSERT (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::EffectApplyAreaAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (unitTarget == m_spellAura->GetOwner());'), (3, 1, u'+    ASSERT (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (unitTarget == m_spellAura->GetOwner());'), (3, 1, u'+    ASSERT (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::EffectPersistentAA
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);'), (3, 1, u'+            ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_spellAura->GetDynobjOwner());'), (3, 1, u'+    ASSERT(m_spellAura->GetDynobjOwner());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::EffectPersistentAA
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_spellAura->GetDynobjOwner());'), (3, 1, u'+    ASSERT(m_spellAura->GetDynobjOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_spellAura->GetDynobjOwner());'), (3, 1, u'+    ASSERT(m_spellAura->GetDynobjOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(OldSummon->GetMap() == owner->GetMap());'), (3, 1, u'+            ASSERT(OldSummon->GetMap() == owner->GetMap());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::EffectSummonPet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(OldSummon->GetMap() == owner->GetMap());'), (3, 1, u'+            ASSERT(OldSummon->GetMap() == owner->GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(OldSummon->GetMap() == owner->GetMap());'), (3, 1, u'+            ASSERT(OldSummon->GetMap() == owner->GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(GetDynobjOwner());'), (3, 1, u'+    ASSERT(GetDynobjOwner()->IsInWorld());'), (4, 1, u'+    ASSERT(GetDynobjOwner()->GetMap() == caster->GetMap());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: DynObjAura::DynObjAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(GetDynobjOwner());'), (3, 1, u'+    ASSERT(GetDynobjOwner()->IsInWorld());'), (4, 1, u'+    ASSERT(GetDynobjOwner()->GetMap() == caster->GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(GetDynobjOwner());'), (3, 1, u'+    ASSERT(GetDynobjOwner()->IsInWorld());'), (4, 1, u'+    ASSERT(GetDynobjOwner()->GetMap() == caster->GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: SpellEvent::~SpellEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT(false);')]
===========================================
Class: class spell_hun_last_stand_pet_SpellScript : public SpellScript { 
Class: class spell_hun_masters_call_SpellScript : public SpellScript { 
Class: class spell_hun_readiness_SpellScript : public SpellScript { 
Class: class spell_pri_penance_SpellScript : public SpellScript { 
Class: class spell_rog_cheat_death_SpellScript : public SpellScript { 
Class: class spell_rog_hunger_for_blood_SpellScript : public SpellScript { 
Class: class spell_rog_preparation_SpellScript : public SpellScript { 
Class: class spell_rog_shiv_SpellScript : public SpellScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::BuildPlayerRepop
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        ASSERT(false);')]
===========================================
===========================================
Total add: 0
Total del: 17
Header: Spell::DoAllEffectOnTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        ASSERT(false);')]
===========================================
Class: class spell_mage_cold_snap_SpellScript : public SpellScript { 
Class: class spell_mage_polymorph_cast_visual_SpellScript : public SpellScript { 
Class: class spell_mage_summon_water_elemental_SpellScript : public SpellScript { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-                ASSERT(targetFaction != NULL);'), (95, 2, u'-                ASSERT(targetFaction != NULL);'), (102, 2, u'-            ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 40
Total del: 65
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-                ASSERT(targetFaction != NULL);'), (95, 2, u'-                ASSERT(targetFaction != NULL);'), (102, 2, u'-            ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-                ASSERT(targetFaction != NULL);'), (95, 2, u'-                ASSERT(targetFaction != NULL);'), (102, 2, u'-            ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Total add: 17
Total del: 0
Header: Spell::DoAllEffectOnTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(creature);')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: Pet::CreateBaseAtCreature
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(creature);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(creature);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: WorldSession::HandleSpellClick
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(false);')]
===========================================
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(GetOwner() != target);'), (5, 1, u'+    assert(GetOwner() != target);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Aura::CheckAreaTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(GetOwner() != target);'), (5, 1, u'+    assert(GetOwner() != target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(GetOwner() != target);'), (5, 1, u'+    assert(GetOwner() != target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(GetOwner() != target);')]
===========================================
===========================================
Total add: 37
Total del: 3
Header: Aura::HandleAuraSpecificMods
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(GetOwner() != target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(GetOwner() != target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::CanEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::CanEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 1, u'+\t\tassert(m->coldp != NULL);'), (143, 1, u'+\t\t\tassert(m->coldp < m->endp);'), (180, 1, u'+\t\tassert(g->backrefs);\t/* must be back references doing it */'), (181, 1, u'+\t\tassert(g->nplus == 0 || m->lastpos != NULL);'), (192, 1, u'+\t\t\t\tassert(m->pmatch[i].rm_so == -1);'), (193, 1, u'+\t\t\t\tassert(m->pmatch[i].rm_eo == -1);'), (199, 1, u'+\t\tassert(dp == NULL || dp == endp);'), (206, 1, u'+\t\tassert(start <= stop);'), (215, 1, u'+\t\tassert(m->pmatch != NULL);'), (281, 1, u'+\t\t\tassert(nope);'), (297, 1, u'+\t\t\tassert(nope);'), (305, 1, u'+\t\t\t\tassert(rest != NULL);\t/* it did match */'), (312, 1, u'+\t\t\t\tassert(stp >= sp);\t/* it did work */'), (319, 1, u'+\t\t\t\tassert(dp == rest);'), (321, 1, u'+\t\t\t\tassert(sp == rest);'), (329, 1, u'+\t\t\t\tassert(rest != NULL);\t/* it did match */'), (336, 1, u'+\t\t\t\tassert(stp >= sp);\t/* it did work */'), (354, 1, u'+\t\t\tassert(sep == rest);\t/* must exhaust substring */'), (355, 1, u'+\t\t\tassert(slow(charset, m, ssp, sep, ssub, esub) == rest);'), (357, 1, u'+\t\t\tassert(dp == sep);'), (365, 1, u'+\t\t\t\tassert(rest != NULL);\t/* it did match */'), (372, 1, u'+\t\t\t\tassert(stp >= sp);\t/* it did work */'), (376, 1, u'+\t\t\tassert(OP(m->g->strip[esub]) == OOR1);'), (381, 1, u'+\t\t\t\tassert(OP(m->g->strip[esub]) == OOR1);'), (383, 1, u'+\t\t\t\tassert(OP(m->g->strip[esub]) == OOR2);'), (389, 1, u'+\t\t\t\t\tassert(OP(m->g->strip[esub]) == O_CH);'), (392, 1, u'+\t\t\tassert(dp == rest);'), (400, 1, u'+\t\t\tassert(nope);'), (404, 1, u'+\t\t\tassert(0 < i && i <= m->g->nsub);'), (409, 1, u'+\t\t\tassert(0 < i && i <= m->g->nsub);'), (413, 1, u'+\t\t\tassert(nope);'), (418, 1, u'+\tassert(sp == stop);'), (514, 1, u'+\t\t\t\tassert(OP(s) == OOR2);'), (536, 1, u'+\t\tassert(0 < i && i <= m->g->nsub);'), (539, 1, u'+\t\tassert(m->pmatch[i].rm_so != -1);'), (541, 1, u'+\t\tassert((size_t) (stop - m->beginp) >= len);'), (558, 1, u'+\t\tassert(m->lastpos != NULL);'), (559, 1, u'+\t\tassert(lev+1 <= m->g->nplus);'), (577, 1, u'+\t\tassert(OP(m->g->strip[esub]) == OOR1);'), (586, 1, u'+\t\t\tassert(OP(m->g->strip[esub]) == OOR2);'), (592, 1, u'+\t\t\t\tassert(OP(m->g->strip[esub]) == O_CH);'), (597, 1, u'+\t\tassert(0 < i && i <= m->g->nsub);'), (608, 1, u'+\t\tassert(0 < i && i <= m->g->nsub);'), (618, 1, u'+\t\tassert(nope);'), (623, 1, u'+\tassert(nope);'), (705, 1, u'+\t\tassert(c != OUT);'), (708, 1, u'+\t\tassert(EQ(step(m->g, startst, stopst, st, NOTHING, st), st));'), (712, 1, u'+\tassert(coldp != NULL);'), (797, 1, u'+\t\tassert(c != OUT);'), (800, 1, u'+\t\tassert(EQ(step(m->g, startst, stopst, st, NOTHING, st), st));'), (842, 1, u'+\t\t\tassert(pc == stop-1);'), (846, 1, u'+\t\t\tassert(!NONCHAR(ch) || ch != (char)OPND(s));'), (905, 1, u'+\t\t\tassert(OP(g->strip[pc+OPND(s)]) == OOR2);'), (913, 1, u'+\t\t\t\t\tassert(OP(s) == OOR2);'), (920, 1, u'+\t\t\t\tassert(OP(g->strip[pc+OPND(s)]) == OOR2);'), (928, 1, u'+\t\t\tassert(nope);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(489, 1, u'+\tassert(len <= sizeof(epbuf));'), (505, 1, u'+\tassert(strlen(efbuf) < sizeof(efbuf));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(197, 1, u'+\t\tSETERROR(REG_ASSERT);'), (249, 1, u'+\tassert(!MORE() || SEE(stop));'), (267, 1, u'+\tassert(MORE());\t\t/* caller should have ensured this */'), (283, 1, u'+\t\t\tassert(p->pend[subno] != 0);'), (476, 1, u'+\tassert(MORE());\t\t/* caller should have ensured this */'), (506, 1, u'+\t\t\tassert(p->pend[subno] != 0);'), (525, 1, u'+\t\tassert(i < NPAREN);'), (527, 1, u'+\t\t\tassert((uint) i <= p->g->nsub);'), (529, 1, u'+\t\t\tassert(p->pbegin[i] != 0);'), (530, 1, u'+\t\t\tassert(OP(p->strip[p->pbegin[i]]) == OLPAREN);'), (531, 1, u'+\t\t\tassert(OP(p->strip[p->pend[i]]) == ORPAREN);'), (663, 1, u'+\tassert(cs->multis == NULL);\t\t/* xxx */'), (874, 1, u'+\tassert(my_isalpha(charset,ch));'), (904, 1, u'+\tassert(othercase(p->charset, ch) != ch); /* p_bracket() would recurse */'), (911, 1, u'+\tassert(p->next == bracket+2);'), (958, 1, u'+\tassert(p->next == bracket+3);'), (984, 1, u'+\tassert(from <= to);'), (1014, 1, u'+\t\tassert(copy == finish+4);'), (1030, 1, u'+\t\tSETERROR(REG_ASSERT);\t/* just in case */'), (1069, 1, u'+\t\tassert(nc % CHAR_BIT == 0);'), (1095, 1, u'+\tassert(p->g->sets != NULL);\t/* xxx */'), (1180, 1, u'+\tassert(never);'), (1245, 1, u'+\tassert(fp != NULL);'), (1257, 1, u'+\tassert(cs->multis != NULL);'), (1304, 1, u'+\tassert(cs->multis == NULL);\t/* xxx */'), (1319, 1, u'+\tassert(cs->multis == NULL);\t/* xxx */'), (1405, 1, u'+\tassert(finish >= start);'), (1409, 1, u'+\tassert(p->ssize >= p->slen + len);'), (1435, 1, u'+\tassert(opnd < 1<<OPSHIFT);'), (1440, 1, u'+\tassert(p->slen < p->ssize);'), (1467, 1, u'+\tassert(HERE() == sn+1);'), (1471, 1, u'+\tassert(pos > 0);'), (1507, 1, u'+\tassert(value < 1<<OPSHIFT);'), (1631, 1, u'+\t\tassert(cp < g->must + g->mlen);'), (1634, 1, u'+\tassert(cp == g->must + g->mlen);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(129, 1, u'+\tassert(!(g->iflags&BAD));')]
===========================================
Class:			class = (CHARBITS & *(regparse - 2)) + 1;
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+    assert(i < limit);'), (85, 1, u'+    assert(!buffer_);       // find realloc error'), (143, 1, u'+    assert (i == AUTO);'), (240, 1, u'+    assert(!buffer_);   // find realloc error'), (256, 1, u'+    assert(i == AUTO);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(329, 1, u'+    assert(peerX509_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(1099, 1, u'+    assert(keyOutput == (keyLen + ivLen));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+            base.ca_, 0) != SSL_SUCCESS) assert(0);'), (75, 1, u'+            base.cert_, SSL_FILETYPE_PEM) != SSL_SUCCESS) assert(0);'), (78, 1, u'+            SSL_FILETYPE_PEM) != SSL_SUCCESS) assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(930, 1, u'+    assert(write_buffer_ == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 1, u'+    assert( (keylen == 16) || (keylen == 24) || (keylen == 32) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(250, 1, u'+        assert(expBegin->NotNegative());')]
===========================================
Class:class BadCertificate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 1, u'+\tassert(keylength >= 4 && keylength <= 56);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+    assert((bytes % 2) == 0);'), (108, 1, u'+        assert( b  < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (109, 1, u'+        assert( b2 < sizeof(hexDecode)/sizeof(hexDecode[0]) );'), (114, 1, u'+        assert( b != bad && b2 != bad );'), (177, 1, u'+    assert(i == outSz);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+    assert(!!r_ && !!s_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+    assert(digSz  <= MaxDigestSz);'), (35, 1, u'+    assert(buffSz <= MaxBufferSz);'), (116, 1, u'+    assert(digSz  <= MaxDigestSz);'), (117, 1, u'+    assert(buffSz <= MaxBufferSz);')]
===========================================
Class:class DWord { class DWord 
Class:  class Word { class Word 
Class:    template <class S, class D> S DivideThreeWordsByTwo(S* A, S B0, S B1, D* dummy_VC6_WorkAround = 0) { 
Class:    class Portable { 
Class:   class PentiumOptimized : public Portable { 
Class: class P4Optimized { 
Class:  class LowLevel : public PentiumOptimized { 
Class:class BadBER 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    assert(modn.Exponentiate(y, e_) == x);  // check'), (127, 1, u'+    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);'), (182, 1, u'+    assert(i==pkcsBlockLen || pkcsBlock[i-1]==0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 1, u'+\tassert(keylen >= 16 && keylen <= 32);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(floor < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: namespace VMAP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(floor < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                ASSERT(floor < std::numeric_limits<float>::max());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    #define ASSERT(x)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: namespace VMAP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: namespace VMAP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: namespace VMAP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: namespace VMAP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT(maxDist < std::numeric_limits<float>::max());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 1, u'+        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 1, u'+            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 1, u'+    debugAssert(data);'), (219, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 1, u'+    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 1, u'+    assert(plane.size() < 31);'), (228, 1, u'+\tassert(plane.size() < 31);'), (358, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+        alwaysAssertM(m_data, "Corrupt placeholder");'), (135, 1, u'+    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (140, 1, u'+        debugAssert(value.s != NULL);'), (145, 1, u'+        debugAssert(value.a != NULL);'), (150, 1, u'+        debugAssert(value.t != NULL);'), (156, 1, u'+        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (253, 1, u'+    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (338, 1, u'+        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (439, 1, u'+    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (465, 1, u'+    debugAssert(m_data != NULL);'), (483, 1, u'+    debugAssert(m_data != NULL);'), (492, 1, u'+    debugAssert(m_data != NULL);'), (500, 1, u'+    debugAssert(m_data != NULL);'), (532, 1, u'+    debugAssert(m_data != NULL);'), (540, 1, u'+    debugAssert(m_data != NULL);'), (582, 1, u'+    debugAssert(m_data != NULL);'), (617, 1, u'+        debugAssert(m_data != NULL);'), (624, 1, u'+        debugAssert(m_data != NULL);'), (644, 1, u'+        debugAssert(m_data != NULL);'), (661, 1, u'+        alwaysAssertM(false, "Unknown type.");'), (777, 1, u'+        debugAssert(m_data != NULL);'), (782, 1, u'+        debugAssert(m_data != NULL);'), (819, 1, u'+        debugAssert(m_data != NULL);'), (880, 1, u'+    debugAssert(token.type() == Token::SYMBOL);'), (1231, 1, u'+        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 1, u'+        debugAssert(m_freeBuffer);'), (152, 1, u'+        debugAssert(file);'), (154, 1, u'+        debugAssert(ret == 0);'), (157, 1, u'+        debugAssert(ret == toRead);'), (163, 1, u'+        debugAssert(file);'), (165, 1, u'+        debugAssert(ret == 0);'), (168, 1, u'+        debugAssert((size_t)ret == (size_t)toRead);'), (174, 1, u'+    debugAssert(m_pos >= 0);'), (229, 1, u'+        debugAssert(m_freeBuffer);'), (237, 1, u'+        debugAssert(result == Z_OK); (void)result;'), (243, 1, u'+ \t        debugAssert(!m_freeBuffer);'), (246, 1, u'+\t        debugAssert(m_freeBuffer);'), (316, 1, u'+    debugAssert(m_freeBuffer);'), (330, 1, u'+    debugAssert(m_buffer);'), (354, 1, u'+    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 1, u'+    debugAssert(m_buffer);'), (360, 1, u'+    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 1, u'+    debugAssert(isValidHeapPointer(m_buffer));'), (368, 1, u'+    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 1, u'+    debugAssert(isValidPointer(bytes));'), (417, 1, u'+    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 1, u'+    assert(s != NULL);'), (521, 1, u'+    debugAssert(m_beginEndBits == 0);'), (525, 1, u'+    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 1, u'+    debugAssert(m_beginEndBits == 1);'), (559, 1, u'+    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (153, 1, u'+        debugAssert(writeBytes > 0);'), (159, 1, u'+        debugAssert(file);'), (162, 1, u'+        debugAssert((int)count == writeBytes); (void)count;'), (172, 1, u'+        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 1, u'+        debugAssert(m_bufferLen >= 0);'), (174, 1, u'+        debugAssert(m_pos >= 0);'), (175, 1, u'+        debugAssert(m_pos <= m_bufferLen);'), (178, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (180, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (232, 1, u'+    debugAssert(m_beginEndBits == 0);'), (233, 1, u'+    alwaysAssertM(m_filename == "<memory>",'), (248, 1, u'+    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 1, u'+    debugAssert(result == Z_OK); (void)result;'), (310, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 1, u'+    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 1, u'+        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (338, 1, u'+            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (351, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (379, 1, u'+    debugAssert(m_beginEndBits == 0);'), (420, 1, u'+    debugAssert(m_beginEndBits == 0);'), (485, 1, u'+    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (513, 1, u'+    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssert('), (118, 1, u'+    debugAssert(! isNaN(_extent.x));'), (191, 1, u'+        debugAssert((f >= 0) && (f < 6));'), (206, 1, u'+    assert(plane.size() < 31);'), (265, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+    debugAssert(separatingAxisIndex >= 0);'), (50, 1, u'+    debugAssert(separatingAxisIndex < 15);'), (176, 1, u'+        debugAssertM(false, "fell through switch statement");'), (365, 1, u'+    debugAssert(lastSeparatingAxis >= -1);'), (366, 1, u'+    debugAssert(lastSeparatingAxis < 15);'), (627, 1, u'+            debugAssertM(false,'), (758, 1, u'+        debugAssertM(false, "Fell through switch");'), (897, 1, u'+    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 1, u'+            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 1, u'+            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 1, u'+            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 1, u'+                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 1, u'+    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 1, u'+    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 1, u'+        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 1, u'+        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 1, u'+        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 1, u'+        debugAssertM(false, "Should not get here.");'), (2055, 1, u'+    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(270, 1, u'+        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 1, u'+    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 1, u'+    assert((0 <= iCol) && (iCol < 3));'), (200, 1, u'+    assert((0 <= iRow) && (iRow < 3));'), (206, 1, u'+    debugAssert((iCol >= 0) && (iCol < 3));'), (214, 1, u'+    debugAssert((iRow >= 0) && (iRow < 3));'), (1075, 1, u'+    assert(iter < MAX_ITERS);'), (1080, 1, u'+    assert(resid < eps);'), (1085, 1, u'+    assert(resid < eps);'), (1090, 1, u'+    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (207, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (217, 1, u'+    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (218, 1, u'+    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (219, 1, u'+    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (220, 1, u'+    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (221, 1, u'+    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (222, 1, u'+    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (223, 1, u'+    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (224, 1, u'+    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (225, 1, u'+    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (226, 1, u'+    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    debugAssertM(isValidHeapPointer(this),'), (49, 1, u'+    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 1, u'+\tassert(numPlanes < 31);'), (165, 1, u'+\tassert(numPlanes < 31);')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(753, 1, u'+    debugAssertM(false,'), (1056, 1, u'+        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+    debugAssert(option.numColumns > 1);'), (239, 1, u"+            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 1, u'+    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 1, u'+        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(211, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (231, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+AssertionHook _debugHook = _handleDebugAssert_;'), (37, 1, u'+AssertionHook _failureHook = _handleErrorCheck_;'), (134, 1, u'+bool _handleDebugAssert_('), (305, 1, u'+void setAssertionHook(AssertionHook hook) {'), (309, 1, u'+AssertionHook assertionHook() {'), (313, 1, u'+void setFailureHook(AssertionHook hook) {'), (317, 1, u'+AssertionHook failureHook() {')]
===========================================
Class:class FileSystemCache { class FileSystemCache 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+      debugAssert(heapBuffer);'), (142, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(125, 2, u'-\tassert(plane.size() < 31);'), (204, 2, u'-\tassert(plane.size() < 31);'), (334, 2, u'-        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(172, 2, u'-        debugAssertM(false, "Cannot construct AnyVal from constants except ARRAY or TABLE.");'), (275, 2, u'-        debugAssertM(false, "Internal error: no destructor for this type.");'), (360, 2, u'-        debugAssertM(false, "Internal error: no assignment operator for this type.");'), (558, 2, u'-        debugAssertM(false, "Internal error: no serialize method for this type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 2, u'-        debugAssert(m_freeBuffer);'), (152, 2, u'-        debugAssert(file);'), (154, 2, u'-        debugAssert(ret == 0);'), (157, 2, u'-        debugAssert(ret == toRead);'), (163, 2, u'-        debugAssert(file);'), (165, 2, u'-        debugAssert(ret == 0);'), (168, 2, u'-        debugAssert((size_t)ret == (size_t)toRead);'), (174, 2, u'-    debugAssert(m_pos >= 0);'), (229, 2, u'-        debugAssert(m_freeBuffer);'), (237, 2, u'-        debugAssert(result == Z_OK); (void)result;'), (243, 2, u'- \t        debugAssert(!m_freeBuffer);'), (246, 2, u'-\t        debugAssert(m_freeBuffer);'), (316, 2, u'-    debugAssert(m_freeBuffer);'), (330, 2, u'-    debugAssert(m_buffer);'), (354, 2, u'-    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 2, u'-    debugAssert(m_buffer);'), (360, 2, u'-    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 2, u'-    debugAssert(isValidHeapPointer(m_buffer));'), (368, 2, u'-    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 2, u'-    debugAssert(isValidPointer(bytes));'), (417, 2, u'-    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 2, u'-    assert(s != NULL);'), (521, 2, u'-    debugAssert(m_beginEndBits == 0);'), (525, 2, u'-    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 2, u'-    debugAssert(m_beginEndBits == 1);'), (559, 2, u'-    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (153, 2, u'-        debugAssert(writeBytes > 0);'), (159, 2, u'-        debugAssert(file);'), (162, 2, u'-        debugAssert((int)count == writeBytes); (void)count;'), (172, 2, u'-        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 2, u'-        debugAssert(m_bufferLen >= 0);'), (174, 2, u'-        debugAssert(m_pos >= 0);'), (175, 2, u'-        debugAssert(m_pos <= m_bufferLen);'), (178, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (180, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (232, 2, u'-    debugAssert(m_beginEndBits == 0);'), (233, 2, u'-    alwaysAssertM(m_filename == "<memory>",'), (248, 2, u'-    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 2, u'-    debugAssert(result == Z_OK); (void)result;'), (310, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 2, u'-    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 2, u'-        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (347, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (375, 2, u'-    debugAssert(m_beginEndBits == 0);'), (416, 2, u'-    debugAssert(m_beginEndBits == 0);'), (481, 2, u'-    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (509, 2, u'-    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-    debugAssert('), (118, 2, u'-    debugAssert(! isNaN(_extent.x));'), (191, 2, u'-        debugAssert((f >= 0) && (f < 6));'), (206, 2, u'-\tassert(plane.size() < 31);'), (265, 2, u'-\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    debugAssert(separatingAxisIndex >= 0);'), (40, 2, u'-    debugAssert(separatingAxisIndex < 15);'), (166, 2, u'-        debugAssertM(false, "fell through switch statement");'), (355, 2, u'-    debugAssert(lastSeparatingAxis >= -1);'), (356, 2, u'-    debugAssert(lastSeparatingAxis < 15);'), (617, 2, u'-            debugAssertM(false,'), (748, 2, u'-        debugAssertM(false, "Fell through switch");'), (1540, 2, u'-            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1541, 2, u'-            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1542, 2, u'-            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1547, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1592, 2, u'-                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1598, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation),'), (1786, 2, u'-    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1787, 2, u'-    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1870, 2, u'-        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1873, 2, u'-        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1874, 2, u'-        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (1918, 2, u'-        debugAssertM(false, "Should not get here.");'), (1935, 2, u'-    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(218, 2, u'-\tdebugAssertM((_hsv.x <= 1.0f && _hsv.x >= 0.0f)'), (246, 2, u'-\t\tdebugAssertM(false, "fell through switch..");'), (253, 2, u'-\tdebugAssertM((_rgb.r <= 1.0f && _rgb.r >= 0.0f)'), (288, 2, u'-\tdebugAssertM(val <= 1.0f && val >= 0.0f , "value should be in [0,1]");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    debugAssert(angle >= 0);'), (26, 2, u'-    debugAssert(angle <= pi());'), (43, 2, u'-        debugAssert(dp > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(171, 2, u'-        debugAssertM(count < 2, "Convex polygons may only intersect planes at two edges.");'), (180, 2, u'-    debugAssertM((count == 2) || (count == 0), "Convex polygons may only intersect planes at two edges.");'), (369, 2, u'-        debugAssert(numVertices >= 3);'), (393, 2, u'-            debugAssertM(distance < 0.02, "Edge missing while closing polygon.");'), (406, 2, u'-    debugAssert((above.face.length() == 0) || (above.face.length() >= 4));'), (407, 2, u'-    debugAssert((below.face.length() == 0) || (below.face.length() >= 4));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(215, 2, u'-        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    debugAssert((angle < pi()) && (angle > 0));'), (375, 2, u'-    debugAssert(nearPlaneZ() < 0.0f);'), (377, 2, u'-    debugAssert(farPlaneZ() < 0.0f);'), (387, 2, u'-    debugAssert(m_nearPlaneZ < 0.0f);'), (389, 2, u'-    debugAssert(m_farPlaneZ < 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 2, u'-    alwaysAssertM(temp != NULL, "Out of memory");'), (170, 2, u'-    alwaysAssertM(temp != NULL, "Out of memory");'), (226, 2, u'-        debugAssert(false);'), (229, 2, u'-    debugAssert(width >= 0);'), (230, 2, u'-    debugAssert(height >= 0);'), (231, 2, u'-    debugAssert(channels == 1 || channels == 3 || channels == 4);'), (232, 2, u'-    debugAssert(_byte != NULL);'), (306, 2, u'-                        debugAssert(p < width * height);'), (421, 2, u'-    debugAssert(data != NULL);'), (489, 2, u'-        alwaysAssertM(this != NULL, "Corrupt GImage");'), (524, 2, u'-    debugAssert(width >= 0);'), (525, 2, u'-    debugAssert(height >= 0);'), (526, 2, u'-    debugAssert(channels >= 1);'), (536, 2, u'-    debugAssert(isValidHeapPointer(_byte));'), (550, 2, u'-    debugAssert(isValidHeapPointer(_byte));'), (596, 2, u'-    debugAssert(ret);'), (683, 2, u'-    debugAssert(outData);'), (720, 2, u'-        debugAssert(false);'), (725, 2, u'-    debugAssert(alpha.width == width);'), (726, 2, u'-    debugAssert(alpha.height == height);'), (742, 2, u'-    debugAssert(alpha.width == width);'), (743, 2, u'-    debugAssert(alpha.height == height);'), (808, 2, u'-    debugAssert(whiteHeightInPixels >= 0);'), (924, 2, u'-        alwaysAssertM(false, "Bad number of channels in input image");'), (970, 2, u'-        alwaysAssertM(false, "Bad number of channels in input image");'), (1013, 2, u'-        alwaysAssertM(false, "Bad number of channels in input image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    debugAssert(in != out);'), (37, 2, u'-    debugAssert(out != in);'), (80, 2, u'-    debugAssert(isEven(w));'), (81, 2, u'-    debugAssert(isEven(h));'), (165, 2, u'-    debugAssert(in != _out);'), (243, 2, u'-    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    debugAssert(channels == 1 || channels == 3);'), (205, 2, u'-        debugAssert(palette);'), (242, 2, u'-    debugAssert(_byte);'), (440, 2, u'-\tdebugAssert(r == 0);'), (442, 2, u'-\tdebugAssert(r == 1);'), (450, 2, u'-\tdebugAssert(count > 0);'), (475, 2, u'-    debugAssert(_byte);')]
===========================================
Class:class memory_destination_mgr { class memory_destination_mgr 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(182, 2, u'-            debugAssert(s); (void)s;'), (258, 2, u'-    debugAssert(channels == 3);'), (439, 2, u'-    alwaysAssertM(this, "Corrupt GImage");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    debugAssert( png_ptr->io_ptr != NULL );'), (25, 2, u'-    debugAssert( length >= 0 );'), (26, 2, u'-    debugAssert( data != NULL );'), (36, 2, u'-    debugAssert( png_ptr->io_ptr != NULL );'), (37, 2, u'-    debugAssert( data != NULL );'), (55, 2, u'-    debugAssert( error_msg != NULL );'), (65, 2, u'-    debugAssert( warning_msg != NULL );'), (72, 2, u'-    debugAssert( channels == 1 || channels == 3 || channels == 4 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    debugAssert(channels == 3);'), (45, 2, u'-    debugAssert(channels == 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 2, u'-    debugAssert(_byte);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-    debugAssert(cutOffAngleDegrees <= 90);')]
===========================================
Class:class BasicThread: public GThread { class BasicThread: public GThread 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-    alwaysAssertM(m_status != STATUS_RUNNING, "Deleting thread while running.");'), (77, 2, u'-    debugAssertM(! started(), "Thread has already executed.");'), (88, 2, u'-    debugAssert(m_event);'), (132, 2, u'-    debugAssert(m_event);'), (135, 2, u'-    debugAssert(m_handle);'), (143, 2, u'-    debugAssert(current->m_event);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (206, 2, u'-    debugAssert(c >= 0 && c <= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (203, 2, u'-    debugAssert(c >= 0 && c <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-\tdebugAssert(_packedBitsPerTexel <= _hardwareBitsPerTexel);'), (75, 2, u'-        debugAssertM(false, "Depth must be 16, 24, or 32.");'), (96, 2, u'-        debugAssertM(false, "Stencil must be 1, 4, 8 or 16.");'), (173, 2, u'-    debugAssert(code < CODE_NUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(282, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (335, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (390, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (413, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (436, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (460, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (483, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (507, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (551, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (552, 2, u'-    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (589, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (590, 2, u'-    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (619, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (647, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (648, 2, u'-    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (678, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (679, 2, u'-    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (710, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (807, 2, u'-    debugAssert(isEven(w));'), (808, 2, u'-    debugAssert(isEven(h));'), (1037, 2, u'-    debugAssert(in != _out);'), (1092, 2, u'-    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 2, u'-        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 2, u'-    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 2, u'-    debugAssert((d.rows() == 1) || (d.cols() == 1));'), (169, 2, u'-    debugAssertM(vec.cols() == cols(),'), (171, 2, u'-    debugAssertM(vec.rows() == 1,'), (174, 2, u'-    debugAssert(r >= 0);'), (175, 2, u'-    debugAssert(r < rows());'), (186, 2, u'-    debugAssertM(vec.rows() == rows(),'), (188, 2, u'-    debugAssertM(vec.cols() == 1,'), (191, 2, u'-    debugAssert(c >= 0);'), (193, 2, u'-    debugAssert(c < cols());'), (209, 2, u'-    debugAssert(r >= 0);'), (210, 2, u'-    debugAssert(r < rows());'), (218, 2, u'-    debugAssert(c >= 0);'), (219, 2, u'-    debugAssert(c < cols());'), (290, 2, u'-    debugAssert(r >= 0 && r < rows());'), (311, 2, u'-    debugAssert(impl->R == 3);'), (312, 2, u'-    debugAssert(impl->C == 3);'), (321, 2, u'-    debugAssert(impl->R == 4);'), (322, 2, u'-    debugAssert(impl->C == 4);'), (332, 2, u'-    debugAssert(impl->R * impl->C == 2);'), (342, 2, u'-    debugAssert(impl->R * impl->C == 3);'), (352, 2, u'-    debugAssert('), (365, 2, u'-    debugAssert(r0 >= 0 && r0 < rows());'), (366, 2, u'-    debugAssert(r1 >= 0 && r1 < rows());'), (381, 2, u'-    debugAssert(c0 >= 0 && c0 < cols());'), (382, 2, u'-    debugAssert(c1 >= 0 && c1 < cols());'), (396, 2, u'-    debugAssert(r2>=r1);'), (397, 2, u'-    debugAssert(c2>=c1);'), (398, 2, u'-    debugAssert(c2<cols());'), (399, 2, u'-    debugAssert(r2<rows());'), (400, 2, u'-    debugAssert(r1>=0);'), (401, 2, u'-    debugAssert(c1>=0);'), (426, 2, u'-    debugAssert(rows() >= cols());'), (427, 2, u'-    debugAssertM(&U != &V, "Arguments to SVD must be different matrices");'), (428, 2, u'-    debugAssertM(&U != this, "Arguments to SVD must be different matrices");'), (429, 2, u'-    debugAssertM(&V != this, "Arguments to SVD must be different matrices");'), (449, 2, u'-    debugAssertM(ret == NULL, ret);'), (634, 2, u'-    debugAssertM('), (638, 2, u'-    debugAssert(A.C == B.R);'), (639, 2, u'-    debugAssert(A.R == out.R);'), (640, 2, u'-    debugAssert(B.C == out.C);'), (662, 2, u'-    debugAssert(A.C == B.C);\\'), (663, 2, u'-    debugAssert(A.R == B.R);\\'), (664, 2, u'-    debugAssert(A.C == out.C);\\'), (665, 2, u'-    debugAssert(A.R == out.R);\\'), (677, 2, u'-    debugAssert(A.C == out.C);\\'), (678, 2, u'-    debugAssert(A.R == out.R);\\'), (690, 2, u'-    debugAssert(A.C == out.C);\\'), (691, 2, u'-    debugAssert(A.R == out.R);\\'), (724, 2, u'-    debugAssert(A.C == out.C);'), (725, 2, u'-    debugAssert(A.R == out.R);'), (734, 2, u'-    debugAssert(&out != this);'), (753, 2, u'-    debugAssert(out.R == C);'), (754, 2, u'-    debugAssert(out.C == R);'), (783, 2, u'-    debugAssert(&out != this);'), (801, 2, u'-    debugAssert(R > 0);'), (802, 2, u'-    debugAssert(C > 0);'), (810, 2, u'-    debugAssert(r >= 0);'), (824, 2, u'-    debugAssert(R == C);'), (873, 2, u'-    debugAssert(out.R == R - 1);'), (874, 2, u'-    debugAssert(out.C == C - 1);'), (979, 2, u'-        alwaysAssertM(A.cols() == r,'), (981, 2, u'-        alwaysAssertM(V.cols() >= r,'), (1033, 2, u'-    alwaysAssertM((m<=n),"Row-partitioned block matrix pseudoinverse requires R<C");'), (1065, 2, u'-        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1073, 2, u'-    alwaysAssertM((m>=n),"Column-partitioned block matrix pseudoinverse requires R>C");'), (1103, 2, u'-        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1351, 2, u'-    debugAssertM(R == C,'), (1420, 2, u'-        debugAssertM(piv != 0.0, "Matrix is singular");'), (1512, 2, u'-    debugAssertM(rows >= cols, "Must have more rows than columns");'), (1515, 2, u'-    debugAssert(rv1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(152, 2, u'-    assert((0 <= iCol) && (iCol < 3));'), (158, 2, u'-    assert((0 <= iRow) && (iRow < 3));'), (164, 2, u'-    assert((0 <= iCol) && (iCol < 3));'), (174, 2, u'-    debugAssert((iCol >= 0) && (iCol < 3));'), (182, 2, u'-    debugAssert((iRow >= 0) && (iRow < 3));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(174, 2, u'-            debugAssert(vertex[j].isFinite());'), (180, 2, u'-            debugAssert(N.isFinite());'), (195, 2, u'-            debugAssert(N.isUnit() || N.isZero());'), (204, 2, u'-            debugAssert(N.isUnit() || N.isZero());'), (308, 2, u'-    debugAssert(skip >= 0);'), (309, 2, u'-    debugAssert(run >= 0);'), (346, 2, u'-    debugAssert(indexArray.size() % 3 == 0);'), (677, 2, u'-    debugAssertM(faceArray.size() != 0, "Unable to calculate valid tangent space without faces.");'), (718, 2, u'-        debugAssertM(N.isUnit() || N.isZero(), "Input normals must have unit length");')]
===========================================
Class:class MeshDirectedEdgeKey { class MeshDirectedEdgeKey 
Class:class MeshEdgeTable { class MeshEdgeTable 
Class:class Welder { class Welder 
Class:class VN { class VN 
Class:class WeldHelper { class WeldHelper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 2, u'-    debugAssert(scale > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 2, u'-    debugAssert(part.length() == 2);')]
===========================================
Class:class Dummy { class Dummy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(337, 2, u'-    debugAssert(! initialized);'), (421, 2, u'-    debugAssert(! initialized);'), (560, 2, u'-    debugAssert(initialized);'), (903, 2, u'-    debugAssertM(false, "Should not reach this point");'), (934, 2, u'-    debugAssert(ret == b.size());'), (959, 2, u'-    debugAssert(state == RECEIVING);'), (999, 2, u'-    debugAssert(messageSize < 6e7);'), (1001, 2, u'-    debugAssert(receiveBufferUsedSize == 0);'), (1022, 2, u'-    debugAssert(state == RECEIVING);'), (1023, 2, u'-    debugAssert(messageType != 0);'), (1024, 2, u'-    debugAssertM(receiveBufferUsedSize < messageSize, "Message already received.");'), (1025, 2, u'-    debugAssertM(messageSize >= receiveBufferUsedSize, "Message size overflow.");'), (1097, 2, u'-        debugAssert(port != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 2, u'-        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 2, u'-            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 2, u'-    debugAssert(data);'), (219, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 2, u'-    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(89, 2, u'-\tassert(numPlanes < 31);'), (138, 2, u'-\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-    debugAssertM(N > 0, "No control points");'), (113, 2, u'-            debugAssert(s - d * wraps >= t0);'), (114, 2, u'-            debugAssert(s - d * wraps < tn + getFinalInterval());'), (120, 2, u'-            debugAssert(s < tn + fi);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-    alwaysAssertM(! inBetween, "Stopwatch::tick() called twice in a row.");'), (91, 2, u'-    alwaysAssertM(inBetween, "Stopwatch::tock() called without matching tick.");')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(663, 2, u'-    debugAssertM(false,'), (908, 2, u'-        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-    debugAssert(option.numColumns > 1);'), (239, 2, u"-            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 2, u'-    debugAssert(f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-AssertionHook _debugHook = _handleDebugAssert_;'), (37, 2, u'-AssertionHook _failureHook = _handleErrorCheck_;'), (132, 2, u'-bool _handleDebugAssert_('), (309, 2, u'-void setAssertionHook(AssertionHook hook) {'), (313, 2, u'-AssertionHook assertionHook() {'), (317, 2, u'-void setFailureHook(AssertionHook hook) {'), (321, 2, u'-AssertionHook failureHook() {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-                        debugAssertM(false, "Files of the form d:path are"'), (110, 2, u'-    debugAssert(filename != "");'), (116, 2, u'-        debugAssert(buffer);'), (118, 2, u'-        debugAssert(f);'), (120, 2, u'-\t    debugAssert(ret == length);(void)ret;'), (142, 2, u'-        debugAssertM(false, filename + " not found");'), (166, 2, u'-                debugAssertM((size_t)test == length,'), (346, 2, u'-    debugAssert(file);'), (393, 2, u'-    debugAssert(base == "");'), (394, 2, u'-    debugAssert(ext == "");'), (937, 2, u'-            debugAssertM(filenameBaseExt(filespec) == "*", "Can only call getFiles/getDirs on zipfiles using \'*\' wildcard");'), (946, 2, u'-        debugAssertM(filenameBaseExt(filespec) == "*", "Can only call getFiles/getDirs on zipfiles using \'*\' wildcard");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-      debugAssert(heapBuffer);'), (142, 2, u'-      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(413, 1, u'+    assert(initialized);'), (436, 1, u'+    assert(initialized);'), (437, 1, u'+    assert(idx % 2 == 0);'), (482, 1, u'+    assert(initialized);'), (483, 1, u'+    assert(idx == N32);'), (484, 1, u'+    assert(size % 4 == 0);'), (485, 1, u'+    assert(size >= N32);'), (518, 1, u'+    assert(initialized);'), (519, 1, u'+    assert(idx == N32);'), (520, 1, u'+    assert(size % 2 == 0);'), (521, 1, u'+    assert(size >= N64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 2, u'-  ACE_ASSERT (0); // not implemented.'), (116, 2, u'-  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 2, u'-              ACE_ASSERT (0);'), (637, 2, u'-              ACE_ASSERT (0);'), (645, 2, u'-          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class:   class ACE_Cleanup_Info_Node { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (121, 2, u'-  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (127, 2, u'-  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (128, 2, u'-  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (129, 2, u'-  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (138, 2, u'-  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (147, 2, u'-  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-  ACE_ASSERT (size != 0);'), (54, 2, u'-  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 2, u'-  ACE_ASSERT (result != 0);'), (669, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 2, u'-      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:   class TSS_Cleanup_Instance { 
Class:   class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class: class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-      ACE_ASSERT (dynamic_instance != 0);'), (79, 2, u'-      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 2, u'-  ACE_ASSERT (0);'), (115, 2, u'-  ACE_ASSERT (0);'), (130, 2, u'-  ACE_ASSERT (0);'), (424, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (475, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (664, 2, u'-      ACE_ASSERT (result == 1);'), (811, 2, u'-          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                              ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(190, 2, u'-        ACE_ASSERT (copy_constructor_not_supported);')]
===========================================
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 2, u'-  ACE_ASSERT (result != 0);'), (477, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 2, u'-    assert(plane.size() < 31);'), (228, 2, u'-\tassert(plane.size() < 31);'), (358, 2, u'-        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-        alwaysAssertM(m_data, "Corrupt placeholder");'), (135, 2, u'-    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (140, 2, u'-        debugAssert(value.s != NULL);'), (145, 2, u'-        debugAssert(value.a != NULL);'), (150, 2, u'-        debugAssert(value.t != NULL);'), (156, 2, u'-        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (253, 2, u'-    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (338, 2, u'-        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (439, 2, u'-    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (465, 2, u'-    debugAssert(m_data != NULL);'), (483, 2, u'-    debugAssert(m_data != NULL);'), (492, 2, u'-    debugAssert(m_data != NULL);'), (500, 2, u'-    debugAssert(m_data != NULL);'), (532, 2, u'-    debugAssert(m_data != NULL);'), (540, 2, u'-    debugAssert(m_data != NULL);'), (582, 2, u'-    debugAssert(m_data != NULL);'), (617, 2, u'-        debugAssert(m_data != NULL);'), (624, 2, u'-        debugAssert(m_data != NULL);'), (644, 2, u'-        debugAssert(m_data != NULL);'), (661, 2, u'-        alwaysAssertM(false, "Unknown type.");'), (777, 2, u'-        debugAssert(m_data != NULL);'), (782, 2, u'-        debugAssert(m_data != NULL);'), (819, 2, u'-        debugAssert(m_data != NULL);'), (880, 2, u'-    debugAssert(token.type() == Token::SYMBOL);'), (1231, 2, u'-        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(172, 2, u'-        debugAssertM(false, "Cannot construct AnyVal from constants except ARRAY or TABLE.");'), (275, 2, u'-        debugAssertM(false, "Internal error: no destructor for this type.");'), (360, 2, u'-        debugAssertM(false, "Internal error: no assignment operator for this type.");'), (558, 2, u'-        debugAssertM(false, "Internal error: no serialize method for this type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-    debugAssert(sizeHint > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 2, u'-        debugAssert(m_freeBuffer);'), (152, 2, u'-        debugAssert(file);'), (154, 2, u'-        debugAssert(ret == 0);'), (157, 2, u'-        debugAssert(ret == toRead);'), (163, 2, u'-        debugAssert(file);'), (165, 2, u'-        debugAssert(ret == 0);'), (168, 2, u'-        debugAssert((size_t)ret == (size_t)toRead);'), (174, 2, u'-    debugAssert(m_pos >= 0);'), (229, 2, u'-        debugAssert(m_freeBuffer);'), (237, 2, u'-        debugAssert(result == Z_OK); (void)result;'), (243, 2, u'- \t        debugAssert(!m_freeBuffer);'), (246, 2, u'-\t        debugAssert(m_freeBuffer);'), (316, 2, u'-    debugAssert(m_freeBuffer);'), (330, 2, u'-    debugAssert(m_buffer);'), (354, 2, u'-    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 2, u'-    debugAssert(m_buffer);'), (360, 2, u'-    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 2, u'-    debugAssert(isValidHeapPointer(m_buffer));'), (368, 2, u'-    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 2, u'-    debugAssert(isValidPointer(bytes));'), (417, 2, u'-    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 2, u'-    assert(s != NULL);'), (521, 2, u'-    debugAssert(m_beginEndBits == 0);'), (525, 2, u'-    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 2, u'-    debugAssert(m_beginEndBits == 1);'), (559, 2, u'-    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (153, 2, u'-        debugAssert(writeBytes > 0);'), (159, 2, u'-        debugAssert(file);'), (162, 2, u'-        debugAssert((int)count == writeBytes); (void)count;'), (172, 2, u'-        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 2, u'-        debugAssert(m_bufferLen >= 0);'), (174, 2, u'-        debugAssert(m_pos >= 0);'), (175, 2, u'-        debugAssert(m_pos <= m_bufferLen);'), (178, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (180, 2, u'-        debugAssert(isValidHeapPointer(m_buffer));'), (232, 2, u'-    debugAssert(m_beginEndBits == 0);'), (233, 2, u'-    alwaysAssertM(m_filename == "<memory>",'), (248, 2, u'-    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 2, u'-    debugAssert(result == Z_OK); (void)result;'), (310, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 2, u'-    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 2, u'-        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (338, 2, u'-            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (351, 2, u'-    debugAssertM(! m_committed, "Cannot commit twice");'), (379, 2, u'-    debugAssert(m_beginEndBits == 0);'), (420, 2, u'-    debugAssert(m_beginEndBits == 0);'), (485, 2, u'-    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (513, 2, u'-    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-    debugAssert('), (118, 2, u'-    debugAssert(! isNaN(_extent.x));'), (191, 2, u'-        debugAssert((f >= 0) && (f < 6));'), (206, 2, u'-    assert(plane.size() < 31);'), (265, 2, u'-\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-    debugAssert(separatingAxisIndex >= 0);'), (50, 2, u'-    debugAssert(separatingAxisIndex < 15);'), (176, 2, u'-        debugAssertM(false, "fell through switch statement");'), (365, 2, u'-    debugAssert(lastSeparatingAxis >= -1);'), (366, 2, u'-    debugAssert(lastSeparatingAxis < 15);'), (627, 2, u'-            debugAssertM(false,'), (758, 2, u'-        debugAssertM(false, "Fell through switch");'), (897, 2, u'-    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 2, u'-            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 2, u'-            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 2, u'-            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 2, u'-                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 2, u'-            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 2, u'-    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 2, u'-    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 2, u'-        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 2, u'-        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 2, u'-        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 2, u'-        debugAssertM(false, "Should not get here.");'), (2055, 2, u'-    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(281, 2, u'-    debugAssertM((_hsv.x <= 1.0f && _hsv.x >= 0.0f)'), (309, 2, u'-        debugAssertM(false, "fell through switch..");'), (316, 2, u'-\tdebugAssertM((_rgb.r <= 1.0f && _rgb.r >= 0.0f)'), (351, 2, u'-\tdebugAssertM(val <= 1.0f && val >= 0.0f , "value should be in [0,1]");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    debugAssert(angle >= 0);'), (26, 2, u'-    debugAssert(angle <= pi());'), (43, 2, u'-        debugAssert(dp > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(176, 2, u'-        debugAssertM(count < 2, "Convex polygons may only intersect planes at two edges.");'), (185, 2, u'-    debugAssertM((count == 2) || (count == 0), "Convex polygons may only intersect planes at two edges.");'), (377, 2, u'-        debugAssert(numVertices >= 3);'), (401, 2, u'-            debugAssertM(distance < 0.02, "Edge missing while closing polygon.");'), (414, 2, u'-    debugAssert((above.face.length() == 0) || (above.face.length() >= 4));'), (415, 2, u'-    debugAssert((below.face.length() == 0) || (below.face.length() >= 4));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(270, 2, u'-        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-    debugAssert((angle < pi()) && (angle > 0));'), (131, 2, u'-    debugAssert(m_fieldOfView < toRadians(180));'), (478, 2, u'-    debugAssert(nearPlaneZ() < 0.0f);'), (480, 2, u'-    debugAssert(farPlaneZ() < 0.0f);'), (490, 2, u'-    debugAssert(m_nearPlaneZ < 0.0f);'), (492, 2, u'-    debugAssert(m_farPlaneZ < 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(182, 2, u'-    alwaysAssertM(temp != NULL, "Out of memory");'), (210, 2, u'-    alwaysAssertM(temp != NULL, "Out of memory");'), (266, 2, u'-        debugAssert(false);'), (269, 2, u'-    debugAssert(m_width >= 0);'), (270, 2, u'-    debugAssert(m_height >= 0);'), (271, 2, u'-    debugAssert(m_channels == 1 || m_channels == 3 || m_channels == 4);'), (272, 2, u'-    debugAssert(m_byte != NULL);'), (346, 2, u'-                        debugAssert(p < m_width * m_height);'), (448, 2, u'-    debugAssert(data != NULL);'), (519, 2, u'-        alwaysAssertM(this != NULL, "Corrupt GImage");'), (567, 2, u'-    debugAssert(width >= 0);'), (568, 2, u'-    debugAssert(height >= 0);'), (569, 2, u'-    debugAssert(channels >= 1);'), (583, 2, u'-        debugAssert(isValidHeapPointer(m_byte));'), (598, 2, u'-    debugAssert(isValidHeapPointer(m_byte));'), (708, 2, u'-    debugAssert(ret);'), (795, 2, u'-    debugAssert(outData);'), (832, 2, u'-        debugAssert(false);'), (838, 2, u'-    debugAssert(alpha.width() == width());'), (839, 2, u'-    debugAssert(alpha.height() == height());'), (904, 2, u'-    debugAssert(whiteHeightInPixels >= 0);'), (1025, 2, u'-        alwaysAssertM(false, "Bad number of channels in input image");'), (1071, 2, u'-        alwaysAssertM(false, "Bad number of channels in input image");'), (1114, 2, u'-        alwaysAssertM(false, "Bad number of channels in input image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    debugAssert(in != out);'), (37, 2, u'-    debugAssert(out != in);'), (80, 2, u'-    debugAssert(isEven(w));'), (81, 2, u'-    debugAssert(isEven(h));'), (165, 2, u'-    debugAssert(in != _out);'), (243, 2, u'-    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    debugAssert(m_channels == 1 || m_channels == 3);'), (205, 2, u'-        debugAssert(palette);'), (242, 2, u'-    debugAssert(m_byte);'), (440, 2, u'-\tdebugAssert(r == 0);'), (442, 2, u'-\tdebugAssert(r == 1);'), (450, 2, u'-\tdebugAssert(count > 0);'), (475, 2, u'-    debugAssert(m_byte);')]
===========================================
Class:class memory_destination_mgr { class memory_destination_mgr 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(184, 2, u'-            debugAssert(s); (void)s;'), (260, 2, u'-    debugAssert(m_channels == 3);'), (440, 2, u'-    alwaysAssertM(this, "Corrupt GImage");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    debugAssert( png_ptr->io_ptr != NULL );'), (25, 2, u'-    debugAssert( length >= 0 );'), (26, 2, u'-    debugAssert( data != NULL );'), (36, 2, u'-    debugAssert( png_ptr->io_ptr != NULL );'), (37, 2, u'-    debugAssert( data != NULL );'), (55, 2, u'-    debugAssert( error_msg != NULL );'), (66, 2, u'-    debugAssert( warning_msg != NULL );'), (74, 2, u'-    debugAssert( m_channels == 1 || m_channels == 3 || m_channels == 4 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-        alwaysAssertM(false, "PPM requires either 1 or 3 channels exactly.");'), (74, 2, u'-        alwaysAssertM(false, "PPM requires either 1 or 3 channels exactly.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(156, 2, u'-    debugAssert(m_byte);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 2, u'-    debugAssert(cutOffAngleDegrees <= 90);')]
===========================================
Class:class BasicThread: public GThread { class BasicThread: public GThread 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-    alwaysAssertM(m_status != STATUS_RUNNING, "Deleting thread while running.");'), (77, 2, u'-    debugAssertM(! started(), "Thread has already executed.");'), (96, 2, u'-        debugAssert(m_event);'), (148, 2, u'-        debugAssert(m_event);'), (151, 2, u'-        debugAssert(m_handle);'), (160, 2, u'-    debugAssert(current->m_event);'), (185, 2, u'-    debugAssert(ret == 0);'), (187, 2, u'-    debugAssert(ret == 0);'), (189, 2, u'-    debugAssert(ret == 0);'), (199, 2, u'-    debugAssert(ret == 0);'), (201, 2, u'-    debugAssert(ret == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (206, 2, u'-    debugAssert(c >= 0 && c <= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (203, 2, u'-    debugAssert(c >= 0 && c <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 2, u'-    debugAssert(_packedBitsPerTexel <= _hardwareBitsPerTexel);'), (74, 2, u'-        debugAssertM(false, "Depth must be 16, 24, or 32.");'), (95, 2, u'-        debugAssertM(false, "Stencil must be 1, 4, 8 or 16.");'), (194, 2, u'-    debugAssert(code < CODE_NUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(284, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (337, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (392, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (415, 2, u'-    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (438, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (462, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (485, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (509, 2, u'-    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (553, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (554, 2, u'-    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (591, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (592, 2, u'-    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (621, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (649, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (650, 2, u'-    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (680, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (681, 2, u'-    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (712, 2, u'-    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (809, 2, u'-    debugAssert(isEven(w));'), (810, 2, u'-    debugAssert(isEven(h));'), (1039, 2, u'-    debugAssert(in != _out);'), (1094, 2, u'-    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 2, u'-        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 2, u'-    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 2, u'-    debugAssert((d.rows() == 1) || (d.cols() == 1));'), (169, 2, u'-    debugAssertM(vec.cols() == cols(),'), (171, 2, u'-    debugAssertM(vec.rows() == 1,'), (174, 2, u'-    debugAssert(r >= 0);'), (175, 2, u'-    debugAssert(r < rows());'), (186, 2, u'-    debugAssertM(vec.rows() == rows(),'), (188, 2, u'-    debugAssertM(vec.cols() == 1,'), (191, 2, u'-    debugAssert(c >= 0);'), (193, 2, u'-    debugAssert(c < cols());'), (209, 2, u'-    debugAssert(r >= 0);'), (210, 2, u'-    debugAssert(r < rows());'), (218, 2, u'-    debugAssert(c >= 0);'), (219, 2, u'-    debugAssert(c < cols());'), (290, 2, u'-    debugAssert(r >= 0 && r < rows());'), (311, 2, u'-    debugAssert(impl->R == 3);'), (312, 2, u'-    debugAssert(impl->C == 3);'), (321, 2, u'-    debugAssert(impl->R == 4);'), (322, 2, u'-    debugAssert(impl->C == 4);'), (332, 2, u'-    debugAssert(impl->R * impl->C == 2);'), (342, 2, u'-    debugAssert(impl->R * impl->C == 3);'), (352, 2, u'-    debugAssert('), (365, 2, u'-    debugAssert(r0 >= 0 && r0 < rows());'), (366, 2, u'-    debugAssert(r1 >= 0 && r1 < rows());'), (381, 2, u'-    debugAssert(c0 >= 0 && c0 < cols());'), (382, 2, u'-    debugAssert(c1 >= 0 && c1 < cols());'), (396, 2, u'-    debugAssert(r2>=r1);'), (397, 2, u'-    debugAssert(c2>=c1);'), (398, 2, u'-    debugAssert(c2<cols());'), (399, 2, u'-    debugAssert(r2<rows());'), (400, 2, u'-    debugAssert(r1>=0);'), (401, 2, u'-    debugAssert(c1>=0);'), (426, 2, u'-    debugAssert(rows() >= cols());'), (427, 2, u'-    debugAssertM(&U != &V, "Arguments to SVD must be different matrices");'), (428, 2, u'-    debugAssertM(&U != this, "Arguments to SVD must be different matrices");'), (429, 2, u'-    debugAssertM(&V != this, "Arguments to SVD must be different matrices");'), (449, 2, u'-    debugAssertM(ret == NULL, ret);'), (635, 2, u'-    debugAssertM('), (639, 2, u'-    debugAssert(A.C == B.R);'), (640, 2, u'-    debugAssert(A.R == out.R);'), (641, 2, u'-    debugAssert(B.C == out.C);'), (663, 2, u'-    debugAssert(A.C == B.C);\\'), (664, 2, u'-    debugAssert(A.R == B.R);\\'), (665, 2, u'-    debugAssert(A.C == out.C);\\'), (666, 2, u'-    debugAssert(A.R == out.R);\\'), (678, 2, u'-    debugAssert(A.C == out.C);\\'), (679, 2, u'-    debugAssert(A.R == out.R);\\'), (691, 2, u'-    debugAssert(A.C == out.C);\\'), (692, 2, u'-    debugAssert(A.R == out.R);\\'), (725, 2, u'-    debugAssert(A.C == out.C);'), (726, 2, u'-    debugAssert(A.R == out.R);'), (735, 2, u'-    debugAssert(&out != this);'), (754, 2, u'-    debugAssert(out.R == C);'), (755, 2, u'-    debugAssert(out.C == R);'), (784, 2, u'-    debugAssert(&out != this);'), (802, 2, u'-    debugAssert(R > 0);'), (803, 2, u'-    debugAssert(C > 0);'), (811, 2, u'-    debugAssert(r >= 0);'), (825, 2, u'-    debugAssert(R == C);'), (874, 2, u'-    debugAssert(out.R == R - 1);'), (875, 2, u'-    debugAssert(out.C == C - 1);'), (980, 2, u'-        alwaysAssertM(A.cols() == r,'), (982, 2, u'-        alwaysAssertM(V.cols() >= r,'), (1034, 2, u'-    alwaysAssertM((m<=n),"Row-partitioned block matrix pseudoinverse requires R<C");'), (1066, 2, u'-        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1074, 2, u'-    alwaysAssertM((m>=n),"Column-partitioned block matrix pseudoinverse requires R>C");'), (1104, 2, u'-        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1352, 2, u'-    debugAssertM(R == C,'), (1421, 2, u'-        debugAssertM(piv != 0.0, "Matrix is singular");'), (1513, 2, u'-    debugAssertM(rows >= cols, "Must have more rows than columns");'), (1516, 2, u'-    debugAssert(rv1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 2, u'-    assert((0 <= iCol) && (iCol < 3));'), (200, 2, u'-    assert((0 <= iRow) && (iRow < 3));'), (206, 2, u'-    debugAssert((iCol >= 0) && (iCol < 3));'), (214, 2, u'-    debugAssert((iRow >= 0) && (iRow < 3));'), (1075, 2, u'-    assert(iter < MAX_ITERS);'), (1080, 2, u'-    assert(resid < eps);'), (1085, 2, u'-    assert(resid < eps);'), (1090, 2, u'-    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 2, u'-    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (207, 2, u'-    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (217, 2, u'-    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (218, 2, u'-    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (219, 2, u'-    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (220, 2, u'-    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (221, 2, u'-    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (222, 2, u'-    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (223, 2, u'-    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (224, 2, u'-    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (225, 2, u'-    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (226, 2, u'-    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(183, 2, u'-            debugAssert(vertex[j].isFinite());'), (189, 2, u'-            debugAssert(N.isFinite());'), (204, 2, u'-            debugAssert(N.isUnit() || N.isZero());'), (213, 2, u'-            debugAssert(N.isUnit() || N.isZero());'), (317, 2, u'-    debugAssert(skip >= 0);'), (318, 2, u'-    debugAssert(run >= 0);'), (355, 2, u'-    debugAssert(indexArray.size() % 3 == 0);'), (559, 2, u'-    debugAssertM(faceArray.size() != 0, "Unable to calculate valid tangent space without faces.");'), (624, 2, u'-        debugAssertM(N.isUnit() || N.isZero(), "Input normals must have unit length");')]
===========================================
Class:class MeshEdgeTable { class MeshEdgeTable 
Class:    class Edge {     class Edge 
Class:     class Iterator {     class Iterator 
Class:class Welder { class Welder 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 2, u'-    debugAssert(scale > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 2, u'-    debugAssert(part.length() == 2);')]
===========================================
Class:class Dummy { class Dummy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(337, 2, u'-    debugAssert(! initialized);'), (421, 2, u'-    debugAssert(! initialized);'), (560, 2, u'-    debugAssert(initialized);'), (903, 2, u'-    debugAssertM(false, "Should not reach this point");'), (934, 2, u'-    debugAssert(ret == b.size());'), (959, 2, u'-    debugAssert(state == RECEIVING);'), (999, 2, u'-    debugAssert(messageSize < 6e7);'), (1001, 2, u'-    debugAssert(receiveBufferUsedSize == 0);'), (1022, 2, u'-    debugAssert(state == RECEIVING);'), (1023, 2, u'-    debugAssert(messageType != 0);'), (1024, 2, u'-    debugAssertM(receiveBufferUsedSize < messageSize, "Message already received.");'), (1025, 2, u'-    debugAssertM(messageSize >= receiveBufferUsedSize, "Message size overflow.");'), (1097, 2, u'-        debugAssert(port != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    alwaysAssertM(isPow2(dataSize), "dataSize must be a power of 2");'), (54, 2, u'-    alwaysAssertM(isPow2(dataSize), "dataSize must be a power of 2");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    debugAssertM(isValidHeapPointer(this),'), (49, 2, u'-    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 2, u'-        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 2, u'-            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 2, u'-    debugAssert(data);'), (219, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 2, u'-    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 2, u'-        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 2, u'-    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 2, u'-\tassert(numPlanes < 31);'), (165, 2, u'-\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-    debugAssertM(N > 0, "No control points");'), (113, 2, u'-            debugAssert(s - d * wraps >= t0);'), (114, 2, u'-            debugAssert(s - d * wraps < tn + getFinalInterval());'), (120, 2, u'-            debugAssert(s < tn + fi);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    alwaysAssertM(! inBetween, "Stopwatch::tick() called twice in a row.");'), (95, 2, u'-    alwaysAssertM(inBetween, "Stopwatch::tock() called without matching tick.");')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(753, 2, u'-    debugAssertM(false,'), (1056, 2, u'-        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-    debugAssert(option.numColumns > 1);'), (239, 2, u"-            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 2, u'-    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(211, 2, u'-    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (231, 2, u'-    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
Class:class VN { class VN 
Class:class WeldHelper { class WeldHelper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-AssertionHook _debugHook = _handleDebugAssert_;'), (37, 2, u'-AssertionHook _failureHook = _handleErrorCheck_;'), (134, 2, u'-bool _handleDebugAssert_('), (305, 2, u'-void setAssertionHook(AssertionHook hook) {'), (309, 2, u'-AssertionHook assertionHook() {'), (313, 2, u'-void setFailureHook(AssertionHook hook) {'), (317, 2, u'-AssertionHook failureHook() {')]
===========================================
Class:class FileSystemCache { class FileSystemCache 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-      debugAssert(heapBuffer);'), (142, 2, u'-      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(826, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1059, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1070, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1073, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1100, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1111, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1131, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1143, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1185, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1187, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1189, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1204, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1216, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1338, 2, u'-        Assert(more >= 2, "more < 2");'), (1407, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1415, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1664, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 1, u'+  ACE_ASSERT (0); // not implemented.'), (116, 1, u'+  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 1, u'+              ACE_ASSERT (0);'), (637, 1, u'+              ACE_ASSERT (0);'), (645, 1, u'+          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> INT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(124, 1, u'+  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (125, 1, u'+  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (131, 1, u'+  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (132, 1, u'+  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (133, 1, u'+  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (142, 1, u'+  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (151, 1, u'+  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+  ACE_ASSERT (size != 0);'), (54, 1, u'+  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 1, u'+  ACE_ASSERT (result != 0);'), (669, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 1, u'+      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:    class TSS_Cleanup_Instance { 
Class:    class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class:  class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+      ACE_ASSERT (dynamic_instance != 0);'), (79, 1, u'+      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 1, u'+  ACE_ASSERT (0);'), (115, 1, u'+  ACE_ASSERT (0);'), (130, 1, u'+  ACE_ASSERT (0);'), (424, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (475, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (664, 1, u'+      ACE_ASSERT (result == 1);'), (811, 1, u'+          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::cancel (long timer_id,                                            const void **act) { 
Class: template <class TQ, class TYPE> int ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::schedule_ualarm (void) { 
Class: template <class TQ, class TYPE> ACE_Async_Timer_Queue_Adapter<TQ, TYPE>::ACE_Async_Timer_Queue_Adapter (ACE_Sig_Set *mask)         : mask_ (mask) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::recompute_next_abs_interval_time     (ACE_Timer_Node_T<TYPE> *expired,      const ACE_Time_Value &cur_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::return_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 1, u'+  ACE_ASSERT (result != 0);'), (477, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(itr->second == auraApp);')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: Aura::_UnapplyForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(itr->second == auraApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(itr->second == auraApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(125, 1, u'+\tassert(plane.size() < 31);'), (204, 1, u'+\tassert(plane.size() < 31);'), (334, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(172, 1, u'+        debugAssertM(false, "Cannot construct AnyVal from constants except ARRAY or TABLE.");'), (275, 1, u'+        debugAssertM(false, "Internal error: no destructor for this type.");'), (360, 1, u'+        debugAssertM(false, "Internal error: no assignment operator for this type.");'), (558, 1, u'+        debugAssertM(false, "Internal error: no serialize method for this type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 1, u'+        debugAssert(m_freeBuffer);'), (152, 1, u'+        debugAssert(file);'), (154, 1, u'+        debugAssert(ret == 0);'), (157, 1, u'+        debugAssert(ret == toRead);'), (163, 1, u'+        debugAssert(file);'), (165, 1, u'+        debugAssert(ret == 0);'), (168, 1, u'+        debugAssert((size_t)ret == (size_t)toRead);'), (174, 1, u'+    debugAssert(m_pos >= 0);'), (229, 1, u'+        debugAssert(m_freeBuffer);'), (237, 1, u'+        debugAssert(result == Z_OK); (void)result;'), (243, 1, u'+ \t        debugAssert(!m_freeBuffer);'), (246, 1, u'+\t        debugAssert(m_freeBuffer);'), (316, 1, u'+    debugAssert(m_freeBuffer);'), (330, 1, u'+    debugAssert(m_buffer);'), (354, 1, u'+    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 1, u'+    debugAssert(m_buffer);'), (360, 1, u'+    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 1, u'+    debugAssert(isValidHeapPointer(m_buffer));'), (368, 1, u'+    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 1, u'+    debugAssert(isValidPointer(bytes));'), (417, 1, u'+    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 1, u'+    assert(s != NULL);'), (521, 1, u'+    debugAssert(m_beginEndBits == 0);'), (525, 1, u'+    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 1, u'+    debugAssert(m_beginEndBits == 1);'), (559, 1, u'+    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (153, 1, u'+        debugAssert(writeBytes > 0);'), (159, 1, u'+        debugAssert(file);'), (162, 1, u'+        debugAssert((int)count == writeBytes); (void)count;'), (172, 1, u'+        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 1, u'+        debugAssert(m_bufferLen >= 0);'), (174, 1, u'+        debugAssert(m_pos >= 0);'), (175, 1, u'+        debugAssert(m_pos <= m_bufferLen);'), (178, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (180, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (232, 1, u'+    debugAssert(m_beginEndBits == 0);'), (233, 1, u'+    alwaysAssertM(m_filename == "<memory>",'), (248, 1, u'+    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 1, u'+    debugAssert(result == Z_OK); (void)result;'), (310, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 1, u'+    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 1, u'+        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (347, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (375, 1, u'+    debugAssert(m_beginEndBits == 0);'), (416, 1, u'+    debugAssert(m_beginEndBits == 0);'), (481, 1, u'+    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (509, 1, u'+    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssert('), (118, 1, u'+    debugAssert(! isNaN(_extent.x));'), (191, 1, u'+        debugAssert((f >= 0) && (f < 6));'), (206, 1, u'+\tassert(plane.size() < 31);'), (265, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+    debugAssert(separatingAxisIndex >= 0);'), (40, 1, u'+    debugAssert(separatingAxisIndex < 15);'), (166, 1, u'+        debugAssertM(false, "fell through switch statement");'), (355, 1, u'+    debugAssert(lastSeparatingAxis >= -1);'), (356, 1, u'+    debugAssert(lastSeparatingAxis < 15);'), (617, 1, u'+            debugAssertM(false,'), (748, 1, u'+        debugAssertM(false, "Fell through switch");'), (1540, 1, u'+            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1541, 1, u'+            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1542, 1, u'+            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1547, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1592, 1, u'+                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1598, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation),'), (1786, 1, u'+    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1787, 1, u'+    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1870, 1, u'+        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1873, 1, u'+        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1874, 1, u'+        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (1918, 1, u'+        debugAssertM(false, "Should not get here.");'), (1935, 1, u'+    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(218, 1, u'+\tdebugAssertM((_hsv.x <= 1.0f && _hsv.x >= 0.0f)'), (246, 1, u'+\t\tdebugAssertM(false, "fell through switch..");'), (253, 1, u'+\tdebugAssertM((_rgb.r <= 1.0f && _rgb.r >= 0.0f)'), (288, 1, u'+\tdebugAssertM(val <= 1.0f && val >= 0.0f , "value should be in [0,1]");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    debugAssert(angle >= 0);'), (26, 1, u'+    debugAssert(angle <= pi());'), (43, 1, u'+        debugAssert(dp > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(171, 1, u'+        debugAssertM(count < 2, "Convex polygons may only intersect planes at two edges.");'), (180, 1, u'+    debugAssertM((count == 2) || (count == 0), "Convex polygons may only intersect planes at two edges.");'), (369, 1, u'+        debugAssert(numVertices >= 3);'), (393, 1, u'+            debugAssertM(distance < 0.02, "Edge missing while closing polygon.");'), (406, 1, u'+    debugAssert((above.face.length() == 0) || (above.face.length() >= 4));'), (407, 1, u'+    debugAssert((below.face.length() == 0) || (below.face.length() >= 4));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(215, 1, u'+        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+    debugAssert((angle < pi()) && (angle > 0));'), (375, 1, u'+    debugAssert(nearPlaneZ() < 0.0f);'), (377, 1, u'+    debugAssert(farPlaneZ() < 0.0f);'), (387, 1, u'+    debugAssert(m_nearPlaneZ < 0.0f);'), (389, 1, u'+    debugAssert(m_farPlaneZ < 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 1, u'+    alwaysAssertM(temp != NULL, "Out of memory");'), (170, 1, u'+    alwaysAssertM(temp != NULL, "Out of memory");'), (226, 1, u'+        debugAssert(false);'), (229, 1, u'+    debugAssert(width >= 0);'), (230, 1, u'+    debugAssert(height >= 0);'), (231, 1, u'+    debugAssert(channels == 1 || channels == 3 || channels == 4);'), (232, 1, u'+    debugAssert(_byte != NULL);'), (306, 1, u'+                        debugAssert(p < width * height);'), (421, 1, u'+    debugAssert(data != NULL);'), (489, 1, u'+        alwaysAssertM(this != NULL, "Corrupt GImage");'), (524, 1, u'+    debugAssert(width >= 0);'), (525, 1, u'+    debugAssert(height >= 0);'), (526, 1, u'+    debugAssert(channels >= 1);'), (536, 1, u'+    debugAssert(isValidHeapPointer(_byte));'), (550, 1, u'+    debugAssert(isValidHeapPointer(_byte));'), (596, 1, u'+    debugAssert(ret);'), (683, 1, u'+    debugAssert(outData);'), (720, 1, u'+        debugAssert(false);'), (725, 1, u'+    debugAssert(alpha.width == width);'), (726, 1, u'+    debugAssert(alpha.height == height);'), (742, 1, u'+    debugAssert(alpha.width == width);'), (743, 1, u'+    debugAssert(alpha.height == height);'), (808, 1, u'+    debugAssert(whiteHeightInPixels >= 0);'), (924, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");'), (970, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");'), (1013, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    debugAssert(in != out);'), (37, 1, u'+    debugAssert(out != in);'), (80, 1, u'+    debugAssert(isEven(w));'), (81, 1, u'+    debugAssert(isEven(h));'), (165, 1, u'+    debugAssert(in != _out);'), (243, 1, u'+    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    debugAssert(channels == 1 || channels == 3);'), (205, 1, u'+        debugAssert(palette);'), (242, 1, u'+    debugAssert(_byte);'), (440, 1, u'+\tdebugAssert(r == 0);'), (442, 1, u'+\tdebugAssert(r == 1);'), (450, 1, u'+\tdebugAssert(count > 0);'), (475, 1, u'+    debugAssert(_byte);')]
===========================================
Class:class memory_destination_mgr { class memory_destination_mgr 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(182, 1, u'+            debugAssert(s); (void)s;'), (258, 1, u'+    debugAssert(channels == 3);'), (439, 1, u'+    alwaysAssertM(this, "Corrupt GImage");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+    debugAssert( png_ptr->io_ptr != NULL );'), (25, 1, u'+    debugAssert( length >= 0 );'), (26, 1, u'+    debugAssert( data != NULL );'), (36, 1, u'+    debugAssert( png_ptr->io_ptr != NULL );'), (37, 1, u'+    debugAssert( data != NULL );'), (55, 1, u'+    debugAssert( error_msg != NULL );'), (65, 1, u'+    debugAssert( warning_msg != NULL );'), (72, 1, u'+    debugAssert( channels == 1 || channels == 3 || channels == 4 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    debugAssert(channels == 3);'), (45, 1, u'+    debugAssert(channels == 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 1, u'+    debugAssert(_byte);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+    debugAssert(cutOffAngleDegrees <= 90);')]
===========================================
Class:class BasicThread: public GThread { class BasicThread: public GThread 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+    alwaysAssertM(m_status != STATUS_RUNNING, "Deleting thread while running.");'), (77, 1, u'+    debugAssertM(! started(), "Thread has already executed.");'), (88, 1, u'+    debugAssert(m_event);'), (132, 1, u'+    debugAssert(m_event);'), (135, 1, u'+    debugAssert(m_handle);'), (143, 1, u'+    debugAssert(current->m_event);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (206, 1, u'+    debugAssert(c >= 0 && c <= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (203, 1, u'+    debugAssert(c >= 0 && c <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+\tdebugAssert(_packedBitsPerTexel <= _hardwareBitsPerTexel);'), (75, 1, u'+        debugAssertM(false, "Depth must be 16, 24, or 32.");'), (96, 1, u'+        debugAssertM(false, "Stencil must be 1, 4, 8 or 16.");'), (173, 1, u'+    debugAssert(code < CODE_NUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(282, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (335, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (390, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (413, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (436, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (460, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (483, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (507, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (551, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (552, 1, u'+    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (589, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (590, 1, u'+    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (619, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (647, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (648, 1, u'+    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (678, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (679, 1, u'+    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (710, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (807, 1, u'+    debugAssert(isEven(w));'), (808, 1, u'+    debugAssert(isEven(h));'), (1037, 1, u'+    debugAssert(in != _out);'), (1092, 1, u'+    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 1, u'+    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+    debugAssert((d.rows() == 1) || (d.cols() == 1));'), (169, 1, u'+    debugAssertM(vec.cols() == cols(),'), (171, 1, u'+    debugAssertM(vec.rows() == 1,'), (174, 1, u'+    debugAssert(r >= 0);'), (175, 1, u'+    debugAssert(r < rows());'), (186, 1, u'+    debugAssertM(vec.rows() == rows(),'), (188, 1, u'+    debugAssertM(vec.cols() == 1,'), (191, 1, u'+    debugAssert(c >= 0);'), (193, 1, u'+    debugAssert(c < cols());'), (209, 1, u'+    debugAssert(r >= 0);'), (210, 1, u'+    debugAssert(r < rows());'), (218, 1, u'+    debugAssert(c >= 0);'), (219, 1, u'+    debugAssert(c < cols());'), (290, 1, u'+    debugAssert(r >= 0 && r < rows());'), (311, 1, u'+    debugAssert(impl->R == 3);'), (312, 1, u'+    debugAssert(impl->C == 3);'), (321, 1, u'+    debugAssert(impl->R == 4);'), (322, 1, u'+    debugAssert(impl->C == 4);'), (332, 1, u'+    debugAssert(impl->R * impl->C == 2);'), (342, 1, u'+    debugAssert(impl->R * impl->C == 3);'), (352, 1, u'+    debugAssert('), (365, 1, u'+    debugAssert(r0 >= 0 && r0 < rows());'), (366, 1, u'+    debugAssert(r1 >= 0 && r1 < rows());'), (381, 1, u'+    debugAssert(c0 >= 0 && c0 < cols());'), (382, 1, u'+    debugAssert(c1 >= 0 && c1 < cols());'), (396, 1, u'+    debugAssert(r2>=r1);'), (397, 1, u'+    debugAssert(c2>=c1);'), (398, 1, u'+    debugAssert(c2<cols());'), (399, 1, u'+    debugAssert(r2<rows());'), (400, 1, u'+    debugAssert(r1>=0);'), (401, 1, u'+    debugAssert(c1>=0);'), (426, 1, u'+    debugAssert(rows() >= cols());'), (427, 1, u'+    debugAssertM(&U != &V, "Arguments to SVD must be different matrices");'), (428, 1, u'+    debugAssertM(&U != this, "Arguments to SVD must be different matrices");'), (429, 1, u'+    debugAssertM(&V != this, "Arguments to SVD must be different matrices");'), (449, 1, u'+    debugAssertM(ret == NULL, ret);'), (634, 1, u'+    debugAssertM('), (638, 1, u'+    debugAssert(A.C == B.R);'), (639, 1, u'+    debugAssert(A.R == out.R);'), (640, 1, u'+    debugAssert(B.C == out.C);'), (662, 1, u'+    debugAssert(A.C == B.C);\\'), (663, 1, u'+    debugAssert(A.R == B.R);\\'), (664, 1, u'+    debugAssert(A.C == out.C);\\'), (665, 1, u'+    debugAssert(A.R == out.R);\\'), (677, 1, u'+    debugAssert(A.C == out.C);\\'), (678, 1, u'+    debugAssert(A.R == out.R);\\'), (690, 1, u'+    debugAssert(A.C == out.C);\\'), (691, 1, u'+    debugAssert(A.R == out.R);\\'), (724, 1, u'+    debugAssert(A.C == out.C);'), (725, 1, u'+    debugAssert(A.R == out.R);'), (734, 1, u'+    debugAssert(&out != this);'), (753, 1, u'+    debugAssert(out.R == C);'), (754, 1, u'+    debugAssert(out.C == R);'), (783, 1, u'+    debugAssert(&out != this);'), (801, 1, u'+    debugAssert(R > 0);'), (802, 1, u'+    debugAssert(C > 0);'), (810, 1, u'+    debugAssert(r >= 0);'), (824, 1, u'+    debugAssert(R == C);'), (873, 1, u'+    debugAssert(out.R == R - 1);'), (874, 1, u'+    debugAssert(out.C == C - 1);'), (979, 1, u'+        alwaysAssertM(A.cols() == r,'), (981, 1, u'+        alwaysAssertM(V.cols() >= r,'), (1033, 1, u'+    alwaysAssertM((m<=n),"Row-partitioned block matrix pseudoinverse requires R<C");'), (1065, 1, u'+        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1073, 1, u'+    alwaysAssertM((m>=n),"Column-partitioned block matrix pseudoinverse requires R>C");'), (1103, 1, u'+        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1351, 1, u'+    debugAssertM(R == C,'), (1420, 1, u'+        debugAssertM(piv != 0.0, "Matrix is singular");'), (1512, 1, u'+    debugAssertM(rows >= cols, "Must have more rows than columns");'), (1515, 1, u'+    debugAssert(rv1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(152, 1, u'+    assert((0 <= iCol) && (iCol < 3));'), (158, 1, u'+    assert((0 <= iRow) && (iRow < 3));'), (164, 1, u'+    assert((0 <= iCol) && (iCol < 3));'), (174, 1, u'+    debugAssert((iCol >= 0) && (iCol < 3));'), (182, 1, u'+    debugAssert((iRow >= 0) && (iRow < 3));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(174, 1, u'+            debugAssert(vertex[j].isFinite());'), (180, 1, u'+            debugAssert(N.isFinite());'), (195, 1, u'+            debugAssert(N.isUnit() || N.isZero());'), (204, 1, u'+            debugAssert(N.isUnit() || N.isZero());'), (308, 1, u'+    debugAssert(skip >= 0);'), (309, 1, u'+    debugAssert(run >= 0);'), (346, 1, u'+    debugAssert(indexArray.size() % 3 == 0);'), (677, 1, u'+    debugAssertM(faceArray.size() != 0, "Unable to calculate valid tangent space without faces.");'), (718, 1, u'+        debugAssertM(N.isUnit() || N.isZero(), "Input normals must have unit length");')]
===========================================
Class:class MeshDirectedEdgeKey { class MeshDirectedEdgeKey 
Class:class MeshEdgeTable { class MeshEdgeTable 
Class:class Welder { class Welder 
Class:class VN { class VN 
Class:class WeldHelper { class WeldHelper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 1, u'+    debugAssert(scale > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+    debugAssert(part.length() == 2);')]
===========================================
Class:class Dummy { class Dummy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(337, 1, u'+    debugAssert(! initialized);'), (421, 1, u'+    debugAssert(! initialized);'), (560, 1, u'+    debugAssert(initialized);'), (903, 1, u'+    debugAssertM(false, "Should not reach this point");'), (934, 1, u'+    debugAssert(ret == b.size());'), (959, 1, u'+    debugAssert(state == RECEIVING);'), (999, 1, u'+    debugAssert(messageSize < 6e7);'), (1001, 1, u'+    debugAssert(receiveBufferUsedSize == 0);'), (1022, 1, u'+    debugAssert(state == RECEIVING);'), (1023, 1, u'+    debugAssert(messageType != 0);'), (1024, 1, u'+    debugAssertM(receiveBufferUsedSize < messageSize, "Message already received.");'), (1025, 1, u'+    debugAssertM(messageSize >= receiveBufferUsedSize, "Message size overflow.");'), (1097, 1, u'+        debugAssert(port != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssertM(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 1, u'+        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 1, u'+            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 1, u'+    debugAssert(data);'), (219, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 1, u'+    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(89, 1, u'+\tassert(numPlanes < 31);'), (138, 1, u'+\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssertM(N > 0, "No control points");'), (113, 1, u'+            debugAssert(s - d * wraps >= t0);'), (114, 1, u'+            debugAssert(s - d * wraps < tn + getFinalInterval());'), (120, 1, u'+            debugAssert(s < tn + fi);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    alwaysAssertM(! inBetween, "Stopwatch::tick() called twice in a row.");'), (91, 1, u'+    alwaysAssertM(inBetween, "Stopwatch::tock() called without matching tick.");')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(663, 1, u'+    debugAssertM(false,'), (908, 1, u'+        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+    debugAssert(option.numColumns > 1);'), (239, 1, u"+            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 1, u'+    debugAssert(f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 1, u'+        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+AssertionHook _debugHook = _handleDebugAssert_;'), (37, 1, u'+AssertionHook _failureHook = _handleErrorCheck_;'), (132, 1, u'+bool _handleDebugAssert_('), (309, 1, u'+void setAssertionHook(AssertionHook hook) {'), (313, 1, u'+AssertionHook assertionHook() {'), (317, 1, u'+void setFailureHook(AssertionHook hook) {'), (321, 1, u'+AssertionHook failureHook() {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 1, u'+                        debugAssertM(false, "Files of the form d:path are"'), (110, 1, u'+    debugAssert(filename != "");'), (116, 1, u'+        debugAssert(buffer);'), (118, 1, u'+        debugAssert(f);'), (120, 1, u'+\t    debugAssert(ret == length);(void)ret;'), (142, 1, u'+        debugAssertM(false, filename + " not found");'), (166, 1, u'+                debugAssertM((size_t)test == length,'), (346, 1, u'+    debugAssert(file);'), (393, 1, u'+    debugAssert(base == "");'), (394, 1, u'+    debugAssert(ext == "");'), (937, 1, u'+            debugAssertM(filenameBaseExt(filespec) == "*", "Can only call getFiles/getDirs on zipfiles using \'*\' wildcard");'), (946, 1, u'+        debugAssertM(filenameBaseExt(filespec) == "*", "Can only call getFiles/getDirs on zipfiles using \'*\' wildcard");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+      debugAssert(heapBuffer);'), (142, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
Class:  class ObjectWorldLoader { 
Class:  class ObjectWorldLoader { 
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
Class:  class Patcher { 
Class:  class Patcher { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
Class:    class CharacterHandler { 
Class:  class ObjectWorldLoader { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
Class:  class ObjectWorldLoader { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
Class:    class CharacterHandler { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1097, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1138, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1181, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1243, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1255, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 1, u'+        Assert(more >= 2, "more < 2");'), (1481, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1725, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 2, u'-  ACE_ASSERT (0); // not implemented.'), (116, 2, u'-  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 2, u'-              ACE_ASSERT (0);'), (637, 2, u'-              ACE_ASSERT (0);'), (645, 2, u'-          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class:   class ACE_Cleanup_Info_Node { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (121, 2, u'-  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (127, 2, u'-  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (128, 2, u'-  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (129, 2, u'-  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (138, 2, u'-  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (147, 2, u'-  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-  ACE_ASSERT (size != 0);'), (54, 2, u'-  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 2, u'-  ACE_ASSERT (result != 0);'), (669, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 2, u'-      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:   class TSS_Cleanup_Instance { 
Class:   class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class: class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-      ACE_ASSERT (dynamic_instance != 0);'), (79, 2, u'-      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 2, u'-#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 2, u'-  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 2, u'-  ACE_ASSERT (0);'), (115, 2, u'-  ACE_ASSERT (0);'), (130, 2, u'-  ACE_ASSERT (0);'), (424, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (475, 2, u'-  ACE_ASSERT (h->orig_id_ != -1);'), (664, 2, u'-      ACE_ASSERT (result == 1);'), (811, 2, u'-          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                              ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(190, 2, u'-        ACE_ASSERT (copy_constructor_not_supported);')]
===========================================
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 2, u'-  ACE_ASSERT (result != 0);'), (477, 2, u'-  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 1, u'+  ACE_ASSERT (0); // not implemented.'), (116, 1, u'+  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 1, u'+              ACE_ASSERT (0);'), (637, 1, u'+              ACE_ASSERT (0);'), (645, 1, u'+          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class:   class ACE_Cleanup_Info_Node { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 1, u'+  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (121, 1, u'+  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (127, 1, u'+  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (128, 1, u'+  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (129, 1, u'+  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (138, 1, u'+  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (147, 1, u'+  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+  ACE_ASSERT (size != 0);'), (54, 1, u'+  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 1, u'+  ACE_ASSERT (result != 0);'), (669, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 1, u'+      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:   class TSS_Cleanup_Instance { 
Class:   class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class: class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+      ACE_ASSERT (dynamic_instance != 0);'), (79, 1, u'+      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 1, u'+  ACE_ASSERT (0);'), (115, 1, u'+  ACE_ASSERT (0);'), (130, 1, u'+  ACE_ASSERT (0);'), (424, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (475, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (664, 1, u'+      ACE_ASSERT (result == 1);'), (811, 1, u'+          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                              ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(190, 1, u'+        ACE_ASSERT (copy_constructor_not_supported);')]
===========================================
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 1, u'+  ACE_ASSERT (result != 0);'), (477, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+                assert(p != NULL);'), (110, 1, u'+        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
Class:    class AchievementChatBuilder     class AchievementChatBuilder
Class:    class AchievementChatBuilder     class AchievementChatBuilder
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
Class:     class BattleGround2ChatBuilder     {     
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
Class:     class BattleGround2ChatBuilder     {     
Class:    class CharacterHandler { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
Class:    class EmoteChatBuilder     class EmoteChatBuilder
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 2, u'-            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-                assert(p != NULL);'), (110, 2, u'-        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
Class:    class MonsterChatBuilder     class MonsterChatBuilder
Class:    class CharacterHandler { 
Class: class LootTemplate::LootGroup                                { 
Class: class LootTemplate::LootGroup                                { 
Class:  class ObjectWorldLoader { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 1, u'+            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
Class:    class MonsterChatBuilder     class MonsterChatBuilder
Class:  class ObjectWorldLoader { 
Class:    class WorldWorldTextBuilder     class WorldWorldTextBuilder
Class:    class WorldWorldTextBuilder     class WorldWorldTextBuilder
Class:  class Patcher { 
Class:  class RealmdSignalHandler : public Trinity::SignalHandler { 
Class:  class CoredSignalHandler : public Trinity::SignalHandler { 
Class: class FreezeDetectorRunnable : public ACE_Based::Runnable { 
Class: class RARunnable : public ACE_Based::Runnable { 
Class:  class Patcher { 
Class:  class RealmdSignalHandler : public Trinity::SignalHandler { 
Class:  class CoredSignalHandler : public Trinity::SignalHandler { 
Class: class FreezeDetectorRunnable : public ACE_Based::Runnable { 
Class: class RARunnable : public ACE_Based::Runnable { 
Class:    class AchievementChatBuilder     class AchievementChatBuilder
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
Class:     class BattleGround2ChatBuilder     {     
Class:    class CharacterHandler { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 2, u'-            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-                assert(p != NULL);'), (110, 2, u'-        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
Class: class LootTemplate::LootGroup                                { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
Class:    class MonsterChatBuilder     class MonsterChatBuilder
Class:  class ObjectWorldLoader { 
Class:    class WorldWorldTextBuilder     class WorldWorldTextBuilder
Class:    class AchievementChatBuilder     class AchievementChatBuilder
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
Class:     class BattleGround2ChatBuilder     {     
Class:    class CharacterHandler { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 1, u'+            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+                assert(p != NULL);'), (110, 1, u'+        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
Class: class LootTemplate::LootGroup                                { 
Class: class WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
Class:    class MonsterChatBuilder     class MonsterChatBuilder
Class:  class ObjectWorldLoader { 
Class:    class WorldWorldTextBuilder     class WorldWorldTextBuilder
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
Class:  class CoredSignalHandler : public Trinity::SignalHandler { 
Class: class FreezeDetectorRunnable : public ACE_Based::Runnable { 
Class: class RARunnable : public ACE_Based::Runnable { 
Class:  class Patcher { 
Class:  class RealmdSignalHandler : public Trinity::SignalHandler { 
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
Class:  class CoredSignalHandler : public Trinity::SignalHandler { 
Class: class FreezeDetectorRunnable : public ACE_Based::Runnable { 
Class: class RARunnable : public ACE_Based::Runnable { 
Class:  class Patcher { 
Class:  class RealmdSignalHandler : public Trinity::SignalHandler { 
Class: class FrameBuf { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(553, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (760, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (771, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (774, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (796, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (807, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (827, 2, u'-        Assert(*scan == *match, "match[2]?");'), (839, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (880, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (882, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (884, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (899, 2, u'-    Assert(*scan == *match, "match[2]?");'), (911, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1031, 2, u'-        Assert(more >= 2, "more < 2");'), (1100, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1108, 2, u'-\tAssert(s->block_start >= 0L, "block gone");'), (1342, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(220, 2, u'-        Assert(k < 16, "inflate_codes grabbed too many bytes")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+            assert(MoviEx[i] < nVertices);'), (161, 1, u'+        assert(check==0);')]
===========================================
===========================================
Total add: 65
Total del: 112
Header: WMOGroup::ConvertToVMAPGroupWmo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+            assert(MoviEx[i] < nVertices);'), (161, 1, u'+        assert(check==0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+            assert(MoviEx[i] < nVertices);'), (161, 1, u'+        assert(check==0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(numPlanes < 31);'), (3, 1, u'+    assert(plane.size() < 31);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AABox::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(numPlanes < 31);'), (3, 1, u'+    assert(plane.size() < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(numPlanes < 31);'), (3, 1, u'+    assert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(numPlanes < 31);'), (24, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: AABox::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(numPlanes < 31);'), (24, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(numPlanes < 31);'), (24, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Total add: 64
Total del: 1
Header: AABox::intersects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+        debugAssertM(false, "Invalid corner index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+        alwaysAssertM(m_data, "Corrupt placeholder");'), (135, 1, u'+    debugAssertM(referenceCount.value() <= 0, "Deleted while still referenced.");'), (140, 1, u'+        debugAssert(value.s != NULL);'), (145, 1, u'+        debugAssert(value.a != NULL);'), (150, 1, u'+        debugAssert(value.t != NULL);'), (156, 1, u'+        debugAssertM(value.s == NULL, "Corrupt Any::Data::Value");'), (253, 1, u'+    alwaysAssertM(t == ARRAY || t == TABLE, "Can only create ARRAY or TABLE from Type enum.");'), (338, 1, u'+        alwaysAssertM(false, "Can only assign NONE, TABLE, or ARRAY Type enum.");'), (439, 1, u'+    alwaysAssertM(n >= 0, "Cannot resize less than 0.");'), (465, 1, u'+    debugAssert(m_data != NULL);'), (483, 1, u'+    debugAssert(m_data != NULL);'), (492, 1, u'+    debugAssert(m_data != NULL);'), (500, 1, u'+    debugAssert(m_data != NULL);'), (532, 1, u'+    debugAssert(m_data != NULL);'), (540, 1, u'+    debugAssert(m_data != NULL);'), (582, 1, u'+    debugAssert(m_data != NULL);'), (617, 1, u'+        debugAssert(m_data != NULL);'), (624, 1, u'+        debugAssert(m_data != NULL);'), (644, 1, u'+        debugAssert(m_data != NULL);'), (661, 1, u'+        alwaysAssertM(false, "Unknown type.");'), (777, 1, u'+        debugAssert(m_data != NULL);'), (782, 1, u'+        debugAssert(m_data != NULL);'), (819, 1, u'+        debugAssert(m_data != NULL);'), (880, 1, u'+    debugAssert(token.type() == Token::SYMBOL);'), (1231, 1, u'+        alwaysAssertM(false, "Illegal Any::Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(172, 1, u'+        debugAssertM(false, "Cannot construct AnyVal from constants except ARRAY or TABLE.");'), (275, 1, u'+        debugAssertM(false, "Internal error: no destructor for this type.");'), (360, 1, u'+        debugAssertM(false, "Internal error: no assignment operator for this type.");'), (558, 1, u'+        debugAssertM(false, "Internal error: no serialize method for this type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+    debugAssert(sizeHint > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+    debugAssertM(m_filename != "<memory>", "Read past end of file.");'), (141, 1, u'+        debugAssert(m_freeBuffer);'), (152, 1, u'+        debugAssert(file);'), (154, 1, u'+        debugAssert(ret == 0);'), (157, 1, u'+        debugAssert(ret == toRead);'), (163, 1, u'+        debugAssert(file);'), (165, 1, u'+        debugAssert(ret == 0);'), (168, 1, u'+        debugAssert((size_t)ret == (size_t)toRead);'), (174, 1, u'+    debugAssert(m_pos >= 0);'), (229, 1, u'+        debugAssert(m_freeBuffer);'), (237, 1, u'+        debugAssert(result == Z_OK); (void)result;'), (243, 1, u'+ \t        debugAssert(!m_freeBuffer);'), (246, 1, u'+\t        debugAssert(m_freeBuffer);'), (316, 1, u'+    debugAssert(m_freeBuffer);'), (330, 1, u'+    debugAssert(m_buffer);'), (354, 1, u'+    alwaysAssertM(m_length < m_bufferLength * 500, "Compressed file header is corrupted");'), (359, 1, u'+    debugAssert(m_buffer);'), (360, 1, u'+    debugAssert(isValidHeapPointer(tempBuffer));'), (361, 1, u'+    debugAssert(isValidHeapPointer(m_buffer));'), (368, 1, u'+    debugAssertM(result == Z_OK, "BinaryInput/zlib detected corruption in " + m_filename);'), (377, 1, u'+    debugAssert(isValidPointer(bytes));'), (417, 1, u'+    debugAssertM((m_pos + n) <= m_length, "Read past end of file");'), (420, 1, u'+    assert(s != NULL);'), (521, 1, u'+    debugAssert(m_beginEndBits == 0);'), (525, 1, u'+    debugAssertM(hasMore(), "Can\'t call beginBits when at the end of a file");'), (531, 1, u'+    debugAssert(m_beginEndBits == 1);'), (559, 1, u'+    debugAssert(m_beginEndBits == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (153, 1, u'+        debugAssert(writeBytes > 0);'), (159, 1, u'+        debugAssert(file);'), (162, 1, u'+        debugAssert((int)count == writeBytes); (void)count;'), (172, 1, u'+        debugAssert(m_bufferLen < m_maxBufferLen);'), (173, 1, u'+        debugAssert(m_bufferLen >= 0);'), (174, 1, u'+        debugAssert(m_pos >= 0);'), (175, 1, u'+        debugAssert(m_pos <= m_bufferLen);'), (178, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (180, 1, u'+        debugAssert(isValidHeapPointer(m_buffer));'), (232, 1, u'+    debugAssert(m_beginEndBits == 0);'), (233, 1, u'+    alwaysAssertM(m_filename == "<memory>",'), (248, 1, u'+    debugAssert((m_buffer == NULL) || isValidHeapPointer(m_buffer));'), (281, 1, u'+    debugAssert(result == Z_OK); (void)result;'), (310, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (312, 1, u'+    debugAssertM(m_beginEndBits == 0, "Missing endBits before commit");'), (331, 1, u'+        debugAssertM(file, std::string("Could not open \'") + m_filename + "\'");'), (338, 1, u'+            debugAssertM(success == 1, std::string("Could not write to \'") + m_filename + "\'");'), (351, 1, u'+    debugAssertM(! m_committed, "Cannot commit twice");'), (379, 1, u'+    debugAssert(m_beginEndBits == 0);'), (420, 1, u'+    debugAssert(m_beginEndBits == 0);'), (485, 1, u'+    debugAssertM(m_beginEndBits == 0, "Already in beginBits...endBits");'), (513, 1, u'+    debugAssertM(m_beginEndBits == 1, "Not in beginBits...endBits");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    debugAssert(')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: Box::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    debugAssert(')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    debugAssert(')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    debugAssert(! isNaN(_extent.x));')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: Box::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    debugAssert(! isNaN(_extent.x));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    debugAssert(! isNaN(_extent.x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(numPlanes < 31);'), (3, 1, u'+    assert(plane.size() < 31);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Box::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(numPlanes < 31);'), (3, 1, u'+    assert(plane.size() < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(numPlanes < 31);'), (3, 1, u'+    assert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    assert(numPlanes < 31);'), (15, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: Box::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    assert(numPlanes < 31);'), (15, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    assert(numPlanes < 31);'), (15, 1, u'+\tassert(plane.size() < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+    debugAssert(separatingAxisIndex >= 0);'), (50, 1, u'+    debugAssert(separatingAxisIndex < 15);'), (176, 1, u'+        debugAssertM(false, "fell through switch statement");'), (365, 1, u'+    debugAssert(lastSeparatingAxis >= -1);'), (366, 1, u'+    debugAssert(lastSeparatingAxis < 15);'), (627, 1, u'+            debugAssertM(false,'), (758, 1, u'+        debugAssertM(false, "Fell through switch");'), (897, 1, u'+    debugAssertM(fabs(ray.direction().squaredLength() - 1.0f) < 0.01f, format("Length = %f", ray.direction().length()));'), (1660, 1, u'+            debugAssertM(b[0] >= 0.0 && b[0] <= 1.0f, "Intersection is outside triangle.");'), (1661, 1, u'+            debugAssertM(b[1] >= 0.0 && b[1] <= 1.0f, "Intersection is outside triangle.");'), (1662, 1, u'+            debugAssertM(b[2] >= 0.0 && b[2] <= 1.0f, "Intersection is outside triangle.");'), (1667, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation), "Barycentric coords don\'t match intersection.");'), (1712, 1, u'+                debugAssertM(fuzzyGe(b[i], 0.0f) && fuzzyLe(b[i], 1.0f), "Intersection is outside triangle.");'), (1718, 1, u'+            debugAssertM(blend.fuzzyEq(outLocation),'), (1906, 1, u'+    debugAssert((v1 - v0).direction().fuzzyEq(edgeDirection));'), (1907, 1, u'+    debugAssert(fuzzyEq((v1 - v0).magnitude(), edgeLength));'), (1990, 1, u'+        debugAssertM(fuzzyEq(diff.direction().dot(edgeDirection[edgeIndex]), 1.0f) ||'), (1993, 1, u'+        debugAssertM(frac >= -0.000001, "Point off low side of edge.");'), (1994, 1, u'+        debugAssertM(frac <= 1.000001, "Point off high side of edge.");'), (2038, 1, u'+        debugAssertM(false, "Should not get here.");'), (2055, 1, u'+    debugAssert(area != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(281, 1, u'+    debugAssertM((_hsv.x <= 1.0f && _hsv.x >= 0.0f)'), (309, 1, u'+        debugAssertM(false, "fell through switch..");'), (316, 1, u'+\tdebugAssertM((_rgb.r <= 1.0f && _rgb.r >= 0.0f)'), (351, 1, u'+\tdebugAssertM(val <= 1.0f && val >= 0.0f , "value should be in [0,1]");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    debugAssert(angle >= 0);'), (26, 1, u'+    debugAssert(angle <= pi());'), (43, 1, u'+        debugAssert(dp > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(176, 1, u'+        debugAssertM(count < 2, "Convex polygons may only intersect planes at two edges.");'), (185, 1, u'+    debugAssertM((count == 2) || (count == 0), "Convex polygons may only intersect planes at two edges.");'), (377, 1, u'+        debugAssert(numVertices >= 3);'), (401, 1, u'+            debugAssertM(distance < 0.02, "Edge missing while closing polygon.");'), (414, 1, u'+    debugAssert((above.face.length() == 0) || (above.face.length() >= 4));'), (415, 1, u'+    debugAssert((below.face.length() == 0) || (below.face.length() >= 4));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(270, 1, u'+        debugAssert(! isNaN(out._corner[i].x));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 1, u'+    debugAssert((angle < pi()) && (angle > 0));'), (131, 1, u'+    debugAssert(m_fieldOfView < toRadians(180));'), (478, 1, u'+    debugAssert(nearPlaneZ() < 0.0f);'), (480, 1, u'+    debugAssert(farPlaneZ() < 0.0f);'), (490, 1, u'+    debugAssert(m_nearPlaneZ < 0.0f);'), (492, 1, u'+    debugAssert(m_farPlaneZ < 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(182, 1, u'+    alwaysAssertM(temp != NULL, "Out of memory");'), (210, 1, u'+    alwaysAssertM(temp != NULL, "Out of memory");'), (266, 1, u'+        debugAssert(false);'), (269, 1, u'+    debugAssert(m_width >= 0);'), (270, 1, u'+    debugAssert(m_height >= 0);'), (271, 1, u'+    debugAssert(m_channels == 1 || m_channels == 3 || m_channels == 4);'), (272, 1, u'+    debugAssert(m_byte != NULL);'), (346, 1, u'+                        debugAssert(p < m_width * m_height);'), (448, 1, u'+    debugAssert(data != NULL);'), (519, 1, u'+        alwaysAssertM(this != NULL, "Corrupt GImage");'), (567, 1, u'+    debugAssert(width >= 0);'), (568, 1, u'+    debugAssert(height >= 0);'), (569, 1, u'+    debugAssert(channels >= 1);'), (583, 1, u'+        debugAssert(isValidHeapPointer(m_byte));'), (598, 1, u'+    debugAssert(isValidHeapPointer(m_byte));'), (708, 1, u'+    debugAssert(ret);'), (795, 1, u'+    debugAssert(outData);'), (832, 1, u'+        debugAssert(false);'), (838, 1, u'+    debugAssert(alpha.width() == width());'), (839, 1, u'+    debugAssert(alpha.height() == height());'), (904, 1, u'+    debugAssert(whiteHeightInPixels >= 0);'), (1025, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");'), (1071, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");'), (1114, 1, u'+        alwaysAssertM(false, "Bad number of channels in input image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    debugAssert(in != out);'), (37, 1, u'+    debugAssert(out != in);'), (80, 1, u'+    debugAssert(isEven(w));'), (81, 1, u'+    debugAssert(isEven(h));'), (165, 1, u'+    debugAssert(in != _out);'), (243, 1, u'+    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    debugAssert(m_channels == 1 || m_channels == 3);'), (205, 1, u'+        debugAssert(palette);'), (242, 1, u'+    debugAssert(m_byte);'), (440, 1, u'+\tdebugAssert(r == 0);'), (442, 1, u'+\tdebugAssert(r == 1);'), (450, 1, u'+\tdebugAssert(count > 0);'), (475, 1, u'+    debugAssert(m_byte);')]
===========================================
Class:class memory_destination_mgr { class memory_destination_mgr 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(184, 1, u'+            debugAssert(s); (void)s;'), (260, 1, u'+    debugAssert(m_channels == 3);'), (440, 1, u'+    alwaysAssertM(this, "Corrupt GImage");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+    debugAssert( png_ptr->io_ptr != NULL );'), (25, 1, u'+    debugAssert( length >= 0 );'), (26, 1, u'+    debugAssert( data != NULL );'), (36, 1, u'+    debugAssert( png_ptr->io_ptr != NULL );'), (37, 1, u'+    debugAssert( data != NULL );'), (55, 1, u'+    debugAssert( error_msg != NULL );'), (66, 1, u'+    debugAssert( warning_msg != NULL );'), (74, 1, u'+    debugAssert( m_channels == 1 || m_channels == 3 || m_channels == 4 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 1, u'+        alwaysAssertM(false, "PPM requires either 1 or 3 channels exactly.");'), (74, 1, u'+        alwaysAssertM(false, "PPM requires either 1 or 3 channels exactly.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(156, 1, u'+    debugAssert(m_byte);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 1, u'+    debugAssert(cutOffAngleDegrees <= 90);')]
===========================================
Class:class BasicThread: public GThread { class BasicThread: public GThread 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+    alwaysAssertM(m_status != STATUS_RUNNING, "Deleting thread while running.");'), (77, 1, u'+    debugAssertM(! started(), "Thread has already executed.");'), (96, 1, u'+        debugAssert(m_event);'), (148, 1, u'+        debugAssert(m_event);'), (151, 1, u'+        debugAssert(m_handle);'), (160, 1, u'+    debugAssert(current->m_event);'), (185, 1, u'+    debugAssert(ret == 0);'), (187, 1, u'+    debugAssert(ret == 0);'), (189, 1, u'+    debugAssert(ret == 0);'), (199, 1, u'+    debugAssert(ret == 0);'), (201, 1, u'+    debugAssert(ret == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (206, 1, u'+    debugAssert(c >= 0 && c <= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+        debugAssertM(false, "Input GImage must have 1, 3, or 4 channels.");'), (203, 1, u'+    debugAssert(c >= 0 && c <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+    debugAssert(_packedBitsPerTexel <= _hardwareBitsPerTexel);'), (74, 1, u'+        debugAssertM(false, "Depth must be 16, 24, or 32.");'), (95, 1, u'+        debugAssertM(false, "Stencil must be 1, 4, 8 or 16.");'), (194, 1, u'+    debugAssert(code < CODE_NUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(284, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (337, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (392, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (415, 1, u'+    debugAssertM(srcRowPadBits % 8 == 0, "Source row padding must be a multiple of 8 bits for this format");'), (438, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (462, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (485, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (509, 1, u'+    debugAssertM(dstRowPadBits % 8 == 0, "Destination row padding must be a multiple of 8 bits for this format");'), (553, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (554, 1, u'+    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (591, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (592, 1, u'+    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (621, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (649, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (650, 1, u'+    debugAssertM((srcWidth % 2 == 0) && (srcHeight % 2 == 0), "Source width and height must be a multiple of two");'), (680, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (681, 1, u'+    debugAssertM((srcWidth % 2 == 0), "Source width must be a multiple of two");'), (712, 1, u'+    debugAssertM(srcRowPadBits == 0, "Source row padding must be 0 for this format");'), (809, 1, u'+    debugAssert(isEven(w));'), (810, 1, u'+    debugAssert(isEven(h));'), (1039, 1, u'+    debugAssert(in != _out);'), (1094, 1, u'+    debugAssert(in != _out);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+        debugAssertM(i == 0 || i == 1, "Argument to point must be 0 or 1");'), (116, 1, u'+    debugAssert(i == 0 || i == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+    debugAssert((d.rows() == 1) || (d.cols() == 1));'), (169, 1, u'+    debugAssertM(vec.cols() == cols(),'), (171, 1, u'+    debugAssertM(vec.rows() == 1,'), (174, 1, u'+    debugAssert(r >= 0);'), (175, 1, u'+    debugAssert(r < rows());'), (186, 1, u'+    debugAssertM(vec.rows() == rows(),'), (188, 1, u'+    debugAssertM(vec.cols() == 1,'), (191, 1, u'+    debugAssert(c >= 0);'), (193, 1, u'+    debugAssert(c < cols());'), (209, 1, u'+    debugAssert(r >= 0);'), (210, 1, u'+    debugAssert(r < rows());'), (218, 1, u'+    debugAssert(c >= 0);'), (219, 1, u'+    debugAssert(c < cols());'), (290, 1, u'+    debugAssert(r >= 0 && r < rows());'), (311, 1, u'+    debugAssert(impl->R == 3);'), (312, 1, u'+    debugAssert(impl->C == 3);'), (321, 1, u'+    debugAssert(impl->R == 4);'), (322, 1, u'+    debugAssert(impl->C == 4);'), (332, 1, u'+    debugAssert(impl->R * impl->C == 2);'), (342, 1, u'+    debugAssert(impl->R * impl->C == 3);'), (352, 1, u'+    debugAssert('), (365, 1, u'+    debugAssert(r0 >= 0 && r0 < rows());'), (366, 1, u'+    debugAssert(r1 >= 0 && r1 < rows());'), (381, 1, u'+    debugAssert(c0 >= 0 && c0 < cols());'), (382, 1, u'+    debugAssert(c1 >= 0 && c1 < cols());'), (396, 1, u'+    debugAssert(r2>=r1);'), (397, 1, u'+    debugAssert(c2>=c1);'), (398, 1, u'+    debugAssert(c2<cols());'), (399, 1, u'+    debugAssert(r2<rows());'), (400, 1, u'+    debugAssert(r1>=0);'), (401, 1, u'+    debugAssert(c1>=0);'), (426, 1, u'+    debugAssert(rows() >= cols());'), (427, 1, u'+    debugAssertM(&U != &V, "Arguments to SVD must be different matrices");'), (428, 1, u'+    debugAssertM(&U != this, "Arguments to SVD must be different matrices");'), (429, 1, u'+    debugAssertM(&V != this, "Arguments to SVD must be different matrices");'), (449, 1, u'+    debugAssertM(ret == NULL, ret);'), (635, 1, u'+    debugAssertM('), (639, 1, u'+    debugAssert(A.C == B.R);'), (640, 1, u'+    debugAssert(A.R == out.R);'), (641, 1, u'+    debugAssert(B.C == out.C);'), (663, 1, u'+    debugAssert(A.C == B.C);\\'), (664, 1, u'+    debugAssert(A.R == B.R);\\'), (665, 1, u'+    debugAssert(A.C == out.C);\\'), (666, 1, u'+    debugAssert(A.R == out.R);\\'), (678, 1, u'+    debugAssert(A.C == out.C);\\'), (679, 1, u'+    debugAssert(A.R == out.R);\\'), (691, 1, u'+    debugAssert(A.C == out.C);\\'), (692, 1, u'+    debugAssert(A.R == out.R);\\'), (725, 1, u'+    debugAssert(A.C == out.C);'), (726, 1, u'+    debugAssert(A.R == out.R);'), (735, 1, u'+    debugAssert(&out != this);'), (754, 1, u'+    debugAssert(out.R == C);'), (755, 1, u'+    debugAssert(out.C == R);'), (784, 1, u'+    debugAssert(&out != this);'), (802, 1, u'+    debugAssert(R > 0);'), (803, 1, u'+    debugAssert(C > 0);'), (811, 1, u'+    debugAssert(r >= 0);'), (825, 1, u'+    debugAssert(R == C);'), (874, 1, u'+    debugAssert(out.R == R - 1);'), (875, 1, u'+    debugAssert(out.C == C - 1);'), (980, 1, u'+        alwaysAssertM(A.cols() == r,'), (982, 1, u'+        alwaysAssertM(V.cols() >= r,'), (1034, 1, u'+    alwaysAssertM((m<=n),"Row-partitioned block matrix pseudoinverse requires R<C");'), (1066, 1, u'+        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1074, 1, u'+    alwaysAssertM((m>=n),"Column-partitioned block matrix pseudoinverse requires R>C");'), (1104, 1, u'+        alwaysAssertM(false, "G3D internal error: Should have used the vector or general case!");'), (1352, 1, u'+    debugAssertM(R == C,'), (1421, 1, u'+        debugAssertM(piv != 0.0, "Matrix is singular");'), (1513, 1, u'+    debugAssertM(rows >= cols, "Must have more rows than columns");'), (1516, 1, u'+    debugAssert(rv1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert((0 <= iRow) && (iRow < 3));')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: Matrix3::getColumn
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert((0 <= iRow) && (iRow < 3));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert((0 <= iRow) && (iRow < 3));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+    assert(iter < MAX_ITERS);'), (78, 1, u'+    assert(resid < eps);'), (83, 1, u'+    assert(resid < eps);'), (88, 1, u'+    assert(resid < eps);')]
===========================================
===========================================
Total add: 91
Total del: 0
Header: Matrix3::qDUDecomposition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+    assert(iter < MAX_ITERS);'), (78, 1, u'+    assert(resid < eps);'), (83, 1, u'+    assert(resid < eps);'), (88, 1, u'+    assert(resid < eps);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+    assert(iter < MAX_ITERS);'), (78, 1, u'+    assert(resid < eps);'), (83, 1, u'+    assert(resid < eps);'), (88, 1, u'+    assert(resid < eps);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (207, 1, u'+    debugAssertM(abs(upDirection) == 1.0f, "upDirection must be -1 or +1");'), (217, 1, u'+    debugAssertM(elt[3][2] == -1, "Not a projection matrix");'), (218, 1, u'+    debugAssertM(elt[0][1] == 0, "Not a projection matrix");'), (219, 1, u'+    debugAssertM(elt[0][3] == 0, "Not a projection matrix");'), (220, 1, u'+    debugAssertM(elt[1][3] == 0, "Not a projection matrix");'), (221, 1, u'+    debugAssertM(elt[3][3] == 0, "Not a projection matrix");'), (222, 1, u'+    debugAssertM(elt[1][0] == 0, "Not a projection matrix");'), (223, 1, u'+    debugAssertM(elt[2][0] == 0, "Not a projection matrix");'), (224, 1, u'+    debugAssertM(elt[2][1] == 0, "Not a projection matrix");'), (225, 1, u'+    debugAssertM(elt[3][0] == 0, "Not a projection matrix");'), (226, 1, u'+    debugAssertM(elt[3][1] == 0, "Not a projection matrix");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(183, 1, u'+            debugAssert(vertex[j].isFinite());'), (189, 1, u'+            debugAssert(N.isFinite());'), (204, 1, u'+            debugAssert(N.isUnit() || N.isZero());'), (213, 1, u'+            debugAssert(N.isUnit() || N.isZero());'), (317, 1, u'+    debugAssert(skip >= 0);'), (318, 1, u'+    debugAssert(run >= 0);'), (355, 1, u'+    debugAssert(indexArray.size() % 3 == 0);'), (559, 1, u'+    debugAssertM(faceArray.size() != 0, "Unable to calculate valid tangent space without faces.");'), (624, 1, u'+        debugAssertM(N.isUnit() || N.isZero(), "Input normals must have unit length");')]
===========================================
Class:class MeshEdgeTable { class MeshEdgeTable 
Class:    class Edge {     class Edge 
Class:     class Iterator {     class Iterator 
Class:class Welder { class Welder 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 1, u'+    debugAssert(scale > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+    debugAssert(part.length() == 2);')]
===========================================
Class:class Dummy { class Dummy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(337, 1, u'+    debugAssert(! initialized);'), (421, 1, u'+    debugAssert(! initialized);'), (560, 1, u'+    debugAssert(initialized);'), (903, 1, u'+    debugAssertM(false, "Should not reach this point");'), (934, 1, u'+    debugAssert(ret == b.size());'), (959, 1, u'+    debugAssert(state == RECEIVING);'), (999, 1, u'+    debugAssert(messageSize < 6e7);'), (1001, 1, u'+    debugAssert(receiveBufferUsedSize == 0);'), (1022, 1, u'+    debugAssert(state == RECEIVING);'), (1023, 1, u'+    debugAssert(messageType != 0);'), (1024, 1, u'+    debugAssertM(receiveBufferUsedSize < messageSize, "Message already received.");'), (1025, 1, u'+    debugAssertM(messageSize >= receiveBufferUsedSize, "Message size overflow.");'), (1097, 1, u'+        debugAssert(port != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    alwaysAssertM(isPow2(dataSize), "dataSize must be a power of 2");'), (54, 1, u'+    alwaysAssertM(isPow2(dataSize), "dataSize must be a power of 2");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\tdebugAssert(direction.isUnit());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    debugAssertM(isValidHeapPointer(this),'), (49, 1, u'+    debugAssertM(G3D::isValidHeapPointer(this),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (64, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (70, 1, u'+        debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (91, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (97, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (118, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (127, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (148, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (154, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (164, 1, u'+            debugAssertM(result == ERROR_SUCCESS, "Could not read registry key value.");'), (191, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (196, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (204, 1, u'+    debugAssert(data);'), (219, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (226, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (247, 1, u'+    debugAssert(result == ERROR_SUCCESS || result == ERROR_FILE_NOT_FOUND);'), (251, 1, u'+        debugAssertM(result == ERROR_SUCCESS, "Could not write registry key value.");'), (261, 1, u'+    debugAssert(str);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(116, 1, u'+\tassert(numPlanes < 31);'), (165, 1, u'+\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+    debugAssertM(N > 0, "No control points");'), (113, 1, u'+            debugAssert(s - d * wraps >= t0);'), (114, 1, u'+            debugAssert(s - d * wraps < tn + getFinalInterval());'), (120, 1, u'+            debugAssert(s < tn + fi);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+    alwaysAssertM(! inBetween, "Stopwatch::tick() called twice in a row.");'), (95, 1, u'+    alwaysAssertM(inBetween, "Stopwatch::tock() called without matching tick.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(387, 1, u'+        alwaysAssertM(false, "Could not find \'" + full + "\' in:\\n" + locations);'), (669, 1, u'+        debugAssert((int)sizeof(filename) > ret);')]
===========================================
===========================================
Total add: 808
Total del: 17
Header: namespace G3D {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(387, 1, u'+        alwaysAssertM(false, "Could not find \'" + full + "\' in:\\n" + locations);'), (669, 1, u'+        debugAssert((int)sizeof(filename) > ret);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(387, 1, u'+        alwaysAssertM(false, "Could not find \'" + full + "\' in:\\n" + locations);'), (669, 1, u'+        debugAssert((int)sizeof(filename) > ret);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(tinyBufferSize >= bytes);'), (3, 1, u'+        assert(tinyBufferSize >= bytes);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: private:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(tinyBufferSize >= bytes);'), (3, 1, u'+        assert(tinyBufferSize >= bytes);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(tinyBufferSize >= bytes);'), (3, 1, u'+        assert(tinyBufferSize >= bytes);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                    assert(tinyPool[tinyPoolSize - 1] != ptr);')]
===========================================
===========================================
Total add: 13
Total del: 2
Header: private:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                    assert(tinyPool[tinyPoolSize - 1] != ptr);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                    assert(tinyPool[tinyPoolSize - 1] != ptr);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(tinyPoolSize < maxTinyBuffers);'), (3, 1, u'+        assert(ptr);'), (4, 1, u'+        assert(tinyPoolSize < maxTinyBuffers);'), (10, 1, u'+                assert(prevOnHeap != ptr);'), (16, 1, u'+        assert(tinyPool[tinyPoolSize] == NULL);')]
===========================================
===========================================
Total add: 14
Total del: 1
Header: private:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(tinyPoolSize < maxTinyBuffers);'), (3, 1, u'+        assert(ptr);'), (4, 1, u'+        assert(tinyPoolSize < maxTinyBuffers);'), (10, 1, u'+                assert(prevOnHeap != ptr);'), (16, 1, u'+        assert(tinyPool[tinyPoolSize] == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(tinyPoolSize < maxTinyBuffers);'), (3, 1, u'+        assert(ptr);'), (4, 1, u'+        assert(tinyPoolSize < maxTinyBuffers);'), (10, 1, u'+                assert(prevOnHeap != ptr);'), (16, 1, u'+        assert(tinyPool[tinyPoolSize] == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                debugAssertM(ptr != NULL, "BufferPool::malloc returned NULL");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                debugAssertM(ptr != NULL, "BufferPool::malloc returned NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                debugAssertM(ptr != NULL, "BufferPool::malloc returned NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            debugAssertM(ptr != NULL,')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            debugAssertM(ptr != NULL,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            debugAssertM(ptr != NULL,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(isValidPointer(ptr));'), (3, 1, u'+        assert(isValidPointer(ptr));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(isValidPointer(ptr));'), (3, 1, u'+        assert(isValidPointer(ptr));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        debugAssert(isValidPointer(ptr));'), (3, 1, u'+        assert(isValidPointer(ptr));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    debugAssertM(b != NULL, "System::malloc returned NULL");'), (3, 1, u'+    debugAssertM(isValidHeapPointer(b), "System::malloc returned an invalid pointer");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: System::calloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    debugAssertM(b != NULL, "System::malloc returned NULL");'), (3, 1, u'+    debugAssertM(isValidHeapPointer(b), "System::malloc returned an invalid pointer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    debugAssertM(b != NULL, "System::malloc returned NULL");'), (3, 1, u'+    debugAssertM(isValidHeapPointer(b), "System::malloc returned an invalid pointer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (3, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: System::alignedMalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (3, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (3, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    debugAssert((alignedPtr - truePtr) + bytes <= totalBytes);'), (12, 1, u'+    debugAssert(alignedPtr - truePtr + bytes <= totalBytes);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: System::alignedMalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    debugAssert((alignedPtr - truePtr) + bytes <= totalBytes);'), (12, 1, u'+    debugAssert(alignedPtr - truePtr + bytes <= totalBytes);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    debugAssert((alignedPtr - truePtr) + bytes <= totalBytes);'), (12, 1, u'+    debugAssert(alignedPtr - truePtr + bytes <= totalBytes);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (8, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));'), (11, 2, u'-        debugAssert( _CrtIsValidPointer(alignedPtr, bytes, TRUE) );'), (12, 1, u'+        debugAssert( _CrtIsValidPointer((void*)alignedPtr, bytes, TRUE) );')]
===========================================
===========================================
Total add: 6
Total del: 5
Header: System::alignedMalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (8, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));'), (11, 2, u'-        debugAssert( _CrtIsValidPointer(alignedPtr, bytes, TRUE) );'), (12, 1, u'+        debugAssert( _CrtIsValidPointer((void*)alignedPtr, bytes, TRUE) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (8, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));'), (11, 2, u'-        debugAssert( _CrtIsValidPointer(alignedPtr, bytes, TRUE) );'), (12, 1, u'+        debugAssert( _CrtIsValidPointer((void*)alignedPtr, bytes, TRUE) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (10, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: System::alignedFree
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (10, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    debugAssert(isValidHeapPointer(truePtr));'), (10, 1, u'+    debugAssert(isValidHeapPointer((void*)truePtr));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(753, 1, u'+    debugAssertM(false,'), (1056, 1, u'+        debugAssertM(false, "Fell through switch");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+    debugAssert(option.numColumns > 1);'), (239, 1, u"+            debugAssertM(str[i] != '\\n' && str[i] != '\\r',"), (400, 1, u'+    debugAssertM(f, "Could not open \\"" + filename + "\\"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 1, u'+        debugAssert(time.size() == control.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (38, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
===========================================
Total add: 34
Total del: 21
Header: Vector3::reflectAbout
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (38, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),'), (38, 1, u'+    debugAssertM(G3D::fuzzyEq(normal.length(), 1.0f),')]
===========================================
Class:class VN { class VN 
Class:class WeldHelper { class WeldHelper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+AssertionHook _debugHook = _handleDebugAssert_;'), (37, 1, u'+AssertionHook _failureHook = _handleErrorCheck_;'), (134, 1, u'+bool _handleDebugAssert_('), (305, 1, u'+void setAssertionHook(AssertionHook hook) {'), (309, 1, u'+AssertionHook assertionHook() {'), (313, 1, u'+void setFailureHook(AssertionHook hook) {'), (317, 1, u'+AssertionHook failureHook() {')]
===========================================
Class:class FileSystemCache { class FileSystemCache 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert(heapBuffer);'), (3, 1, u'+      debugAssert(heapBuffer);'), (5, 2, u'-      assert(numChars2 == numChars);'), (6, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: vformat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert(heapBuffer);'), (3, 1, u'+      debugAssert(heapBuffer);'), (5, 2, u'-      assert(numChars2 == numChars);'), (6, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert(heapBuffer);'), (3, 1, u'+      debugAssert(heapBuffer);'), (5, 2, u'-      assert(numChars2 == numChars);'), (6, 1, u'+      debugAssert(numChars2 == numChars);')]
===========================================
Class:class DialogTemplate { class DialogTemplate 
Class:    class MapRayCallback     class MapRayCallback
Class:     class AreaInfoCallback     {     
Class:     class LocationInfoCallback     {     
Class:    class TriBoundFunc     class TriBoundFunc
Class:     class WModelAreaCallback {     class WModelAreaCallback 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-                    ASSERT(false);')]
===========================================
===========================================
Total add: 16
Total del: 18
Header: BattleGroundSA::DestroyGate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-                    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-                    ASSERT(false);')]
===========================================
Class:class PrioritizeManaUnitWraper { 
Class: class PrioritizeHealthUnitWraper { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(vehicle);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: struct boss_flame_leviathanAI : public BossAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(vehicle);')]
===========================================
Class:class AllOrbsInGrid  static Speech Speeches[]= public:     AllOrbsInGrid() {}     AllOrbsInGrid() 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+          ACE_ASSERT (rd_handle.num_set() == 1 || wr_handle.num_set () == 1);')]
===========================================
Class: class CoredSignalHandler : public Trinity::SignalHandler { 
Class: class RealmdSignalHandler : public Trinity::SignalHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+            ACE_ASSERT (false);'), (46, 1, u'+                ACE_ASSERT (false);')]
===========================================
===========================================
Total add: 35
Total del: 25
Header: WorldSocket::SendPacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+            ACE_ASSERT (false);'), (46, 1, u'+                ACE_ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+            ACE_ASSERT (false);'), (46, 1, u'+                ACE_ASSERT (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_Header.length () == sizeof (ClientPktHeader));'), (3, 1, u'+    ACE_ASSERT (m_Header.length() == sizeof(ClientPktHeader));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: WorldSocket::handle_input_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_Header.length () == sizeof (ClientPktHeader));'), (3, 1, u'+    ACE_ASSERT (m_Header.length() == sizeof(ClientPktHeader));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_Header.length () == sizeof (ClientPktHeader));'), (3, 1, u'+    ACE_ASSERT (m_Header.length() == sizeof(ClientPktHeader));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_RecvPct.space () == 0);'), (3, 2, u'-    ACE_ASSERT (m_Header.space () == 0);'), (4, 1, u'+    ACE_ASSERT (m_RecvPct.space() == 0);'), (5, 1, u'+    ACE_ASSERT (m_Header.space() == 0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: WorldSocket::handle_input_payload
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_RecvPct.space () == 0);'), (3, 2, u'-    ACE_ASSERT (m_Header.space () == 0);'), (4, 1, u'+    ACE_ASSERT (m_RecvPct.space() == 0);'), (5, 1, u'+    ACE_ASSERT (m_Header.space() == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ACE_ASSERT (m_RecvPct.space () == 0);'), (3, 2, u'-    ACE_ASSERT (m_Header.space () == 0);'), (4, 1, u'+    ACE_ASSERT (m_RecvPct.space() == 0);'), (5, 1, u'+    ACE_ASSERT (m_Header.space() == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-                ACE_ASSERT (message_block.length () == 0);'), (20, 1, u'+                ACE_ASSERT (message_block.length() == 0);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: WorldSocket::handle_input_missing_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-                ACE_ASSERT (message_block.length () == 0);'), (20, 1, u'+                ACE_ASSERT (message_block.length() == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-                ACE_ASSERT (message_block.length () == 0);'), (20, 1, u'+                ACE_ASSERT (message_block.length() == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                ACE_ASSERT (message_block.length () == 0);'), (17, 1, u'+                ACE_ASSERT (message_block.length() == 0);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: WorldSocket::handle_input_missing_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                ACE_ASSERT (message_block.length () == 0);'), (17, 1, u'+                ACE_ASSERT (message_block.length() == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                ACE_ASSERT (message_block.length () == 0);'), (17, 1, u'+                ACE_ASSERT (message_block.length() == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before')]
===========================================
===========================================
Total add: 1
Total del: 107
Header: WorldSession::HandleItemRefund
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 2, u'-            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(len == SEED_KEY_SIZE);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: HmacHash::HmacHash
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(len == SEED_KEY_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(len == SEED_KEY_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ArchorAI::ArchorAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: TurretAI::TurretAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: AOEAI::AOEAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter!=end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (3, 1, u'+    assert(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SatisfyQuestExclusiveGroup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter!=end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (3, 1, u'+    assert(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(iter!=end);                                      // always must be found if qInfo->ExclusiveGroup != 0'), (3, 1, u'+    assert(iter != end);                                      // always must be found if qInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine==AV_SOUTH_MINE);'), (3, 1, u'+    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::SendMineWorldStates
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine==AV_SOUTH_MINE);'), (3, 1, u'+    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mine == AV_NORTH_MINE || mine==AV_SOUTH_MINE);'), (3, 1, u'+    assert(mine == AV_NORTH_MINE || mine == AV_SOUTH_MINE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(count !=0 && "pProto->Stackable==0 but checked at loading already");'), (3, 1, u'+        assert(count !=0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Item::CreateItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(count !=0 && "pProto->Stackable==0 but checked at loading already");'), (3, 1, u'+        assert(count !=0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(count !=0 && "pProto->Stackable==0 but checked at loading already");'), (3, 1, u'+        assert(count !=0 && "pProto->Stackable == 0 but checked at loading already");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId()==GetId() && obj->GetInstanceId()==GetInstanceId());'), (3, 1, u'+    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::AddObjectToRemoveList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId()==GetId() && obj->GetInstanceId()==GetInstanceId());'), (3, 1, u'+    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId()==GetId() && obj->GetInstanceId()==GetInstanceId());'), (3, 1, u'+    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId()==GetId() && obj->GetInstanceId()==GetInstanceId());'), (3, 1, u'+    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::AddObjectToSwitchList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId()==GetId() && obj->GetInstanceId()==GetInstanceId());'), (3, 1, u'+    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj->GetMapId()==GetId() && obj->GetInstanceId()==GetInstanceId());'), (3, 1, u'+    assert(obj->GetMapId() == GetId() && obj->GetInstanceId() == GetInstanceId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert( team == ALLIANCE || team == HORDE);'), (6, 1, u'+    assert(team == ALLIANCE || team == HORDE);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: BattleGroundAV::HandleQuestComplete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert( team == ALLIANCE || team == HORDE);'), (6, 1, u'+    assert(team == ALLIANCE || team == HORDE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert( team == ALLIANCE || team == HORDE);'), (6, 1, u'+    assert(team == ALLIANCE || team == HORDE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            assert( i_nextMove <= MAX_CONF_WAYPOINTS );'), (7, 1, u'+            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ConfusedMovementGenerator<T>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            assert( i_nextMove <= MAX_CONF_WAYPOINTS );'), (7, 1, u'+            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            assert( i_nextMove <= MAX_CONF_WAYPOINTS );'), (7, 1, u'+            assert(i_nextMove <= MAX_CONF_WAYPOINTS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert( p != NULL );'), (3, 1, u'+                assert(p != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert( p != NULL );'), (3, 1, u'+                assert(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert( p != NULL );'), (3, 1, u'+                assert(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (4, 1, u'+        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (4, 1, u'+        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (4, 1, u'+        assert(creature->GetCreatureInfo() != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert( p != NULL );'), (3, 1, u'+            assert(p != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert( p != NULL );'), (3, 1, u'+            assert(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert( p != NULL );'), (3, 1, u'+            assert(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_gItems.size() <= GOSSIP_MAX_MENU_ITEMS  );'), (3, 1, u'+    ASSERT(m_gItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GossipMenu::AddMenuItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_gItems.size() <= GOSSIP_MAX_MENU_ITEMS  );'), (3, 1, u'+    ASSERT(m_gItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_gItems.size() <= GOSSIP_MAX_MENU_ITEMS  );'), (3, 1, u'+    ASSERT(m_gItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS  );'), (3, 1, u'+    ASSERT(m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: QuestMenu::AddMenuItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS  );'), (3, 1, u'+    ASSERT(m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS  );'), (3, 1, u'+    ASSERT(m_qItems.size() <= GOSSIP_MAX_MENU_ITEMS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ngrid != NULL );'), (3, 1, u'+    assert(ngrid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ngrid != NULL );'), (3, 1, u'+    assert(ngrid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ngrid != NULL );'), (3, 1, u'+    assert(ngrid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::EnsureGridLoadedAtEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL );'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL);'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL);'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( grid != NULL);'), (3, 1, u'+    assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( !empty() );'), (3, 1, u'+    assert(!empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MotionMaster::UpdateMotion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( !empty() );'), (3, 1, u'+    assert(!empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( !empty() );'), (3, 1, u'+    assert(!empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::_SetCreateBits
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::SetInt32Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::SetUInt32Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::UpdateUInt32Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::AddUInt64Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::RemoveUInt64Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT(index + 1 < m_valuesCount || PrintIndexError(index , true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::RemoveUInt64Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::SetFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::SetByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::ApplyModPositiveFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::SetFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::RemoveFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::SetByteFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );'), (6, 1, u'+    ASSERT(index < m_valuesCount || PrintIndexError(index, true));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ticket );'), (3, 1, u'+    assert(ticket);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectMgr::RemoveGMTicket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ticket );'), (3, 1, u'+    assert(ticket);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ticket );'), (3, 1, u'+    assert(ticket);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AOEAI::AOEAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\t                ASSERT(false);'), (33, 1, u'+                    ASSERT(false);')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: BattleGroundSA::DestroyGate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\t                ASSERT(false);'), (33, 1, u'+                    ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\t                ASSERT(false);'), (33, 1, u'+                    ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-        ASSERT(iPtr); // Sanity check, if this assertion is hit then the item wasn't removed from the set correctly./")]
===========================================
===========================================
Total add: 10
Total del: 2
Header: Player::_SaveInventory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-        ASSERT(iPtr); // Sanity check, if this assertion is hit then the item wasn't removed from the set correctly./")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-        ASSERT(iPtr); // Sanity check, if this assertion is hit then the item wasn't removed from the set correctly./")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u"+        ASSERT(iPtr); // Sanity check, if this assertion is hit then the item wasn't removed from the set correctly./")]
===========================================
===========================================
Total add: 8
Total del: 14
Header: Player::_SaveInventory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u"+        ASSERT(iPtr); // Sanity check, if this assertion is hit then the item wasn't removed from the set correctly./")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u"+        ASSERT(iPtr); // Sanity check, if this assertion is hit then the item wasn't removed from the set correctly./")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before')]
===========================================
===========================================
Total add: 53
Total del: 5
Header: WorldSession::HandleItemRefund
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+            ASSERT(msg == EQUIP_ERR_OK) /// Already checked before')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    ASSERT(player != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 10
Header: Item::AddToUpdateQueueOf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    ASSERT(player != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    ASSERT(player != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    ASSERT(player != NULL)')]
===========================================
===========================================
Total add: 3
Total del: 10
Header: Item::RemoveFromUpdateQueueOf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    ASSERT(player != NULL)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    ASSERT(player != NULL)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());'), (9, 1, u'+        assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());')]
===========================================
===========================================
Total add: 20
Total del: 18
Header: ObjectAccessor::AddCorpse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());'), (9, 1, u'+        assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());'), (9, 1, u'+        assert(i_player2corpse.find(corpse->GetOwnerGUID()) == i_player2corpse.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            WPAssert(((Player*)this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Object::_BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            WPAssert(((Player*)this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            WPAssert(((Player*)this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(((Player*)m_caster)->m_spellModTakingSpell != this);'), (3, 1, u'+        assert(m_caster->ToPlayer()->m_spellModTakingSpell != this);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Spell::~Spell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(((Player*)m_caster)->m_spellModTakingSpell != this);'), (3, 1, u'+        assert(m_caster->ToPlayer()->m_spellModTakingSpell != this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(((Player*)m_caster)->m_spellModTakingSpell != this);'), (3, 1, u'+        assert(m_caster->ToPlayer()->m_spellModTakingSpell != this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-\t      ASSERT(false);'), (63, 1, u'+\t                ASSERT(false);')]
===========================================
===========================================
Total add: 36
Total del: 37
Header: BattleGroundSA::DestroyGate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-\t      ASSERT(false);'), (63, 1, u'+\t                ASSERT(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-\t      ASSERT(false);'), (63, 1, u'+\t                ASSERT(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-      ASSERT(0);'), (70, 1, u'+            ASSERT(0);')]
===========================================
===========================================
Total add: 34
Total del: 37
Header: BattleGroundSA::CaptureGraveyard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-      ASSERT(0);'), (70, 1, u'+            ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-      ASSERT(0);'), (70, 1, u'+            ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(stats); // should not be null')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Creature::SelectLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(stats); // should not be null')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(stats); // should not be null')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(stats); // should not be null')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Creature::SelectLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(stats); // should not be null')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(stats); // should not be null')]
===========================================
Class: class PrioritizeManaUnitWraper { 
Class: class PrioritizeHealthUnitWraper { 
Class: class PrioritizeManaUnitWraper { 
Class: class PrioritizeHealthUnitWraper { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: LoadDBCStores
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert(false && "Need update MAX_BATTLEGROUND_BRACKETS by DBC data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Position::HasInLine
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: WorldObject::GetDistanceZ
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: WorldObject::_IsWithinDist
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Position::HasInArc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(old_count + add_count < 256 && "mob/GO count store in 8 bits 2^8 = 256 (0..256)");'), (3, 1, u'+    assert(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SendQuestUpdateAddCreatureOrGo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(old_count + add_count < 256 && "mob/GO count store in 8 bits 2^8 = 256 (0..256)");'), (3, 1, u'+    assert(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(old_count + add_count < 256 && "mob/GO count store in 8 bits 2^8 = 256 (0..256)");'), (3, 1, u'+    assert(old_count + add_count < 65536 && "mob/GO count store in 16 bits 2^16 = 65536 (0..65536)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString'), (7, 1, u'+                assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString'), (7, 1, u'+                assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString'), (7, 1, u'+                assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert (unitTarget == m_spellAura->GetOwner());'), (6, 1, u'+    assert(unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Spell::EffectApplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert (unitTarget == m_spellAura->GetOwner());'), (6, 1, u'+    assert(unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert (unitTarget == m_spellAura->GetOwner());'), (6, 1, u'+    assert(unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(target);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Position::HasInLine
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: WorldObject::GetDistanceZ
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: WorldObject::_IsWithinDist
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Position::HasInArc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        assert(p.second);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: Object::ClearUpdateMask
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        assert(p.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        assert(p.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(entranceFound);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: WorldSession::HandleCorpseMapPositionQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(entranceFound);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(entranceFound);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        assert(entranceFound);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: WorldSession::HandleCorpseMapPositionQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        assert(entranceFound);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        assert(entranceFound);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert((1<<effIndex) & m_effectsToApply);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: AuraApplication::_HandleEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert((1<<effIndex) & m_effectsToApply);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert((1<<effIndex) & m_effectsToApply);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(aurApp);'), (42, 1, u'+    assert(!aurApp->GetRemoveMode());')]
===========================================
===========================================
Total add: 24
Total del: 6
Header: Unit::__ApplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(aurApp);'), (42, 1, u'+    assert(!aurApp->GetRemoveMode());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(aurApp);'), (42, 1, u'+    assert(!aurApp->GetRemoveMode());')]
===========================================
Class: class AllOrbsInGrid { 
Class:        Class = 0;
Class: class AllOrbsInGrid { 
Class:        Class = 0;
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_cleanupDone);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_cleanupDone);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_cleanupDone);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::_UnapplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_cleanupDone);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_cleanupDone);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_cleanupDone);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!m_cleanupDone);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!m_cleanupDone);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!m_cleanupDone);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_cleanupDone);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Unit::__ApplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_cleanupDone);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_cleanupDone);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(newAura);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: Unit::RemoveAurasDueToSpellBySteal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(newAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(newAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert( grid != NULL );')]
===========================================
===========================================
Total add: 15
Total del: 19
Header: Map::EnsureGridLoadedAtEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert( grid != NULL );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert( grid != NULL );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert( grid != NULL );')]
===========================================
===========================================
Total add: 13
Total del: 1
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert( grid != NULL );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert( grid != NULL );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(m_NotifyListPos < 0); //instance : crash')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: Unit::AddToWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(m_NotifyListPos < 0); //instance : crash')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(m_NotifyListPos < 0); //instance : crash')]
===========================================
Class:class TRINITY_DLL_DECL SentinelAbilityAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(327, 2, u'-    assert(target);'), (328, 2, u'-    assert(spellproto && spellproto == sSpellStore.LookupEntry( spellproto->Id ) && "`info` must be pointer to sSpellStore element");'), (336, 1, u'+    assert(GetTarget() && GetBase());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: Spell::EffectApplyAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: Spell::EffectApplyAreaAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert (unitTarget == m_spellAura->GetOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(ObjectAccessor::GetObjectInWorld(m_spellDynObj->GetGUID(), (DynamicObject*)NULL) == m_spellDynObj);'), (38, 1, u'+            assert(false);'), (46, 1, u'+    assert(m_spellAura->GetDynobjOwner());')]
===========================================
===========================================
Total add: 24
Total del: 19
Header: Spell::EffectPersistentAA
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(ObjectAccessor::GetObjectInWorld(m_spellDynObj->GetGUID(), (DynamicObject*)NULL) == m_spellDynObj);'), (38, 1, u'+            assert(false);'), (46, 1, u'+    assert(m_spellAura->GetDynobjOwner());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(ObjectAccessor::GetObjectInWorld(m_spellDynObj->GetGUID(), (DynamicObject*)NULL) == m_spellDynObj);'), (38, 1, u'+            assert(false);'), (46, 1, u'+    assert(m_spellAura->GetDynobjOwner());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_appliedAuras.empty());'), (3, 1, u'+    assert(m_ownedAuras.empty());'), (4, 1, u'+    assert(m_removedAuras.empty());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_appliedAuras.empty());'), (3, 1, u'+    assert(m_ownedAuras.empty());'), (4, 1, u'+    assert(m_removedAuras.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_appliedAuras.empty());'), (3, 1, u'+    assert(m_ownedAuras.empty());'), (4, 1, u'+    assert(m_removedAuras.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-            assert(caster);')]
===========================================
===========================================
Total add: 7
Total del: 18
Header: Unit::AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-            assert(caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-            assert(caster);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 1, u'+    assert(aurApp->GetTarget() == this);'), (48, 1, u'+    assert(m_removedAurasCount < 0xFFFFFFFF);'), (115, 1, u'+    assert(!aurApp->GetEffectMask());'), (138, 1, u'+    assert(aura);'), (139, 1, u'+    assert(aura->HasEffect(effIndex));'), (156, 1, u'+    assert(aurApp);'), (157, 1, u'+    assert(aurApp->HasEffect(effIndex));'), (164, 1, u'+    assert(aurApp);'), (165, 1, u'+    assert(!aurApp->GetRemoveMode());'), (174, 1, u'+    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Total add: 170
Total del: 38
Header: Unit::AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 1, u'+    assert(aurApp->GetTarget() == this);'), (48, 1, u'+    assert(m_removedAurasCount < 0xFFFFFFFF);'), (115, 1, u'+    assert(!aurApp->GetEffectMask());'), (138, 1, u'+    assert(aura);'), (139, 1, u'+    assert(aura->HasEffect(effIndex));'), (156, 1, u'+    assert(aurApp);'), (157, 1, u'+    assert(aurApp->HasEffect(effIndex));'), (164, 1, u'+    assert(aurApp);'), (165, 1, u'+    assert(!aurApp->GetRemoveMode());'), (174, 1, u'+    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 1, u'+    assert(aurApp->GetTarget() == this);'), (48, 1, u'+    assert(m_removedAurasCount < 0xFFFFFFFF);'), (115, 1, u'+    assert(!aurApp->GetEffectMask());'), (138, 1, u'+    assert(aura);'), (139, 1, u'+    assert(aura->HasEffect(effIndex));'), (156, 1, u'+    assert(aurApp);'), (157, 1, u'+    assert(aurApp->HasEffect(effIndex));'), (164, 1, u'+    assert(aurApp);'), (165, 1, u'+    assert(!aurApp->GetRemoveMode());'), (174, 1, u'+    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(aurApp->GetBase()->GetApplicationOfTarget(GetGUID()) == aurApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+                assert(newAura);')]
===========================================
===========================================
Total add: 6
Total del: 13
Header: Unit::RemoveAurasDueToSpellBySteal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+                assert(newAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+                assert(newAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(pInstance);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: struct TRINITY_DLL_DECL boss_sartharionAI : public ScriptedAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(pInstance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(pInstance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(false);                                      // force a crash. Too many errors')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: MapManager::checkAndCorrectGridStatesArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(false);                                      // force a crash. Too many errors')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(false);                                      // force a crash. Too many errors')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-        assert(period != 0);')]
===========================================
===========================================
Total add: 10
Total del: 9
Header: InstanceSaveManager::LoadResetTimes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-        assert(period != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-        assert(period != 0);')]
===========================================
Class: class  WDBThreadEndReq1 : public ACE_Method_Request { 
Class: class MapUpdateRequest : public ACE_Method_Request { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Map::RemoveUnitFromNotify
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(slot < i_unitsToNotify.size());')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: Map::RemoveUnitFromNotify
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(slot < i_unitsToNotify.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(slot < i_unitsToNotify.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: InstanceMap::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(gameObj && gameObj->GetOwnerGUID()==0);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Unit::AddGameObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(gameObj && gameObj->GetOwnerGUID()==0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(gameObj && gameObj->GetOwnerGUID()==0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(gameObj && gameObj->GetOwnerGUID()==GetGUID());')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Unit::RemoveGameObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(gameObj && gameObj->GetOwnerGUID()==GetGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(gameObj && gameObj->GetOwnerGUID()==GetGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(getOwner()->GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ThreatManager::addThreat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(getOwner()->GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(getOwner()->GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(getOwner()->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::TauntApply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::TauntFadeOut
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);'), (3, 1, u'+    assert(GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pos);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: OPvPWintergrasp::UpdateQuestGiverPosition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(guid);'), (6, 1, u'+    assert(pos);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: OPvPWintergrasp::UpdateQuestGiverPosition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(guid);'), (6, 1, u'+    assert(pos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(guid);'), (6, 1, u'+    assert(pos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0'), (3, 1, u'+                assert(iter2 != end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(pInstance);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: struct TRINITY_DLL_DECL boss_sartharionAI : public ScriptedAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(pInstance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(pInstance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(pSrcItem);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Guild::_CanStoreItem_InTab
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(pSrcItem);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(pSrcItem);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(mover);'), (5, 2, u'-    assert(!mover->GetVehicle());'), (6, 2, u'-    assert((mover->IsVehicle() && !mover->GetTransport()) || !mover->IsVehicle());'), (7, 1, u'+    assert(mover != NULL);                                  // there must always be a mover')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: WorldSession::HandleMovementOpcodes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(mover);'), (5, 2, u'-    assert(!mover->GetVehicle());'), (6, 2, u'-    assert((mover->IsVehicle() && !mover->GetTransport()) || !mover->IsVehicle());'), (7, 1, u'+    assert(mover != NULL);                                  // there must always be a mover')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(mover);'), (5, 2, u'-    assert(!mover->GetVehicle());'), (6, 2, u'-    assert((mover->IsVehicle() && !mover->GetTransport()) || !mover->IsVehicle());'), (7, 1, u'+    assert(mover != NULL);                                  // there must always be a mover')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mover && !mover->GetVehicle() && (!mover->IsVehicle() || !mover->GetTransport()));'), (3, 1, u'+    assert(mover);'), (4, 1, u'+    assert(!mover->GetVehicle());'), (5, 1, u'+    assert((mover->IsVehicle() && !mover->GetTransport()) || !mover->IsVehicle());')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: WorldSession::HandleMovementOpcodes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mover && !mover->GetVehicle() && (!mover->IsVehicle() || !mover->GetTransport()));'), (3, 1, u'+    assert(mover);'), (4, 1, u'+    assert(!mover->GetVehicle());'), (5, 1, u'+    assert((mover->IsVehicle() && !mover->GetTransport()) || !mover->IsVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mover && !mover->GetVehicle() && (!mover->IsVehicle() || !mover->GetTransport()));'), (3, 1, u'+    assert(mover);'), (4, 1, u'+    assert(!mover->GetVehicle());'), (5, 1, u'+    assert((mover->IsVehicle() && !mover->GetTransport()) || !mover->IsVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(mover && !mover->GetVehicle() && (!mover->IsVehicle() || !mover->GetTransport()));')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: WorldSession::HandleMovementOpcodes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(mover && !mover->GetVehicle() && (!mover->IsVehicle() || !mover->GetTransport()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(mover && !mover->GetVehicle() && (!mover->IsVehicle() || !mover->GetTransport()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert( grid != NULL );'), (3, 1, u'+            assert(grid != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert( grid != NULL );'), (3, 1, u'+            assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert( grid != NULL );'), (3, 1, u'+            assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(target);')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: Creature::_IsTargetAcceptable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(target);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(pVictim->GetTypeId()==TYPEID_PLAYER);'), (3, 1, u'+            assert(pVictim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::DealDamage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(pVictim->GetTypeId()==TYPEID_PLAYER);'), (3, 1, u'+            assert(pVictim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(pVictim->GetTypeId()==TYPEID_PLAYER);'), (3, 1, u'+            assert(pVictim->GetTypeId() == TYPEID_PLAYER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(targetFaction != NULL);'), (6, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(targetFaction != NULL);'), (6, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                ASSERT(targetFaction != NULL);'), (6, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                ASSERT(targetFaction != NULL);'), (5, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                ASSERT(targetFaction != NULL);'), (5, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                ASSERT(targetFaction != NULL);'), (5, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT(targetFaction != NULL);'), (3, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                ASSERT(targetFaction != NULL);'), (5, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                ASSERT(targetFaction != NULL);'), (5, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                ASSERT(targetFaction != NULL);'), (5, 1, u'+                ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    ASSERT(next != AuctionsMap.end());')]
===========================================
===========================================
Total add: 52
Total del: 35
Header: AuctionHouseObject::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    ASSERT(next != AuctionsMap.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    ASSERT(next != AuctionsMap.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+                ASSERT(targetFaction != NULL);'), (60, 1, u'+                ASSERT(targetFaction != NULL);'), (67, 1, u'+            ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Total add: 64
Total del: 10
Header: ReputationMgr::SetReputation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+                ASSERT(targetFaction != NULL);'), (60, 1, u'+                ASSERT(targetFaction != NULL);'), (67, 1, u'+            ASSERT(targetFaction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+                ASSERT(targetFaction != NULL);'), (60, 1, u'+                ASSERT(targetFaction != NULL);'), (67, 1, u'+            ASSERT(targetFaction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(next != NULL);'), (3, 1, u'+    ASSERT(next != AuctionsMap.end());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AuctionHouseObject::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(next != NULL);'), (3, 1, u'+    ASSERT(next != AuctionsMap.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(next != NULL);'), (3, 1, u'+    ASSERT(next != AuctionsMap.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(next != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: AuctionHouseObject::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(next != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(next != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(x < MAX_NUMBER_OF_GRIDS);'), (3, 1, u'+    ASSERT(y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
Total add: 12
Total del: 4
Header: Map::ActiveObjectsNearGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(x < MAX_NUMBER_OF_GRIDS);'), (3, 1, u'+    ASSERT(y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(x < MAX_NUMBER_OF_GRIDS);'), (3, 1, u'+    ASSERT(y < MAX_NUMBER_OF_GRIDS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    ASSERT( it );'), (10, 2, u'-    ASSERT( mAitems.find(it->GetGUIDLow()) == mAitems.end());'), (11, 1, u'+    ASSERT(it);'), (12, 1, u'+    ASSERT(mAitems.find(it->GetGUIDLow()) == mAitems.end());')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: AuctionHouseMgr::LoadAuctions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    ASSERT( it );'), (10, 2, u'-    ASSERT( mAitems.find(it->GetGUIDLow()) == mAitems.end());'), (11, 1, u'+    ASSERT(it);'), (12, 1, u'+    ASSERT(mAitems.find(it->GetGUIDLow()) == mAitems.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    ASSERT( it );'), (10, 2, u'-    ASSERT( mAitems.find(it->GetGUIDLow()) == mAitems.end());'), (11, 1, u'+    ASSERT(it);'), (12, 1, u'+    ASSERT(mAitems.find(it->GetGUIDLow()) == mAitems.end());')]
===========================================
Class:  class FifoConditionImpl : public ConditionImpl<fifo_list> {   class FifoConditionImpl : public ConditionImpl<fifo_list> 
Class:  class FifoMutexImpl : public MutexImpl<fifo_list, NullBehavior> 
Class:    class WaiterQueue {     class WaiterQueue 
Class:  class PriorityConditionImpl : public ConditionImpl<priority_list> {   class PriorityConditionImpl : public ConditionImpl<priority_list> 
Class:  class InheritPriorityBehavior : public NullBehavior {   class InheritPriorityBehavior : public NullBehavior 
Class:  class PriorityMutexImpl : public MutexImpl<priority_list, NullBehavior> 
Class:  class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> {   class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 2, u'-      assert(0); // Destroyed mutex while in use'), (65, 2, u'-      assert(0); // Destroyed mutex while in use'), (92, 2, u'-        assert(_count == 0);'), (124, 2, u'-            assert(_owner == 0);'), (125, 2, u'-            assert(_count == 0);'), (162, 2, u'-        assert(_count == 0);'), (201, 2, u'-            assert(_count == 0);'), (202, 2, u'-            assert(_owner == 0);')]
===========================================
Class:    class Launcher : public Runnable {     class Launcher : public Runnable 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 2, u'-        assert(0);')]
===========================================
Class:    class WaiterQueue {     class WaiterQueue 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-    assert(atomic_read(&count) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-    assert(0);'), (42, 2, u'-  assert(!_waiting);'), (46, 2, u'-    assert(false);'), (109, 2, u'-  assert(status == kMPTimeoutErr || status == noErr);'), (124, 2, u'-    assert(status == noErr);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-      assert(0);'), (53, 2, u'-  assert(ops);'), (54, 2, u'-  assert(ops->_tid != 0);'), (90, 2, u'-  assert(task);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 2, u'-  assert(!_waiting);'), (96, 2, u'-    assert(status == 0);'), (123, 2, u'-    assert(status == 0 || status == ETIMEDOUT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-  assert(ops);'), (39, 2, u'-  assert(ops->_tid != 0);'), (67, 2, u'-  assert(impl);'), (97, 2, u'-  assert(impl);'), (134, 2, u'-  assert(task);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-  assert(c->count == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert(*reinterpret_cast<LPLONG>(_value) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-    assert(0);'), (42, 2, u'-  assert(!_waiting);'), (98, 2, u'-  assert(dwResult == WAIT_OBJECT_0 || dwResult == WAIT_TIMEOUT);'), (140, 2, u'-        assert(0);'), (186, 2, u'-        assert(0);'), (216, 2, u'-        assert(0);')]
===========================================
Class:class YieldOps { class YieldOps 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-  assert(c->count == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(((Player*)m_caster)->m_spellModTakingSpell != this);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Spell::~Spell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(((Player*)m_caster)->m_spellModTakingSpell != this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(((Player*)m_caster)->m_spellModTakingSpell != this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_spellModTakingSpell);'), (7, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: Player::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_spellModTakingSpell);'), (7, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_spellModTakingSpell);'), (7, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(ObjectAccessor::GetObjectInWorld(m_spellDynObj->GetGUID(), (DynamicObject*)NULL) == m_spellDynObj);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: Spell::EffectPersistentAA
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(ObjectAccessor::GetObjectInWorld(m_spellDynObj->GetGUID(), (DynamicObject*)NULL) == m_spellDynObj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(ObjectAccessor::GetObjectInWorld(m_spellDynObj->GetGUID(), (DynamicObject*)NULL) == m_spellDynObj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: WorldSession::HandleSpellClick
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(OldSummon->GetMap() == owner->GetMap());')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Spell::EffectSummonPet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(OldSummon->GetMap() == owner->GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(OldSummon->GetMap() == owner->GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (3, 1, u'+    assert((type == CHARM_TYPE_VEHICLE) == IsVehicle());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::SetCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (3, 1, u'+    assert((type == CHARM_TYPE_VEHICLE) == IsVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());'), (3, 1, u'+    assert((type == CHARM_TYPE_VEHICLE) == IsVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(!m_currMap);'), (7, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(!m_currMap);'), (7, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    ASSERT(!m_currMap);'), (7, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                assert(false);')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(!itr->second.passenger);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Vehicle::~Vehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(!itr->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(!itr->second.passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArchorAI::ArchorAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TurretAI::TurretAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(me->m_spells[0]);'), (3, 1, u'+    ASSERT(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
Total add: 0
Total del: 24
Header: Map::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(IS_DYNAMICOBJECT_GUID(sourceGuid));')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CreateAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(IS_DYNAMICOBJECT_GUID(sourceGuid));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(IS_DYNAMICOBJECT_GUID(sourceGuid));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(source);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Aura::Aura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(source);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(source);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(source);'), (8, 2, u'-        assert(source->isType(TYPEMASK_UNIT));'), (10, 1, u'+        assert(IS_UNIT_GUID(sourceGuid));')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: CreateAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(source);'), (8, 2, u'-        assert(source->isType(TYPEMASK_UNIT));'), (10, 1, u'+        assert(IS_UNIT_GUID(sourceGuid));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(source);'), (8, 2, u'-        assert(source->isType(TYPEMASK_UNIT));'), (10, 1, u'+        assert(IS_UNIT_GUID(sourceGuid));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(source->isType(TYPEMASK_DYNAMICOBJECT));'), (4, 1, u'+        assert(IS_DYNAMICOBJECT_GUID(sourceGuid));')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CreateAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(source->isType(TYPEMASK_DYNAMICOBJECT));'), (4, 1, u'+        assert(IS_DYNAMICOBJECT_GUID(sourceGuid));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(source->isType(TYPEMASK_DYNAMICOBJECT));'), (4, 1, u'+        assert(IS_DYNAMICOBJECT_GUID(sourceGuid));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(source);')]
===========================================
===========================================
Total add: 7
Total del: 5
Header: pAuraHandler AuraHandler[TOTAL_AURAS]=
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(source);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(source);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(source);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: AreaAuraEffect::AreaAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(source);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(source);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(source);'), (11, 1, u'+        assert(source->isType(TYPEMASK_UNIT));'), (20, 1, u'+        assert(source->isType(TYPEMASK_DYNAMICOBJECT));')]
===========================================
===========================================
Total add: 9
Total del: 7
Header: CreateAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(source);'), (11, 1, u'+        assert(source->isType(TYPEMASK_UNIT));'), (20, 1, u'+        assert(source->isType(TYPEMASK_DYNAMICOBJECT));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(source);'), (11, 1, u'+        assert(source->isType(TYPEMASK_UNIT));'), (20, 1, u'+        assert(source->isType(TYPEMASK_DYNAMICOBJECT));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ObjectMgr::GenerateLowGuid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(c->isVehicle());'), (6, 1, u'+        assert(vehicle);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: struct TRINITY_DLL_DECL boss_flame_leviathanAI : public BossAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(c->isVehicle());'), (6, 1, u'+        assert(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(c->isVehicle());'), (6, 1, u'+        assert(vehicle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(c->isVehicle());'), (6, 1, u'+        assert(vehicle);')]
===========================================
===========================================
Total add: 8
Total del: 4
Header: struct TRINITY_DLL_DECL boss_flame_leviathan_seatAI : public PassiveAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(c->isVehicle());'), (6, 1, u'+        assert(vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(c->isVehicle());'), (6, 1, u'+        assert(vehicle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(0);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ObjectMgr::GenerateLowGuid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());'), (3, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::SetCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());'), (3, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());'), (3, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());'), (3, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::RemoveCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());'), (3, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());'), (3, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && IsVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_Vehicle);'), (5, 1, u'+    assert(!m_vehicle);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Unit::EnterVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_Vehicle);'), (5, 1, u'+    assert(!m_vehicle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_Vehicle);'), (5, 1, u'+    assert(!m_vehicle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert(!m_Seats.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(passenger->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Vehicle::InstallAccessory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(passenger->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(passenger->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(me->m_spells[0]);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: struct TRINITY_DLL_DECL mob_anti_airAI : public ScriptedAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(me->m_spells[0]);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: struct TRINITY_DLL_DECL mob_anti_airAI : public ScriptedAI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(me->m_spells[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(me->m_spells[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Item::CreateItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(false);')]
===========================================
Class:class TRINITY_DLL_DECL SentinelAbilityAura : public Aura { 
Class:class TRINITY_DLL_DECL SentinelAbilityAura : public Aura { 
Class: class AllOrbsInGrid { 
Class:        Class = 0;
Class:            Class = m_creature->getVictim()->getClass();
Class: class AllOrbsInGrid { 
Class:        Class = 0;
Class:            Class = m_creature->getVictim()->getClass();
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-    assert(grid != NULL);'), (40, 1, u'+            assert(grid != NULL);')]
===========================================
===========================================
Total add: 16
Total del: 25
Header: Map::Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-    assert(grid != NULL);'), (40, 1, u'+            assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-    assert(grid != NULL);'), (40, 1, u'+            assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    assert( grid != NULL );')]
===========================================
===========================================
Total add: 0
Total del: 15
Header: Map::Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    assert( grid != NULL );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    assert( grid != NULL );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            assert( grid != NULL );')]
===========================================
===========================================
Total add: 17
Total del: 2
Header: Map::Remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            assert( grid != NULL );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            assert( grid != NULL );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(false);'), (10, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: WorldObject::~WorldObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(false);'), (10, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(false);'), (10, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(oldMap);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(oldMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(oldMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);'), (3, 1, u'+    ASSERT(!IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::ResetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);'), (3, 1, u'+    ASSERT(!IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);'), (3, 1, u'+    ASSERT(!IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(obj->m_isWorldObject);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: Map::~Map
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(obj->m_isWorldObject);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(obj->m_isWorldObject);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(caster);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Unit::AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(caster);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(caster);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isWorldCreature() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectGridRespawnMover::Visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isWorldCreature() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isWorldCreature() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::ResetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);'), (4, 1, u'+    ASSERT(!m_currMap);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);'), (4, 1, u'+    ASSERT(!m_currMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);'), (4, 1, u'+    ASSERT(!m_currMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: WorldObject::ResetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld());'), (3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld());'), (3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld());'), (3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld());'), (3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WorldObject::ResetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld());'), (3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(!IsInWorld());'), (3, 1, u'+    ASSERT(!IsInWorld() || GetTypeId() == TYPEID_CORPSE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert((*itr)->GetOwnerGUID() == GetGUID());'), (8, 1, u'+                        assert(false);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: Unit::SetMinion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert((*itr)->GetOwnerGUID() == GetGUID());'), (8, 1, u'+                        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert((*itr)->GetOwnerGUID() == GetGUID());'), (8, 1, u'+                        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(!IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(!IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(!IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Map::RemoveUnitFromNotify
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!isPet());'), (7, 1, u'+        assert(!IsInWorld());')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: TempSummon::UnSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!isPet());'), (7, 1, u'+        assert(!IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!isPet());'), (7, 1, u'+        assert(!IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(slot < i_unitsToNotifyBacklog.size());')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: Map::RemoveUnitFromNotify
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(slot < i_unitsToNotifyBacklog.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(slot < i_unitsToNotifyBacklog.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(!HavePlayers());')]
===========================================
===========================================
Total add: 1
Total del: 6
Header: InstanceMap::UnloadAll
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(!HavePlayers());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(!HavePlayers());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(false);'), (7, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: Player::StopCastingCharm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(false);'), (7, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(false);'), (7, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pVictim->IsInWorld() && pVictim->FindMap());')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Unit::Kill
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pVictim->IsInWorld() && pVictim->FindMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pVictim->IsInWorld() && pVictim->FindMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (!instanceId);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (!instanceId);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (!instanceId);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (!instanceId);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (!instanceId);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert (!instanceId);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: MapManager::_createBaseMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!FindMap());')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: Player::~Player
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!FindMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!FindMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert (!FindMap());')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: Player::~Player
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert (!FindMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert (!FindMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(player->GetBattleGroundId());')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: MapInstanced::CreateInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(player->GetBattleGroundId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(player->GetBattleGroundId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_currMap);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_currMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert (!m_currMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: Creature::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(map);')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: Creature::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT(map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert (player->GetMap() == this);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert (player->GetMap() == this);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert (player->GetMap() == this);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(player->GetBattleGroundId());')]
===========================================
===========================================
Total add: 2
Total del: 11
Header: MapInstanced::CreateInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(player->GetBattleGroundId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(player->GetBattleGroundId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-            assert(false);'), (19, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 14
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-            assert(false);'), (19, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-            assert(false);'), (19, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert (!m_currMap);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: WorldObject::SetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert (!m_currMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert (!m_currMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(map);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Pet::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+        assert (!instanceId);')]
===========================================
===========================================
Total add: 7
Total del: 20
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+        assert (!instanceId);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+        assert (!instanceId);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+        assert (!instanceId);'), (92, 1, u'+            assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Total add: 57
Total del: 39
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+        assert (!instanceId);'), (92, 1, u'+            assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+        assert (!instanceId);'), (92, 1, u'+            assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-        assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Total add: 0
Total del: 40
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-        assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-        assert(nodeEntry);                                  // checked in m_taxi.LoadTaxiDestinationsFromString')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert (GetMap());')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Transport::TeleportTransport
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert (GetMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert (GetMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);'), (18, 1, u'+            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
Total add: 13
Total del: 9
Header: Map::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);'), (18, 1, u'+            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);'), (18, 1, u'+            assert(grid->GetGridState() >= 0 && grid->GetGridState() < MAX_GRID_STATE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetInt32Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetUInt32Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetUInt64Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index + 1 < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetUInt16Value
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::RemoveFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::SetByteFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::RemoveByteFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT( index < m_valuesCount || PrintIndexError( index , true ) );'), (3, 1, u'+    ASSERT( index < m_valuesCount || PrintIndexError( index, true ) );')]
===========================================
Class:    class AnyBugCheck     {     
Class:class NearbyAQSentinel { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(pVictim->IsInWorld() && pVictim->FindMap());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::Kill
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(pVictim->IsInWorld() && pVictim->FindMap());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(pVictim->IsInWorld() && pVictim->FindMap());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert (false);')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert (false);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: WorldSession::HandleMoveWorldportAckOpcode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(owner);')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: Corpse::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(owner);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT(owner);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Creature::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: GameObject::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert(obj->GetMapId() == GetId() && obj->GetInstanceId());')]
===========================================
===========================================
Total add: 1
Total del: 8
Header: MapInstanced::UnloadAll
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert(obj->GetMapId() == GetId() && obj->GetInstanceId());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert(obj->GetMapId() == GetId() && obj->GetInstanceId());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(map->IsDungeon());'), (8, 1, u'+    ASSERT(map->IsDungeon());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: MapInstanced::CreateInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(map->IsDungeon());'), (8, 1, u'+    ASSERT(map->IsDungeon());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(map->IsDungeon());'), (8, 1, u'+    ASSERT(map->IsDungeon());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(map->IsBattleGroundOrArena());'), (5, 1, u'+    ASSERT(map->IsBattleGroundOrArena());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MapInstanced::CreateBattleGround
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(map->IsBattleGroundOrArena());'), (5, 1, u'+    ASSERT(map->IsBattleGroundOrArena());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(map->IsBattleGroundOrArena());'), (5, 1, u'+    ASSERT(map->IsBattleGroundOrArena());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(m_currMap);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: WorldObject::GetBaseMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(m_currMap);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT(m_currMap);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(_map);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Player::PrepareQuestMenu
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(_map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(_map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(false);'), (6, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: GameObject::SetOwnerGUID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(false);'), (6, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(false);'), (6, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert (!GetOwnerGUID());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: GameObject::Delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert (!GetOwnerGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert (!GetOwnerGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Puppet::InitSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Unit::RemoveCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_procDeep)'), (3, 1, u'+    assert(!m_procDeep);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_procDeep)'), (3, 1, u'+    assert(!m_procDeep);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_procDeep)'), (3, 1, u'+    assert(!m_procDeep);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(!m_procDeep)')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: Unit::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(!m_procDeep)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(!m_procDeep)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(_map);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Player::GetNextQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(_map);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        ASSERT(_map);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            assert (aurSpellInfo);')]
===========================================
===========================================
Total add: 22
Total del: 1
Header: Spell::DoSpellHitOnUnit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            assert (aurSpellInfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            assert (aurSpellInfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: Unit::RemoveCharmedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner != team || sLog.outCrash("Assaulting team is TotalOwner of node"));'), (3, 2, u'-    assert(m_Nodes[node].Owner != team || sLog.outCrash("Assaulting team is owner of node"));'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_DESTROYED || sLog.outCrash("Destroyed node is assaulted"));'), (5, 2, u'-    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner || sLog.outCrash("Assault on an not assaulted node without total owner")); //only assault an assaulted node if no totalowner exists'), (9, 1, u'+        assert (false);'), (14, 1, u'+        assert (false);'), (19, 1, u'+        assert (false);'), (24, 1, u'+        assert (false);')]
===========================================
===========================================
Total add: 20
Total del: 4
Header: BattleGroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner != team || sLog.outCrash("Assaulting team is TotalOwner of node"));'), (3, 2, u'-    assert(m_Nodes[node].Owner != team || sLog.outCrash("Assaulting team is owner of node"));'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_DESTROYED || sLog.outCrash("Destroyed node is assaulted"));'), (5, 2, u'-    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner || sLog.outCrash("Assault on an not assaulted node without total owner")); //only assault an assaulted node if no totalowner exists'), (9, 1, u'+        assert (false);'), (14, 1, u'+        assert (false);'), (19, 1, u'+        assert (false);'), (24, 1, u'+        assert (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner != team || sLog.outCrash("Assaulting team is TotalOwner of node"));'), (3, 2, u'-    assert(m_Nodes[node].Owner != team || sLog.outCrash("Assaulting team is owner of node"));'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_DESTROYED || sLog.outCrash("Destroyed node is assaulted"));'), (5, 2, u'-    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner || sLog.outCrash("Assault on an not assaulted node without total owner")); //only assault an assaulted node if no totalowner exists'), (9, 1, u'+        assert (false);'), (14, 1, u'+        assert (false);'), (19, 1, u'+        assert (false);'), (24, 1, u'+        assert (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner != team);'), (3, 2, u'-    assert(m_Nodes[node].Owner != team);'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_DESTROYED);'), (5, 2, u'-    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner ); //only assault an assaulted node if no totalowner exists'), (6, 1, u'+    assert(m_Nodes[node].TotalOwner != team || sLog.outCrash("Assaulting team is TotalOwner of node"));'), (7, 1, u'+    assert(m_Nodes[node].Owner != team || sLog.outCrash("Assaulting team is owner of node"));'), (8, 1, u'+    assert(m_Nodes[node].State != POINT_DESTROYED || sLog.outCrash("Destroyed node is assaulted"));'), (9, 1, u'+    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner || sLog.outCrash("Assault on an not assaulted node without total owner")); //only assault an assaulted node if no totalowner exists')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: BattleGroundAV::AssaultNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner != team);'), (3, 2, u'-    assert(m_Nodes[node].Owner != team);'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_DESTROYED);'), (5, 2, u'-    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner ); //only assault an assaulted node if no totalowner exists'), (6, 1, u'+    assert(m_Nodes[node].TotalOwner != team || sLog.outCrash("Assaulting team is TotalOwner of node"));'), (7, 1, u'+    assert(m_Nodes[node].Owner != team || sLog.outCrash("Assaulting team is owner of node"));'), (8, 1, u'+    assert(m_Nodes[node].State != POINT_DESTROYED || sLog.outCrash("Destroyed node is assaulted"));'), (9, 1, u'+    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner || sLog.outCrash("Assault on an not assaulted node without total owner")); //only assault an assaulted node if no totalowner exists')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_Nodes[node].TotalOwner != team);'), (3, 2, u'-    assert(m_Nodes[node].Owner != team);'), (4, 2, u'-    assert(m_Nodes[node].State != POINT_DESTROYED);'), (5, 2, u'-    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner ); //only assault an assaulted node if no totalowner exists'), (6, 1, u'+    assert(m_Nodes[node].TotalOwner != team || sLog.outCrash("Assaulting team is TotalOwner of node"));'), (7, 1, u'+    assert(m_Nodes[node].Owner != team || sLog.outCrash("Assaulting team is owner of node"));'), (8, 1, u'+    assert(m_Nodes[node].State != POINT_DESTROYED || sLog.outCrash("Destroyed node is assaulted"));'), (9, 1, u'+    assert(m_Nodes[node].State != POINT_ASSAULTED || !m_Nodes[node].TotalOwner || sLog.outCrash("Assault on an not assaulted node without total owner")); //only assault an assaulted node if no totalowner exists')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: Bag::StoreItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Bag::StoreItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Bag::StoreItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(slot < MAX_BAG_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                assert(!itr->second.passenger);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: Vehicle::RemoveAllPassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                assert(!itr->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                assert(!itr->second.passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(!itr->second.passenger);'), (6, 1, u'+                assert(!itr->second.passenger);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Vehicle::RemoveAllPassengers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(!itr->second.passenger);'), (6, 1, u'+                assert(!itr->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(!itr->second.passenger);'), (6, 1, u'+                assert(!itr->second.passenger);')]
===========================================
Class:class PrioritizeHealthWraper { 
Class:class PrioritizeHealthUnitWraper { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_objectUpdated);'), (6, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_objectUpdated);'), (6, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_objectUpdated);'), (6, 1, u'+        assert(false);')]
===========================================
Class:class TRINITY_DLL_DECL BurningNovaAura : public Aura { 
Class:class TRINITY_DLL_DECL BurningNovaAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(obj);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: Map::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(obj);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: MapManager::GetMap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(obj);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT(obj);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                    WPAssert(((Player*)this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Total add: 0
Total del: 36
Header: Object::_BuildMovementUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                    WPAssert(((Player*)this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                    WPAssert(((Player*)this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                WPAssert(const_cast<Unit*>(this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Total add: 25
Total del: 0
Header: Unit::BuildMovementPacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                WPAssert(const_cast<Unit*>(this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                WPAssert(const_cast<Unit*>(this)->GetMotionMaster()->GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u"+    ASSERT(packet->empty());                                // shouldn't happen")]
===========================================
===========================================
Total add: 3
Total del: 1
Header: UpdateData::BuildPacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u"+    ASSERT(packet->empty());                                // shouldn't happen")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u"+    ASSERT(packet->empty());                                // shouldn't happen")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT(len == SEED_KEY_SIZE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(m_NotifyListPos < 0); //instance : crash')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Unit::AddToWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(m_NotifyListPos < 0); //instance : crash')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(m_NotifyListPos < 0); //instance : crash')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_NotifyListPos < 0);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Unit::AddToWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_NotifyListPos < 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(m_NotifyListPos < 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(m_NotifyListPos < 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::AddToWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(m_NotifyListPos < 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(m_NotifyListPos < 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (mod->ownerAura->GetAuraCharges() <= mod->charges);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: Player::RestoreSpellMods
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (mod->ownerAura->GetAuraCharges() <= mod->charges);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (mod->ownerAura->GetAuraCharges() <= mod->charges);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetType()==CORPSE_BONES);'), (3, 1, u'+    assert(GetType() == CORPSE_BONES);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Corpse::DeleteBonesFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetType()==CORPSE_BONES);'), (3, 1, u'+    assert(GetType() == CORPSE_BONES);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetType()==CORPSE_BONES);'), (3, 1, u'+    assert(GetType() == CORPSE_BONES);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (mod->ownerAura->GetAuraCharges() <=charges);'), (3, 1, u'+            assert (mod->ownerAura->GetAuraCharges() <= mod->charges);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Player::RestoreSpellMods
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (mod->ownerAura->GetAuraCharges() <=charges);'), (3, 1, u'+            assert (mod->ownerAura->GetAuraCharges() <= mod->charges);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert (mod->ownerAura->GetAuraCharges() <=charges);'), (3, 1, u'+            assert (mod->ownerAura->GetAuraCharges() <= mod->charges);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert (!m_spellModTakingSpell);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: Player::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert (!m_spellModTakingSpell);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert (!m_spellModTakingSpell);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+            assert (mod->ownerAura->GetAuraCharges() <=charges);')]
===========================================
===========================================
Total add: 17
Total del: 5
Header: Player::RestoreSpellMods
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+            assert (mod->ownerAura->GetAuraCharges() <=charges);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+            assert (mod->ownerAura->GetAuraCharges() <=charges);')]
===========================================
Class:    class CallOfHelpCreatureInRangeDo                            class CallOfHelpCreatureInRangeDo                       
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Player::StopCastingCharm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!possess || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Unit::SetCharmedOrPossessedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!possess || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!possess || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!possess || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());')]
===========================================
===========================================
Total add: 28
Total del: 15
Header: Unit::RemoveCharmedOrPossessedBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!possess || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!possess || charmer->GetTypeId() == TYPEID_PLAYER);'), (3, 1, u'+    assert(type != CHARM_TYPE_POSSESS || charmer->GetTypeId() == TYPEID_PLAYER);'), (4, 1, u'+    assert(type != CHARM_TYPE_VEHICLE || GetTypeId() == TYPEID_UNIT && ((Creature*)this)->isVehicle());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(m_auraName < TOTAL_AURAS);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: m_parentAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(m_auraName < TOTAL_AURAS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(m_auraName < TOTAL_AURAS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(s->block_start >= 0L, "block gone");'), (3, 1, u'+\tAssert(s->block_start >= 0L, "block gone");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: deflate_stored
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(s->block_start >= 0L, "block gone");'), (3, 1, u'+\tAssert(s->block_start >= 0L, "block gone");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    Assert(s->block_start >= 0L, "block gone");'), (3, 1, u'+\tAssert(s->block_start >= 0L, "block gone");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: WorldObject::HasInArc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: WorldObject::HasInArc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert (parentAura);'), (7, 1, u'+    assert(parentAura);')]
===========================================
===========================================
Total add: 10
Total del: 5
Header: PersistentAreaAuraEffect::~PersistentAreaAuraEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert (parentAura);'), (7, 1, u'+    assert(parentAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert (parentAura);'), (7, 1, u'+    assert(parentAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(m_usableSeatNum);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: Vehicle::AddPassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(m_usableSeatNum);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(m_usableSeatNum);')]
===========================================
Class:    class CallOfHelpCreatureInRangeDo                            class CallOfHelpCreatureInRangeDo                       
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-    assert(chr || chr_guid);')]
===========================================
===========================================
Total add: 3
Total del: 52
Header: ChatHandler::HandleCharacterLevelCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-    assert(chr || chr_guid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-    assert(chr || chr_guid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-    assert(chr || chr_guid);')]
===========================================
===========================================
Total add: 16
Total del: 61
Header: ChatHandler::HandleLevelUpCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-    assert(chr || chr_guid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-    assert(chr || chr_guid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-            assert(false);'), (19, 1, u'+        assert(obj->GetMapId() == GetId() && obj->GetInstanceId());'), (33, 2, u'-            assert(false);'), (79, 2, u'-                        assert(NewInstanceId);')]
===========================================
===========================================
Total add: 39
Total del: 81
Header: MapInstanced::GetInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-            assert(false);'), (19, 1, u'+        assert(obj->GetMapId() == GetId() && obj->GetInstanceId());'), (33, 2, u'-            assert(false);'), (79, 2, u'-                        assert(NewInstanceId);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-            assert(false);'), (19, 1, u'+        assert(obj->GetMapId() == GetId() && obj->GetInstanceId());'), (33, 2, u'-            assert(false);'), (79, 2, u'-                        assert(NewInstanceId);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-                assert((*itr)->GetOwnerGUID() == GetGUID());'), (13, 2, u'-                assert((*itr)->GetTypeId() == TYPEID_UNIT);'), (23, 1, u'+                    assert((*itr)->GetOwnerGUID() == GetGUID());'), (24, 1, u'+                    assert((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 25
Total del: 16
Header: Unit::SetMinion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-                assert((*itr)->GetOwnerGUID() == GetGUID());'), (13, 2, u'-                assert((*itr)->GetTypeId() == TYPEID_UNIT);'), (23, 1, u'+                    assert((*itr)->GetOwnerGUID() == GetGUID());'), (24, 1, u'+                    assert((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-                assert((*itr)->GetOwnerGUID() == GetGUID());'), (13, 2, u'-                assert((*itr)->GetTypeId() == TYPEID_UNIT);'), (23, 1, u'+                    assert((*itr)->GetOwnerGUID() == GetGUID());'), (24, 1, u'+                    assert((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                        assert(pet->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 19
Total del: 9
Header: WorldSession::HandlePetActionHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                        assert(pet->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                        assert(pet->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 14
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_owner);')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: Minion::Minion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_owner);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(m_owner);')]
===========================================
Class:class PrioritizeManaWraper { 
Class: class PrioritizeHealthWraper { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            ACE_ASSERT (false);'), (13, 2, u'-                ACE_ASSERT (false);')]
===========================================
===========================================
Total add: 8
Total del: 25
Header: WorldSocket::SendPacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            ACE_ASSERT (false);'), (13, 2, u'-                ACE_ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            ACE_ASSERT (false);'), (13, 2, u'-                ACE_ASSERT (false);')]
===========================================
Class:		Class = 0;
Class:			Class = m_creature->getVictim()->getClass();
Class:        Class = 0;
Class:            Class = m_creature->getVictim()->getClass();
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(iter!=end);                          // always must be found if qPrevInfo->ExclusiveGroup != 0'), (7, 1, u'+                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(iter!=end);                          // always must be found if qPrevInfo->ExclusiveGroup != 0'), (7, 1, u'+                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(iter!=end);                          // always must be found if qPrevInfo->ExclusiveGroup != 0'), (7, 1, u'+                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(iter!=end);                          // always must be found if qPrevInfo->ExclusiveGroup != 0'), (7, 1, u'+                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Player::SatisfyQuestPreviousQuest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(iter!=end);                          // always must be found if qPrevInfo->ExclusiveGroup != 0'), (7, 1, u'+                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                assert(iter!=end);                          // always must be found if qPrevInfo->ExclusiveGroup != 0'), (7, 1, u'+                assert(iter2!=end);                         // always must be found if qPrevInfo->ExclusiveGroup != 0')]
===========================================
Class: class AllOrbsInGrid { 
Class:		Class = 0;
Class:			Class = m_creature->getVictim()->getClass();
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT(i_file);')]
===========================================
===========================================
Total add: 28
Total del: 0
Header: WorldLog::Initialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT(i_file);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT(i_file);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        assert(false);')]
===========================================
===========================================
Total add: 6
Total del: 23
Header: WorldSession::HandleChangeSeatsOnControlledVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: WorldSession::HandleChangeSeatsOnControlledVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: WorldSession::HandleChangeSeatsOnControlledVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                assert(false);'), (52, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 25
Total del: 24
Header: WorldSession::HandleChangeSeatsOnControlledVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                assert(false);'), (52, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                assert(false);'), (52, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                assert(false);')]
===========================================
===========================================
Total add: 15
Total del: 0
Header: WorldSession::HandleChangeSeatsOnControlledVehicle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_Seats.empty());'), (55, 1, u'+        assert(!seat->second.passenger);')]
===========================================
===========================================
Total add: 25
Total del: 41
Header: Vehicle::SetVehicleId
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_Seats.empty());'), (55, 1, u'+        assert(!seat->second.passenger);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_Seats.empty());'), (55, 1, u'+        assert(!seat->second.passenger);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(seat != m_Seats.end());')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Vehicle::RemovePassenger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(seat != m_Seats.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(seat != m_Seats.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(numPlanes < 31);'), (11, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Box::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(numPlanes < 31);'), (11, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(numPlanes < 31);'), (11, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(numPlanes < 31);'), (10, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: Box::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(numPlanes < 31);'), (10, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(numPlanes < 31);'), (10, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( Caster != NULL && info != NULL );'), (6, 2, u'-    ASSERT( info == sSpellStore.LookupEntry( info->Id ) && "`info` must be pointer to sSpellStore element");')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: SpellCastTargets::write
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( Caster != NULL && info != NULL );'), (6, 2, u'-    ASSERT( info == sSpellStore.LookupEntry( info->Id ) && "`info` must be pointer to sSpellStore element");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT( Caster != NULL && info != NULL );'), (6, 2, u'-    ASSERT( info == sSpellStore.LookupEntry( info->Id ) && "`info` must be pointer to sSpellStore element");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(c->isTotem());')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: TotemAI::Permissible
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(c->isTotem());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(c->isTotem());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(cinfo);')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(cinfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(cinfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(getPetType()!=SUMMON_PET && "Must be already removed.");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Pet::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(getPetType()!=SUMMON_PET && "Must be already removed.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(getPetType()!=SUMMON_PET && "Must be already removed.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (8, 1, u'+        assert(cinfo);')]
===========================================
===========================================
Total add: 4
Total del: 8
Header: namespace FactorySelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (8, 1, u'+        assert(cinfo);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (8, 1, u'+        assert(cinfo);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            assert(false);'), (12, 1, u'+        assert(false);'), (15, 2, u'-        assert(!m_objectUpdated);'), (16, 1, u'+    assert(!m_objectUpdated);')]
===========================================
===========================================
Total add: 7
Total del: 8
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            assert(false);'), (12, 1, u'+        assert(false);'), (15, 2, u'-        assert(!m_objectUpdated);'), (16, 1, u'+    assert(!m_objectUpdated);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            assert(false);'), (12, 1, u'+        assert(false);'), (15, 2, u'-        assert(!m_objectUpdated);'), (16, 1, u'+    assert(!m_objectUpdated);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(GetGUID());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(GetGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(GetGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values);'), (3, 1, u'+    assert(GetGUID());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Unit::CleanupsBeforeDelete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values);'), (3, 1, u'+    assert(GetGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values);'), (3, 1, u'+    assert(GetGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: Unit::SetGuardian
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert((*itr)->GetTypeId() == TYPEID_UNIT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: WorldObject::AddObjectToRemoveList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+            assert(triggeredByAura);')]
===========================================
===========================================
Total add: 12
Total del: 17
Header: Unit::ProcDamageAndSpellFor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+            assert(triggeredByAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+            assert(triggeredByAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert( ngrid != NULL );')]
===========================================
===========================================
Total add: 14
Total del: 2
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert( ngrid != NULL );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert( ngrid != NULL );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!Aur->IsInUse());')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!Aur->IsInUse());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!Aur->IsInUse());')]
===========================================
Class:class EmpoweringShadowsAura: public Aura { 
Class:class TRINITY_DLL_DECL VashjSurgeAura : public Aura { 
Class:class TRINITY_DLL_DECL InsidiousAura : public Aura { class TRINITY_DLL_DECL InsidiousAura : public Aura 
Class:class TRINITY_DLL_DECL BurningNovaAura : public Aura { 
Class:class TRINITY_DLL_DECL BugAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert (parentAura);')]
===========================================
===========================================
Total add: 9
Total del: 5
Header: PersistentAreaAura::~PersistentAreaAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert (parentAura);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert (parentAura);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Total add: 28
Total del: 41
Header: Aura::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(false);'), (6, 1, u'+        assert(!m_objectUpdated);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(false);'), (6, 1, u'+        assert(!m_objectUpdated);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+            assert(false);'), (6, 1, u'+        assert(!m_objectUpdated);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_attacking);'), (4, 1, u'+    assert(m_attackers.empty());'), (5, 1, u'+    assert(m_sharedVision.empty());')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_attacking);'), (4, 1, u'+    assert(m_attackers.empty());'), (5, 1, u'+    assert(m_sharedVision.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_attacking);'), (4, 1, u'+    assert(m_attackers.empty());'), (5, 1, u'+    assert(m_sharedVision.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
Total add: 17
Total del: 14
Header: Unit::CleanupsBeforeDelete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values[0]);'), (3, 2, u'-    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::ClearUpdateMask
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values[0]);'), (3, 2, u'-    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values[0]);'), (3, 2, u'-    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values[0]);'), (3, 2, u'-    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::_SetUpdateBits
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values[0]);'), (3, 2, u'-    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(m_uint32Values[0]);'), (3, 2, u'-    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(m_uint32Values[0]);'), (9, 1, u'+    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: Object::ClearUpdateMask
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(m_uint32Values[0]);'), (9, 1, u'+    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(m_uint32Values[0]);'), (9, 1, u'+    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(!m_objectUpdated);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(!m_objectUpdated);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(!m_objectUpdated);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_attacking);'), (4, 1, u'+    assert(m_attackers.empty());'), (5, 1, u'+    assert(m_sharedVision.empty());'), (6, 1, u'+    assert(m_Controlled.empty());')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_attacking);'), (4, 1, u'+    assert(m_attackers.empty());'), (5, 1, u'+    assert(m_sharedVision.empty());'), (6, 1, u'+    assert(m_Controlled.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(!m_attacking);'), (4, 1, u'+    assert(m_attackers.empty());'), (5, 1, u'+    assert(m_sharedVision.empty());'), (6, 1, u'+    assert(m_Controlled.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
Total add: 15
Total del: 13
Header: Unit::CleanupsBeforeDelete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(m_uint32Values);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(false);')]
===========================================
===========================================
Total add: 1
Total del: 15
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(grid != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Map::EnsureGridCreated
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(grid != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(grid != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert(m_uint32Values[0]);'), (10, 1, u'+    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Total add: 10
Total del: 1
Header: Object::_SetUpdateBits
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert(m_uint32Values[0]);'), (10, 1, u'+    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert(m_uint32Values[0]);'), (10, 1, u'+    assert(m_uint32Values_mirror[0]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Object::~Object
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            assert(obj && obj->IsInWorld());')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ObjectAccessor::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            assert(obj && obj->IsInWorld());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            assert(obj && obj->IsInWorld());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(i_objectsToRemove.empty());')]
===========================================
===========================================
Total add: 9
Total del: 6
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(i_objectsToRemove.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(i_objectsToRemove.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!isPet());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: TempSummon::InitSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!isPet());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!isPet());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(i_objectsToRemove.empty());')]
===========================================
===========================================
Total add: 9
Total del: 6
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(i_objectsToRemove.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(i_objectsToRemove.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert((!c->isPet() || !c->isVehicle()) && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert(!c->isWorldCreature() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectGridRespawnMover::Visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert((!c->isPet() || !c->isVehicle()) && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert(!c->isWorldCreature() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert((!c->isPet() || !c->isVehicle()) && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert(!c->isWorldCreature() && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!isPet());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: TempSummon::UnSummon
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!isPet());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!isPet());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                assert((*itr)->GetOwnerGUID() == GetGUID());')]
===========================================
===========================================
Total add: 22
Total del: 8
Header: Unit::SetPet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                assert((*itr)->GetOwnerGUID() == GetGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                assert((*itr)->GetOwnerGUID() == GetGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: InstanceMap::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!GetCharmerGUID());'), (3, 2, u'-        assert(!GetOwnerGUID());')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!GetCharmerGUID());'), (3, 2, u'-        assert(!GetOwnerGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!GetCharmerGUID());'), (3, 2, u'-        assert(!GetOwnerGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(!GetCharmerGUID());'), (6, 1, u'+        assert(!GetOwnerGUID());')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: Unit::RemoveFromWorld
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(!GetCharmerGUID());'), (6, 1, u'+        assert(!GetOwnerGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(!GetCharmerGUID());'), (6, 1, u'+        assert(!GetOwnerGUID());')]
===========================================
Class: class FreezeDetectorRunnable : public ZThread::Runnable { 
Class: class RARunnable : public ZThread::Runnable { 
Class:  class Patcher { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        ASSERT(i_file);')]
===========================================
===========================================
Total add: 29
Total del: 0
Header: WorldLog::Initialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        ASSERT(i_file);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        ASSERT(i_file);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-                assert(false);'), (50, 1, u'+                    assert(false);'), (105, 1, u'+                            assert(false);'), (126, 2, u'-                    assert(playerBind->save == mapSave);'), (133, 1, u'+                        assert(playerBind->save == mapSave);')]
===========================================
===========================================
Total add: 60
Total del: 59
Header: InstanceMap::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-                assert(false);'), (50, 1, u'+                    assert(false);'), (105, 1, u'+                            assert(false);'), (126, 2, u'-                    assert(playerBind->save == mapSave);'), (133, 1, u'+                        assert(playerBind->save == mapSave);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-                assert(false);'), (50, 1, u'+                    assert(false);'), (105, 1, u'+                            assert(false);'), (126, 2, u'-                    assert(playerBind->save == mapSave);'), (133, 1, u'+                        assert(playerBind->save == mapSave);')]
===========================================
Class:class PrioritizeManaPlayerWraper { 
Class:    class EmoteChatBuilder     class EmoteChatBuilder
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!GetCharmGUID());')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: Player::Uncharm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!GetCharmGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!GetCharmGUID());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid'), (4, 1, u'+            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: Aura::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid'), (4, 1, u'+            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid'), (4, 1, u'+            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid'), (34, 1, u'+            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Total add: 33
Total del: 31
Header: Aura::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid'), (34, 1, u'+            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid'), (34, 1, u'+            assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u"-    assert(header[0]=='W' && header[1]=='D' && header[2]=='B' && header[3] == 'C');")]
===========================================
===========================================
Total add: 14
Total del: 6
Header: DBCFile::open
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u"-    assert(header[0]=='W' && header[1]=='D' && header[2]=='B' && header[3] == 'C');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u"-    assert(header[0]=='W' && header[1]=='D' && header[2]=='B' && header[3] == 'C');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(fieldCount*4 == recordSize);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: DBCFile::open
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(fieldCount*4 == recordSize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(fieldCount*4 == recordSize);')]
===========================================
Class:     class BattleGround2ChatBuilder     {     
Class:    class BattleGroundChatBuilder     class BattleGroundChatBuilder
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetWorldObject(obj->GetGUID(), obj));'), (8, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetWorldObject(obj->GetGUID(), obj));'), (8, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetWorldObject(obj->GetGUID(), obj));'), (8, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetGridObject(obj->GetGUID(), obj));'), (8, 1, u'+            assert(false);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetGridObject(obj->GetGUID(), obj));'), (8, 1, u'+            assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetGridObject(obj->GetGUID(), obj));'), (8, 1, u'+            assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(grid.NoWorldObjectInGrid());'), (5, 2, u'-        assert(grid.NoWorldObjectInGrid());'), (6, 2, u'-        assert(grid.NoGridObjectInGrid());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(grid.NoWorldObjectInGrid());'), (5, 2, u'-        assert(grid.NoWorldObjectInGrid());'), (6, 2, u'-        assert(grid.NoGridObjectInGrid());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(grid.NoWorldObjectInGrid());'), (5, 2, u'-        assert(grid.NoWorldObjectInGrid());'), (6, 2, u'-        assert(grid.NoGridObjectInGrid());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            assert(!PlayersNearGrid(x, y));')]
===========================================
===========================================
Total add: 2
Total del: 7
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            assert(!PlayersNearGrid(x, y));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            assert(!PlayersNearGrid(x, y));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert(!PlayersNearGrid(x, y));')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert(!PlayersNearGrid(x, y));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert(!PlayersNearGrid(x, y));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        assert(grid.NoWorldObjectInGrid());'), (27, 1, u'+        assert(grid.NoWorldObjectInGrid());'), (28, 1, u'+        assert(grid.NoGridObjectInGrid());')]
===========================================
===========================================
Total add: 16
Total del: 8
Header: Map::UnloadGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        assert(grid.NoWorldObjectInGrid());'), (27, 1, u'+        assert(grid.NoWorldObjectInGrid());'), (28, 1, u'+        assert(grid.NoGridObjectInGrid());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        assert(grid.NoWorldObjectInGrid());'), (27, 1, u'+        assert(grid.NoWorldObjectInGrid());'), (28, 1, u'+        assert(grid.NoGridObjectInGrid());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(NewInstanceId);'), (8, 1, u'+                        assert(NewInstanceId);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: MapInstanced::GetInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(NewInstanceId);'), (8, 1, u'+                        assert(NewInstanceId);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(NewInstanceId);'), (8, 1, u'+                        assert(NewInstanceId);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetWorldObject(obj->GetGUID(), obj))'), (3, 1, u'+        assert(!grid.GetWorldObject(obj->GetGUID(), obj));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetWorldObject(obj->GetGUID(), obj))'), (3, 1, u'+        assert(!grid.GetWorldObject(obj->GetGUID(), obj));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetWorldObject(obj->GetGUID(), obj))'), (3, 1, u'+        assert(!grid.GetWorldObject(obj->GetGUID(), obj));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetGridObject(obj->GetGUID(), obj))'), (3, 1, u'+        assert(!grid.GetGridObject(obj->GetGUID(), obj));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetGridObject(obj->GetGUID(), obj))'), (3, 1, u'+        assert(!grid.GetGridObject(obj->GetGUID(), obj));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!grid.GetGridObject(obj->GetGUID(), obj))'), (3, 1, u'+        assert(!grid.GetGridObject(obj->GetGUID(), obj));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        assert(!grid.GetWorldObject(obj->GetGUID(), obj))')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        assert(!grid.GetWorldObject(obj->GetGUID(), obj))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        assert(!grid.GetWorldObject(obj->GetGUID(), obj))')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(!grid.GetGridObject(obj->GetGUID(), obj))')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Map::SwitchGridContainers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(!grid.GetGridObject(obj->GetGUID(), obj))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(!grid.GetGridObject(obj->GetGUID(), obj))')]
===========================================
Class:    class AchievementChatBuilder     class AchievementChatBuilder
Class:    class MessageChatLocaleCacheDo     class MonsterChatBuilder             MessageChatLocaleCacheDo(WorldObject const& obj, ChatMsg msgtype, int32 textId, uint32 language, uint64 targetGUID, float dist)                 : i_object(obj), i_msgtype(msgtype), i_textId(textId), i_language(language),                 i_targetGUID(targetGUID), i_dist(dist)             MonsterChatBuilder(WorldObject const& obj, ChatMsg msgtype, int32 textId, uint32 language, uint64 targetGUID)                 : i_object(obj), i_msgtype(msgtype), i_textId(textId), i_language(language), i_targetGUID(targetGUID) {}                 : i_object(obj), i_msgtype(msgtype), i_textId(textId), i_language(language), i_targetGUID(targetGUID) 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert(!GetCharmGUID());')]
===========================================
===========================================
Total add: 13
Total del: 3
Header: Player::Uncharm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert(!GetCharmGUID());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    assert(!GetCharmGUID());')]
===========================================
Class:  class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> {   class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> 
Class:  class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> {   class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert(c->count == 0);'), (3, 1, u'+  assert(c->count == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AtomicCount::~AtomicCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert(c->count == 0);'), (3, 1, u'+  assert(c->count == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert(c->count == 0);'), (3, 1, u'+  assert(c->count == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: Aura::_AddAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(slot < MAX_AURAS);      // assert that we find a slot and it is valid')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert(bg);')]
===========================================
===========================================
Total add: 19
Total del: 25
Header: Player::GetBGAccessByLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert(bg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert(bg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tAssert(s->block_start >= 0L, "block gone");'), (3, 1, u'+    Assert(s->block_start >= 0L, "block gone");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: deflate_stored
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tAssert(s->block_start >= 0L, "block gone");'), (3, 1, u'+    Assert(s->block_start >= 0L, "block gone");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tAssert(s->block_start >= 0L, "block gone");'), (3, 1, u'+    Assert(s->block_start >= 0L, "block gone");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\tassert(fieldCount*4 >= recordSize);'), (65, 1, u'+    assert(fieldCount*4 >= recordSize);')]
===========================================
===========================================
Total add: 31
Total del: 31
Header: DBCFile::open
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\tassert(fieldCount*4 >= recordSize);'), (65, 1, u'+    assert(fieldCount*4 >= recordSize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\tassert(fieldCount*4 >= recordSize);'), (65, 1, u'+    assert(fieldCount*4 >= recordSize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: DBCFile::getRecord
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: DBCFile::begin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: DBCFile::end
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(data);'), (4, 1, u'+    assert(data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(numPlanes < 31);'), (11, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: AABox::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(numPlanes < 31);'), (11, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(numPlanes < 31);'), (11, 1, u'+    assert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(numPlanes < 31);'), (11, 2, u'-\tassert(numPlanes < 31);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: AABox::culledBy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(numPlanes < 31);'), (11, 2, u'-\tassert(numPlanes < 31);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(numPlanes < 31);'), (11, 2, u'-\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(owner);'), (3, 1, u'+    assert(owner);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BattleGroundAV::PopulateNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(owner);'), (3, 1, u'+    assert(owner);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(owner);'), (3, 1, u'+    assert(owner);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT( ticket );'), (4, 1, u'+    ASSERT( ticket );')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: TicketMgr::AddGMTicket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT( ticket );'), (4, 1, u'+    ASSERT( ticket );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT( ticket );'), (4, 1, u'+    ASSERT( ticket );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert( !empty() );')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: MotionMaster::Clear
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert( !empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert( !empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( !empty() );')]
===========================================
===========================================
Total add: 19
Total del: 16
Header: MotionMaster::MovementExpired
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( !empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( !empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert( !empty() );')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: MotionMaster::Clear
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert( !empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert( !empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( !empty() );')]
===========================================
===========================================
Total add: 19
Total del: 16
Header: MotionMaster::MovementExpired
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( !empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( !empty() );')]
===========================================
Class:class ChainHealingFullHealth: std::unary_function<const Unit*, bool> { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Unit::SelectHostilTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetTypeId()== TYPEID_UNIT);')]
===========================================
Class: class TRINITY_DLL_DECL BurningNovaAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                    assert(p.second);')]
===========================================
===========================================
Total add: 0
Total del: 32
Header: INSTANTIATE_CLASS_MUTEX
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                    assert(p.second);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                    assert(p.second);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(m_Auras.begin() == m_Auras.end());')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(m_Auras.begin() == m_Auras.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(m_Auras.begin() == m_Auras.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(m_Auras.begin() == m_Auras.end());')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Unit::~Unit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(m_Auras.begin() == m_Auras.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(m_Auras.begin() == m_Auras.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            ACE_ASSERT (false);'), (16, 1, u'+                ACE_ASSERT (false);')]
===========================================
===========================================
Total add: 25
Total del: 8
Header: WorldSocket::SendPacket
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            ACE_ASSERT (false);'), (16, 1, u'+                ACE_ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            ACE_ASSERT (false);'), (16, 1, u'+                ACE_ASSERT (false);')]
===========================================
Class:class EmpoweringShadowsAura: public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(node);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: WaypointMovementGenerator<Creature>::Update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(node);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(node);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: InstanceMap::Add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(false);')]
===========================================
Class: class FreezeDetectorRunnable : public ZThread::Runnable { 
Class: class RARunnable : public ZThread::Runnable { 
Class:  class Patcher { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert((!c->isPet() || !c->isVehicle()) && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ObjectGridRespawnMover::Visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert((!c->isPet() || !c->isVehicle()) && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(!c->isPet() && "ObjectGridRespawnMover don\'t must be called for pets");'), (3, 1, u'+        assert((!c->isPet() || !c->isVehicle()) && "ObjectGridRespawnMover don\'t must be called for pets");')]
===========================================
Class: class FreezeDetectorRunnable : public ZThread::Runnable { 
Class: class RARunnable : public ZThread::Runnable { 
Class:  class Patcher { 
Class: class FreezeDetectorRunnable : public ZThread::Runnable { 
Class: class RARunnable : public ZThread::Runnable { 
Class:  class Patcher { 
Class:class TRINITY_DLL_SPEC instance_molten_core : public ScriptedInstance struct TRINITY_DLL_DECL instance_molten_core : public ScriptedInstance     public:          instance_molten_core(Map *map) : ScriptedInstance(map) {}         instance_molten_core(Map *map) : ScriptedInstance(map) 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, std::string filename)'), (3, 1, u'+static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, const std::string& filename)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: typedef std::list<std::string> StoreProblemList;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, std::string filename)'), (3, 1, u'+static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, const std::string& filename)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, std::string filename)'), (3, 1, u'+static bool LoadDBC_assert_print(uint32 fsize,uint32 rsize, const std::string& filename)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(Victim);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: Unit::CastSpell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(Victim);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(Victim);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-\t\t\tACE_ASSERT (m_NetThreadsCount >= 1);'), (229, 1, u'+    ACE_ASSERT (m_NetThreadsCount >= 1);')]
===========================================
===========================================
Total add: 108
Total del: 97
Header: WorldSocketMgr::~WorldSocketMgr
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-\t\t\tACE_ASSERT (m_NetThreadsCount >= 1);'), (229, 1, u'+    ACE_ASSERT (m_NetThreadsCount >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-\t\t\tACE_ASSERT (m_NetThreadsCount >= 1);'), (229, 1, u'+    ACE_ASSERT (m_NetThreadsCount >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(161, 2, u'-            assert(pVictim->GetTypeId()==TYPEID_PLAYER);'), (164, 2, u'-            assert(he->duel);')]
===========================================
===========================================
Total add: 1
Total del: 181
Header: Unit::DealDamage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(161, 2, u'-            assert(pVictim->GetTypeId()==TYPEID_PLAYER);'), (164, 2, u'-            assert(he->duel);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(161, 2, u'-            assert(pVictim->GetTypeId()==TYPEID_PLAYER);'), (164, 2, u'-            assert(he->duel);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(pVictim);')]
===========================================
===========================================
Total add: 13
Total del: 4
Header: Unit::resetAttackTimer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(pVictim);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(pVictim);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+                assert(false);')]
===========================================
===========================================
Total add: 31
Total del: 0
Header: Player::LoadFromDB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+                assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+                assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!Aur->IsInUse());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::RemoveAura
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!Aur->IsInUse());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!Aur->IsInUse());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(target);')]
===========================================
===========================================
Total add: 23
Total del: 1
Header: Unit::ClearInCombat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(target);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(target);')]
===========================================
Class: class TRINITY_DLL_DECL VashjSurgeAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  ASSERT (s);'), (3, 1, u'+    ASSERT (s);')]
===========================================
===========================================
Total add: 42
Total del: 42
Header: World::AddSession_
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  ASSERT (s);'), (3, 1, u'+    ASSERT (s);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  ASSERT (s);'), (3, 1, u'+    ASSERT (s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-              ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (7, 1, u'+                ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: WorldSocket::handle_input_missing_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-              ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (7, 1, u'+                ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-              ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (7, 1, u'+                ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-              ACE_ASSERT (message_block.length () == 0);'), (41, 1, u'+                ACE_ASSERT (message_block.length () == 0);')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: WorldSocket::handle_input_missing_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-              ACE_ASSERT (message_block.length () == 0);'), (41, 1, u'+                ACE_ASSERT (message_block.length () == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-              ACE_ASSERT (message_block.length () == 0);'), (41, 1, u'+                ACE_ASSERT (message_block.length () == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-          ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (9, 1, u'+            ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: WorldSocket::handle_input_missing_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-          ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (9, 1, u'+            ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-          ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (9, 1, u'+            ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  ACE_ASSERT (new_pct);'), (73, 1, u'+    ACE_ASSERT (new_pct);')]
===========================================
===========================================
Total add: 32
Total del: 35
Header: WorldSocket::handle_input_missing_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  ACE_ASSERT (new_pct);'), (73, 1, u'+    ACE_ASSERT (new_pct);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  ACE_ASSERT (new_pct);'), (73, 1, u'+    ACE_ASSERT (new_pct);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-    ACE_ASSERT (false);'), (81, 1, u'+        ACE_ASSERT (false);'), (85, 2, u'-      ACE_ASSERT (false);'), (88, 1, u'+            ACE_ASSERT (false);')]
===========================================
===========================================
Total add: 48
Total del: 53
Header: WorldSocket::HandlePing
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-    ACE_ASSERT (false);'), (81, 1, u'+        ACE_ASSERT (false);'), (85, 2, u'-      ACE_ASSERT (false);'), (88, 1, u'+            ACE_ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-    ACE_ASSERT (false);'), (81, 1, u'+        ACE_ASSERT (false);'), (85, 2, u'-      ACE_ASSERT (false);'), (88, 1, u'+            ACE_ASSERT (false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetCombatReach() > 0.1);')]
===========================================
===========================================
Total add: 9
Total del: 1
Header: Unit::GetRandomContactPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetCombatReach() > 0.1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(GetCombatReach() > 0.1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(GetCombatReach() > 0.1);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::GetRandomContactPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(GetCombatReach() > 0.1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(GetCombatReach() > 0.1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(Victim);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Unit::CastSpell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(Victim);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(Victim);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(!i_pet.getVictim() || i_pet.getVictim() == victim);')]
===========================================
===========================================
Total add: 1
Total del: 10
Header: PetAI::_stopAttack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(!i_pet.getVictim() || i_pet.getVictim() == victim);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(!i_pet.getVictim() || i_pet.getVictim() == victim);')]
===========================================
Class:    class AnyBugCheck     class AnyBugCheck
Class: class TRINITY_DLL_DECL BugAura : public Aura { 
Class:    class AnyBugCheck     class AnyBugCheck
Class: class TRINITY_DLL_DECL BugAura : public Aura { 
Class:class TRINITY_DLL_DECL SentinelAbilityAura : public Aura { 
Class:class TRINITY_DLL_DECL SentinelAbilityAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                        ASSERT(gmod.GetNumBytes() <= 32);'), (27, 1, u'+                    ASSERT(gmod.GetNumBytes() <= 32);')]
===========================================
===========================================
Total add: 73
Total del: 40
Header: AuthSocket::_HandleLogonChallenge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                        ASSERT(gmod.GetNumBytes() <= 32);'), (27, 1, u'+                    ASSERT(gmod.GetNumBytes() <= 32);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                        ASSERT(gmod.GetNumBytes() <= 32);'), (27, 1, u'+                    ASSERT(gmod.GetNumBytes() <= 32);')]
===========================================
Class: class AgonizingFlamesTargetCheck { 
Class:  class AgonizingFlamesTargetCheck { 
Class:    class AnyBugCheck     class AnyBugCheck
Class: class MANGOS_DLL_DECL BugAura : public Aura { 
Class:class MANGOS_DLL_DECL SentinelAbilityAura : public Aura { 
Class:    class CharacterHandler { 
Class:    class CharacterHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 2, u'-            assert( i_nextMove <= MAX_CONF_WAYPOINTS );'), (285, 1, u'+            assert( i_nextMove <= MAX_CONF_WAYPOINTS );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (73, 2, u'-                assert( p != NULL );'), (93, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (159, 1, u'+        assert( creature->GetCreatureInfo() != NULL );'), (191, 1, u'+                assert( p != NULL );'), (211, 1, u'+        assert( creature->GetCreatureInfo() != NULL );')]
===========================================
Class:    class MessageChatLocaleCacheDo     class MessageChatLocaleCacheDo
Class:    class MessageChatLocaleCacheDo     class MessageChatLocaleCacheDo
Class: class ChainHealingFullHealth: std::unary_function<const Unit*, bool> { 
Class: class ChainHealingFullHealth: std::unary_function<const Unit*, bool> { 
Class:  class AgonizingFlamesTargetCheck { 
Class:    class AnyBugCheck     class AnyBugCheck
Class: class MANGOS_DLL_DECL BugAura : public Aura { 
Class:class MANGOS_DLL_DECL SentinelAbilityAura : public Aura { 
Class:    class CharacterHandler { 
Class:    class CharacterHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 2, u'-            assert( i_nextMove <= MAX_CONF_WAYPOINTS );'), (285, 1, u'+            assert( i_nextMove <= MAX_CONF_WAYPOINTS );')]
===========================================
Class:    class MessageChatLocaleCacheDo     class MessageChatLocaleCacheDo
Class:    class MessageChatLocaleCacheDo     class MessageChatLocaleCacheDo
Class:    class NearUsedPosDo     class NearUsedPosDo
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-     ACE_ASSERT(m_RecvPct.space() == 0);'), (17, 1, u'+      ACE_ASSERT (m_RecvPct.space () == 0);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: WorldSocket::handle_input_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-     ACE_ASSERT(m_RecvPct.space() == 0);'), (17, 1, u'+      ACE_ASSERT (m_RecvPct.space () == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-     ACE_ASSERT(m_RecvPct.space() == 0);'), (17, 1, u'+      ACE_ASSERT (m_RecvPct.space () == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                assert(NewInstanceId);')]
===========================================
===========================================
Total add: 11
Total del: 1
Header: MapInstanced::GetInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                assert(NewInstanceId);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                assert(NewInstanceId);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+  assert (atm_hosts.is_open ());')]
===========================================
Class: template <class ACE_LOCK, class TYPE> void ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::dump (void) const { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::ACE_Atomic_Op_Ex (   ACE_LOCK & mtx,   typename ACE_Atomic_Op_Ex<ACE_LOCK, TYPE>::arg_type c)   : mutex_ (mtx)   , value_ (c) { 
Class: template <class ACE_LOCK, class TYPE> ACE_Atomic_Op<ACE_LOCK, TYPE>::ACE_Atomic_Op (   typename ACE_Atomic_Op<ACE_LOCK, TYPE>::arg_type c)   : impl_ (own_mutex_, c) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(108, 1, u'+  ACE_ASSERT (0); // not implemented.'), (116, 1, u'+  ACE_ASSERT (0); // not implemented.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(621, 1, u'+              ACE_ASSERT (0);'), (637, 1, u'+              ACE_ASSERT (0);'), (645, 1, u'+          ACE_ASSERT (0); // just to see it coming')]
===========================================
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Pair_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Pair_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                               KEY *&key_to_remove,                                                                                               VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Refcounted_Recyclable_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Refcounted_Recyclable_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                                          KEY *&key_to_remove,                                                                                                          VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Handler_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Handler_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                    KEY *&key_to_remove,                                                                                    VALUE *&value_to_remove) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::~ACE_Null_Caching_Utility (void) { 
Class: template <class KEY, class VALUE, class CONTAINER, class ITERATOR, class ATTRIBUTES> void ACE_Null_Caching_Utility<KEY, VALUE, CONTAINER, ITERATOR, ATTRIBUTES>::minimum (CONTAINER &container,                                                                                 KEY *&key_to_remove,                                                                                 VALUE *&value_to_remove) { 
Class:   class ACE_Cleanup_Info_Node { 
Class: template <class KEY, class VALUE, class CONTAINER> int ACE_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &container,                                                       KEY *key,                                                       VALUE *) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Refcounted_Recyclable_Handler_Cleanup_Strategy<KEY,                                                    VALUE,                                                    CONTAINER>::cleanup (   CONTAINER &,   KEY *,   VALUE *value) { 
Class:   template <class KEY, class VALUE, class CONTAINER> int ACE_Null_Cleanup_Strategy<KEY, VALUE, CONTAINER>::cleanup (CONTAINER &,                                                            KEY *,                                                            VALUE *) { 
Class:     template <class T, class ACE_LOCK> ACE_Locked_Free_List<T, ACE_LOCK>::ACE_Locked_Free_List (int mode,                                                      size_t prealloc,                                                      size_t lwm,                                                      size_t hwm,                                                      size_t inc)   : mode_ (mode),     free_list_ (0),     lwm_ (lwm),     hwm_ (hwm),     inc_ (inc),     size_ (0) { 
Class:     template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::add (T *element) { 
Class:    template <class T, class ACE_LOCK> size_t ACE_Locked_Free_List<T, ACE_LOCK>::size (void) { 
Class:   template <class T, class ACE_LOCK> void ACE_Locked_Free_List<T, ACE_LOCK>::alloc (size_t n) { 
Class: template <class RECEIVER, class ACTION> ACE_Command_Callback<RECEIVER, ACTION>::~ACE_Command_Callback (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Map_Entry (const EXT_ID &ext_id,                                                         const INT_ID &int_id,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *next,                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_ (int_id),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> EXT_ID & ACE_Hash_Map_Entry<EXT_ID, INT_ID>::key () { 
Class: template <class EXT_ID, class INT_ID> void ACE_Hash_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::create_buckets (size_t size) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                    const INT_ID &int_id,                                                                                    ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::shared_find (const EXT_ID &ext_id,                                                                                         ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry,                                                                                         size_t &loc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                      const INT_ID &int_id,                                                                                      INT_ID &old_int_id,                                                                                      ACE_Hash_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Map_Const_Iterator_Base_Ex<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Map_With_Allocator<EXT_ID, INT_ID>::ACE_Hash_Map_With_Allocator (size_t size,                                                                           ACE_Allocator *alloc)   : ACE_Hash_Map_Manager_Ex<EXT_ID, INT_ID, ACE_Hash<EXT_ID>, ACE_Equal_To<EXT_ID>, ACE_Null_Mutex> (size, alloc) { 
Class: template <class EXT_ID, class INT_ID> ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::ACE_Hash_Multi_Map_Entry (const EXT_ID &ext_id,                                                                     const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *next,                                                                     ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *prev)   : ext_id_ (ext_id),     int_id_set_ (int_id_set),     next_ (next),     prev_ (prev) { 
Class: template <class EXT_ID, class INT_ID> ACE_Unbounded_Set<INT_ID> & ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID>::item () { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> void ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::open (size_t size,                                                                                     ACE_Allocator *table_alloc,                                                                                     ACE_Allocator *entry_alloc) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_all_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::bind_i (const EXT_ID &ext_id,                                                                                       const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                       ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &int_id_set) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Manager<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                                                         const ACE_Unbounded_Set<INT_ID> &int_id_set,                                                                                         EXT_ID &old_ext_id,                                                                                         ACE_Unbounded_Set<INT_ID> &old_int_id_set,                                                                                         ACE_Hash_Multi_Map_Entry<EXT_ID, INT_ID> *&entry) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: template <class EXT_ID, class INT_ID, class HASH_KEY, class COMPARE_KEYS, class ACE_LOCK> int ACE_Hash_Multi_Map_Const_Iterator_Base<EXT_ID, INT_ID, HASH_KEY, COMPARE_KEYS, ACE_LOCK>::forward_i (void) { 
Class: class ACE_Module_Link { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 1, u'+  ACE_ASSERT ((this->next () == 0) || (this->next ()->prev () == this));'), (121, 1, u'+  ACE_ASSERT ((this->prev () == 0) || (this->prev ()->next () == this));'), (127, 1, u'+  ACE_ASSERT ((this->tail_ == 0) || (this->tail_->next () == 0));'), (128, 1, u'+  ACE_ASSERT ((this->head_ == 0) || (this->head_->prev () == 0));'), (129, 1, u'+  ACE_ASSERT (!((this->head_ == 0) ^ (this->tail_ == 0)));'), (138, 1, u'+  ACE_ASSERT (this->tail_ == 0 || found_tail == 1);'), (147, 1, u'+  ACE_ASSERT (this->head_ == 0 || found_head == 1);')]
===========================================
Class: class ACE_LD_Symbol_Registry { 
Class:class ACE_Msg_Log_Cleanup: public ACE_Cleanup_Adapter<ACE_Log_Msg> { 
Class: class ACE_Log_Msg_Manager { 
Class: template <class T, class ACE_LOCK> ACE_Cached_Allocator<T, ACE_LOCK>::~ACE_Cached_Allocator (void) { 
Class: template <class T, class ACE_LOCK> void * ACE_Cached_Allocator<T, ACE_LOCK>::calloc (size_t nbytes,                                            char initial_value) { 
Class: template <class T, class ACE_LOCK> void ACE_Cached_Allocator<T, ACE_LOCK>::free (void * ptr) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class:        template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::open (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_T (const ACE_TCHAR *pool_name,                                                               const ACE_TCHAR *lock_name,                                                               const ACE_MEM_POOL_OPTIONS *options)   : cb_ptr_ (0),     memory_pool_ (pool_name, options),     bad_flag_ (0) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::remove (void) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::malloc (size_t nbytes) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void * ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::calloc (size_t n_elem,                                                         size_t elem_size,                                                         char initial_value) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void* ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::shared_find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::trybind (const char *name,                                                          void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name,                                                     void *&pointer) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::find (const char *name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::unbind (const char *name) { 
Class:   template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> void ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::dump (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::~ACE_Malloc_LIFO_Iterator_T (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_LIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::advance (void) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::ACE_Malloc_FIFO_Iterator_T (ACE_Malloc_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB> &malloc,                                                                                       const char *name)   : malloc_ (malloc),     curr_ (0),     guard_ (*malloc_.lock_),     name_ (name != 0 ? ACE_OS::strdup (name) : 0) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::next (void *&next_entry,                                                                     const char *&name) { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::done (void) const { 
Class: template <ACE_MEM_POOL_1, class ACE_LOCK, class ACE_CB> int ACE_Malloc_FIFO_Iterator_T<ACE_MEM_POOL_2, ACE_LOCK, ACE_CB>::start (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::close_i (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::next_free (ACE_UINT32 &free_slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::shared_bind (const EXT_ID &ext_id,                                                         const INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::rebind_i (const EXT_ID &ext_id,                                                      const INT_ID &int_id,                                                      INT_ID &old_int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::trybind_i (const EXT_ID &ext_id,                                                       INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_all (void) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_and_return_index (const EXT_ID &ext_id,                                                                     ACE_UINT32 &slot) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> int ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::unbind_i (const EXT_ID &ext_id,                                                      INT_ID &int_id) { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_UINT32 ACE_Map_Manager<EXT_ID, INT_ID, ACE_LOCK>::new_size (void) { 
Class: template <class EXT_ID, class INT_ID> void ACE_Map_Entry<EXT_ID, INT_ID>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::dump_i (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> ACE_Map_Entry<EXT_ID, INT_ID>& ACE_Map_Iterator_Base<EXT_ID, INT_ID, ACE_LOCK>::operator* (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
Class: template <class EXT_ID, class INT_ID, class ACE_LOCK> void ACE_Map_Reverse_Iterator<EXT_ID, INT_ID, ACE_LOCK>::dump (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+  ACE_ASSERT (size != 0);'), (54, 1, u'+  ACE_ASSERT (size <= ACE_UINT32_MAX);'), (653, 1, u'+  ACE_ASSERT (result != 0);'), (669, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Iterator_Adapter (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::~ACE_Map_Impl_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class IMPLEMENTATION, class ENTRY> int ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class IMPLEMENTATION, class ENTRY> void ACE_Map_Impl_Reverse_Iterator_Adapter<T, IMPLEMENTATION, ENTRY>::plus_plus (void) { 
Class:  template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::~ACE_Map_Impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::close (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_modify_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::bind_create_key (const VALUE &value,                                                                                               KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::recover_key (const KEY &modified_key,                                                                                           KEY &original_key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rebind (const KEY &key,                                                                                      const VALUE &value,                                                                                      VALUE &old_value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::trybind (const KEY &key,                                                                                       VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> int ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::unbind (const KEY &key,                                                                                      VALUE &value) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> size_t ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::total_size (void) const { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class IMPLEMENTATION, class ITERATOR, class REVERSE_ITERATOR, class ENTRY> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Impl<KEY, VALUE, IMPLEMENTATION, ITERATOR, REVERSE_ITERATOR, ENTRY>::rbegin_impl (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class T, class VALUE> ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::~ACE_Active_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class VALUE> int ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class VALUE> void ACE_Active_Map_Manager_Reverse_Iterator_Adapter<T, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::~ACE_Active_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_modify_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::bind_create_key (const VALUE &value,                                                                           KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::recover_key (const KEY &modified_key,                                                                       KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::find (const KEY &key,                                                                VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rebind (const KEY &key,                                                                  const VALUE &value,                                                                  KEY &old_key,                                                                  VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  expanded_value *&internal_value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> int ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::unbind (const KEY &key,                                                                  VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> size_t ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_ADAPTER> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Active_Map_Manager_Adapter<KEY, VALUE, KEY_ADAPTER>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::~ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> int ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS> void ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter<T, KEY, VALUE, HASH_KEY, COMPARE_KEYS>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::~ACE_Hash_Map_Manager_Ex_Adapter (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rebind (const KEY &key,                                                                                             const VALUE &value,                                                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::trybind (const KEY &key,                                                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> int ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::unbind (const KEY &key,                                                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> size_t ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class HASH_KEY, class COMPARE_KEYS, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Hash_Map_Manager_Ex_Adapter<KEY, VALUE, HASH_KEY, COMPARE_KEYS, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class T, class KEY, class VALUE> ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::~ACE_Map_Manager_Reverse_Iterator_Adapter (void) { 
Class:  template <class T, class KEY, class VALUE> int ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::compare (const ACE_Reverse_Iterator_Impl<T> &rhs) const { 
Class: template <class T, class KEY, class VALUE> void ACE_Map_Manager_Reverse_Iterator_Adapter<T, KEY, VALUE>::plus_plus (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::~ACE_Map_Manager_Adapter (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::close (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_modify_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::bind_create_key (const VALUE &value,                                                                      KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::recover_key (const KEY &modified_key,                                                                  KEY &original_key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rebind (const KEY &key,                                                             const VALUE &value,                                                             VALUE &old_value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::trybind (const KEY &key,                                                              VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::find (const KEY &key) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> int ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::unbind (const KEY &key,                                                             VALUE &value) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> size_t ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::total_size (void) const { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::begin_impl (void) { 
Class: template <class KEY, class VALUE, class KEY_GENERATOR> ACE_Reverse_Iterator_Impl<ACE_Reference_Pair<const KEY, VALUE> > * ACE_Map_Manager_Adapter<KEY, VALUE, KEY_GENERATOR>::rbegin_impl (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Timeprobe (ALLOCATOR *alloc,                        u_int id,                        const char *name,                        u_long size)   : ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR> (size),     id_ (id),     name_ (0) { 
Class:    template <class ACE_LOCK, class ALLOCATOR> int ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::is_event (const ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       ACE_METRICS_TIMEPROBE_DATA_TYPE &t,                                                       ACE_Metrics_Timeprobe<ACE_LOCK,                                                       ALLOCATOR>::                                                       event_id id) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_name (char * name) { 
Class:  template <class ACE_LOCK, class ALLOCATOR> void ACE_Metrics_Timeprobe<ACE_LOCK, ALLOCATOR>::probe_id (u_int id) { 
Class:         template <class ACE_LOCK, class ALLOCATOR> ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>:: ACE_Metrics_Cache (u_long table_size,                    u_long number_of_probes,                    ALLOCATOR *alloc)   : probe_set_size_ (0),     enqueue_names_ (0),     dequeue_names_ (0),     consumer_index_ (0),     supplier_index_ (1),     table_size_ (table_size),     interval_start_ (ACE_Time_Value::zero),     interval_end_ (ACE_Time_Value::zero),     interval_initialized_ (0),     metrics_enabled_(1),     allocator_ (alloc) { 
Class:      template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Metrics_Cache<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(256, 1, u'+      ACE_ASSERT (task->thr_count () == 0);')]
===========================================
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const T &i, ACE_Node<T, C> *n)   : next_ (n),     item_ (i) { 
Class: template <class T, class C> ACE_Node<T, C>::ACE_Node (const ACE_Node<T, C> &s)   : next_ (s.next_),     item_ (s.item_) { 
Class: class ACE_TSS_Cleanup { 
Class:    class TSS_Cleanup_Instance { 
Class:    class ACE_Export ACE_POSIX_Asynch_Transmit_Handler : public ACE_Handler { 
Class:  class ACE_AIOCB_Notify_Pipe_Manager : public ACE_Handler { 
Class: class ACE_Proactor_Timer_Handler : public ACE_Task<ACE_NULL_SYNCH> { 
Class:    template <class EXT_ID, class INT_ID> ACE_RB_Tree_Node<EXT_ID, INT_ID>::~ACE_RB_Tree_Node (void) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &rbt)   : root_ (0),     current_size_ (0) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree () { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::lessthan (const EXT_ID &k1, const EXT_ID &k2) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_rotate_left (ACE_RB_Tree_Node<EXT_ID, INT_ID> * x) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_node (const EXT_ID &k, ACE_RB_Tree_Base::RB_SearchResult &result) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_successor (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Node<EXT_ID, INT_ID> * ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::RB_tree_minimum (ACE_RB_Tree_Node<EXT_ID, INT_ID> *x) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::delete_children_i   (ACE_RB_Tree_Node<EXT_ID, INT_ID> *parent) { 
Class:     template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::find_i (const EXT_ID &k,                                                              ACE_RB_Tree_Node<EXT_ID, INT_ID>* &entry, int find_exact) { 
Class:           template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::insert_i (const EXT_ID &k,                                                                const INT_ID &t,                                                                ACE_RB_Tree_Node<EXT_ID, INT_ID> *&entry) { 
Class:  template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> void ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>:: dump_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *node) const { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::test_invariant (void) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK>  int ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::remove_i (ACE_RB_Tree_Node<EXT_ID, INT_ID> *z) { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : tree_ (&tree), node_ (0) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator_Base (const ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &iter)   : tree_ (iter.tree_),     node_ (iter.node_) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator_Base () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree,      ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Iterator () { 
Class: template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::ACE_RB_Tree_Reverse_Iterator (const ACE_RB_Tree<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> &tree, ACE_RB_Tree_Node<EXT_ID, INT_ID>* entry)   : ACE_RB_Tree_Iterator_Base<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK> (tree,entry) { 
Class:   template <class EXT_ID, class INT_ID, class COMPARE_KEYS, class ACE_LOCK> ACE_RB_Tree_Reverse_Iterator<EXT_ID, INT_ID, COMPARE_KEYS, ACE_LOCK>::~ACE_RB_Tree_Reverse_Iterator () { 
Class: class ACE_Sig_Handlers_Set { 
Class: template <class TYPE, class ACE_LOCK> ACE_Singleton<TYPE, ACE_LOCK> *& ACE_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_TSS_Singleton<TYPE, ACE_LOCK>::cleanup (void *) { 
Class: template <class TYPE, class ACE_LOCK> ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK> *& ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_Unmanaged_TSS_Singleton<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> ACE_DLL_Singleton_T<TYPE, ACE_LOCK> *& ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::instance_i (void) { 
Class: template <class TYPE, class ACE_LOCK> void ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::close (void) { 
Class: template <class TYPE, class ACE_LOCK> const ACE_TCHAR * ACE_DLL_Singleton_T<TYPE, ACE_LOCK>::dll_name (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+      ACE_ASSERT (dynamic_instance != 0);'), (79, 1, u'+      ACE_ASSERT (dynamic_instance != 0);')]
===========================================
Class: class ACE_TLI_Request_Queue { 
Class:  template <class ACE_LOCK, class TYPE> TYPE ACE_Test_and_Set<ACE_LOCK, TYPE>::is_set (void) const { 
Class: template <class ACE_LOCK, class TYPE> int ACE_Test_and_Set<ACE_LOCK, TYPE>::handle_signal (int, siginfo_t *, ucontext_t *) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>:: ACE_Timeprobe_Ex (ALLOCATOR *allocator,                u_long size)   : timeprobes_ (0),     lock_ (),     max_size_ (size),     current_size_ (0),     report_buffer_full_ (0),     allocator_ (allocator) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::~ACE_Timeprobe_Ex (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::timeprobe (const char *event) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::increase_size (u_long size) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_Unbounded_Set<ACE_Event_Descriptions> & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::sorted_event_descriptions (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ACE_LOCK & ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::lock (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> u_long ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::current_size (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> void ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::print_times (void) { 
Class: template <class ACE_LOCK, class ALLOCATOR> const char * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::find_description_i (u_long i) { 
Class: template <class ACE_LOCK, class ALLOCATOR> ALLOCATOR * ACE_Timeprobe_Ex<ACE_LOCK, ALLOCATOR>::allocator (void) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(97, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (106, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);'), (121, 1, u'+#if !defined (ACE_TIMEPROBE_ASSERTS_FIXED_SIZE)'), (130, 1, u'+  ACE_ASSERT (this->current_size_ < this->max_size_);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Hash_Upcall (void)   : timer_hash_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::registration (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::postinvoke (   TIMER_QUEUE &,   ACE_Event_Handler *,   const void *,   int,   const ACE_Time_Value &,   const void *) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::cancel_type (   TIMER_QUEUE &,   ACE_Event_Handler *,   int,   int &) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Hash_Upcall<TYPE, FUNCTOR, ACE_LOCK>::deletion (   TIMER_QUEUE &,   ACE_Event_Handler *event_handler,   const void *arg) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_Iterator_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::isdone (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK> & ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::iter (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::ACE_Timer_Hash_T (   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK> (upcall_functor, freelist),     size_ (0),     table_size_ (ACE_DEFAULT_TIMER_HASH_TABLE_SIZE),     table_functor_ (this),     earliest_position_ (0) #if defined (ACE_WIN64)   , pointer_base_ (0) #endif    , token_list_ () { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> bool ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::is_empty (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> void ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dump (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> long ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::schedule_i (   const TYPE &type,   const void *act,   const ACE_Time_Value &future_time,   const ACE_Time_Value &interval) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::cancel (long timer_id,                                                            const void **act,                                                            int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::remove_first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> ACE_Timer_Node_T<TYPE> * ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                                     ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK, class BUCKET> int ACE_Timer_Hash_T<TYPE, FUNCTOR, ACE_LOCK, BUCKET>::expire (const ACE_Time_Value &cur_time) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 1, u'+  ACE_ASSERT (0);'), (115, 1, u'+  ACE_ASSERT (0);'), (130, 1, u'+  ACE_ASSERT (0);'), (424, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (475, 1, u'+  ACE_ASSERT (h->orig_id_ != -1);'), (664, 1, u'+      ACE_ASSERT (result == 1);'), (811, 1, u'+          ACE_ASSERT (h->pos_ == i);')]
===========================================
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_Iterator_T (   ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK> &heap)   : timer_heap_ (heap) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::first (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
Class:      template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Heap_T (   size_t size,   bool preallocated,   FUNCTOR *upcall_functor,   ACE_Free_List<ACE_Timer_Node_T <TYPE> > *freelist)   : ACE_Timer_Queue_T<TYPE,FUNCTOR,ACE_LOCK> (upcall_functor, freelist),     max_size_ (size),     cur_size_ (0),     cur_limbo_ (0),     timer_ids_curr_ (0),     timer_ids_min_free_ (0),     preallocated_nodes_ (0),     preallocated_nodes_freelist_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Heap_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::push_freelist (long old_id) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::copy (   size_t slot,   ACE_Timer_Node_T<TYPE> *moved_node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reheap_down (   ACE_Timer_Node_T<TYPE> *moved_node,   size_t slot,   size_t child) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::insert (   ACE_Timer_Node_T<TYPE> *new_node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::reschedule (   ACE_Timer_Node_T<TYPE> *expired) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (   ACE_Timer_Node_T<TYPE> *node) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int dont_call) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE &type,                                                    int dont_call) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T <TYPE> * ACE_Timer_Heap_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_List_Iterator_T (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::item (void) { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_List_T (FUNCTOR* uf, FreeList* fl)   : Base(uf, fl)   , head_ (new ACE_Timer_Node_T<TYPE>)   , id_counter_ (0) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> const ACE_Time_Value & ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::earliest_time (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class:     template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE &type,                                                        const void *act,                                                        const ACE_Time_Value &future_time,                                                        const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::find_node (long timer_id) const { 
Class:   template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (long timer_id,                                                    const void **act,                                                    int skip_close) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE> * ACE_Timer_List_T<TYPE, FUNCTOR, ACE_LOCK>::remove_first (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Queue_Iterator_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Time_Value * ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_timeout (ACE_Time_Value *max_wait_time) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Queue_T (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::free_node (ACE_Timer_Node_T<TYPE> *node) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::schedule (const TYPE &type,                                                       const void *act,                                                       const ACE_Time_Value &future_time,                                                       const ACE_Time_Value &interval) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Queue_T<TYPE, FUNCTOR, ACE_LOCK>::dispatch_info_i (const ACE_Time_Value &cur_time,                                                              ACE_Timer_Node_Dispatch_Info_T<TYPE> &info) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::ACE_Timer_Wheel_T   (u_int spoke_count,    u_int resolution,    size_t prealloc,    FUNCTOR* upcall_functor,    FreeList* freelist) : Base (upcall_functor, freelist) , spokes_ (0) , spoke_count_ (0)  , spoke_bits_ (0) , res_bits_ (0) , earliest_spoke_ (0) , iterator_ (0) , timer_count_ (0) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::open_i   (size_t prealloc, u_int spokes, u_int res) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::find_spoke_node   (u_int spoke, long timer_id) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::is_empty (void) const { 
Class:    template <class TYPE, class FUNCTOR, class ACE_LOCK> u_int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::calculate_spoke   (const ACE_Time_Value& t) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> long ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i (const TYPE& type,                                                         const void* act,                                                         const ACE_Time_Value& future_time,                                                         const ACE_Time_Value& interval) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::schedule_i   (ACE_Timer_Node_T<TYPE>* n,    u_int spoke,    const ACE_Time_Value& expire) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel (const TYPE& type, int skip_close) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::cancel_i (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::dump (void) const { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::unlink (ACE_Timer_Node_T<TYPE>* n) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Node_T<TYPE>* ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::get_first (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Queue_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>& ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::iter (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> int ACE_Timer_Wheel_T<TYPE, FUNCTOR, ACE_LOCK>::expire (const ACE_Time_Value& cur_time) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::~ACE_Timer_Wheel_Iterator_T (void) { 
Class:  template <class TYPE, class FUNCTOR, class ACE_LOCK> void ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::next (void) { 
Class: template <class TYPE, class FUNCTOR, class ACE_LOCK> bool ACE_Timer_Wheel_Iterator_T<TYPE, FUNCTOR, ACE_LOCK>::isdone (void) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(191, 1, u'+        ACE_ASSERT (copy_constructor_not_supported);')]
===========================================
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::insert_tail (const T &item) { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::dump (void) const { 
Class: template <class T, class C> void ACE_Unbounded_Set_Ex<T, C>::delete_nodes (void) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (ACE_Allocator *alloc)   : head_ (0),     cur_size_ (0),     allocator_ (alloc) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex<T, C>::ACE_Unbounded_Set_Ex (const ACE_Unbounded_Set_Ex<T, C> &us)   : head_ (0),     cur_size_ (0),     allocator_ (us.allocator_),     comp_ (us.comp_) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::find (const T &item) const { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex<T, C>::remove (const T &item) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::iterator ACE_Unbounded_Set_Ex<T, C>::end (void) { 
Class: template <class T, class C> typename ACE_Unbounded_Set_Ex<T, C>::const_iterator ACE_Unbounded_Set_Ex<T, C>::end (void) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>::ACE_Unbounded_Set_Ex_Iterator (   ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Iterator<T, C>& ACE_Unbounded_Set_Ex_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Iterator<T, C> &rhs) const { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::ACE_Unbounded_Set_Ex_Const_Iterator (   const ACE_Unbounded_Set_Ex<T, C> &s,   bool end)   : current_ (!end ? s.head_->next_ : s.head_ ),     set_ (&s) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::first (void) { 
Class: template <class T, class C> int ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::next (T *&item) { 
Class: template <class T, class C> ACE_Unbounded_Set_Ex_Const_Iterator<T, C>& ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator++ (void) { 
Class: template <class T, class C> bool ACE_Unbounded_Set_Ex_Const_Iterator<T, C>::operator== (const ACE_Unbounded_Set_Ex_Const_Iterator<T, C> &rhs) const { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 1, u'+  ACE_ASSERT (result != 0);'), (477, 1, u'+  ACE_ASSERT (result != 0);')]
===========================================
Class:  class AgonizingFlamesTargetCheck { 
Class:class AgonizingFlamesTargetCheck class AgonizingFlamesTargetCheck
Class:    class AnyBugCheck     class AnyBugCheck
Class: class MANGOS_DLL_DECL BugAura : public Aura { 
Class:    class AnyBugCheck     class AnyBugCheck
Class: class MANGOS_DLL_DECL BugAura : public Aura { 
Class:class MANGOS_DLL_DECL SentinelAbilityAura : public Aura { 
Class:class MANGOS_DLL_DECL SentinelAbilityAura : public Aura { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (75, 2, u'-                assert( p != NULL );'), (95, 2, u'-        assert( creature->GetCreatureInfo() != NULL );'), (161, 1, u'+        assert( creature->GetCreatureInfo() != NULL );'), (193, 1, u'+                assert( p != NULL );'), (213, 1, u'+        assert( creature->GetCreatureInfo() != NULL );')]
===========================================
Class: class ChainHealingFullHealth: std::unary_function<const Unit*, bool> { 
Class: class ChainHealingFullHealth: std::unary_function<const Unit*, bool> { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-    ASSERT(pck);'), (624, 1, u'+  ACE_ASSERT (m_RecvWPct == NULL);'), (687, 1, u'+     ACE_ASSERT(m_RecvPct.space() == 0);'), (704, 1, u'+  ACE_ASSERT (m_RecvPct.space () == 0);'), (705, 1, u'+  ACE_ASSERT (m_Header.space () == 0);'), (706, 1, u'+  ACE_ASSERT (m_RecvWPct != NULL);'), (770, 1, u'+              ACE_ASSERT (message_block.length () == 0);'), (778, 1, u'+              ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (814, 1, u'+              ACE_ASSERT (message_block.length () == 0);'), (825, 1, u'+          ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (904, 1, u'+  ACE_ASSERT (new_pct);'), (1431, 1, u'+    ACE_ASSERT (false);'), (1435, 1, u'+      ACE_ASSERT (false);')]
===========================================
===========================================
Total add: 871
Total del: 449
Header: struct ServerPktHeader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-    ASSERT(pck);'), (624, 1, u'+  ACE_ASSERT (m_RecvWPct == NULL);'), (687, 1, u'+     ACE_ASSERT(m_RecvPct.space() == 0);'), (704, 1, u'+  ACE_ASSERT (m_RecvPct.space () == 0);'), (705, 1, u'+  ACE_ASSERT (m_Header.space () == 0);'), (706, 1, u'+  ACE_ASSERT (m_RecvWPct != NULL);'), (770, 1, u'+              ACE_ASSERT (message_block.length () == 0);'), (778, 1, u'+              ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (814, 1, u'+              ACE_ASSERT (message_block.length () == 0);'), (825, 1, u'+          ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (904, 1, u'+  ACE_ASSERT (new_pct);'), (1431, 1, u'+    ACE_ASSERT (false);'), (1435, 1, u'+      ACE_ASSERT (false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-    ASSERT(pck);'), (624, 1, u'+  ACE_ASSERT (m_RecvWPct == NULL);'), (687, 1, u'+     ACE_ASSERT(m_RecvPct.space() == 0);'), (704, 1, u'+  ACE_ASSERT (m_RecvPct.space () == 0);'), (705, 1, u'+  ACE_ASSERT (m_Header.space () == 0);'), (706, 1, u'+  ACE_ASSERT (m_RecvWPct != NULL);'), (770, 1, u'+              ACE_ASSERT (message_block.length () == 0);'), (778, 1, u'+              ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (814, 1, u'+              ACE_ASSERT (message_block.length () == 0);'), (825, 1, u'+          ACE_ASSERT ((errno != EWOULDBLOCK) && (errno != EAGAIN));'), (904, 1, u'+  ACE_ASSERT (new_pct);'), (1431, 1, u'+    ACE_ASSERT (false);'), (1435, 1, u'+      ACE_ASSERT (false);')]
===========================================
Class:class ReactorRunnable : protected ACE_Task_Base { 
Class:class RARunnable : public ZThread::Runnable { 
Class: class FrameBuf { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(553, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (760, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (771, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (774, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (796, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (807, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (827, 1, u'+        Assert(*scan == *match, "match[2]?");'), (839, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (880, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (882, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (884, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (899, 1, u'+    Assert(*scan == *match, "match[2]?");'), (911, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1031, 1, u'+        Assert(more >= 2, "more < 2");'), (1100, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1108, 1, u'+\tAssert(s->block_start >= 0L, "block gone");'), (1342, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(220, 1, u'+        Assert(k < 16, "inflate_codes grabbed too many bytes")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 1, u'+\tassert(numPlanes < 31);'), (224, 1, u'+\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(128, 1, u'+        debugAssert((f >= 0) && (f < 6));'), (162, 1, u'+\tassert(numPlanes < 31);'), (222, 1, u'+\tassert(numPlanes < 31);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+    debugAssert(n < numSmallPrimes() && n >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(129, 1, u'+    assert((0 <= iCol) && (iCol < 3));'), (139, 1, u'+    debugAssert((iCol >= 0) && (iCol < 3));'), (147, 1, u'+    debugAssert((iRow >= 0) && (iRow < 3));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    debugAssertM(')]
===========================================
Class:class BufferPool { class BufferPool 
Class:    class MemBlock {     class MemBlock 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(142, 1, u'+      assert(heapBuffer);'), (144, 1, u'+      assert(numChars2 == numChars);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1061, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1102, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1145, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1206, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1218, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 1, u'+        Assert(more >= 2, "more < 2");'), (1409, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1666, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
Class:  class FifoConditionImpl : public ConditionImpl<fifo_list> {   class FifoConditionImpl : public ConditionImpl<fifo_list> 
Class:  class FifoMutexImpl : public MutexImpl<fifo_list, NullBehavior> 
Class:    class WaiterQueue {     class WaiterQueue 
Class:  class PriorityConditionImpl : public ConditionImpl<priority_list> {   class PriorityConditionImpl : public ConditionImpl<priority_list> 
Class:  class InheritPriorityBehavior : public NullBehavior {   class InheritPriorityBehavior : public NullBehavior 
Class:  class PriorityMutexImpl : public MutexImpl<priority_list, NullBehavior> 
Class:  class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> {   class PrioritySemaphoreImpl : public SemaphoreImpl<priority_list> 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+      assert(0); // Destroyed mutex while in use'), (65, 1, u'+      assert(0); // Destroyed mutex while in use'), (92, 1, u'+        assert(_count == 0);'), (124, 1, u'+            assert(_owner == 0);'), (125, 1, u'+            assert(_count == 0);'), (162, 1, u'+        assert(_count == 0);'), (201, 1, u'+            assert(_count == 0);'), (202, 1, u'+            assert(_owner == 0);')]
===========================================
Class:    class Launcher : public Runnable {     class Launcher : public Runnable 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 1, u'+        assert(0);')]
===========================================
Class:    class WaiterQueue {     class WaiterQueue 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(atomic_read(&count) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+    assert(0);'), (42, 1, u'+  assert(!_waiting);'), (46, 1, u'+    assert(false);'), (109, 1, u'+  assert(status == kMPTimeoutErr || status == noErr);'), (124, 1, u'+    assert(status == noErr);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+      assert(0);'), (53, 1, u'+  assert(ops);'), (54, 1, u'+  assert(ops->_tid != 0);'), (90, 1, u'+  assert(task);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+  assert(!_waiting);'), (96, 1, u'+    assert(status == 0);'), (123, 1, u'+    assert(status == 0 || status == ETIMEDOUT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+  assert(ops);'), (39, 1, u'+  assert(ops->_tid != 0);'), (67, 1, u'+  assert(impl);'), (97, 1, u'+  assert(impl);'), (134, 1, u'+  assert(task);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  assert(c->count == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert(*reinterpret_cast<LPLONG>(_value) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+    assert(0);'), (42, 1, u'+  assert(!_waiting);'), (98, 1, u'+  assert(dwResult == WAIT_OBJECT_0 || dwResult == WAIT_TIMEOUT);'), (140, 1, u'+        assert(0);'), (186, 1, u'+        assert(0);'), (216, 1, u'+        assert(0);')]
===========================================
Class:class YieldOps { class YieldOps 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+  assert(c->count == 0);')]
===========================================
Class:  class AgonizingFlamesTargetCheck { 
Class:    class AnyBugCheck     class AnyBugCheck
Class: class MANGOS_DLL_DECL BugAura : public Aura { 
Class:class MANGOS_DLL_DECL SentinelAbilityAura : public Aura { 
Class:    class CharacterHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 1, u'+            assert( i_nextMove <= MAX_CONF_WAYPOINTS );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+        assert( creature->GetCreatureInfo() != NULL );'), (75, 1, u'+                assert( p != NULL );'), (95, 1, u'+        assert( creature->GetCreatureInfo() != NULL );')]
===========================================
Class:  class LootTemplate::LootGroup                                { 
Class:    class MessageChatLocaleCacheDo     class MessageChatLocaleCacheDo
Class:    class NearUsedPosDo     class NearUsedPosDo
Class:  class ObjectWorldLoader { 
Class: class ChainHealingFullHealth: std::unary_function<const Unit*, bool> { 
Class: class FreezeDetectorRunnable : public ZThread::Runnable { 
Class:  class Patcher { 
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
14735
Mismatch count:21710
Normal count:392644
