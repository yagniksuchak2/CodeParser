projects/top_C++/mosh
Going to process projects/top_C++/mosh/all_log.txt 
---------- mosh ------------

===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( remote_addr_len != 0 );')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Connection::hop_port
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( remote_addr_len != 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( remote_addr_len != 0 );')]
===========================================
Class:class AddrInfo { class AddrInfo 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+  fatal_assert( ai.res->ai_addrlen <= sizeof( remote_addr ) );')]
===========================================
===========================================
Total add: 9
Total del: 8
Header: Connection::Connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+  fatal_assert( ai.res->ai_addrlen <= sizeof( remote_addr ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+  fatal_assert( ai.res->ai_addrlen <= sizeof( remote_addr ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tassert( input );')]
===========================================
===========================================
Total add: 2
Total del: 21
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tassert( input );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tassert( input );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tassert( input );')]
===========================================
===========================================
Total add: 2
Total del: 21
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tassert( input );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tassert( input );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  fatal_assert( SSH_writable );')]
===========================================
===========================================
Total add: 4
Total del: 7
Header: get_SSH_IP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  fatal_assert( SSH_writable );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  fatal_assert( SSH_writable );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( this != prefix );')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: UserStream::subtract
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( this != prefix );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( this != prefix );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  fatal_assert( argc > 0 );')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  fatal_assert( argc > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  fatal_assert( argc > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  fatal_assert( argc > 0 );')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  fatal_assert( argc > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  fatal_assert( argc > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( x.size() >= frag_header_len );'), (3, 1, u'+  fatal_assert( x.size() >= frag_header_len );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Fragment::Fragment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( x.size() >= frag_header_len );'), (3, 1, u'+  fatal_assert( x.size() >= frag_header_len );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( x.size() >= frag_header_len );'), (3, 1, u'+  fatal_assert( x.size() >= frag_header_len );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u"+\tassert( fd_list.size() == 1 ); /* servers don't hop */")]
===========================================
===========================================
Total add: 5
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u"+\tassert( fd_list.size() == 1 ); /* servers don't hop */")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u"+\tassert( fd_list.size() == 1 ); /* servers don't hop */")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u"+      assert( fd_list.size() == 1 ); /* servers don't hop */")]
===========================================
===========================================
Total add: 4
Total del: 1
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u"+      assert( fd_list.size() == 1 ); /* servers don't hop */")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u"+      assert( fd_list.size() == 1 ); /* servers don't hop */")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( !socks.empty() );'), (13, 1, u'+\tassert( !islast );'), (24, 1, u'+  assert( false );')]
===========================================
===========================================
Total add: 28
Total del: 0
Header: Connection::recv
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( !socks.empty() );'), (13, 1, u'+\tassert( !islast );'), (24, 1, u'+  assert( false );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( !socks.empty() );'), (13, 1, u'+\tassert( !islast );'), (24, 1, u'+  assert( false );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+    assert( ecn_octet_p );')]
===========================================
===========================================
Total add: 19
Total del: 6
Header: Connection::recv
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+    assert( ecn_octet_p );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+    assert( ecn_octet_p );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( has_remote_addr );')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Connection::send
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( has_remote_addr );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( has_remote_addr );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+  assert( !server );')]
===========================================
===========================================
Total add: 6
Total del: 8
Header: Connection::new_packet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+  assert( !server );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+  assert( !server );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( SSH_CONNECTION );')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: get_SSH_IP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( SSH_CONNECTION );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( SSH_CONNECTION );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( local_interface_IP );')]
===========================================
===========================================
Total add: 13
Total del: 1
Header: get_SSH_IP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( local_interface_IP );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( local_interface_IP );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );'), (12, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Total add: 1
Total del: 10
Header: FragmentAssembly::get_assembly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );'), (12, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );'), (12, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Total add: 1
Total del: 12
Header: Fragmenter::make_fragments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( received_states.size() > 0 );'), (3, 1, u'+  fatal_assert( received_states.size() > 0 );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RemoteState>::process_throwaway_until
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( received_states.size() > 0 );'), (3, 1, u'+  fatal_assert( received_states.size() > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( received_states.size() > 0 );'), (3, 1, u'+  fatal_assert( received_states.size() > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (6, 1, u'+    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Total add: 10
Total del: 1
Header: FragmentAssembly::get_assembly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (6, 1, u'+    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (6, 1, u'+    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Total add: 12
Total del: 1
Header: Fragmenter::make_fragments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Total add: 0
Total del: 9
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      fatal_assert( sigfd_read() == SIGWINCH );')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      fatal_assert( sigfd_read() == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      fatal_assert( sigfd_read() == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (10, 2, u'-  fatal_assert( sigfd_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Total add: 0
Total del: 10
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (10, 2, u'-  fatal_assert( sigfd_trap( SIGINT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (10, 2, u'-  fatal_assert( sigfd_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap( SIGWINCH ) == 0 );'), (10, 2, u'-  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (11, 2, u'-  fatal_assert( sigfd_trap( SIGINT ) == 0 );'), (12, 2, u'-  fatal_assert( sigfd_trap( SIGHUP ) == 0 );'), (13, 2, u'-  fatal_assert( sigfd_trap( SIGPIPE ) == 0 );'), (14, 2, u'-  fatal_assert( sigfd_trap( SIGTSTP ) == 0 );'), (15, 2, u'-  fatal_assert( sigfd_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Total add: 8
Total del: 14
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap( SIGWINCH ) == 0 );'), (10, 2, u'-  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (11, 2, u'-  fatal_assert( sigfd_trap( SIGINT ) == 0 );'), (12, 2, u'-  fatal_assert( sigfd_trap( SIGHUP ) == 0 );'), (13, 2, u'-  fatal_assert( sigfd_trap( SIGPIPE ) == 0 );'), (14, 2, u'-  fatal_assert( sigfd_trap( SIGTSTP ) == 0 );'), (15, 2, u'-  fatal_assert( sigfd_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  fatal_assert( sigfd_trap( SIGWINCH ) == 0 );'), (10, 2, u'-  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (11, 2, u'-  fatal_assert( sigfd_trap( SIGINT ) == 0 );'), (12, 2, u'-  fatal_assert( sigfd_trap( SIGHUP ) == 0 );'), (13, 2, u'-  fatal_assert( sigfd_trap( SIGPIPE ) == 0 );'), (14, 2, u'-  fatal_assert( sigfd_trap( SIGTSTP ) == 0 );'), (15, 2, u'-  fatal_assert( sigfd_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 2, u'-  fatal_assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (6, 2, u'-  fatal_assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (7, 2, u'-  fatal_assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );'), (11, 1, u'+  fatal_assert( 0 == sigfillset( &sa.sa_mask ) );'), (12, 1, u'+  fatal_assert( 0 == sigaction( SIGHUP, &sa, NULL ) );'), (13, 1, u'+  fatal_assert( 0 == sigaction( SIGPIPE, &sa, NULL ) );')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: run_server
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 2, u'-  fatal_assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (6, 2, u'-  fatal_assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (7, 2, u'-  fatal_assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );'), (11, 1, u'+  fatal_assert( 0 == sigfillset( &sa.sa_mask ) );'), (12, 1, u'+  fatal_assert( 0 == sigaction( SIGHUP, &sa, NULL ) );'), (13, 1, u'+  fatal_assert( 0 == sigaction( SIGPIPE, &sa, NULL ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 2, u'-  fatal_assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (6, 2, u'-  fatal_assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (7, 2, u'-  fatal_assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );'), (11, 1, u'+  fatal_assert( 0 == sigfillset( &sa.sa_mask ) );'), (12, 1, u'+  fatal_assert( 0 == sigaction( SIGHUP, &sa, NULL ) );'), (13, 1, u'+  fatal_assert( 0 == sigaction( SIGPIPE, &sa, NULL ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 2, u'-    fatal_assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );'), (10, 1, u'+    fatal_assert( 0 == sigfillset( &sa.sa_mask ) );'), (11, 1, u'+    fatal_assert( 0 == sigaction( SIGHUP, &sa, NULL ) );'), (12, 1, u'+    fatal_assert( 0 == sigaction( SIGPIPE, &sa, NULL ) );')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: run_server
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 2, u'-    fatal_assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );'), (10, 1, u'+    fatal_assert( 0 == sigfillset( &sa.sa_mask ) );'), (11, 1, u'+    fatal_assert( 0 == sigaction( SIGHUP, &sa, NULL ) );'), (12, 1, u'+    fatal_assert( 0 == sigaction( SIGPIPE, &sa, NULL ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 2, u'-    fatal_assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );'), (10, 1, u'+    fatal_assert( 0 == sigfillset( &sa.sa_mask ) );'), (11, 1, u'+    fatal_assert( 0 == sigaction( SIGHUP, &sa, NULL ) );'), (12, 1, u'+    fatal_assert( 0 == sigaction( SIGPIPE, &sa, NULL ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(179, 2, u'-    assert (pSelTimeout != (struct timeval *) NULL);'), (283, 2, u'-    assert (pArray != (struct pollfd *) NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( (size_t)ciphertext_len <= ciphertext_buffer.len() );'), (5, 1, u'+  assert( pt_len <= plaintext_buffer.len() );')]
===========================================
===========================================
Total add: 8
Total del: 9
Header: Session::encrypt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( (size_t)ciphertext_len <= ciphertext_buffer.len() );'), (5, 1, u'+  assert( pt_len <= plaintext_buffer.len() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( (size_t)ciphertext_len <= ciphertext_buffer.len() );'), (5, 1, u'+  assert( pt_len <= plaintext_buffer.len() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+  assert( (size_t)body_len <= ciphertext_buffer.len() );'), (16, 1, u'+  assert( (size_t)pt_len <= plaintext_buffer.len() );')]
===========================================
===========================================
Total add: 16
Total del: 13
Header: Session::decrypt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+  assert( (size_t)body_len <= ciphertext_buffer.len() );'), (16, 1, u'+  assert( (size_t)pt_len <= plaintext_buffer.len() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+  assert( (size_t)body_len <= ciphertext_buffer.len() );'), (16, 1, u'+  assert( (size_t)pt_len <= plaintext_buffer.len() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );'), (12, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Total add: 1
Total del: 10
Header: FragmentAssembly::get_assembly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );'), (12, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );'), (12, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Total add: 1
Total del: 12
Header: Fragmenter::make_fragments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  fatal_assert( ctx );'), (5, 2, u'-  fatal_assert( AE_SUCCESS == ae_init( ctx, key.data(), key.len(), NONCE_LEN, TAG_LEN ) );'), (9, 1, u'+  fatal_assert( ctx_buf );'), (10, 1, u'+  fatal_assert( AE_SUCCESS == ae_init( (ae_ctx *)ctx_buf->data(), key.data(), key.len(), NONCE_LEN, TAG_LEN ) );'), (15, 2, u'-  fatal_assert( AE_SUCCESS == ae_clear( ctx ) );'), (18, 1, u'+  fatal_assert( AE_SUCCESS == ae_clear( (ae_ctx *)ctx_buf->data() ) );')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: equal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  fatal_assert( ctx );'), (5, 2, u'-  fatal_assert( AE_SUCCESS == ae_init( ctx, key.data(), key.len(), NONCE_LEN, TAG_LEN ) );'), (9, 1, u'+  fatal_assert( ctx_buf );'), (10, 1, u'+  fatal_assert( AE_SUCCESS == ae_init( (ae_ctx *)ctx_buf->data(), key.data(), key.len(), NONCE_LEN, TAG_LEN ) );'), (15, 2, u'-  fatal_assert( AE_SUCCESS == ae_clear( ctx ) );'), (18, 1, u'+  fatal_assert( AE_SUCCESS == ae_clear( (ae_ctx *)ctx_buf->data() ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  fatal_assert( ctx );'), (5, 2, u'-  fatal_assert( AE_SUCCESS == ae_init( ctx, key.data(), key.len(), NONCE_LEN, TAG_LEN ) );'), (9, 1, u'+  fatal_assert( ctx_buf );'), (10, 1, u'+  fatal_assert( AE_SUCCESS == ae_init( (ae_ctx *)ctx_buf->data(), key.data(), key.len(), NONCE_LEN, TAG_LEN ) );'), (15, 2, u'-  fatal_assert( AE_SUCCESS == ae_clear( ctx ) );'), (18, 1, u'+  fatal_assert( AE_SUCCESS == ae_clear( (ae_ctx *)ctx_buf->data() ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (6, 1, u'+    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Total add: 10
Total del: 1
Header: FragmentAssembly::get_assembly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (6, 1, u'+    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (6, 1, u'+    fatal_assert( ret.ParseFromZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Total add: 12
Total del: 1
Header: Fragmenter::make_fragments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    fatal_assert( inst.SerializeToZeroCopyStream( &gzip_stream ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(179, 1, u'+    assert (pSelTimeout != (struct timeval *) NULL);'), (283, 1, u'+    assert (pArray != (struct pollfd *) NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    fatal_assert( command[ 0 ] );')]
===========================================
===========================================
Total add: 1
Total del: 8
Header: run_server
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    fatal_assert( command[ 0 ] );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    fatal_assert( command[ 0 ] );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( is_utf8_locale() );'), (3, 1, u'+  fatal_assert( is_utf8_locale() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert( env_string );'), (3, 1, u'+      fatal_assert( env_string );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert( env_string );'), (3, 1, u'+      fatal_assert( env_string );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert( env_string );'), (3, 1, u'+      fatal_assert( env_string );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert ( timestamp() >= next_ack_time );'), (5, 1, u'+  assert( now >= next_ack_time );')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: TransportSender<MyState>::send_empty_ack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert ( timestamp() >= next_ack_time );'), (5, 1, u'+  assert( now >= next_ack_time );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert ( timestamp() >= next_ack_time );'), (5, 1, u'+  assert( now >= next_ack_time );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert( false );')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: UserInput::input
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert( false );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert( false );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (3, 1, u'+  assert( is_utf8_locale() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (10, 1, u'+      assert( env_string );')]
===========================================
===========================================
Total add: 22
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (10, 1, u'+      assert( env_string );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();'), (10, 1, u'+      assert( env_string );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: STMClient::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert_utf8_locale();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void assert_utf8_locale( void ) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( false );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ConditionalCursorMove::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( false );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( false );')]
===========================================
Class:class Socket { class Socket 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap(SIGWINCH) == 0 );'), (3, 1, u'+  fatal_assert( sigfd_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap(SIGWINCH) == 0 );'), (3, 1, u'+  fatal_assert( sigfd_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap(SIGWINCH) == 0 );'), (3, 1, u'+  fatal_assert( sigfd_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      fatal_assert( selfpipe_read() == SIGWINCH );'), (3, 1, u'+      fatal_assert( sigfd_read() == SIGWINCH );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      fatal_assert( selfpipe_read() == SIGWINCH );'), (3, 1, u'+      fatal_assert( sigfd_read() == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      fatal_assert( selfpipe_read() == SIGWINCH );'), (3, 1, u'+      fatal_assert( sigfd_read() == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 2, u'-  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (4, 1, u'+  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (5, 1, u'+  fatal_assert( sigfd_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 2, u'-  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (4, 1, u'+  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (5, 1, u'+  fatal_assert( sigfd_trap( SIGINT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 2, u'-  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (4, 1, u'+  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (5, 1, u'+  fatal_assert( sigfd_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap( SIGWINCH ) == 0 );'), (3, 2, u'-  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (4, 2, u'-  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (5, 2, u'-  fatal_assert( selfpipe_trap( SIGHUP ) == 0 );'), (6, 2, u'-  fatal_assert( selfpipe_trap( SIGPIPE ) == 0 );'), (7, 2, u'-  fatal_assert( selfpipe_trap( SIGTSTP ) == 0 );'), (8, 2, u'-  fatal_assert( selfpipe_trap( SIGCONT ) == 0 );'), (9, 1, u'+  fatal_assert( sigfd_trap( SIGWINCH ) == 0 );'), (10, 1, u'+  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (11, 1, u'+  fatal_assert( sigfd_trap( SIGINT ) == 0 );'), (12, 1, u'+  fatal_assert( sigfd_trap( SIGHUP ) == 0 );'), (13, 1, u'+  fatal_assert( sigfd_trap( SIGPIPE ) == 0 );'), (14, 1, u'+  fatal_assert( sigfd_trap( SIGTSTP ) == 0 );'), (15, 1, u'+  fatal_assert( sigfd_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap( SIGWINCH ) == 0 );'), (3, 2, u'-  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (4, 2, u'-  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (5, 2, u'-  fatal_assert( selfpipe_trap( SIGHUP ) == 0 );'), (6, 2, u'-  fatal_assert( selfpipe_trap( SIGPIPE ) == 0 );'), (7, 2, u'-  fatal_assert( selfpipe_trap( SIGTSTP ) == 0 );'), (8, 2, u'-  fatal_assert( selfpipe_trap( SIGCONT ) == 0 );'), (9, 1, u'+  fatal_assert( sigfd_trap( SIGWINCH ) == 0 );'), (10, 1, u'+  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (11, 1, u'+  fatal_assert( sigfd_trap( SIGINT ) == 0 );'), (12, 1, u'+  fatal_assert( sigfd_trap( SIGHUP ) == 0 );'), (13, 1, u'+  fatal_assert( sigfd_trap( SIGPIPE ) == 0 );'), (14, 1, u'+  fatal_assert( sigfd_trap( SIGTSTP ) == 0 );'), (15, 1, u'+  fatal_assert( sigfd_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  fatal_assert( selfpipe_trap( SIGWINCH ) == 0 );'), (3, 2, u'-  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (4, 2, u'-  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (5, 2, u'-  fatal_assert( selfpipe_trap( SIGHUP ) == 0 );'), (6, 2, u'-  fatal_assert( selfpipe_trap( SIGPIPE ) == 0 );'), (7, 2, u'-  fatal_assert( selfpipe_trap( SIGTSTP ) == 0 );'), (8, 2, u'-  fatal_assert( selfpipe_trap( SIGCONT ) == 0 );'), (9, 1, u'+  fatal_assert( sigfd_trap( SIGWINCH ) == 0 );'), (10, 1, u'+  fatal_assert( sigfd_trap( SIGTERM ) == 0 );'), (11, 1, u'+  fatal_assert( sigfd_trap( SIGINT ) == 0 );'), (12, 1, u'+  fatal_assert( sigfd_trap( SIGHUP ) == 0 );'), (13, 1, u'+  fatal_assert( sigfd_trap( SIGPIPE ) == 0 );'), (14, 1, u'+  fatal_assert( sigfd_trap( SIGTSTP ) == 0 );'), (15, 1, u'+  fatal_assert( sigfd_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 1, u'+    fatal_assert( ! e.fatal );'), (72, 1, u'+  fatal_assert( got_exn );'), (89, 1, u'+    fatal_assert( nonce.val() == nonce_int );'), (108, 1, u'+    fatal_assert( decrypted.nonce.val() == nonce_int );'), (109, 1, u'+    fatal_assert( decrypted.text == plaintext );'), (134, 1, u'+      fatal_assert( false );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert( !( iptr & 0xF ) );'), (41, 1, u'+  assert( iptr >= (uintptr_t) m_allocated );'), (42, 1, u'+  assert( iptr <= ( 15 + (uintptr_t) m_allocated ) );')]
===========================================
===========================================
Total add: 19
Total del: 18
Header: myatoi
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert( !( iptr & 0xF ) );'), (41, 1, u'+  assert( iptr >= (uintptr_t) m_allocated );'), (42, 1, u'+  assert( iptr <= ( 15 + (uintptr_t) m_allocated ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert( !( iptr & 0xF ) );'), (41, 1, u'+  assert( iptr >= (uintptr_t) m_allocated );'), (42, 1, u'+  assert( iptr <= ( 15 + (uintptr_t) m_allocated ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Total add: 2
Total del: 10
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Total add: 2
Total del: 10
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: STMClient::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert_utf8_locale();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+void assert_utf8_locale( void ) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert( bottom_margin < f.ds.get_height() );')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: Display::new_frame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert( bottom_margin < f.ds.get_height() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert( bottom_margin < f.ds.get_height() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+\tfatal_assert( desired_ip );')]
===========================================
===========================================
Total add: 24
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+\tfatal_assert( desired_ip );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+\tfatal_assert( desired_ip );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-    fatal_assert( my_argv[ 0 ] );'), (31, 1, u'+    fatal_assert( command[ 0 ] );')]
===========================================
===========================================
Total add: 6
Total del: 25
Header: run_server
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-    fatal_assert( my_argv[ 0 ] );'), (31, 1, u'+    fatal_assert( command[ 0 ] );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-    fatal_assert( my_argv[ 0 ] );'), (31, 1, u'+    fatal_assert( command[ 0 ] );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert( frame.x + clear_count <= f.ds.get_width() );')]
===========================================
===========================================
Total add: 19
Total del: 4
Header: Display::put_cell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert( frame.x + clear_count <= f.ds.get_width() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert( frame.x + clear_count <= f.ds.get_width() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+  assert( false );'), (102, 1, u'+  assert( false );')]
===========================================
===========================================
Total add: 78
Total del: 16
Header: Connection::Connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+  assert( false );'), (102, 1, u'+  assert( false );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+  assert( false );'), (102, 1, u'+  assert( false );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t  assert( read( STDIN_FILENO, &x, 1 ) == 1 );'), (3, 1, u'+\t  fatal_assert( read( STDIN_FILENO, &x, 1 ) == 1 );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t  assert( read( STDIN_FILENO, &x, 1 ) == 1 );'), (3, 1, u'+\t  fatal_assert( read( STDIN_FILENO, &x, 1 ) == 1 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t  assert( read( STDIN_FILENO, &x, 1 ) == 1 );'), (3, 1, u'+\t  fatal_assert( read( STDIN_FILENO, &x, 1 ) == 1 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap(SIGWINCH) == 0 );'), (3, 1, u'+  fatal_assert( selfpipe_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap(SIGWINCH) == 0 );'), (3, 1, u'+  fatal_assert( selfpipe_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap(SIGWINCH) == 0 );'), (3, 1, u'+  fatal_assert( selfpipe_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert( selfpipe_read() == SIGWINCH );'), (3, 1, u'+      fatal_assert( selfpipe_read() == SIGWINCH );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert( selfpipe_read() == SIGWINCH );'), (3, 1, u'+      fatal_assert( selfpipe_read() == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-      assert( selfpipe_read() == SIGWINCH );'), (3, 1, u'+      fatal_assert( selfpipe_read() == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sigemptyset( &signals_to_block ) == 0 );'), (3, 2, u'-  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (5, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );'), (6, 1, u'+  fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (7, 1, u'+  fatal_assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (8, 1, u'+  fatal_assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (9, 1, u'+  fatal_assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sigemptyset( &signals_to_block ) == 0 );'), (3, 2, u'-  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (5, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );'), (6, 1, u'+  fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (7, 1, u'+  fatal_assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (8, 1, u'+  fatal_assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (9, 1, u'+  fatal_assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sigemptyset( &signals_to_block ) == 0 );'), (3, 2, u'-  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (5, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );'), (6, 1, u'+  fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (7, 1, u'+  fatal_assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (8, 1, u'+  fatal_assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (9, 1, u'+  fatal_assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( sigemptyset( &signals_to_block ) == 0 );'), (3, 2, u'-    assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );'), (4, 1, u'+    fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 1, u'+    fatal_assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( sigemptyset( &signals_to_block ) == 0 );'), (3, 2, u'-    assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );'), (4, 1, u'+    fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 1, u'+    fatal_assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( sigemptyset( &signals_to_block ) == 0 );'), (3, 2, u'-    assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );'), (4, 1, u'+    fatal_assert( sigemptyset( &signals_to_block ) == 0 );'), (5, 1, u'+    fatal_assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( my_argv[ 0 ] );'), (3, 1, u'+    fatal_assert( my_argv[ 0 ] );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( my_argv[ 0 ] );'), (3, 1, u'+    fatal_assert( my_argv[ 0 ] );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( my_argv[ 0 ] );'), (3, 1, u'+    fatal_assert( my_argv[ 0 ] );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 2, u'-  assert( selfpipe_trap( SIGINT ) == 0 );'), (4, 1, u'+  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (5, 1, u'+  fatal_assert( selfpipe_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 2, u'-  assert( selfpipe_trap( SIGINT ) == 0 );'), (4, 1, u'+  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (5, 1, u'+  fatal_assert( selfpipe_trap( SIGINT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 2, u'-  assert( selfpipe_trap( SIGINT ) == 0 );'), (4, 1, u'+  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (5, 1, u'+  fatal_assert( selfpipe_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap( SIGWINCH ) == 0 );'), (3, 2, u'-  assert( selfpipe_trap( SIGTERM ) == 0 );'), (4, 2, u'-  assert( selfpipe_trap( SIGINT ) == 0 );'), (5, 2, u'-  assert( selfpipe_trap( SIGHUP ) == 0 );'), (6, 2, u'-  assert( selfpipe_trap( SIGPIPE ) == 0 );'), (7, 2, u'-  assert( selfpipe_trap( SIGTSTP ) == 0 );'), (8, 2, u'-  assert( selfpipe_trap( SIGCONT ) == 0 );'), (9, 1, u'+  fatal_assert( selfpipe_trap( SIGWINCH ) == 0 );'), (10, 1, u'+  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (11, 1, u'+  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (12, 1, u'+  fatal_assert( selfpipe_trap( SIGHUP ) == 0 );'), (13, 1, u'+  fatal_assert( selfpipe_trap( SIGPIPE ) == 0 );'), (14, 1, u'+  fatal_assert( selfpipe_trap( SIGTSTP ) == 0 );'), (15, 1, u'+  fatal_assert( selfpipe_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap( SIGWINCH ) == 0 );'), (3, 2, u'-  assert( selfpipe_trap( SIGTERM ) == 0 );'), (4, 2, u'-  assert( selfpipe_trap( SIGINT ) == 0 );'), (5, 2, u'-  assert( selfpipe_trap( SIGHUP ) == 0 );'), (6, 2, u'-  assert( selfpipe_trap( SIGPIPE ) == 0 );'), (7, 2, u'-  assert( selfpipe_trap( SIGTSTP ) == 0 );'), (8, 2, u'-  assert( selfpipe_trap( SIGCONT ) == 0 );'), (9, 1, u'+  fatal_assert( selfpipe_trap( SIGWINCH ) == 0 );'), (10, 1, u'+  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (11, 1, u'+  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (12, 1, u'+  fatal_assert( selfpipe_trap( SIGHUP ) == 0 );'), (13, 1, u'+  fatal_assert( selfpipe_trap( SIGPIPE ) == 0 );'), (14, 1, u'+  fatal_assert( selfpipe_trap( SIGTSTP ) == 0 );'), (15, 1, u'+  fatal_assert( selfpipe_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap( SIGWINCH ) == 0 );'), (3, 2, u'-  assert( selfpipe_trap( SIGTERM ) == 0 );'), (4, 2, u'-  assert( selfpipe_trap( SIGINT ) == 0 );'), (5, 2, u'-  assert( selfpipe_trap( SIGHUP ) == 0 );'), (6, 2, u'-  assert( selfpipe_trap( SIGPIPE ) == 0 );'), (7, 2, u'-  assert( selfpipe_trap( SIGTSTP ) == 0 );'), (8, 2, u'-  assert( selfpipe_trap( SIGCONT ) == 0 );'), (9, 1, u'+  fatal_assert( selfpipe_trap( SIGWINCH ) == 0 );'), (10, 1, u'+  fatal_assert( selfpipe_trap( SIGTERM ) == 0 );'), (11, 1, u'+  fatal_assert( selfpipe_trap( SIGINT ) == 0 );'), (12, 1, u'+  fatal_assert( selfpipe_trap( SIGHUP ) == 0 );'), (13, 1, u'+  fatal_assert( selfpipe_trap( SIGPIPE ) == 0 );'), (14, 1, u'+  fatal_assert( selfpipe_trap( SIGTSTP ) == 0 );'), (15, 1, u'+  fatal_assert( selfpipe_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( Z_OK == compress( buffer, &len,'), (5, 1, u'+  dos_assert( Z_OK == compress( buffer, &len,')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Compressor::compress_str
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( Z_OK == compress( buffer, &len,'), (5, 1, u'+  dos_assert( Z_OK == compress( buffer, &len,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( Z_OK == compress( buffer, &len,'), (5, 1, u'+  dos_assert( Z_OK == compress( buffer, &len,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( Z_OK == uncompress( buffer, &len,'), (5, 1, u'+  dos_assert( Z_OK == uncompress( buffer, &len,')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Compressor::uncompress_str
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( Z_OK == uncompress( buffer, &len,'), (5, 1, u'+  dos_assert( Z_OK == uncompress( buffer, &len,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( Z_OK == uncompress( buffer, &len,'), (5, 1, u'+  dos_assert( Z_OK == uncompress( buffer, &len,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( !( fragment_num & 0x8000 ) ); /* effective limit on size of a terminal screen change or buffered user input */'), (3, 1, u'+  fatal_assert( !( fragment_num & 0x8000 ) ); /* effective limit on size of a terminal screen change or buffered user input */')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Fragment::tostring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( !( fragment_num & 0x8000 ) ); /* effective limit on size of a terminal screen change or buffered user input */'), (3, 1, u'+  fatal_assert( !( fragment_num & 0x8000 ) ); /* effective limit on size of a terminal screen change or buffered user input */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( !( fragment_num & 0x8000 ) ); /* effective limit on size of a terminal screen change or buffered user input */'), (3, 1, u'+  fatal_assert( !( fragment_num & 0x8000 ) ); /* effective limit on size of a terminal screen change or buffered user input */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (3, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FragmentAssembly::get_assembly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (3, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );'), (3, 1, u'+  fatal_assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( input.ParseFromString( diff ) );'), (3, 1, u'+  fatal_assert( input.ParseFromString( diff ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Complete::apply_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( input.ParseFromString( diff ) );'), (3, 1, u'+  fatal_assert( input.ParseFromString( diff ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( input.ParseFromString( diff ) );'), (3, 1, u'+  fatal_assert( input.ParseFromString( diff ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( input.ParseFromString( diff ) );'), (3, 1, u'+  fatal_assert( input.ParseFromString( diff ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: UserStream::apply_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( input.ParseFromString( diff ) );'), (3, 1, u'+  fatal_assert( input.ParseFromString( diff ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( input.ParseFromString( diff ) );'), (3, 1, u'+  fatal_assert( input.ParseFromString( diff ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap(SIGWINCH) == 0 );'), (5, 1, u'+  assert( selfpipe_trap( SIGWINCH ) == 0 );')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap(SIGWINCH) == 0 );'), (5, 1, u'+  assert( selfpipe_trap( SIGWINCH ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( selfpipe_trap(SIGWINCH) == 0 );'), (5, 1, u'+  assert( selfpipe_trap( SIGWINCH ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sigaddset( &signals_to_block, SIGTERM ) == 0 );'), (3, 2, u'-  assert( sigaddset( &signals_to_block, SIGINT ) == 0 );')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sigaddset( &signals_to_block, SIGTERM ) == 0 );'), (3, 2, u'-  assert( sigaddset( &signals_to_block, SIGINT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sigaddset( &signals_to_block, SIGTERM ) == 0 );'), (3, 2, u'-  assert( sigaddset( &signals_to_block, SIGINT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (7, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Total add: 3
Total del: 10
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (7, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (7, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap(SIGWINCH) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-      assert( info.ssi_signo == SIGWINCH );'), (5, 1, u'+      assert( selfpipe_read() == SIGWINCH );')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-      assert( info.ssi_signo == SIGWINCH );'), (5, 1, u'+      assert( selfpipe_read() == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-      assert( info.ssi_signo == SIGWINCH );'), (5, 1, u'+      assert( selfpipe_read() == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (5, 2, u'-  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (6, 2, u'-  assert( sigaddset( &signal_mask, SIGINT ) == 0 );')]
===========================================
===========================================
Total add: 3
Total del: 9
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (5, 2, u'-  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (6, 2, u'-  assert( sigaddset( &signal_mask, SIGINT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (5, 2, u'-  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (6, 2, u'-  assert( sigaddset( &signal_mask, SIGINT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 1, u'+  assert( selfpipe_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 1, u'+  assert( selfpipe_trap( SIGINT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap( SIGTERM ) == 0 );'), (3, 1, u'+  assert( selfpipe_trap( SIGINT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (7, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Total add: 3
Total del: 10
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (7, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 2, u'-  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (7, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap(SIGWINCH) == 0 );'), (5, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (6, 2, u'-  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (7, 2, u'-  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (8, 2, u'-  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (9, 2, u'-  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (10, 2, u'-  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (11, 2, u'-  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (12, 2, u'-  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );'), (15, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );'), (22, 1, u'+  assert( selfpipe_trap( SIGTERM ) == 0 );'), (23, 1, u'+  assert( selfpipe_trap( SIGINT ) == 0 );'), (24, 1, u'+  assert( selfpipe_trap( SIGHUP ) == 0 );'), (25, 1, u'+  assert( selfpipe_trap( SIGPIPE ) == 0 );'), (26, 1, u'+  assert( selfpipe_trap( SIGTSTP ) == 0 );'), (27, 1, u'+  assert( selfpipe_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Total add: 8
Total del: 17
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap(SIGWINCH) == 0 );'), (5, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (6, 2, u'-  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (7, 2, u'-  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (8, 2, u'-  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (9, 2, u'-  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (10, 2, u'-  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (11, 2, u'-  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (12, 2, u'-  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );'), (15, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );'), (22, 1, u'+  assert( selfpipe_trap( SIGTERM ) == 0 );'), (23, 1, u'+  assert( selfpipe_trap( SIGINT ) == 0 );'), (24, 1, u'+  assert( selfpipe_trap( SIGHUP ) == 0 );'), (25, 1, u'+  assert( selfpipe_trap( SIGPIPE ) == 0 );'), (26, 1, u'+  assert( selfpipe_trap( SIGTSTP ) == 0 );'), (27, 1, u'+  assert( selfpipe_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( selfpipe_trap(SIGWINCH) == 0 );'), (5, 2, u'-  assert( sigemptyset( &signal_mask ) == 0 );'), (6, 2, u'-  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (7, 2, u'-  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (8, 2, u'-  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (9, 2, u'-  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (10, 2, u'-  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (11, 2, u'-  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (12, 2, u'-  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );'), (15, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );'), (22, 1, u'+  assert( selfpipe_trap( SIGTERM ) == 0 );'), (23, 1, u'+  assert( selfpipe_trap( SIGINT ) == 0 );'), (24, 1, u'+  assert( selfpipe_trap( SIGHUP ) == 0 );'), (25, 1, u'+  assert( selfpipe_trap( SIGPIPE ) == 0 );'), (26, 1, u'+  assert( selfpipe_trap( SIGTSTP ) == 0 );'), (27, 1, u'+  assert( selfpipe_trap( SIGCONT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-  assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: STMClient::process_resize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-  assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-  assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( BUF_SIZE >= MB_CUR_MAX );'), (3, 1, u'+  assert( BUF_SIZE >= (size_t)MB_CUR_MAX );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Parser::UTF8Parser::UTF8Parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( BUF_SIZE >= MB_CUR_MAX );'), (3, 1, u'+  assert( BUF_SIZE >= (size_t)MB_CUR_MAX );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( BUF_SIZE >= MB_CUR_MAX );'), (3, 1, u'+  assert( BUF_SIZE >= (size_t)MB_CUR_MAX );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( attached );'), (3, 1, u'+  assert( has_remote_addr );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Connection::send
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( attached );'), (3, 1, u'+  assert( has_remote_addr );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( attached );'), (3, 1, u'+  assert( has_remote_addr );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( ret.ParseFromString( encoded ) );'), (3, 1, u'+  assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FragmentAssembly::get_assembly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( ret.ParseFromString( encoded ) );'), (3, 1, u'+  assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( ret.ParseFromString( encoded ) );'), (3, 1, u'+  assert( ret.ParseFromString( get_compressor().uncompress_str( encoded ) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: ConditionalOverlayCell::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: ConditionalCursorMove::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert( get_echo_ack() >= existing.get_echo_ack() );')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: Complete::diff_from
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert( get_echo_ack() >= existing.get_echo_ack() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert( get_echo_ack() >= existing.get_echo_ack() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+      assert( inst_echo_ack_num >= echo_ack );')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: Complete::apply_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+      assert( inst_echo_ack_num >= echo_ack );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+      assert( inst_echo_ack_num >= echo_ack );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert( sigemptyset( &signals_to_block ) == 0 );'), (26, 1, u'+  assert( sigaddset( &signals_to_block, SIGTERM ) == 0 );'), (27, 1, u'+  assert( sigaddset( &signals_to_block, SIGINT ) == 0 );'), (28, 1, u'+  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (29, 1, u'+  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (30, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Total add: 32
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert( sigemptyset( &signals_to_block ) == 0 );'), (26, 1, u'+  assert( sigaddset( &signals_to_block, SIGTERM ) == 0 );'), (27, 1, u'+  assert( sigaddset( &signals_to_block, SIGINT ) == 0 );'), (28, 1, u'+  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (29, 1, u'+  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (30, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert( sigemptyset( &signals_to_block ) == 0 );'), (26, 1, u'+  assert( sigaddset( &signals_to_block, SIGTERM ) == 0 );'), (27, 1, u'+  assert( sigaddset( &signals_to_block, SIGINT ) == 0 );'), (28, 1, u'+  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (29, 1, u'+  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (30, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert( sigemptyset( &signals_to_block ) == 0 );'), (6, 1, u'+    assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert( sigemptyset( &signals_to_block ) == 0 );'), (6, 1, u'+    assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert( sigemptyset( &signals_to_block ) == 0 );'), (6, 1, u'+    assert( sigprocmask( SIG_SETMASK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (5, 2, u'-  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (8, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Total add: 0
Total del: 8
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (5, 2, u'-  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (8, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (5, 2, u'-  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (8, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
Class: class Socket { class Socket 
Class: class Socket { class Socket 
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, RemoteState &initial_remote, 					    const char *desired_ip )   : connection( desired_ip ),     sender( &connection, initial_state ),     received_states( 1, TimestampedState<RemoteState>( timestamp(), 0, initial_remote ) ),     last_receiver_state( initial_remote ),     sent_state_late_acked( 0 ),     fragments(),     verbose( false ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 1, u'+  assert( received_states.size() > 0 );')]
===========================================
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, RemoteState &initial_remote, 					    const char *desired_ip )   : connection( desired_ip ),     sender( &connection, initial_state ),     received_states( 1, TimestampedState<RemoteState>( timestamp(), 0, initial_remote ) ),     last_receiver_state( initial_remote ),     sent_state_late_acked( 0 ),     fragments(),     verbose( false ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 2, u'-  assert( received_states.size() > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert( act );'), (42, 2, u'-  assert( BUF_SIZE >= MB_CUR_MAX );'), (47, 2, u'-  assert( buf_len < BUF_SIZE );'), (66, 2, u'-    assert( total_bytes_parsed < orig_buf_len );'), (67, 2, u'-    assert( buf_len > 0 );'), (77, 2, u'-      assert( buf_len == 1 );'), (83, 2, u'-      assert( errno == EILSEQ );'), (99, 2, u'-      assert( bytes_parsed <= buf_len );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+  assert( act );'), (42, 1, u'+  assert( BUF_SIZE >= MB_CUR_MAX );'), (47, 1, u'+  assert( buf_len < BUF_SIZE );'), (66, 1, u'+    assert( total_bytes_parsed < orig_buf_len );'), (67, 1, u'+    assert( buf_len > 0 );'), (77, 1, u'+      assert( buf_len == 1 );'), (83, 1, u'+      assert( errno == EILSEQ );'), (99, 1, u'+      assert( bytes_parsed <= buf_len );')]
===========================================
Class: class Socket { class Socket 
Class: class Socket { class Socket 
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, RemoteState &initial_remote, 					    const char *desired_ip )   : connection( desired_ip ),     sender( &connection, initial_state ),     received_states( 1, TimestampedState<RemoteState>( timestamp(), 0, initial_remote ) ),     last_receiver_state( initial_remote ),     sent_state_late_acked( 0 ),     fragments(),     verbose( false ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 1, u'+  assert( received_states.size() > 0 );')]
===========================================
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, RemoteState &initial_remote, 					    const char *desired_ip )   : connection( desired_ip ),     sender( &connection, initial_state ),     received_states( 1, TimestampedState<RemoteState>( timestamp(), 0, initial_remote ) ),     last_receiver_state( initial_remote ),     sent_state_late_acked( 0 ),     fragments(),     verbose( false ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 2, u'-  assert( received_states.size() > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+  assert( act );'), (42, 1, u'+  assert( BUF_SIZE >= MB_CUR_MAX );'), (47, 1, u'+  assert( buf_len < BUF_SIZE );'), (66, 1, u'+    assert( total_bytes_parsed < orig_buf_len );'), (67, 1, u'+    assert( buf_len > 0 );'), (77, 1, u'+      assert( buf_len == 1 );'), (83, 1, u'+      assert( errno == EILSEQ );'), (99, 1, u'+      assert( bytes_parsed <= buf_len );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert( act );'), (42, 2, u'-  assert( BUF_SIZE >= MB_CUR_MAX );'), (47, 2, u'-  assert( buf_len < BUF_SIZE );'), (66, 2, u'-    assert( total_bytes_parsed < orig_buf_len );'), (67, 2, u'-    assert( buf_len > 0 );'), (77, 2, u'-      assert( buf_len == 1 );'), (83, 2, u'-      assert( errno == EILSEQ );'), (99, 2, u'-      assert( bytes_parsed <= buf_len );')]
===========================================
Class: class Socket { class Socket 
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, RemoteState &initial_remote, 					    const char *desired_ip )   : connection( desired_ip ),     sender( &connection, initial_state ),     received_states( 1, TimestampedState<RemoteState>( timestamp(), 0, initial_remote ) ),     last_receiver_state( initial_remote ),     sent_state_late_acked( 0 ),     fragments(),     verbose( false ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 2, u'-  assert( received_states.size() > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert( act );'), (42, 2, u'-  assert( BUF_SIZE >= MB_CUR_MAX );'), (47, 2, u'-  assert( buf_len < BUF_SIZE );'), (66, 2, u'-    assert( total_bytes_parsed < orig_buf_len );'), (67, 2, u'-    assert( buf_len > 0 );'), (77, 2, u'-      assert( buf_len == 1 );'), (83, 2, u'-      assert( errno == EILSEQ );'), (99, 2, u'-      assert( bytes_parsed <= buf_len );')]
===========================================
Class: class Socket { class Socket 
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, RemoteState &initial_remote, 					    const char *desired_ip )   : connection( desired_ip ),     sender( &connection, initial_state ),     received_states( 1, TimestampedState<RemoteState>( timestamp(), 0, initial_remote ) ),     last_receiver_state( initial_remote ),     sent_state_late_acked( 0 ),     fragments(),     verbose( false ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(133, 1, u'+  assert( received_states.size() > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+  assert( act );'), (42, 1, u'+  assert( BUF_SIZE >= MB_CUR_MAX );'), (47, 1, u'+  assert( buf_len < BUF_SIZE );'), (66, 1, u'+    assert( total_bytes_parsed < orig_buf_len );'), (67, 1, u'+    assert( buf_len > 0 );'), (77, 1, u'+      assert( buf_len == 1 );'), (83, 1, u'+      assert( errno == EILSEQ );'), (99, 1, u'+      assert( bytes_parsed <= buf_len );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( message.text.size() >= 2 * sizeof( uint16_t ) );'), (3, 1, u'+  dos_assert( message.text.size() >= 2 * sizeof( uint16_t ) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Packet::Packet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( message.text.size() >= 2 * sizeof( uint16_t ) );'), (3, 1, u'+  dos_assert( message.text.size() >= 2 * sizeof( uint16_t ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( message.text.size() >= 2 * sizeof( uint16_t ) );'), (3, 1, u'+  dos_assert( message.text.size() >= 2 * sizeof( uint16_t ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (13, 1, u'+  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (16, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );'), (17, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Total add: 6
Total del: 8
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (13, 1, u'+  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (16, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );'), (17, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+  assert( sigaddset( &signals_to_block, SIGHUP ) == 0 );'), (13, 1, u'+  assert( sigaddset( &signals_to_block, SIGPIPE ) == 0 );'), (16, 2, u'-  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );'), (17, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signals_to_block, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Total add: 0
Total del: 6
Header: ConditionalOverlayCell::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Total add: 15
Total del: 3
Header: ConditionalOverlayCell::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( !cursors.empty() );')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( !cursors.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( !cursors.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (3, 1, u'+  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (3, 1, u'+  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (3, 1, u'+  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (3, 1, u'+  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: STMClient::main_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (3, 1, u'+  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( sigaddset( &signal_mask, SIGTSTP ) == 0 );'), (3, 1, u'+  assert( sigaddset( &signal_mask, SIGSTOP ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGCONT ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-      assert( my_argv[ 0 ] );'), (20, 2, u'-      assert( my_argv );'), (24, 2, u'-\tassert( my_argv[ i ] );'), (39, 1, u'+    assert( my_argv[ 0 ] );')]
===========================================
===========================================
Total add: 13
Total del: 29
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-      assert( my_argv[ 0 ] );'), (20, 2, u'-      assert( my_argv );'), (24, 2, u'-\tassert( my_argv[ i ] );'), (39, 1, u'+    assert( my_argv[ 0 ] );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-      assert( my_argv[ 0 ] );'), (20, 2, u'-      assert( my_argv );'), (24, 2, u'-\tassert( my_argv[ i ] );'), (39, 1, u'+    assert( my_argv[ 0 ] );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    assert( my_argv[ 0 ] );'), (24, 1, u'+      assert( my_argv[ 0 ] );'), (33, 1, u'+      assert( my_argv );'), (37, 1, u'+\tassert( my_argv[ i ] );')]
===========================================
===========================================
Total add: 29
Total del: 13
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    assert( my_argv[ 0 ] );'), (24, 1, u'+      assert( my_argv[ 0 ] );'), (33, 1, u'+      assert( my_argv );'), (37, 1, u'+\tassert( my_argv[ i ] );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    assert( my_argv[ 0 ] );'), (24, 1, u'+      assert( my_argv[ 0 ] );'), (33, 1, u'+      assert( my_argv );'), (37, 1, u'+\tassert( my_argv[ i ] );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: ConditionalOverlayCell::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert( !show_frozen_cursor );')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ConditionalOverlayCell::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert( !show_frozen_cursor );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert( !show_frozen_cursor );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( false );')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ConditionalCursorMove::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( false );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( false );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: ConditionalCursorMove::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( expiration_time != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert( target_row < fb.ds.get_height() );'), (13, 2, u'-  assert( target_col < fb.ds.get_width() );'), (14, 1, u'+  assert( row < fb.ds.get_height() );'), (15, 1, u'+  assert( col < fb.ds.get_width() );')]
===========================================
===========================================
Total add: 6
Total del: 10
Header: ConditionalCursorMove::apply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert( target_row < fb.ds.get_height() );'), (13, 2, u'-  assert( target_col < fb.ds.get_width() );'), (14, 1, u'+  assert( row < fb.ds.get_height() );'), (15, 1, u'+  assert( col < fb.ds.get_width() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert( target_row < fb.ds.get_height() );'), (13, 2, u'-  assert( target_col < fb.ds.get_width() );'), (14, 1, u'+  assert( row < fb.ds.get_height() );'), (15, 1, u'+  assert( col < fb.ds.get_width() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+  assert( !cursors.empty() );')]
===========================================
===========================================
Total add: 13
Total del: 2
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+  assert( !cursors.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+  assert( !cursors.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-      assert( !cursor.show_frozen_cursor );')]
===========================================
===========================================
Total add: 4
Total del: 9
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-      assert( !cursor.show_frozen_cursor );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-      assert( !cursor.show_frozen_cursor );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+      assert( act->char_present );')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+      assert( act->char_present );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+      assert( act->char_present );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t  assert( cursor.row >= 0 );'), (11, 2, u'-\t  assert( cursor.col >= 0 );'), (12, 2, u'-\t  assert( cursor.row < fb.ds.get_height() );'), (13, 2, u'-\t  assert( cursor.col < fb.ds.get_width() );'), (21, 1, u'+\tassert( cursor().row >= 0 );'), (22, 1, u'+\tassert( cursor().col >= 0 );'), (23, 1, u'+\tassert( cursor().row < fb.ds.get_height() );'), (24, 1, u'+\tassert( cursor().col < fb.ds.get_width() );')]
===========================================
===========================================
Total add: 83
Total del: 58
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t  assert( cursor.row >= 0 );'), (11, 2, u'-\t  assert( cursor.col >= 0 );'), (12, 2, u'-\t  assert( cursor.row < fb.ds.get_height() );'), (13, 2, u'-\t  assert( cursor.col < fb.ds.get_width() );'), (21, 1, u'+\tassert( cursor().row >= 0 );'), (22, 1, u'+\tassert( cursor().col >= 0 );'), (23, 1, u'+\tassert( cursor().row < fb.ds.get_height() );'), (24, 1, u'+\tassert( cursor().col < fb.ds.get_width() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t  assert( cursor.row >= 0 );'), (11, 2, u'-\t  assert( cursor.col >= 0 );'), (12, 2, u'-\t  assert( cursor.row < fb.ds.get_height() );'), (13, 2, u'-\t  assert( cursor.col < fb.ds.get_width() );'), (21, 1, u'+\tassert( cursor().row >= 0 );'), (22, 1, u'+\tassert( cursor().col >= 0 );'), (23, 1, u'+\tassert( cursor().row < fb.ds.get_height() );'), (24, 1, u'+\tassert( cursor().col < fb.ds.get_width() );')]
===========================================
Class: class Socket { class Socket 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( terminal_to_host.empty() );'), (5, 1, u'+  assert( input.ParseFromString( diff ) );'), (10, 1, u'+      assert( terminal_to_host.empty() ); /* server never interrogates client terminal */')]
===========================================
===========================================
Total add: 12
Total del: 2
Header: Complete::apply_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( terminal_to_host.empty() );'), (5, 1, u'+  assert( input.ParseFromString( diff ) );'), (10, 1, u'+      assert( terminal_to_host.empty() ); /* server never interrogates client terminal */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( terminal_to_host.empty() );'), (5, 1, u'+  assert( input.ParseFromString( diff ) );'), (10, 1, u'+      assert( terminal_to_host.empty() ); /* server never interrogates client terminal */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( !show_frozen_cursor );')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ConditionalCursorMove::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( !show_frozen_cursor );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( !show_frozen_cursor );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+      assert( !cursor.show_frozen_cursor );')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+      assert( !cursor.show_frozen_cursor );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+      assert( !cursor.show_frozen_cursor );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( new_row < fb.ds.get_height() );'), (5, 2, u'-  assert( new_col < fb.ds.get_width() );'), (6, 2, u'-  assert( !fb.ds.origin_mode );')]
===========================================
===========================================
Total add: 14
Total del: 18
Header: ConditionalOverlayCell::get_validity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( new_row < fb.ds.get_height() );'), (5, 2, u'-  assert( new_col < fb.ds.get_width() );'), (6, 2, u'-  assert( !fb.ds.origin_mode );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( new_row < fb.ds.get_height() );'), (5, 2, u'-  assert( new_col < fb.ds.get_width() );'), (6, 2, u'-  assert( !fb.ds.origin_mode );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( fb.ds.get_width() > 0 );'), (7, 1, u'+  assert( fb.ds.get_height() > 0 );')]
===========================================
===========================================
Total add: 15
Total del: 8
Header: NotificationEngine::render_notification
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( fb.ds.get_width() > 0 );'), (7, 1, u'+  assert( fb.ds.get_height() > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( fb.ds.get_width() > 0 );'), (7, 1, u'+  assert( fb.ds.get_height() > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+\tassert( combining_cell->width == 1 );')]
===========================================
===========================================
Total add: 20
Total del: 24
Header: NotificationEngine::render_notification
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+\tassert( combining_cell->width == 1 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+\tassert( combining_cell->width == 1 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 1, u'+\t  assert( cursor.row >= 0 );'), (67, 1, u'+\t  assert( cursor.col >= 0 );'), (68, 1, u'+\t  assert( cursor.row < fb.ds.get_height() );'), (69, 1, u'+\t  assert( cursor.col < fb.ds.get_width() );')]
===========================================
===========================================
Total add: 108
Total del: 16
Header: PredictionEngine::new_user_byte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 1, u'+\t  assert( cursor.row >= 0 );'), (67, 1, u'+\t  assert( cursor.col >= 0 );'), (68, 1, u'+\t  assert( cursor.row < fb.ds.get_height() );'), (69, 1, u'+\t  assert( cursor.col < fb.ds.get_width() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 1, u'+\t  assert( cursor.row >= 0 );'), (67, 1, u'+\t  assert( cursor.col >= 0 );'), (68, 1, u'+\t  assert( cursor.row < fb.ds.get_height() );'), (69, 1, u'+\t  assert( cursor.col < fb.ds.get_width() );')]
===========================================
Class:  class Action;
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( !sent_states.empty() );')]
===========================================
===========================================
Total add: 4
Total del: 14
Header: TransportSender<MyState>::process_acknowledgment_through
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( !sent_states.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( !sent_states.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-\tassert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Total add: 1
Total del: 23
Header: STMClient::main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-\tassert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (4, 2, u'-\tassert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( !sent_states.empty() );')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: TransportSender<MyState>::process_acknowledgment_through
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( !sent_states.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( !sent_states.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sent_states.size() > 0 );'), (3, 1, u'+  assert( !sent_states.empty() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TransportSender<MyState>::process_acknowledgment_through
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sent_states.size() > 0 );'), (3, 1, u'+  assert( !sent_states.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sent_states.size() > 0 );'), (3, 1, u'+  assert( !sent_states.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert( inst.diff() == last_instruction.diff() );')]
===========================================
===========================================
Total add: 41
Total del: 0
Header: Fragment::operator==
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert( inst.diff() == last_instruction.diff() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert( inst.diff() == last_instruction.diff() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( inst.diff() == last_instruction_sent.diff() );'), (19, 2, u'-    assert( fragment_num <= 32767 );')]
===========================================
===========================================
Total add: 3
Total del: 35
Header: TransportSender<MyState>::send_in_fragments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( inst.diff() == last_instruction_sent.diff() );'), (19, 2, u'-    assert( fragment_num <= 32767 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( inst.diff() == last_instruction_sent.diff() );'), (19, 2, u'-    assert( fragment_num <= 32767 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (6, 1, u'+  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (7, 1, u'+  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (8, 1, u'+  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (9, 1, u'+  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (12, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Total add: 18
Total del: 0
Header: serve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (6, 1, u'+  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (7, 1, u'+  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (8, 1, u'+  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (9, 1, u'+  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (12, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (6, 1, u'+  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (7, 1, u'+  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (8, 1, u'+  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (9, 1, u'+  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (12, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (5, 1, u'+  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (6, 1, u'+  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (7, 1, u'+  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (10, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Total add: 16
Total del: 0
Header: client
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (5, 1, u'+  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (6, 1, u'+  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (7, 1, u'+  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (10, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (4, 1, u'+  assert( sigaddset( &signal_mask, SIGTERM ) == 0 );'), (5, 1, u'+  assert( sigaddset( &signal_mask, SIGINT ) == 0 );'), (6, 1, u'+  assert( sigaddset( &signal_mask, SIGHUP ) == 0 );'), (7, 1, u'+  assert( sigaddset( &signal_mask, SIGPIPE ) == 0 );'), (10, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
Class: template <class MyState, class RemoteState> unsigned int Transport<MyState, RemoteState>::send_interval( void ) { 
Class:  template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::tick( void ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::send_to_receiver( string diff ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::rationalize_states( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-  assert ( timestamp() >= next_ack_time );'), (171, 2, u'-    assert( now >= i->timestamp );')]
===========================================
===========================================
Total add: 0
Total del: 195
Header: RemoteState>::Transport
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-  assert ( timestamp() >= next_ack_time );'), (171, 2, u'-    assert( now >= i->timestamp );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-  assert ( timestamp() >= next_ack_time );'), (171, 2, u'-    assert( now >= i->timestamp );')]
===========================================
Class:template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::process_acknowledgment_through( uint64_t ack_num ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-  assert( sent_states.size() > 0 );')]
===========================================
===========================================
Total add: 0
Total del: 17
Header: RemoteState>::recv
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-  assert( sent_states.size() > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-  assert( sent_states.size() > 0 );')]
===========================================
Class:template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::send_in_fragments( string diff, uint64_t new_num, bool send_timestamp ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    assert( inst.diff() == last_instruction_sent.diff() );'), (29, 2, u'-    assert( fragment_num <= 32767 );')]
===========================================
===========================================
Total add: 0
Total del: 56
Header: RemoteState>::get_remote_diff
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    assert( inst.diff() == last_instruction_sent.diff() );'), (29, 2, u'-    assert( fragment_num <= 32767 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    assert( inst.diff() == last_instruction_sent.diff() );'), (29, 2, u'-    assert( fragment_num <= 32767 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert( inst.diff() == last_instruction_sent.diff() );')]
===========================================
===========================================
Total add: 19
Total del: 0
Header: RemoteState>::send_in_fragments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert( inst.diff() == last_instruction_sent.diff() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert( inst.diff() == last_instruction_sent.diff() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( message.text.size() >= 2 * sizeof( uint64_t ) );'), (3, 1, u'+  assert( message.text.size() >= 2 * sizeof( uint16_t ) );')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Packet::Packet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( message.text.size() >= 2 * sizeof( uint64_t ) );'), (3, 1, u'+  assert( message.text.size() >= 2 * sizeof( uint16_t ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( message.text.size() >= 2 * sizeof( uint64_t ) );'), (3, 1, u'+  assert( message.text.size() >= 2 * sizeof( uint16_t ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( now >= p.timestamp_reply );')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: Connection::recv
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( now >= p.timestamp_reply );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( now >= p.timestamp_reply );')]
===========================================
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::send_to_receiver( string diff ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+  assert ( timestamp() >= next_ack_time );')]
===========================================
===========================================
Total add: 29
Total del: 0
Header: RemoteState>::send_to_receiver
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+  assert ( timestamp() >= next_ack_time );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+  assert ( timestamp() >= next_ack_time );')]
===========================================
Class:template <class MyState, class RemoteState> unsigned int Transport<MyState, RemoteState>::send_interval( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+\tassert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (70, 1, u'+\tassert( info.ssi_signo == SIGWINCH );'), (95, 2, u'-      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (96, 2, u'-      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Total add: 59
Total del: 55
Header: client
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+\tassert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (70, 1, u'+\tassert( info.ssi_signo == SIGWINCH );'), (95, 2, u'-      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (96, 2, u'-      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+\tassert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (70, 1, u'+\tassert( info.ssi_signo == SIGWINCH );'), (95, 2, u'-      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (96, 2, u'-      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (6, 1, u'+      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Total add: 13
Total del: 1
Header: client
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (6, 1, u'+      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (6, 1, u'+      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  dos_assert( p.direction == (server ? TO_SERVER : TO_CLIENT) ); /* prevent malicious playback to sender */'), (9, 2, u'-    assert( now >= p.timestamp_reply );'), (33, 2, u'-  dos_assert( p.direction == (server ? TO_SERVER : TO_CLIENT) ); /* prevent malicious playback to sender */'), (36, 1, u'+      assert( now >= p.timestamp_reply );')]
===========================================
===========================================
Total add: 36
Total del: 31
Header: Connection::recv
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  dos_assert( p.direction == (server ? TO_SERVER : TO_CLIENT) ); /* prevent malicious playback to sender */'), (9, 2, u'-    assert( now >= p.timestamp_reply );'), (33, 2, u'-  dos_assert( p.direction == (server ? TO_SERVER : TO_CLIENT) ); /* prevent malicious playback to sender */'), (36, 1, u'+      assert( now >= p.timestamp_reply );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  dos_assert( p.direction == (server ? TO_SERVER : TO_CLIENT) ); /* prevent malicious playback to sender */'), (9, 2, u'-    assert( now >= p.timestamp_reply );'), (33, 2, u'-  dos_assert( p.direction == (server ? TO_SERVER : TO_CLIENT) ); /* prevent malicious playback to sender */'), (36, 1, u'+      assert( now >= p.timestamp_reply );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( parser == x.parser );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Complete::operator==
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( parser == x.parser );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( parser == x.parser );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sent_states.front().num == ack_num );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RemoteState>::process_acknowledgment_through
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sent_states.front().num == ack_num );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( sent_states.front().num == ack_num );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( dispatch == x.dispatch );'), (3, 2, u'-  assert( user == x.user );')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: Emulator::operator==
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( dispatch == x.dispatch );'), (3, 2, u'-  assert( user == x.user );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( dispatch == x.dispatch );'), (3, 2, u'-  assert( user == x.user );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( dispatch == x.dispatch );'), (6, 1, u'+  assert( user == x.user );')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: Emulator::resize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( dispatch == x.dispatch );'), (6, 1, u'+  assert( user == x.user );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( dispatch == x.dispatch );'), (6, 1, u'+  assert( user == x.user );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( !( fragment_num & 0x8000 ) );')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: Instruction::tostring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( !( fragment_num & 0x8000 ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( !( fragment_num & 0x8000 ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( fragments.at( real_fragment_num ) == inst );'), (7, 1, u'+      assert( fragments.at( inst.fragment_num ) == inst );')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: FragmentAssembly::add_fragment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( fragments.at( real_fragment_num ) == inst );'), (7, 1, u'+      assert( fragments.at( inst.fragment_num ) == inst );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( fragments.at( real_fragment_num ) == inst );'), (7, 1, u'+      assert( fragments.at( inst.fragment_num ) == inst );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert( (int)fragments.size() == fragments_total );'), (5, 2, u'-      assert( fragments.at( i ).old_num != uint64_t(-1) );'), (8, 1, u'+    assert( fragments_arrived <= fragments_total );')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: FragmentAssembly::add_fragment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert( (int)fragments.size() == fragments_total );'), (5, 2, u'-      assert( fragments.at( i ).old_num != uint64_t(-1) );'), (8, 1, u'+    assert( fragments_arrived <= fragments_total );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert( (int)fragments.size() == fragments_total );'), (5, 2, u'-      assert( fragments.at( i ).old_num != uint64_t(-1) );'), (8, 1, u'+    assert( fragments_arrived <= fragments_total );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( fragments.size() == fragments_total );'), (4, 1, u'+    assert( (int)fragments.size() == fragments_total );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: FragmentAssembly::add_fragment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( fragments.size() == fragments_total );'), (4, 1, u'+    assert( (int)fragments.size() == fragments_total );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( fragments.size() == fragments_total );'), (4, 1, u'+    assert( (int)fragments.size() == fragments_total );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert( fragments.size() == fragments_total );'), (5, 1, u'+      assert( fragments.at( i ).old_num != uint64_t(-1) );')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: FragmentAssembly::add_fragment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert( fragments.size() == fragments_total );'), (5, 1, u'+      assert( fragments.at( i ).old_num != uint64_t(-1) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert( fragments.size() == fragments_total );'), (5, 1, u'+      assert( fragments.at( i ).old_num != uint64_t(-1) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( !user_bytes.empty() );')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: KeyStroke::subtract
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( !user_bytes.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( !user_bytes.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t  assert( read( STDIN_FILENO, &x, 1 ) == 1 );')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t  assert( read( STDIN_FILENO, &x, 1 ) == 1 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t  assert( read( STDIN_FILENO, &x, 1 ) == 1 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-      assert( fragments[ real_fragment_num ] == inst );'), (6, 1, u'+      assert( fragments.at( real_fragment_num ) == inst );')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: FragmentAssembly::add_fragment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-      assert( fragments[ real_fragment_num ] == inst );'), (6, 1, u'+      assert( fragments.at( real_fragment_num ) == inst );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-      assert( fragments[ real_fragment_num ] == inst );'), (6, 1, u'+      assert( fragments.at( real_fragment_num ) == inst );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( ret.size() == inst_header_len );')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: Instruction::tostring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( ret.size() == inst_header_len );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( ret.size() == inst_header_len );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  assert( x.size() >= 4 * sizeof( uint64_t ) );'), (6, 1, u'+  assert( x.size() >= inst_header_len );')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: Instruction::tostring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  assert( x.size() >= 4 * sizeof( uint64_t ) );'), (6, 1, u'+  assert( x.size() >= inst_header_len );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  assert( x.size() >= 4 * sizeof( uint64_t ) );'), (6, 1, u'+  assert( x.size() >= inst_header_len );')]
===========================================
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::send_in_fragments( string diff, uint64_t new_num ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert( fragment_num <= 32767 );')]
===========================================
===========================================
Total add: 30
Total del: 0
Header: RemoteState>::get_remote_diff
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert( fragment_num <= 32767 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert( fragment_num <= 32767 );')]
===========================================
Class: template <class MyState, class RemoteState> string Transport<MyState, RemoteState>::get_remote_diff( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( message.text.size() >= 2 * sizeof( uint64_t ) );')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: Packet::Packet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( message.text.size() >= 2 * sizeof( uint64_t ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( message.text.size() >= 2 * sizeof( uint64_t ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert( now >= p.timestamp_reply );')]
===========================================
===========================================
Total add: 22
Total del: 0
Header: Connection::recv
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert( now >= p.timestamp_reply );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert( now >= p.timestamp_reply );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( my_it != user_bytes.end() );')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: KeyStroke::diff_from
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( my_it != user_bytes.end() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert( my_it != user_bytes.end() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( x.size() >= 4 * sizeof( uint64_t ) );')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: Instruction::tostring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( x.size() >= 4 * sizeof( uint64_t ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+  assert( x.size() >= 4 * sizeof( uint64_t ) );')]
===========================================
Class:template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::recv( void ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::process_throwaway_until( uint64_t throwaway_num ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 1, u'+  assert( sent_states.size() > 0 );'), (76, 1, u'+  assert( sent_states.front().num == ack_num );'), (92, 1, u'+  assert( received_states.size() > 0 );')]
===========================================
===========================================
Total add: 89
Total del: 1
Header: RemoteState>::rationalize_states
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 1, u'+  assert( sent_states.size() > 0 );'), (76, 1, u'+  assert( sent_states.front().num == ack_num );'), (92, 1, u'+  assert( received_states.size() > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 1, u'+  assert( sent_states.size() > 0 );'), (76, 1, u'+  assert( sent_states.front().num == ack_num );'), (92, 1, u'+  assert( received_states.size() > 0 );')]
===========================================
Class: template <class MyState, class RemoteState> uint64_t Transport<MyState, RemoteState>::timestamp( void ) { 
Class: template <class MyState, class RemoteState> Transport<MyState, RemoteState>::Transport( MyState &initial_state, 					    const char *key_str, const char *ip, int port )   : connection( key_str, ip, port ),     server( false ),     current_state( initial_state ),     sent_states( 1, TimestampedState<MyState>( timestamp(), 0, initial_state ) ),     assumed_receiver_state( sent_states.begin() ),     timeout( INITIAL_TIMEOUT ),     highest_state_received( 0 ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::tick( void ) { 
Class: template <class MyState, class RemoteState> void Transport<MyState, RemoteState>::update_assumed_receiver_state( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(159, 1, u'+    assert( now >= i->timestamp );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-  dos_assert( coded_packet.size() >= 8 );')]
===========================================
===========================================
Total add: 5
Total del: 11
Header: using namespace Network;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-  dos_assert( coded_packet.size() >= 8 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-  dos_assert( coded_packet.size() >= 8 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  assert( !server );')]
===========================================
===========================================
Total add: 10
Total del: 2
Header: Incoming>::update_MTU
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  assert( !server );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  assert( !server );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  dos_assert( coded_packet.size() >= 8 );')]
===========================================
===========================================
Total add: 12
Total del: 2
Header: using namespace Network;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  dos_assert( coded_packet.size() >= 8 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+  dos_assert( coded_packet.size() >= 8 );')]
===========================================
Class:template <class Outgoing, class Incoming> template <class Outgoing, class Incoming>
Class: template <class Outgoing, class Incoming> int Connection<Outgoing, Incoming>::port( void ) { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+  assert( wire.length() >= 32 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( !need_back_color_erase );'), (5, 2, u'-  assert( !x.need_back_color_erase );')]
===========================================
===========================================
Total add: 0
Total del: 11
Header: Cell::reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( !need_back_color_erase );'), (5, 2, u'-  assert( !x.need_back_color_erase );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  assert( !need_back_color_erase );'), (5, 2, u'-  assert( !x.need_back_color_erase );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( cell->renditions.empty() );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Framebuffer::back_color_erase
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( cell->renditions.empty() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( cell->renditions.empty() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( !need_back_color_erase );'), (5, 1, u'+  assert( !x.need_back_color_erase );')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: Cell::reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( !need_back_color_erase );'), (5, 1, u'+  assert( !x.need_back_color_erase );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( !need_back_color_erase );'), (5, 1, u'+  assert( !x.need_back_color_erase );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (5, 1, u'+  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (8, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Total add: 24
Total del: 2
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (5, 1, u'+  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (8, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( sigemptyset( &signal_mask ) == 0 );'), (5, 1, u'+  assert( sigaddset( &signal_mask, SIGWINCH ) == 0 );'), (8, 1, u'+  assert( sigprocmask( SIG_BLOCK, &signal_mask, NULL ) == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (6, 1, u'+      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Total add: 20
Total del: 0
Header: emulate_terminal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (6, 1, u'+      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( read( winch_fd, &info, sizeof( info ) ) == sizeof( info ) );'), (6, 1, u'+      assert( info.ssi_signo == SIGWINCH );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( s_height > 0 );'), (5, 1, u'+  assert( s_width > 0 );')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: Framebuffer::Framebuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( s_height > 0 );'), (5, 1, u'+  assert( s_width > 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+  assert( s_height > 0 );'), (5, 1, u'+  assert( s_width > 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( ds.get_cursor_row() < ds.get_height() );'), (3, 1, u'+  assert( ds.get_cursor_col() < ds.get_width() );'), (5, 1, u'+  assert( ds.get_cursor_row() >= 0 );'), (6, 1, u'+  assert( ds.get_cursor_col() >= 0 );'), (8, 1, u'+  assert( rows.size() == (size_t)ds.get_height() );'), (9, 1, u'+  assert( rows[ ds.get_cursor_row() ].cells.size() == (size_t)ds.get_width() );')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: *Framebuffer::get_cell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( ds.get_cursor_row() < ds.get_height() );'), (3, 1, u'+  assert( ds.get_cursor_col() < ds.get_width() );'), (5, 1, u'+  assert( ds.get_cursor_row() >= 0 );'), (6, 1, u'+  assert( ds.get_cursor_col() >= 0 );'), (8, 1, u'+  assert( rows.size() == (size_t)ds.get_height() );'), (9, 1, u'+  assert( rows[ ds.get_cursor_row() ].cells.size() == (size_t)ds.get_width() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( ds.get_cursor_row() < ds.get_height() );'), (3, 1, u'+  assert( ds.get_cursor_col() < ds.get_width() );'), (5, 1, u'+  assert( ds.get_cursor_row() >= 0 );'), (6, 1, u'+  assert( ds.get_cursor_col() >= 0 );'), (8, 1, u'+  assert( rows.size() == (size_t)ds.get_height() );'), (9, 1, u'+  assert( rows[ ds.get_cursor_row() ].cells.size() == (size_t)ds.get_width() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( ds.get_width() );'), (3, 1, u'+  assert( ds.get_height() );'), (5, 1, u'+  assert( row < ds.get_height() );'), (6, 1, u'+  assert( col < ds.get_width() );'), (8, 1, u'+  assert( row >= 0 );'), (9, 1, u'+  assert( col >= 0 );'), (11, 1, u'+  assert( rows.size() == (size_t)ds.get_height() );'), (12, 1, u'+  assert( rows[ row ].cells.size() == (size_t)ds.get_width() );')]
===========================================
===========================================
Total add: 12
Total del: 0
Header: *Framebuffer::get_cell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( ds.get_width() );'), (3, 1, u'+  assert( ds.get_height() );'), (5, 1, u'+  assert( row < ds.get_height() );'), (6, 1, u'+  assert( col < ds.get_width() );'), (8, 1, u'+  assert( row >= 0 );'), (9, 1, u'+  assert( col >= 0 );'), (11, 1, u'+  assert( rows.size() == (size_t)ds.get_height() );'), (12, 1, u'+  assert( rows[ row ].cells.size() == (size_t)ds.get_width() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+  assert( ds.get_width() );'), (3, 1, u'+  assert( ds.get_height() );'), (5, 1, u'+  assert( row < ds.get_height() );'), (6, 1, u'+  assert( col < ds.get_width() );'), (8, 1, u'+  assert( row >= 0 );'), (9, 1, u'+  assert( col >= 0 );'), (11, 1, u'+  assert( rows.size() == (size_t)ds.get_height() );'), (12, 1, u'+  assert( rows[ row ].cells.size() == (size_t)ds.get_width() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( ds.get_width() );'), (6, 1, u'+  assert( ds.get_height() );')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: *Framebuffer::get_cell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( ds.get_width() );'), (6, 1, u'+  assert( ds.get_height() );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+  assert( ds.get_width() );'), (6, 1, u'+  assert( ds.get_height() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( this_cell );')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: Framebuffer::apply_renditions_to_current_cell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( this_cell );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( this_cell );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( (cell->overlapped_cells.size() + 1 == (size_t)cell->width)')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: Emulator::debug_printout
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( (cell->overlapped_cells.size() + 1 == (size_t)cell->width)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-      assert( (cell->overlapped_cells.size() + 1 == (size_t)cell->width)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert( overlapped_cells.size() == 0 );')]
===========================================
===========================================
Total add: 0
Total del: 12
Header: Cell::reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert( overlapped_cells.size() == 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert( overlapped_cells.size() == 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Emulator::execute
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( N >= 0 );')]
===========================================
===========================================
Total add: 13
Total del: 5
Header: Framebuffer::scroll
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( N >= 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( N >= 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( act->char_present );'), (10, 1, u'+    assert( act->char_present );'), (26, 1, u'+    assert( act->ch <= 255 );')]
===========================================
===========================================
Total add: 22
Total del: 7
Header: Dispatcher::dispatch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( act->char_present );'), (10, 1, u'+    assert( act->char_present );'), (26, 1, u'+    assert( act->ch <= 255 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( act->char_present );'), (10, 1, u'+    assert( act->char_present );'), (26, 1, u'+    assert( act->ch <= 255 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
Total add: 1
Total del: 27
Header: Emulator::CSI_dispatch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
Total add: 1
Total del: 11
Header: Emulator::Esc_dispatch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert( act->char_present );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  assert( fb.cursor_row < fb.height ); /* must be on screen */'), (8, 2, u'-  assert( fb.cursor_col <= fb.width + 1 ); /* two off is ok */'), (9, 2, u'-  assert( fb.combining_char_row < fb.height );'), (10, 2, u'-  assert( fb.combining_char_col < fb.width );')]
===========================================
===========================================
Total add: 6
Total del: 9
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  assert( fb.cursor_row < fb.height ); /* must be on screen */'), (8, 2, u'-  assert( fb.cursor_col <= fb.width + 1 ); /* two off is ok */'), (9, 2, u'-  assert( fb.combining_char_row < fb.height );'), (10, 2, u'-  assert( fb.combining_char_col < fb.width );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  assert( fb.cursor_row < fb.height ); /* must be on screen */'), (8, 2, u'-  assert( fb.cursor_col <= fb.width + 1 ); /* two off is ok */'), (9, 2, u'-  assert( fb.combining_char_row < fb.height );'), (10, 2, u'-  assert( fb.combining_char_col < fb.width );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-      assert( fb.cursor_col == fb.combining_char_col );'), (7, 2, u'-      assert( fb.cursor_row == fb.combining_char_row );'), (8, 2, u'-      assert( fb.cursor_col < fb.width );'), (11, 1, u'+      assert( this_cell == combining_cell );'), (12, 1, u'+      assert( combining_cell->width == 1 );')]
===========================================
===========================================
Total add: 7
Total del: 9
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-      assert( fb.cursor_col == fb.combining_char_col );'), (7, 2, u'-      assert( fb.cursor_row == fb.combining_char_row );'), (8, 2, u'-      assert( fb.cursor_col < fb.width );'), (11, 1, u'+      assert( this_cell == combining_cell );'), (12, 1, u'+      assert( combining_cell->width == 1 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-      assert( fb.cursor_col == fb.combining_char_col );'), (7, 2, u'-      assert( fb.cursor_row == fb.combining_char_row );'), (8, 2, u'-      assert( fb.cursor_col < fb.width );'), (11, 1, u'+      assert( this_cell == combining_cell );'), (12, 1, u'+      assert( combining_cell->width == 1 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( cursor_row < height ); /* must be on screen */'), (3, 2, u'-  assert( cursor_col <= width + 1 ); /* two off is ok */'), (4, 2, u'-  assert( combining_char_row < height );'), (5, 2, u'-  assert( combining_char_col < width );'), (6, 1, u'+  assert( fb.cursor_row < fb.height ); /* must be on screen */'), (7, 1, u'+  assert( fb.cursor_col <= fb.width + 1 ); /* two off is ok */'), (8, 1, u'+  assert( fb.combining_char_row < fb.height );'), (9, 1, u'+  assert( fb.combining_char_col < fb.width );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( cursor_row < height ); /* must be on screen */'), (3, 2, u'-  assert( cursor_col <= width + 1 ); /* two off is ok */'), (4, 2, u'-  assert( combining_char_row < height );'), (5, 2, u'-  assert( combining_char_col < width );'), (6, 1, u'+  assert( fb.cursor_row < fb.height ); /* must be on screen */'), (7, 1, u'+  assert( fb.cursor_col <= fb.width + 1 ); /* two off is ok */'), (8, 1, u'+  assert( fb.combining_char_row < fb.height );'), (9, 1, u'+  assert( fb.combining_char_col < fb.width );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( cursor_row < height ); /* must be on screen */'), (3, 2, u'-  assert( cursor_col <= width + 1 ); /* two off is ok */'), (4, 2, u'-  assert( combining_char_row < height );'), (5, 2, u'-  assert( combining_char_col < width );'), (6, 1, u'+  assert( fb.cursor_row < fb.height ); /* must be on screen */'), (7, 1, u'+  assert( fb.cursor_col <= fb.width + 1 ); /* two off is ok */'), (8, 1, u'+  assert( fb.combining_char_row < fb.height );'), (9, 1, u'+  assert( fb.combining_char_col < fb.width );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-      assert( cursor_col == combining_char_col );'), (7, 2, u'-      assert( cursor_row == combining_char_row );'), (8, 2, u'-      assert( cursor_col < width );'), (11, 1, u'+      assert( fb.cursor_col == fb.combining_char_col );'), (12, 1, u'+      assert( fb.cursor_row == fb.combining_char_row );'), (13, 1, u'+      assert( fb.cursor_col < fb.width );')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-      assert( cursor_col == combining_char_col );'), (7, 2, u'-      assert( cursor_row == combining_char_row );'), (8, 2, u'-      assert( cursor_col < width );'), (11, 1, u'+      assert( fb.cursor_col == fb.combining_char_col );'), (12, 1, u'+      assert( fb.cursor_row == fb.combining_char_row );'), (13, 1, u'+      assert( fb.cursor_col < fb.width );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-      assert( cursor_col == combining_char_col );'), (7, 2, u'-      assert( cursor_row == combining_char_row );'), (8, 2, u'-      assert( cursor_col < width );'), (11, 1, u'+      assert( fb.cursor_col == fb.combining_char_col );'), (12, 1, u'+      assert( fb.cursor_row == fb.combining_char_row );'), (13, 1, u'+      assert( fb.cursor_col < fb.width );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+  assert( N >= 0 );')]
===========================================
===========================================
Total add: 7
Total del: 9
Header: Emulator::scroll
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+  assert( N >= 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+  assert( N >= 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( cursor_row <= width ); /* one off is ok */'), (3, 1, u'+  assert( cursor_col <= width + 1 ); /* two off is ok */'), (4, 1, u'+  assert( combining_char_row < height );'), (5, 1, u'+  assert( combining_char_col < width );')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( cursor_row <= width ); /* one off is ok */'), (3, 1, u'+  assert( cursor_col <= width + 1 ); /* two off is ok */'), (4, 1, u'+  assert( combining_char_row < height );'), (5, 1, u'+  assert( combining_char_col < width );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  assert( cursor_row <= width ); /* one off is ok */'), (3, 1, u'+  assert( cursor_col <= width + 1 ); /* two off is ok */'), (4, 1, u'+  assert( combining_char_row < height );'), (5, 1, u'+  assert( combining_char_col < width );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( cursor_col == combining_char_col );'), (6, 1, u'+      assert( cursor_row == combining_char_row );'), (7, 1, u'+      assert( cursor_col < width );')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( cursor_col == combining_char_col );'), (6, 1, u'+      assert( cursor_row == combining_char_row );'), (7, 1, u'+      assert( cursor_col < width );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( cursor_col == combining_char_col );'), (6, 1, u'+      assert( cursor_row == combining_char_row );'), (7, 1, u'+      assert( cursor_col < width );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+    assert( false );')]
===========================================
===========================================
Total add: 30
Total del: 4
Header: Emulator::print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+    assert( false );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+    assert( false );')]
===========================================
Class:  class Action;
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( BUF_SIZE >= MB_CUR_MAX );')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Parser::UTF8Parser::UTF8Parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( BUF_SIZE >= MB_CUR_MAX );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+  assert( BUF_SIZE >= MB_CUR_MAX );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert( buf_len == 1 );'), (16, 2, u'-    assert( errno == EILSEQ );'), (26, 2, u'-    assert( bytes_parsed == buf_len );'), (38, 1, u'+    assert( total_bytes_parsed < orig_buf_len );'), (39, 1, u'+    assert( buf_len > 0 );'), (49, 1, u'+      assert( buf_len == 1 );'), (55, 1, u'+      assert( errno == EILSEQ );'), (71, 1, u'+      assert( bytes_parsed <= buf_len );')]
===========================================
===========================================
Total add: 57
Total del: 30
Header: Parser::UTF8Parser::input
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert( buf_len == 1 );'), (16, 2, u'-    assert( errno == EILSEQ );'), (26, 2, u'-    assert( bytes_parsed == buf_len );'), (38, 1, u'+    assert( total_bytes_parsed < orig_buf_len );'), (39, 1, u'+    assert( buf_len > 0 );'), (49, 1, u'+      assert( buf_len == 1 );'), (55, 1, u'+      assert( errno == EILSEQ );'), (71, 1, u'+      assert( bytes_parsed <= buf_len );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert( buf_len == 1 );'), (16, 2, u'-    assert( errno == EILSEQ );'), (26, 2, u'-    assert( bytes_parsed == buf_len );'), (38, 1, u'+    assert( total_bytes_parsed < orig_buf_len );'), (39, 1, u'+    assert( buf_len > 0 );'), (49, 1, u'+      assert( buf_len == 1 );'), (55, 1, u'+      assert( errno == EILSEQ );'), (71, 1, u'+      assert( bytes_parsed <= buf_len );')]
===========================================
Class:class stripstate { class stripstate 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( in_index <= state->buf_len );'), (27, 2, u'-      assert( out_index < buf_size );'), (31, 2, u'-      assert( errno == EILSEQ );'), (33, 2, u'-      assert( out_index < buf_size );'), (45, 2, u'-      assert( out_index < buf_size );')]
===========================================
===========================================
Total add: 3
Total del: 55
Header: vt_parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( in_index <= state->buf_len );'), (27, 2, u'-      assert( out_index < buf_size );'), (31, 2, u'-      assert( errno == EILSEQ );'), (33, 2, u'-      assert( out_index < buf_size );'), (45, 2, u'-      assert( out_index < buf_size );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert( in_index <= state->buf_len );'), (27, 2, u'-      assert( out_index < buf_size );'), (31, 2, u'-      assert( errno == EILSEQ );'), (33, 2, u'-      assert( out_index < buf_size );'), (45, 2, u'-      assert( out_index < buf_size );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+  assert( buf_len < BUF_SIZE );'), (34, 1, u'+    assert( buf_len == 1 );'), (39, 1, u'+    assert( errno == EILSEQ );'), (49, 1, u'+    assert( bytes_parsed == buf_len );')]
===========================================
===========================================
Total add: 56
Total del: 0
Header: Parser::Parser::input
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+  assert( buf_len < BUF_SIZE );'), (34, 1, u'+    assert( buf_len == 1 );'), (39, 1, u'+    assert( errno == EILSEQ );'), (49, 1, u'+    assert( bytes_parsed == buf_len );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+  assert( buf_len < BUF_SIZE );'), (34, 1, u'+    assert( buf_len == 1 );'), (39, 1, u'+    assert( errno == EILSEQ );'), (49, 1, u'+    assert( bytes_parsed == buf_len );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+  assert( act );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( act );')]
===========================================
===========================================
Total add: 8
Total del: 3
Header: vt_parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( act );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+      assert( act );')]
===========================================
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
623
Mismatch count:2282
Normal count:120358
