projects/top_C/ProjectTox-Core
Going to process projects/top_C/ProjectTox-Core/all_log.txt 
---------- ProjectTox-Core ------------

===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: toxav_get_peer_id
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(dest);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *append_header_to_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(dest);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(dest);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-{ assert(_msg); assert(header_value); \\')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: message_to_send
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-{ assert(_msg); assert(header_value); \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-{ assert(_msg); assert(header_value); \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(_retu);')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: *extract_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(_retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(_retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: *extract_ext_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(_retu->table);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: *extract_ext_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(_retu->table);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(_retu->table);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: *build_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: *rtp_new_message
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(_retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    assert(_retu);')]
===========================================
===========================================
Total add: 7
Total del: 10
Header: rtp_free_msg
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    assert(_retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    assert(_retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(_retu->encrypt_nonce);'), (9, 2, u'-    assert(_retu->decrypt_nonce);'), (11, 2, u'-    assert(_retu->nonce_cycle);'), (18, 2, u'-    assert(_retu->csrc);')]
===========================================
===========================================
Total add: 5
Total del: 16
Header: *rtp_init_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(_retu->encrypt_nonce);'), (9, 2, u'-    assert(_retu->decrypt_nonce);'), (11, 2, u'-    assert(_retu->nonce_cycle);'), (18, 2, u'-    assert(_retu->csrc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(_retu->encrypt_nonce);'), (9, 2, u'-    assert(_retu->decrypt_nonce);'), (11, 2, u'-    assert(_retu->nonce_cycle);'), (18, 2, u'-    assert(_retu->csrc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: toxav_get_peer_transmission_type
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg(tox_send_message(tox2, 0, msgs, TOX_MAX_MESSAGE_LENGTH + 1) == 0,'), (7, 1, u'+    ck_assert_msg(tox_send_message(tox2, 0, msgs, TOX_MAX_MESSAGE_LENGTH) != 0, "TOX_MAX_MESSAGE_LENGTH is too big\\n");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg(tox_send_message(tox2, 0, msgs, TOX_MAX_MESSAGE_LENGTH + 1) == 0,'), (7, 1, u'+    ck_assert_msg(tox_send_message(tox2, 0, msgs, TOX_MAX_MESSAGE_LENGTH) != 0, "TOX_MAX_MESSAGE_LENGTH is too big\\n");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg(tox_send_message(tox2, 0, msgs, TOX_MAX_MESSAGE_LENGTH + 1) == 0,'), (7, 1, u'+    ck_assert_msg(tox_send_message(tox2, 0, msgs, TOX_MAX_MESSAGE_LENGTH) != 0, "TOX_MAX_MESSAGE_LENGTH is too big\\n");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Total add: 7
Total del: 6
Header: parse_raw_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 11
Total del: 5
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 10
Total del: 5
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Total add: 0
Total del: 16
Header: *stringify_response
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Total add: 1
Total del: 12
Header: *stringify_response
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: parse_raw_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+if ( *iterator != value_byte ) { assert(0); return -1; }\\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ck_assert_msg(status_callback_good == 1, "status callback not called");'), (10, 1, u'+    ck_assert_msg(status_callback_status == 1, "wrong status");')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ck_assert_msg(status_callback_good == 1, "status callback not called");'), (10, 1, u'+    ck_assert_msg(status_callback_status == 1, "wrong status");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ck_assert_msg(status_callback_good == 1, "status callback not called");'), (10, 1, u'+    ck_assert_msg(status_callback_status == 1, "wrong status");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(oob_data_callback_good == 1, "oob callback not called");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(oob_data_callback_good == 1, "oob callback not called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(oob_data_callback_good == 1, "oob callback not called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 9
Total del: 4
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 10
Total del: 5
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+                        ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: in_thread_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+                        ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+                        ck_assert_msg ( 0, "Failed to encode payload" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(retu);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *codec_init_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( msg );')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: parse_raw_data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( msg );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( msg );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( msg );')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: free_message
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( msg );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( msg );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( _retu );')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: *msi_new_message
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( _retu );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( _retu );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( data );'), (9, 2, u'-    assert ( _retu );')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: *parse_message
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( data );'), (9, 2, u'-    assert ( _retu );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( data );'), (9, 2, u'-    assert ( _retu );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( dest );'), (3, 2, u'-    assert ( header_value );'), (4, 2, u'-    assert ( header_field );'), (8, 1, u'+        assert(dest);')]
===========================================
===========================================
Total add: 14
Total del: 4
Header: *append_header_to_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( dest );'), (3, 2, u'-    assert ( header_value );'), (4, 2, u'-    assert ( header_field );'), (8, 1, u'+        assert(dest);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( dest );'), (3, 2, u'-    assert ( header_value );'), (4, 2, u'-    assert ( header_field );'), (8, 1, u'+        assert(dest);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( msg );'), (6, 2, u'-    assert ( dest );')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: if
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( msg );'), (6, 2, u'-    assert ( dest );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( msg );'), (6, 2, u'-    assert ( dest );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( str );')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: t_randomstr
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( str );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( str );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( session );'), (3, 2, u'-    assert ( peers );'), (34, 2, u'-    assert ( _call );'), (35, 2, u'-    assert ( _call->type_peer );')]
===========================================
===========================================
Total add: 33
Total del: 6
Header: *init_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( session );'), (3, 2, u'-    assert ( peers );'), (34, 2, u'-    assert ( _call );'), (35, 2, u'-    assert ( _call->type_peer );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( session );'), (3, 2, u'-    assert ( peers );'), (34, 2, u'-    assert ( _call );'), (35, 2, u'-    assert ( _call->type_peer );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: *init_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: terminate_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: handle_recv_invite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: handle_recv_start
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: handle_recv_reject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: handle_recv_cancel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: handle_recv_end
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: handle_recv_ringing
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: handle_recv_starting
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );'), (6, 2, u'-    assert ( session->call );')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: handle_recv_ending
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );'), (6, 2, u'-    assert ( session->call );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );'), (6, 2, u'-    assert ( session->call );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( messenger );'), (14, 2, u'-    assert ( _retu );')]
===========================================
===========================================
Total add: 12
Total del: 3
Header: msi_register_callback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( messenger );'), (14, 2, u'-    assert ( _retu );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( messenger );'), (14, 2, u'-    assert ( _retu );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: msi_terminate_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 21
Total del: 17
Header: msi_terminate_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 11
Total del: 4
Header: msi_invite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 10
Total del: 4
Header: msi_hangup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 8
Total del: 3
Header: msi_answer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: msi_cancel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert ( session );')]
===========================================
===========================================
Total add: 5
Total del: 4
Header: msi_reject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert ( session );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert ( session );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: toxav_stop_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(av->msi_session);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt max size");'), (3, 2, u'-    ck_assert_msg(c2len == -1, "incorrectly succeeded encrypting massive size");'), (4, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt");'), (5, 1, u'+    ck_assert_msg(c2len == sizeof(m2) + crypto_box_MACBYTES, "could not encrypt");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt max size");'), (3, 2, u'-    ck_assert_msg(c2len == -1, "incorrectly succeeded encrypting massive size");'), (4, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt");'), (5, 1, u'+    ck_assert_msg(c2len == sizeof(m2) + crypto_box_MACBYTES, "could not encrypt");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt max size");'), (3, 2, u'-    ck_assert_msg(c2len == -1, "incorrectly succeeded encrypting massive size");'), (4, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt");'), (5, 1, u'+    ck_assert_msg(c2len == sizeof(m2) + crypto_box_MACBYTES, "could not encrypt");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Ubuntu", sizeof("Ubuntu")) == -1,'), (14, 2, u'-    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Gentoo", sizeof("Gentoo")) == 0,'), (18, 2, u'-    ck_assert_msg(memcmp(addr1, addr, FRIEND_ADDRESS_SIZE) == 0, "Didn\'t load messenger successfully");')]
===========================================
===========================================
Total add: 0
Total del: 21
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Ubuntu", sizeof("Ubuntu")) == -1,'), (14, 2, u'-    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Gentoo", sizeof("Gentoo")) == 0,'), (18, 2, u'-    ck_assert_msg(memcmp(addr1, addr, FRIEND_ADDRESS_SIZE) == 0, "Didn\'t load messenger successfully");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Ubuntu", sizeof("Ubuntu")) == -1,'), (14, 2, u'-    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Gentoo", sizeof("Gentoo")) == 0,'), (18, 2, u'-    ck_assert_msg(memcmp(addr1, addr, FRIEND_ADDRESS_SIZE) == 0, "Didn\'t load messenger successfully");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((len = decrypt_data_fast(con->shared_key, con->recv_nonce, data + 2, length - 2, data)) != -1,'), (3, 1, u'+    ck_assert_msg((len = decrypt_data_symmetric(con->shared_key, con->recv_nonce, data + 2, length - 2, data)) != -1,')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: read_packet_sec_TCP
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((len = decrypt_data_fast(con->shared_key, con->recv_nonce, data + 2, length - 2, data)) != -1,'), (3, 1, u'+    ck_assert_msg((len = decrypt_data_symmetric(con->shared_key, con->recv_nonce, data + 2, length - 2, data)) != -1,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((len = decrypt_data_fast(con->shared_key, con->recv_nonce, data + 2, length - 2, data)) != -1,'), (3, 1, u'+    ck_assert_msg((len = decrypt_data_symmetric(con->shared_key, con->recv_nonce, data + 2, length - 2, data)) != -1,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(IP) == 20, "sizeof(IP): expected result 20, got %u.", sizeof(IP));'), (3, 2, u'-    ck_assert_msg(sizeof(IP_Port) == 24, "sizeof(IP_Port): expected result 24, got %u.", sizeof(IP_Port));'), (4, 2, u'-    ck_assert_msg(sizeof(IP4_Port) == 8, "sizeof(IP4_Port): expected result 8, got %u.", sizeof(IP4_Port));'), (5, 1, u'+    ck_assert_msg(sizeof(IP) == 17, "sizeof(IP): expected result 17, got %u.", sizeof(IP));'), (6, 1, u'+    ck_assert_msg(sizeof(IP_Port) == 19, "sizeof(IP_Port): expected result 19, got %u.", sizeof(IP_Port));')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(IP) == 20, "sizeof(IP): expected result 20, got %u.", sizeof(IP));'), (3, 2, u'-    ck_assert_msg(sizeof(IP_Port) == 24, "sizeof(IP_Port): expected result 24, got %u.", sizeof(IP_Port));'), (4, 2, u'-    ck_assert_msg(sizeof(IP4_Port) == 8, "sizeof(IP4_Port): expected result 8, got %u.", sizeof(IP4_Port));'), (5, 1, u'+    ck_assert_msg(sizeof(IP) == 17, "sizeof(IP): expected result 17, got %u.", sizeof(IP));'), (6, 1, u'+    ck_assert_msg(sizeof(IP_Port) == 19, "sizeof(IP_Port): expected result 19, got %u.", sizeof(IP_Port));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(IP) == 20, "sizeof(IP): expected result 20, got %u.", sizeof(IP));'), (3, 2, u'-    ck_assert_msg(sizeof(IP_Port) == 24, "sizeof(IP_Port): expected result 24, got %u.", sizeof(IP_Port));'), (4, 2, u'-    ck_assert_msg(sizeof(IP4_Port) == 8, "sizeof(IP4_Port): expected result 8, got %u.", sizeof(IP4_Port));'), (5, 1, u'+    ck_assert_msg(sizeof(IP) == 17, "sizeof(IP): expected result 17, got %u.", sizeof(IP));'), (6, 1, u'+    ck_assert_msg(sizeof(IP_Port) == 19, "sizeof(IP_Port): expected result 19, got %u.", sizeof(IP_Port));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    ck_assert_msg(response_callback_good == 1, "response callback not called");'), (28, 1, u'+    ck_assert_msg(memcmp(response_callback_public_key, f2_public_key, crypto_box_PUBLICKEYBYTES) == 0, "wrong public key");'), (29, 1, u'+    ck_assert_msg(status_callback_good == 1, "status callback not called");'), (30, 1, u'+    ck_assert_msg(status_callback_status == 2, "wrong status");'), (31, 1, u'+    ck_assert_msg(status_callback_connection_id == response_callback_connection_id, "connection ids not equal");'), (35, 1, u'+    ck_assert_msg(send_data(conn2, 0, data, 5) == 1, "send data failed");'), (41, 1, u'+    ck_assert_msg(data_callback_good == 1, "data callback not called");')]
===========================================
===========================================
Total add: 40
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    ck_assert_msg(response_callback_good == 1, "response callback not called");'), (28, 1, u'+    ck_assert_msg(memcmp(response_callback_public_key, f2_public_key, crypto_box_PUBLICKEYBYTES) == 0, "wrong public key");'), (29, 1, u'+    ck_assert_msg(status_callback_good == 1, "status callback not called");'), (30, 1, u'+    ck_assert_msg(status_callback_status == 2, "wrong status");'), (31, 1, u'+    ck_assert_msg(status_callback_connection_id == response_callback_connection_id, "connection ids not equal");'), (35, 1, u'+    ck_assert_msg(send_data(conn2, 0, data, 5) == 1, "send data failed");'), (41, 1, u'+    ck_assert_msg(data_callback_good == 1, "data callback not called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    ck_assert_msg(response_callback_good == 1, "response callback not called");'), (28, 1, u'+    ck_assert_msg(memcmp(response_callback_public_key, f2_public_key, crypto_box_PUBLICKEYBYTES) == 0, "wrong public key");'), (29, 1, u'+    ck_assert_msg(status_callback_good == 1, "status callback not called");'), (30, 1, u'+    ck_assert_msg(status_callback_status == 2, "wrong status");'), (31, 1, u'+    ck_assert_msg(status_callback_connection_id == response_callback_connection_id, "connection ids not equal");'), (35, 1, u'+    ck_assert_msg(send_data(conn2, 0, data, 5) == 1, "send data failed");'), (41, 1, u'+    ck_assert_msg(data_callback_good == 1, "data callback not called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,'), (8, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,'), (12, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,')]
===========================================
===========================================
Total add: 12
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,'), (8, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,'), (12, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,'), (8, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,'), (12, 1, u'+    ck_assert_msg(conn->status == TCP_CLIENT_CONFIRMED, "Wrong status. Expected: %u, is: %u", TCP_CLIENT_CONFIRMED,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Bob is invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg(recved == 10 && memcmp(storage, sample_payload, 10) == 0, "Payload from Alice is invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(tcp_s->num_listening_socks == NUM_PORTS, "Failed to bind to all ports");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(tcp_s->num_listening_socks == NUM_PORTS, "Failed to bind to all ports");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(tcp_s->num_listening_socks == NUM_PORTS, "Failed to bind to all ports");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(tcp_s->num_listening_socks == NUM_PORTS, "Failed to bind to all ports");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(tcp_s->num_listening_socks == NUM_PORTS, "Failed to bind to all ports");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ck_assert_msg(tcp_s->num_listening_socks == NUM_PORTS, "Failed to bind to all ports");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (10, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Total add: 9
Total del: 7
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (10, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (10, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (11, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Total add: 10
Total del: 8
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (11, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (11, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (11, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Total add: 7
Total del: 6
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (11, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||'), (11, 1, u'+            ck_assert_msg( memcmp(video_storage->planes[VPX_PLANE_Y], sample_payload, 10) == 0 ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ck_assert_msg(len == sizeof(ping_packet), "wrong len %u", len);'), (10, 1, u'+    ck_assert_msg(data[0] == 5, "wrong packet id %u", data[0]);'), (11, 1, u'+    ck_assert_msg(memcmp(ping_packet + 1, data + 1, sizeof(uint64_t)) == 0, "wrong packet data");')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ck_assert_msg(len == sizeof(ping_packet), "wrong len %u", len);'), (10, 1, u'+    ck_assert_msg(data[0] == 5, "wrong packet id %u", data[0]);'), (11, 1, u'+    ck_assert_msg(memcmp(ping_packet + 1, data + 1, sizeof(uint64_t)) == 0, "wrong packet data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ck_assert_msg(len == sizeof(ping_packet), "wrong len %u", len);'), (10, 1, u'+    ck_assert_msg(data[0] == 5, "wrong packet id %u", data[0]);'), (11, 1, u'+    ck_assert_msg(memcmp(ping_packet + 1, data + 1, sizeof(uint64_t)) == 0, "wrong packet data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ck_assert_msg(len == 2, "wrong len %u", len);'), (4, 1, u'+    ck_assert_msg(data[0] == 2, "wrong packet id %u", data[0]);'), (5, 1, u'+    ck_assert_msg(data[1] == 16, "wrong peer id %u", data[1]);'), (7, 2, u'-    ck_assert_msg(len == 1024, "wrong len %u", len);'), (8, 2, u'-    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong");'), (9, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (10, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (13, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (14, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (17, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (18, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (27, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (28, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (31, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (32, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (35, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (36, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],')]
===========================================
===========================================
Total add: 33
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ck_assert_msg(len == 2, "wrong len %u", len);'), (4, 1, u'+    ck_assert_msg(data[0] == 2, "wrong packet id %u", data[0]);'), (5, 1, u'+    ck_assert_msg(data[1] == 16, "wrong peer id %u", data[1]);'), (7, 2, u'-    ck_assert_msg(len == 1024, "wrong len %u", len);'), (8, 2, u'-    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong");'), (9, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (10, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (13, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (14, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (17, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (18, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (27, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (28, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (31, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (32, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (35, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (36, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ck_assert_msg(len == 2, "wrong len %u", len);'), (4, 1, u'+    ck_assert_msg(data[0] == 2, "wrong packet id %u", data[0]);'), (5, 1, u'+    ck_assert_msg(data[1] == 16, "wrong peer id %u", data[1]);'), (7, 2, u'-    ck_assert_msg(len == 1024, "wrong len %u", len);'), (8, 2, u'-    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong");'), (9, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (10, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (13, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (14, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (17, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (18, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (27, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (28, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (31, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (32, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],'), (35, 1, u'+    ck_assert_msg(len == sizeof(test_packet), "wrong len %u", len);'), (36, 1, u'+    ck_assert_msg(memcmp(data, test_packet, sizeof(test_packet)) == 0, "packet is wrong %u %u %u %u", data[0], data[1],')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(_retu);'), (5, 1, u'+    assert(retu);')]
===========================================
===========================================
Total add: 14
Total del: 22
Header: *codec_init_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(_retu);'), (5, 1, u'+    assert(retu);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(_retu);'), (5, 1, u'+    assert(retu);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert ( _phone );')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert ( _phone );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert ( _phone );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->csrc);')]
===========================================
===========================================
Total add: 2
Total del: 11
Header: *extract_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->csrc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->csrc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->csrc);')]
===========================================
===========================================
Total add: 4
Total del: 12
Header: *build_header
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->csrc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->csrc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ck_assert_msg(fnum != -1, "tox_new_file_sender fail");')]
===========================================
===========================================
Total add: 38
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ck_assert_msg(fnum != -1, "tox_new_file_sender fail");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ck_assert_msg(fnum != -1, "tox_new_file_sender fail");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");'), (3, 1, u'+    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0,')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");'), (3, 1, u'+    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");'), (3, 1, u'+    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            ck_assert_msg(typing_changes == 0, "Typing fail");'), (21, 1, u'+    ck_assert_msg(tox_get_is_typing(tox2, 0) == 1, "Typing fail");'), (33, 1, u'+            ck_assert_msg(typing_changes == 0, "Typing fail");'), (38, 1, u'+    ck_assert_msg(tox_get_is_typing(tox2, 0) == 0, "Typing fail");')]
===========================================
===========================================
Total add: 37
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            ck_assert_msg(typing_changes == 0, "Typing fail");'), (21, 1, u'+    ck_assert_msg(tox_get_is_typing(tox2, 0) == 1, "Typing fail");'), (33, 1, u'+            ck_assert_msg(typing_changes == 0, "Typing fail");'), (38, 1, u'+    ck_assert_msg(tox_get_is_typing(tox2, 0) == 0, "Typing fail");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            ck_assert_msg(typing_changes == 0, "Typing fail");'), (21, 1, u'+    ck_assert_msg(tox_get_is_typing(tox2, 0) == 1, "Typing fail");'), (33, 1, u'+            ck_assert_msg(typing_changes == 0, "Typing fail");'), (38, 1, u'+    ck_assert_msg(tox_get_is_typing(tox2, 0) == 0, "Typing fail");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");'), (3, 1, u'+    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");'), (3, 1, u'+    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");'), (3, 1, u'+    ck_assert_msg(IN6_IS_ADDR_V4MAPPED(&ip2.ip6.in6_addr) != 0, "IN6_IS_ADDR_V4MAPPED(::ffff:127.0.0.1): expected != 0, got 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    _retu->encrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->encrypt_nonce);'), (10, 2, u'-    _retu->decrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->decrypt_nonce);'), (11, 2, u'-    _retu->nonce_cycle   = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->nonce_cycle);'), (15, 1, u'+    assert(_retu->encrypt_nonce);'), (17, 1, u'+    assert(_retu->decrypt_nonce);'), (19, 1, u'+    assert(_retu->nonce_cycle);')]
===========================================
===========================================
Total add: 16
Total del: 13
Header: rtp_init_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    _retu->encrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->encrypt_nonce);'), (10, 2, u'-    _retu->decrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->decrypt_nonce);'), (11, 2, u'-    _retu->nonce_cycle   = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->nonce_cycle);'), (15, 1, u'+    assert(_retu->encrypt_nonce);'), (17, 1, u'+    assert(_retu->decrypt_nonce);'), (19, 1, u'+    assert(_retu->nonce_cycle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    _retu->encrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->encrypt_nonce);'), (10, 2, u'-    _retu->decrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->decrypt_nonce);'), (11, 2, u'-    _retu->nonce_cycle   = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->nonce_cycle);'), (15, 1, u'+    assert(_retu->encrypt_nonce);'), (17, 1, u'+    assert(_retu->decrypt_nonce);'), (19, 1, u'+    assert(_retu->nonce_cycle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-                    assert(0);')]
===========================================
===========================================
Total add: 4
Total del: 7
Header: *encode_audio_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-                    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-                    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                    assert(0);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: *encode_audio_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(_arg);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: callback_recv_invite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(_arg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(_arg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ck_assert_msg(ip_port.port == onions[7]->onion->net->port, "Port in returned ip not correct.");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ck_assert_msg(ip_port.port == onions[7]->onion->net->port, "Port in returned ip not correct.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ck_assert_msg(ip_port.port == onions[7]->onion->net->port, "Port in returned ip not correct.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(_retu->data);')]
===========================================
===========================================
Total add: 0
Total del: 11
Header: msg_parse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(_retu->data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(_retu->data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->data);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: rtp_new_message
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->data);')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: rtp_new_message
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(_retu->data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    _retu->encrypt_nonce = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->encrypt_nonce);'), (3, 2, u'-    _retu->decrypt_nonce = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->decrypt_nonce);'), (4, 2, u'-    _retu->nonce_cycle   = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->nonce_cycle);'), (5, 1, u'+    _retu->encrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->encrypt_nonce);'), (6, 1, u'+    _retu->decrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->decrypt_nonce);'), (7, 1, u'+    _retu->nonce_cycle   = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->nonce_cycle);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: rtp_init_session
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    _retu->encrypt_nonce = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->encrypt_nonce);'), (3, 2, u'-    _retu->decrypt_nonce = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->decrypt_nonce);'), (4, 2, u'-    _retu->nonce_cycle   = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->nonce_cycle);'), (5, 1, u'+    _retu->encrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->encrypt_nonce);'), (6, 1, u'+    _retu->decrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->decrypt_nonce);'), (7, 1, u'+    _retu->nonce_cycle   = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->nonce_cycle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    _retu->encrypt_nonce = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->encrypt_nonce);'), (3, 2, u'-    _retu->decrypt_nonce = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->decrypt_nonce);'), (4, 2, u'-    _retu->nonce_cycle   = calloc ( sizeof ( uint8_t ), crypto_box_NONCEBYTES ); assert(_retu->nonce_cycle);'), (5, 1, u'+    _retu->encrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->encrypt_nonce);'), (6, 1, u'+    _retu->decrypt_nonce = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->decrypt_nonce);'), (7, 1, u'+    _retu->nonce_cycle   = calloc ( crypto_box_NONCEBYTES, sizeof (uint8_t) ); assert(_retu->nonce_cycle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    pthread_create(&_tid, NULL, func, args); assert( pthread_detach(_tid) == 0 ); }'), (7, 1, u'+pthread_create(&_tid, NULL, func, args); assert( pthread_detach(_tid) == 0 ); }')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert((*container ) != NULL);')]
===========================================
===========================================
Total add: 18
Total del: 8
Header: push_event
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert((*container ) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert((*container ) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(res > 0, "Resolver failed: %u, %s (%x, %x)", errno, strerror(errno));'), (5, 2, u'-        ck_assert_msg(ip.family == AF_INET6, "Expected family AF_INET6, got %u.", ip.family);'), (6, 2, u'-        ck_assert_msg(!memcmp(&ip.ip6, &in6addr_loopback, sizeof(IP6)), "Expected ::1, got %s.", ip_ntoa(&ip));')]
===========================================
===========================================
Total add: 3
Total del: 11
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(res > 0, "Resolver failed: %u, %s (%x, %x)", errno, strerror(errno));'), (5, 2, u'-        ck_assert_msg(ip.family == AF_INET6, "Expected family AF_INET6, got %u.", ip.family);'), (6, 2, u'-        ck_assert_msg(!memcmp(&ip.ip6, &in6addr_loopback, sizeof(IP6)), "Expected ::1, got %s.", ip_ntoa(&ip));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(res > 0, "Resolver failed: %u, %s (%x, %x)", errno, strerror(errno));'), (5, 2, u'-        ck_assert_msg(ip.family == AF_INET6, "Expected family AF_INET6, got %u.", ip.family);'), (6, 2, u'-        ck_assert_msg(!memcmp(&ip.ip6, &in6addr_loopback, sizeof(IP6)), "Expected ::1, got %s.", ip_ntoa(&ip));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        ck_assert_msg(extra.family == AF_INET, "Expected family AF_INET, got %u.", extra.family);'), (5, 2, u'-        ck_assert_msg(extra.ip4.uint32 == htonl(0x7F000001), "Expected 127.0.0.1, got %s.", inet_ntoa(extra.ip4.in_addr));'), (12, 1, u'+        ck_assert_msg(res > 0, "Resolver failed: %u, %s (%x, %x)", errno, strerror(errno));'), (15, 1, u'+            ck_assert_msg(ip.family == AF_INET6, "Expected family AF_INET6, got %u.", ip.family);'), (16, 1, u'+            ck_assert_msg(!memcmp(&ip.ip6, &in6addr_loopback, sizeof(IP6)), "Expected ::1, got %s.", ip_ntoa(&ip));'), (18, 1, u'+            ck_assert_msg(extra.family == AF_INET, "Expected family AF_INET, got %u.", extra.family);'), (19, 1, u'+            ck_assert_msg(extra.ip4.uint32 == htonl(0x7F000001), "Expected 127.0.0.1, got %s.", inet_ntoa(extra.ip4.in_addr));')]
===========================================
===========================================
Total add: 18
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        ck_assert_msg(extra.family == AF_INET, "Expected family AF_INET, got %u.", extra.family);'), (5, 2, u'-        ck_assert_msg(extra.ip4.uint32 == htonl(0x7F000001), "Expected 127.0.0.1, got %s.", inet_ntoa(extra.ip4.in_addr));'), (12, 1, u'+        ck_assert_msg(res > 0, "Resolver failed: %u, %s (%x, %x)", errno, strerror(errno));'), (15, 1, u'+            ck_assert_msg(ip.family == AF_INET6, "Expected family AF_INET6, got %u.", ip.family);'), (16, 1, u'+            ck_assert_msg(!memcmp(&ip.ip6, &in6addr_loopback, sizeof(IP6)), "Expected ::1, got %s.", ip_ntoa(&ip));'), (18, 1, u'+            ck_assert_msg(extra.family == AF_INET, "Expected family AF_INET, got %u.", extra.family);'), (19, 1, u'+            ck_assert_msg(extra.ip4.uint32 == htonl(0x7F000001), "Expected 127.0.0.1, got %s.", inet_ntoa(extra.ip4.in_addr));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        ck_assert_msg(extra.family == AF_INET, "Expected family AF_INET, got %u.", extra.family);'), (5, 2, u'-        ck_assert_msg(extra.ip4.uint32 == htonl(0x7F000001), "Expected 127.0.0.1, got %s.", inet_ntoa(extra.ip4.in_addr));'), (12, 1, u'+        ck_assert_msg(res > 0, "Resolver failed: %u, %s (%x, %x)", errno, strerror(errno));'), (15, 1, u'+            ck_assert_msg(ip.family == AF_INET6, "Expected family AF_INET6, got %u.", ip.family);'), (16, 1, u'+            ck_assert_msg(!memcmp(&ip.ip6, &in6addr_loopback, sizeof(IP6)), "Expected ::1, got %s.", ip_ntoa(&ip));'), (18, 1, u'+            ck_assert_msg(extra.family == AF_INET, "Expected family AF_INET, got %u.", extra.family);'), (19, 1, u'+            ck_assert_msg(extra.ip4.uint32 == htonl(0x7F000001), "Expected 127.0.0.1, got %s.", inet_ntoa(extra.ip4.in_addr));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((onion3 != NULL), "Onion failed initializing.");'), (8, 1, u'+    ck_assert_msg(ret == 0, "Failed to create/send onion data_request packet.");')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((onion3 != NULL), "Onion failed initializing.");'), (8, 1, u'+    ck_assert_msg(ret == 0, "Failed to create/send onion data_request packet.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((onion3 != NULL), "Onion failed initializing.");'), (8, 1, u'+    ck_assert_msg(ret == 0, "Failed to create/send onion data_request packet.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ck_assert_msg((onion1_a != NULL) && (onion2_a != NULL), "Onion_Announce failed initializing.");'), (11, 1, u'+    ck_assert_msg(ret == 0, "Failed to create/send onion announce_request packet.");')]
===========================================
===========================================
Total add: 26
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ck_assert_msg((onion1_a != NULL) && (onion2_a != NULL), "Onion_Announce failed initializing.");'), (11, 1, u'+    ck_assert_msg(ret == 0, "Failed to create/send onion announce_request packet.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ck_assert_msg((onion1_a != NULL) && (onion2_a != NULL), "Onion_Announce failed initializing.");'), (11, 1, u'+    ck_assert_msg(ret == 0, "Failed to create/send onion announce_request packet.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+    ck_assert_msg(memcmp(temp_name, "Gentoo", sizeof("Gentoo")) == 0, "Name not correct");')]
===========================================
===========================================
Total add: 37
Total del: 0
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+    ck_assert_msg(memcmp(temp_name, "Gentoo", sizeof("Gentoo")) == 0, "Name not correct");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+    ck_assert_msg(memcmp(temp_name, "Gentoo", sizeof("Gentoo")) == 0, "Name not correct");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt data");'), (27, 1, u'+    ck_assert_msg(m1plen == sizeof(m1), "decrypted text lengths differ");'), (28, 1, u'+    ck_assert_msg(memcmp(m1prime, m1, sizeof(m1)) == 0, "decrypted texts differ");')]
===========================================
===========================================
Total add: 30
Total del: 0
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt data");'), (27, 1, u'+    ck_assert_msg(m1plen == sizeof(m1), "decrypted text lengths differ");'), (28, 1, u'+    ck_assert_msg(memcmp(m1prime, m1, sizeof(m1)) == 0, "decrypted texts differ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt data");'), (27, 1, u'+    ck_assert_msg(m1plen == sizeof(m1), "decrypted text lengths differ");'), (28, 1, u'+    ck_assert_msg(memcmp(m1prime, m1, sizeof(m1)) == 0, "decrypted texts differ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Ubuntu", sizeof("Ubuntu")) == -1,'), (14, 1, u'+    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Gentoo", sizeof("Gentoo")) == 0,'), (18, 1, u'+    ck_assert_msg(memcmp(addr1, addr, FRIEND_ADDRESS_SIZE) == 0, "Didn\'t load messenger successfully");')]
===========================================
===========================================
Total add: 21
Total del: 0
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Ubuntu", sizeof("Ubuntu")) == -1,'), (14, 1, u'+    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Gentoo", sizeof("Gentoo")) == 0,'), (18, 1, u'+    ck_assert_msg(memcmp(addr1, addr, FRIEND_ADDRESS_SIZE) == 0, "Didn\'t load messenger successfully");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Ubuntu", sizeof("Ubuntu")) == -1,'), (14, 1, u'+    ck_assert_msg(messenger_load_encrypted(m_temp, buffer, size, "Gentoo", sizeof("Gentoo")) == 0,'), (18, 1, u'+    ck_assert_msg(memcmp(addr1, addr, FRIEND_ADDRESS_SIZE) == 0, "Didn\'t load messenger successfully");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    }ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);'), (5, 1, u'+    ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    }ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);'), (5, 1, u'+    ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    }ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);'), (5, 1, u'+    ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert_msg(sizeof(IP4) == 4, "sizeof(IP4): expected result 4, got %u.", sizeof(IP4));'), (5, 1, u'+    ck_assert_msg(sizeof(IP6) == 16, "sizeof(IP6): expected result 16, got %u.", sizeof(IP6));'), (6, 1, u'+    ck_assert_msg(sizeof(IP) == 20, "sizeof(IP): expected result 20, got %u.", sizeof(IP));'), (7, 1, u'+    ck_assert_msg(sizeof(IP_Port) == 24, "sizeof(IP_Port): expected result 24, got %u.", sizeof(IP_Port));'), (8, 1, u'+    ck_assert_msg(sizeof(IP4_Port) == 8, "sizeof(IP4_Port): expected result 8, got %u.", sizeof(IP4_Port));')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert_msg(sizeof(IP4) == 4, "sizeof(IP4): expected result 4, got %u.", sizeof(IP4));'), (5, 1, u'+    ck_assert_msg(sizeof(IP6) == 16, "sizeof(IP6): expected result 16, got %u.", sizeof(IP6));'), (6, 1, u'+    ck_assert_msg(sizeof(IP) == 20, "sizeof(IP): expected result 20, got %u.", sizeof(IP));'), (7, 1, u'+    ck_assert_msg(sizeof(IP_Port) == 24, "sizeof(IP_Port): expected result 24, got %u.", sizeof(IP_Port));'), (8, 1, u'+    ck_assert_msg(sizeof(IP4_Port) == 8, "sizeof(IP4_Port): expected result 8, got %u.", sizeof(IP4_Port));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert_msg(sizeof(IP4) == 4, "sizeof(IP4): expected result 4, got %u.", sizeof(IP4));'), (5, 1, u'+    ck_assert_msg(sizeof(IP6) == 16, "sizeof(IP6): expected result 16, got %u.", sizeof(IP6));'), (6, 1, u'+    ck_assert_msg(sizeof(IP) == 20, "sizeof(IP): expected result 20, got %u.", sizeof(IP));'), (7, 1, u'+    ck_assert_msg(sizeof(IP_Port) == 24, "sizeof(IP_Port): expected result 24, got %u.", sizeof(IP_Port));'), (8, 1, u'+    ck_assert_msg(sizeof(IP4_Port) == 8, "sizeof(IP4_Port): expected result 8, got %u.", sizeof(IP4_Port));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    ck_assert_msg(assoc != NULL, "failed to create default assoc");'), (43, 1, u'+        ck_assert_msg(res == 1, "failed to store entry: expected %u, got %u, j = %u", 1, res, j);'), (56, 1, u'+    ck_assert_msg(found == 8, "get_close_entries(): expected %u, got %u", 1, found);'), (62, 1, u'+    }ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);')]
===========================================
===========================================
Total add: 64
Total del: 0
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    ck_assert_msg(assoc != NULL, "failed to create default assoc");'), (43, 1, u'+        ck_assert_msg(res == 1, "failed to store entry: expected %u, got %u, j = %u", 1, res, j);'), (56, 1, u'+    ck_assert_msg(found == 8, "get_close_entries(): expected %u, got %u", 1, found);'), (62, 1, u'+    }ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    ck_assert_msg(assoc != NULL, "failed to create default assoc");'), (43, 1, u'+        ck_assert_msg(res == 1, "failed to store entry: expected %u, got %u, j = %u", 1, res, j);'), (56, 1, u'+    ck_assert_msg(found == 8, "get_close_entries(): expected %u, got %u", 1, found);'), (62, 1, u'+    }ck_assert_msg(good == 8, "Entries found were not the closest ones. Only %u/8 were.", good);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ck_assert_msg(assoc != NULL, "failed to create default assoc");'), (14, 1, u'+    ck_assert_msg(assoc != NULL, "failed to create customized assoc");'), (29, 1, u'+    ck_assert_msg(res == 0, "stored self as entry: expected %u, got %u", 0, res);'), (34, 1, u'+    ck_assert_msg(res == 1, "failed to store entry: expected %u, got %u", 1, res);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ck_assert_msg(found == 1, "get_close_entries(): expected %u, got %u", 1, found);')]
===========================================
===========================================
Total add: 8
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ck_assert_msg(found == 1, "get_close_entries(): expected %u, got %u", 1, found);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ck_assert_msg(found == 1, "get_close_entries(): expected %u, got %u", 1, found);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(retval != 0);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: hash_collide
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(retval != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert(retval != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),'), (4, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + crypto_box_MACBYTES * sizeof(unsigned char),')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),'), (4, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + crypto_box_MACBYTES * sizeof(unsigned char),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),'), (4, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + crypto_box_MACBYTES * sizeof(unsigned char),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),'), (4, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + crypto_box_MACBYTES * sizeof(unsigned char),')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),'), (4, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + crypto_box_MACBYTES * sizeof(unsigned char),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),'), (4, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + crypto_box_MACBYTES * sizeof(unsigned char),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(c1len == mlen + (int)ENCRYPTION_PADDING, "wrong cyphertext length");'), (3, 1, u'+        ck_assert_msg(c1len == mlen + (int)crypto_box_MACBYTES, "wrong cyphertext length");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(c1len == mlen + (int)ENCRYPTION_PADDING, "wrong cyphertext length");'), (3, 1, u'+        ck_assert_msg(c1len == mlen + (int)crypto_box_MACBYTES, "wrong cyphertext length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(c1len == mlen + (int)ENCRYPTION_PADDING, "wrong cyphertext length");'), (3, 1, u'+        ck_assert_msg(c1len == mlen + (int)crypto_box_MACBYTES, "wrong cyphertext length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt max size");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt max size");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + crypto_box_MACBYTES, "could not encrypt max size");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ck_assert_msg(buffer[i] == 0xCD, "Buffer underwritten from Messenger_save() @%u", i);'), (7, 2, u'-        ck_assert_msg(buffer[extra + size + i] == 0xCD, "Buffer overwritten from Messenger_save() @%u", i);'), (8, 1, u'+        ck_assert_msg(buffer[i] == 0xCD, "Buffer underwritten from messenger_save() @%u", i);'), (9, 1, u'+        ck_assert_msg(buffer[extra + size + i] == 0xCD, "Buffer overwritten from messenger_save() @%u", i);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ck_assert_msg(buffer[i] == 0xCD, "Buffer underwritten from Messenger_save() @%u", i);'), (7, 2, u'-        ck_assert_msg(buffer[extra + size + i] == 0xCD, "Buffer overwritten from Messenger_save() @%u", i);'), (8, 1, u'+        ck_assert_msg(buffer[i] == 0xCD, "Buffer underwritten from messenger_save() @%u", i);'), (9, 1, u'+        ck_assert_msg(buffer[extra + size + i] == 0xCD, "Buffer overwritten from messenger_save() @%u", i);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ck_assert_msg(buffer[i] == 0xCD, "Buffer underwritten from Messenger_save() @%u", i);'), (7, 2, u'-        ck_assert_msg(buffer[extra + size + i] == 0xCD, "Buffer overwritten from Messenger_save() @%u", i);'), (8, 1, u'+        ck_assert_msg(buffer[i] == 0xCD, "Buffer underwritten from messenger_save() @%u", i);'), (9, 1, u'+        ck_assert_msg(buffer[extra + size + i] == 0xCD, "Buffer overwritten from messenger_save() @%u", i);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+        assert(replace >= 0 && replace < length);')]
===========================================
===========================================
Total add: 59
Total del: 14
Header: replace_good
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+        assert(replace >= 0 && replace < length);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+        assert(replace >= 0 && replace < length);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(c1len == mlen + ENCRYPTION_PADDING, "wrong cyphertext length");'), (3, 1, u'+        ck_assert_msg(c1len == mlen + (int)ENCRYPTION_PADDING, "wrong cyphertext length");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(c1len == mlen + ENCRYPTION_PADDING, "wrong cyphertext length");'), (3, 1, u'+        ck_assert_msg(c1len == mlen + (int)ENCRYPTION_PADDING, "wrong cyphertext length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(c1len == mlen + ENCRYPTION_PADDING, "wrong cyphertext length");'), (3, 1, u'+        ck_assert_msg(c1len == mlen + (int)ENCRYPTION_PADDING, "wrong cyphertext length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ck_assert_msg((m_friendstatus(m, -1) == NOFRIEND),'), (7, 2, u'-    ck_assert_msg((m_friendstatus(m, REALLY_BIG_NUMBER) == NOFRIEND),'), (9, 1, u'+    ck_assert_msg((m_get_friend_connectionstatus(m, -1) == -1),'), (11, 1, u'+    ck_assert_msg((m_get_friend_connectionstatus(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
Total add: 15
Total del: 5
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ck_assert_msg((m_friendstatus(m, -1) == NOFRIEND),'), (7, 2, u'-    ck_assert_msg((m_friendstatus(m, REALLY_BIG_NUMBER) == NOFRIEND),'), (9, 1, u'+    ck_assert_msg((m_get_friend_connectionstatus(m, -1) == -1),'), (11, 1, u'+    ck_assert_msg((m_get_friend_connectionstatus(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ck_assert_msg((m_friendstatus(m, -1) == NOFRIEND),'), (7, 2, u'-    ck_assert_msg((m_friendstatus(m, REALLY_BIG_NUMBER) == NOFRIEND),'), (9, 1, u'+    ck_assert_msg((m_get_friend_connectionstatus(m, -1) == -1),'), (11, 1, u'+    ck_assert_msg((m_get_friend_connectionstatus(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert(getname(m, 0, &name_buf[0]) == 4);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert(getname(m, 0, &name_buf[0]) == 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert(getname(m, 0, &name_buf[0]) == 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((memcmp(nickname, nick_check, len) != 0),'), (3, 1, u'+    ck_assert_msg((memcmp(nickname, nick_check, len) == 0),')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((memcmp(nickname, nick_check, len) != 0),'), (3, 1, u'+    ck_assert_msg((memcmp(nickname, nick_check, len) == 0),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((memcmp(nickname, nick_check, len) != 0),'), (3, 1, u'+    ck_assert_msg((memcmp(nickname, nick_check, len) == 0),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((!STRINGS_EQUAL(nickname, nick_check)),'), (3, 1, u'+    ck_assert_msg((memcmp(nickname, nick_check, len) != 0),')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((!STRINGS_EQUAL(nickname, nick_check)),'), (3, 1, u'+    ck_assert_msg((memcmp(nickname, nick_check, len) != 0),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((!STRINGS_EQUAL(nickname, nick_check)),'), (3, 1, u'+    ck_assert_msg((memcmp(nickname, nick_check, len) != 0),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (3, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "could not encrypt max size");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert(getname(m, -1, name_buf) == -1);'), (5, 1, u'+    ck_assert(getname(m, REALLY_BIG_NUMBER, name_buf) == -1);'), (7, 2, u'-    assert(getname(-1, name_buf) == -1);'), (8, 2, u'-    assert(getname(REALLY_BIG_NUMBER, name_buf) == -1);'), (13, 2, u"-    assert(name_buf[MAX_NAME_LENGTH] == '\\0'); // something like this"), (14, 1, u'+    ck_assert(strcmp((char *)&name_buf[0], "foo") == 0);')]
===========================================
===========================================
Total add: 7
Total del: 5
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert(getname(m, -1, name_buf) == -1);'), (5, 1, u'+    ck_assert(getname(m, REALLY_BIG_NUMBER, name_buf) == -1);'), (7, 2, u'-    assert(getname(-1, name_buf) == -1);'), (8, 2, u'-    assert(getname(REALLY_BIG_NUMBER, name_buf) == -1);'), (13, 2, u"-    assert(name_buf[MAX_NAME_LENGTH] == '\\0'); // something like this"), (14, 1, u'+    ck_assert(strcmp((char *)&name_buf[0], "foo") == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ck_assert(getname(m, -1, name_buf) == -1);'), (5, 1, u'+    ck_assert(getname(m, REALLY_BIG_NUMBER, name_buf) == -1);'), (7, 2, u'-    assert(getname(-1, name_buf) == -1);'), (8, 2, u'-    assert(getname(REALLY_BIG_NUMBER, name_buf) == -1);'), (13, 2, u"-    assert(name_buf[MAX_NAME_LENGTH] == '\\0'); // something like this"), (14, 1, u'+    ck_assert(strcmp((char *)&name_buf[0], "foo") == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((m_set_statusmessage(m, (uint8_t *)status, bad_length) == -1),'), (12, 1, u'+    ck_assert_msg((m_set_statusmessage(m, (uint8_t *)status, good_length) == 0),')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((m_set_statusmessage(m, (uint8_t *)status, bad_length) == -1),'), (12, 1, u'+    ck_assert_msg((m_set_statusmessage(m, (uint8_t *)status, good_length) == 0),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((m_set_statusmessage(m, (uint8_t *)status, bad_length) == -1),'), (12, 1, u'+    ck_assert_msg((m_set_statusmessage(m, (uint8_t *)status, good_length) == 0),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((setname(m, (uint8_t *)good_name, bad_length) == -1),'), (10, 1, u'+    ck_assert_msg((setname(m, (uint8_t *)good_name, good_length) == 0),')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((setname(m, (uint8_t *)good_name, bad_length) == -1),'), (10, 1, u'+    ck_assert_msg((setname(m, (uint8_t *)good_name, good_length) == 0),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ck_assert_msg((setname(m, (uint8_t *)good_name, bad_length) == -1),'), (10, 1, u'+    ck_assert_msg((setname(m, (uint8_t *)good_name, good_length) == 0),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char), "cyphertext should be ENCRYPTION_PADDING bytes longer than plaintext");'), (3, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char), "cyphertext should be ENCRYPTION_PADDING bytes longer than plaintext");'), (3, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char), "cyphertext should be ENCRYPTION_PADDING bytes longer than plaintext");'), (3, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ck_assert_msg(clen == sizeof(c)/sizeof(unsigned char), "wrong ciphertext length");'), (7, 1, u'+    ck_assert_msg(clen == sizeof(c) / sizeof(unsigned char), "wrong ciphertext length");'), (13, 2, u'-    ck_assert_msg(mlen == sizeof(m)/sizeof(unsigned char), "wrong plaintext length");'), (14, 1, u'+    ck_assert_msg(mlen == sizeof(m) / sizeof(unsigned char), "wrong plaintext length");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ck_assert_msg(clen == sizeof(c)/sizeof(unsigned char), "wrong ciphertext length");'), (7, 1, u'+    ck_assert_msg(clen == sizeof(c) / sizeof(unsigned char), "wrong ciphertext length");'), (13, 2, u'-    ck_assert_msg(mlen == sizeof(m)/sizeof(unsigned char), "wrong plaintext length");'), (14, 1, u'+    ck_assert_msg(mlen == sizeof(m) / sizeof(unsigned char), "wrong plaintext length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ck_assert_msg(clen == sizeof(c)/sizeof(unsigned char), "wrong ciphertext length");'), (7, 1, u'+    ck_assert_msg(clen == sizeof(c) / sizeof(unsigned char), "wrong ciphertext length");'), (13, 2, u'-    ck_assert_msg(mlen == sizeof(m)/sizeof(unsigned char), "wrong plaintext length");'), (14, 1, u'+    ck_assert_msg(mlen == sizeof(m) / sizeof(unsigned char), "wrong plaintext length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char), "cyphertext should be ENCRYPTION_PADDING bytes longer than plaintext");'), (3, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char), "cyphertext should be ENCRYPTION_PADDING bytes longer than plaintext");'), (3, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char), "cyphertext should be ENCRYPTION_PADDING bytes longer than plaintext");'), (3, 1, u'+    ck_assert_msg(sizeof(c) == sizeof(m) + ENCRYPTION_PADDING * sizeof(unsigned char),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ck_assert_msg(clen == sizeof(c)/sizeof(unsigned char), "wrong ciphertext length");'), (7, 1, u'+    ck_assert_msg(clen == sizeof(c) / sizeof(unsigned char), "wrong ciphertext length");'), (13, 2, u'-    ck_assert_msg(mlen == sizeof(m)/sizeof(unsigned char), "wrong plaintext length");'), (15, 1, u'+    ck_assert_msg(mlen == sizeof(m) / sizeof(unsigned char), "wrong plaintext length");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ck_assert_msg(clen == sizeof(c)/sizeof(unsigned char), "wrong ciphertext length");'), (7, 1, u'+    ck_assert_msg(clen == sizeof(c) / sizeof(unsigned char), "wrong ciphertext length");'), (13, 2, u'-    ck_assert_msg(mlen == sizeof(m)/sizeof(unsigned char), "wrong plaintext length");'), (15, 1, u'+    ck_assert_msg(mlen == sizeof(m) / sizeof(unsigned char), "wrong plaintext length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ck_assert_msg(clen == sizeof(c)/sizeof(unsigned char), "wrong ciphertext length");'), (7, 1, u'+    ck_assert_msg(clen == sizeof(c) / sizeof(unsigned char), "wrong ciphertext length");'), (13, 2, u'-    ck_assert_msg(mlen == sizeof(m)/sizeof(unsigned char), "wrong plaintext length");'), (15, 1, u'+    ck_assert_msg(mlen == sizeof(m) / sizeof(unsigned char), "wrong plaintext length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(memcmp(c1, c2, c1len) == 0 && memcmp(c1, c3, c1len) == 0 && memcmp(c1, c4, c1len) == 0, "crypertexts differ");'), (3, 1, u'+        ck_assert_msg(memcmp(c1, c2, c1len) == 0 && memcmp(c1, c3, c1len) == 0')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(memcmp(c1, c2, c1len) == 0 && memcmp(c1, c3, c1len) == 0 && memcmp(c1, c4, c1len) == 0, "crypertexts differ");'), (3, 1, u'+        ck_assert_msg(memcmp(c1, c2, c1len) == 0 && memcmp(c1, c3, c1len) == 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(memcmp(c1, c2, c1len) == 0 && memcmp(c1, c3, c1len) == 0 && memcmp(c1, c4, c1len) == 0, "crypertexts differ");'), (3, 1, u'+        ck_assert_msg(memcmp(c1, c2, c1len) == 0 && memcmp(c1, c3, c1len) == 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(memcmp(m1, m2, mlen) == 0 && memcmp(m1, m3, mlen) == 0 && memcmp(m1, m4, mlen) == 0, "decrypted texts differ");'), (3, 1, u'+        ck_assert_msg(memcmp(m1, m2, mlen) == 0 && memcmp(m1, m3, mlen) == 0')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(memcmp(m1, m2, mlen) == 0 && memcmp(m1, m3, mlen) == 0 && memcmp(m1, m4, mlen) == 0, "decrypted texts differ");'), (3, 1, u'+        ck_assert_msg(memcmp(m1, m2, mlen) == 0 && memcmp(m1, m3, mlen) == 0')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ck_assert_msg(memcmp(m1, m2, mlen) == 0 && memcmp(m1, m3, mlen) == 0 && memcmp(m1, m4, mlen) == 0, "decrypted texts differ");'), (3, 1, u'+        ck_assert_msg(memcmp(m1, m2, mlen) == 0 && memcmp(m1, m3, mlen) == 0')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (30, 1, u'+    ck_assert_msg(c2len == -1, "incorrectly succeeded encrypting massive size");'), (34, 1, u'+    ck_assert_msg(m1plen == sizeof(m1), "decrypted text lengths differ");'), (35, 1, u'+    ck_assert_msg(memcmp(m1prime, m1, sizeof(m1)) == 0, "decrypted texts differ");')]
===========================================
===========================================
Total add: 37
Total del: 0
Header: END_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (30, 1, u'+    ck_assert_msg(c2len == -1, "incorrectly succeeded encrypting massive size");'), (34, 1, u'+    ck_assert_msg(m1plen == sizeof(m1), "decrypted text lengths differ");'), (35, 1, u'+    ck_assert_msg(memcmp(m1prime, m1, sizeof(m1)) == 0, "decrypted texts differ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    ck_assert_msg(c1len == sizeof(m1) + ENCRYPTION_PADDING, "Could not encrypt max size");'), (30, 1, u'+    ck_assert_msg(c2len == -1, "incorrectly succeeded encrypting massive size");'), (34, 1, u'+    ck_assert_msg(m1plen == sizeof(m1), "decrypted text lengths differ");'), (35, 1, u'+    ck_assert_msg(memcmp(m1prime, m1, sizeof(m1)) == 0, "decrypted texts differ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert(m_sendmessage(-1, (uint8_t *)message, good_len) == 0);'), (3, 2, u'-    ck_assert(m_sendmessage(REALLY_BIG_NUMBER, (uint8_t *)message, good_len) == 0);'), (4, 2, u'-    ck_assert(m_sendmessage(17, (uint8_t *)message, good_len) == 0);'), (5, 2, u'-    ck_assert(m_sendmessage(friend_id_num, (uint8_t *)message, bad_len) == 0);'), (6, 1, u'+    ck_assert(m_sendmessage(m, -1, (uint8_t *)message, good_len) == 0);'), (7, 1, u'+    ck_assert(m_sendmessage(m, REALLY_BIG_NUMBER, (uint8_t *)message, good_len) == 0);'), (8, 1, u'+    ck_assert(m_sendmessage(m, 17, (uint8_t *)message, good_len) == 0);'), (9, 1, u'+    ck_assert(m_sendmessage(m, friend_id_num, (uint8_t *)message, bad_len) == 0);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert(m_sendmessage(-1, (uint8_t *)message, good_len) == 0);'), (3, 2, u'-    ck_assert(m_sendmessage(REALLY_BIG_NUMBER, (uint8_t *)message, good_len) == 0);'), (4, 2, u'-    ck_assert(m_sendmessage(17, (uint8_t *)message, good_len) == 0);'), (5, 2, u'-    ck_assert(m_sendmessage(friend_id_num, (uint8_t *)message, bad_len) == 0);'), (6, 1, u'+    ck_assert(m_sendmessage(m, -1, (uint8_t *)message, good_len) == 0);'), (7, 1, u'+    ck_assert(m_sendmessage(m, REALLY_BIG_NUMBER, (uint8_t *)message, good_len) == 0);'), (8, 1, u'+    ck_assert(m_sendmessage(m, 17, (uint8_t *)message, good_len) == 0);'), (9, 1, u'+    ck_assert(m_sendmessage(m, friend_id_num, (uint8_t *)message, bad_len) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert(m_sendmessage(-1, (uint8_t *)message, good_len) == 0);'), (3, 2, u'-    ck_assert(m_sendmessage(REALLY_BIG_NUMBER, (uint8_t *)message, good_len) == 0);'), (4, 2, u'-    ck_assert(m_sendmessage(17, (uint8_t *)message, good_len) == 0);'), (5, 2, u'-    ck_assert(m_sendmessage(friend_id_num, (uint8_t *)message, bad_len) == 0);'), (6, 1, u'+    ck_assert(m_sendmessage(m, -1, (uint8_t *)message, good_len) == 0);'), (7, 1, u'+    ck_assert(m_sendmessage(m, REALLY_BIG_NUMBER, (uint8_t *)message, good_len) == 0);'), (8, 1, u'+    ck_assert(m_sendmessage(m, 17, (uint8_t *)message, good_len) == 0);'), (9, 1, u'+    ck_assert(m_sendmessage(m, friend_id_num, (uint8_t *)message, bad_len) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_get_statusmessage_size(-1) == -1),'), (3, 1, u'+    ck_assert_msg((m_get_statusmessage_size(m, -1) == -1),'), (5, 2, u'-    ck_assert_msg((m_get_statusmessage_size(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_get_statusmessage_size(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_get_statusmessage_size(-1) == -1),'), (3, 1, u'+    ck_assert_msg((m_get_statusmessage_size(m, -1) == -1),'), (5, 2, u'-    ck_assert_msg((m_get_statusmessage_size(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_get_statusmessage_size(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_get_statusmessage_size(-1) == -1),'), (3, 1, u'+    ck_assert_msg((m_get_statusmessage_size(m, -1) == -1),'), (5, 2, u'-    ck_assert_msg((m_get_statusmessage_size(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_get_statusmessage_size(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_friendstatus(-1) == NOFRIEND),'), (3, 1, u'+    ck_assert_msg((m_friendstatus(m, -1) == NOFRIEND),'), (5, 2, u'-    ck_assert_msg((m_friendstatus(REALLY_BIG_NUMBER) == NOFRIEND),'), (6, 1, u'+    ck_assert_msg((m_friendstatus(m, REALLY_BIG_NUMBER) == NOFRIEND),')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_friendstatus(-1) == NOFRIEND),'), (3, 1, u'+    ck_assert_msg((m_friendstatus(m, -1) == NOFRIEND),'), (5, 2, u'-    ck_assert_msg((m_friendstatus(REALLY_BIG_NUMBER) == NOFRIEND),'), (6, 1, u'+    ck_assert_msg((m_friendstatus(m, REALLY_BIG_NUMBER) == NOFRIEND),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_friendstatus(-1) == NOFRIEND),'), (3, 1, u'+    ck_assert_msg((m_friendstatus(m, -1) == NOFRIEND),'), (5, 2, u'-    ck_assert_msg((m_friendstatus(REALLY_BIG_NUMBER) == NOFRIEND),'), (6, 1, u'+    ck_assert_msg((m_friendstatus(m, REALLY_BIG_NUMBER) == NOFRIEND),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_delfriend(-1) == -1),'), (3, 1, u'+    ck_assert_msg((m_delfriend(m, -1) == -1),'), (5, 2, u'-    ck_assert_msg((m_delfriend(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_delfriend(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_delfriend(-1) == -1),'), (3, 1, u'+    ck_assert_msg((m_delfriend(m, -1) == -1),'), (5, 2, u'-    ck_assert_msg((m_delfriend(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_delfriend(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_delfriend(-1) == -1),'), (3, 1, u'+    ck_assert_msg((m_delfriend(m, -1) == -1),'), (5, 2, u'-    ck_assert_msg((m_delfriend(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_delfriend(m, REALLY_BIG_NUMBER) == -1),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_get_userstatus_size(-1) == -1),'), (4, 2, u'-    ck_assert_msg((m_get_userstatus_size(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_get_statusmessage_size(-1) == -1),'), (8, 1, u'+    ck_assert_msg((m_get_statusmessage_size(REALLY_BIG_NUMBER) == -1),'), (15, 2, u'-    ck_assert_msg((rc > 0 && rc <= MAX_USERSTATUS_LENGTH),'), (17, 1, u'+    ck_assert_msg((rc > 0 && rc <= MAX_STATUSMESSAGE_LENGTH),')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: START_TEST
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_get_userstatus_size(-1) == -1),'), (4, 2, u'-    ck_assert_msg((m_get_userstatus_size(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_get_statusmessage_size(-1) == -1),'), (8, 1, u'+    ck_assert_msg((m_get_statusmessage_size(REALLY_BIG_NUMBER) == -1),'), (15, 2, u'-    ck_assert_msg((rc > 0 && rc <= MAX_USERSTATUS_LENGTH),'), (17, 1, u'+    ck_assert_msg((rc > 0 && rc <= MAX_STATUSMESSAGE_LENGTH),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ck_assert_msg((m_get_userstatus_size(-1) == -1),'), (4, 2, u'-    ck_assert_msg((m_get_userstatus_size(REALLY_BIG_NUMBER) == -1),'), (6, 1, u'+    ck_assert_msg((m_get_statusmessage_size(-1) == -1),'), (8, 1, u'+    ck_assert_msg((m_get_statusmessage_size(REALLY_BIG_NUMBER) == -1),'), (15, 2, u'-    ck_assert_msg((rc > 0 && rc <= MAX_USERSTATUS_LENGTH),'), (17, 1, u'+    ck_assert_msg((rc > 0 && rc <= MAX_STATUSMESSAGE_LENGTH),')]
===========================================
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
1420
Mismatch count:1405
Normal count:16091
