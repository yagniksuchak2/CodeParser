projects/top_C/redis
Going to process projects/top_C/redis/all_log.txt 
---------- redis ------------

===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
Total add: 47
Total del: 0
Header: _dictInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);'), (5, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);'), (5, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);'), (5, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_sptr != NULL);'), (13, 1, u'+        redisAssert(l_sptr != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: zzlLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_sptr != NULL);'), (13, 1, u'+        redisAssert(l_sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_sptr != NULL);'), (13, 1, u'+        redisAssert(l_sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_eptr != NULL);'), (13, 1, u'+        redisAssert(l_eptr != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: zzlNext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_eptr != NULL);'), (13, 1, u'+        redisAssert(l_eptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_eptr != NULL);'), (13, 1, u'+        redisAssert(l_eptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(!c->err);')]
===========================================
===========================================
Total add: 30
Total del: 0
Header: cliSendCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(!c->err);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(!c->err);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(retval == DICT_OK);'), (8, 1, u'+        redisAssert(retval1 == DICT_OK && retval2 == DICT_OK);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: populateCommandTable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(retval == DICT_OK);'), (8, 1, u'+        redisAssert(retval1 == DICT_OK && retval2 == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(retval == DICT_OK);'), (8, 1, u'+        redisAssert(retval1 == DICT_OK && retval2 == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: assert(0);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: commoncases
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
Total add: 47
Total del: 0
Header: _dictInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);'), (5, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);'), (5, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);'), (5, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_sptr != NULL);'), (13, 1, u'+        redisAssert(l_sptr != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: zzlLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_sptr != NULL);'), (13, 1, u'+        redisAssert(l_sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_sptr != NULL);'), (13, 1, u'+        redisAssert(l_sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_eptr != NULL);'), (13, 1, u'+        redisAssert(l_eptr != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: zzlNext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_eptr != NULL);'), (13, 1, u'+        redisAssert(l_eptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(_eptr != NULL);'), (13, 1, u'+        redisAssert(l_eptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssertWithInfo(c,NULL,c->bpop.keys != NULL);'), (7, 1, u'+    redisAssertWithInfo(c,NULL,dictSize(c->bpop.keys) != 0);'), (16, 2, u'-        redisAssertWithInfo(c,c->bpop.keys[j],de != NULL);'), (19, 1, u'+        redisAssertWithInfo(c,key,l != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 6
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssertWithInfo(c,NULL,c->bpop.keys != NULL);'), (7, 1, u'+    redisAssertWithInfo(c,NULL,dictSize(c->bpop.keys) != 0);'), (16, 2, u'-        redisAssertWithInfo(c,c->bpop.keys[j],de != NULL);'), (19, 1, u'+        redisAssertWithInfo(c,key,l != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssertWithInfo(c,NULL,c->bpop.keys != NULL);'), (7, 1, u'+    redisAssertWithInfo(c,NULL,dictSize(c->bpop.keys) != 0);'), (16, 2, u'-        redisAssertWithInfo(c,c->bpop.keys[j],de != NULL);'), (19, 1, u'+        redisAssertWithInfo(c,key,l != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((a->bits & CHUNK_MAP_KEY) == CHUNK_MAP_KEY || (a->bits &')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: arena_avail_comp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((a->bits & CHUNK_MAP_KEY) == CHUNK_MAP_KEY || (a->bits &')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((a->bits & CHUNK_MAP_KEY) == CHUNK_MAP_KEY || (a->bits &')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert(chunk->ndirty == 0 || all == false);'), (12, 1, u'+\tassert(chunk->nruns_adjac == 0);')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert(chunk->ndirty == 0 || all == false);'), (12, 1, u'+\tassert(chunk->nruns_adjac == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tassert(chunk->ndirty == 0 || all == false);'), (12, 1, u'+\tassert(chunk->nruns_adjac == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(ndirty >= npages);')]
===========================================
===========================================
Total add: 24
Total del: 9
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(ndirty >= npages);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(ndirty >= npages);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ndirty == 0);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ndirty == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ndirty == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t    assert(chunk->dirtied);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t    assert(chunk->dirtied);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t    assert(chunk->dirtied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
Total add: 10
Total del: 4
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(npurgatory >= arena->nactive >> opt_lg_dirty_mult);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(npurgeable != 0);')]
===========================================
===========================================
Total add: 7
Total del: 15
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(npurgeable != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(npurgeable != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(chunk != NULL);'), (5, 1, u'+\tassert(CHUNK_ADDR2BASE(chunk) == chunk);'), (6, 1, u'+\tassert(size != 0);'), (7, 1, u'+\tassert((size & chunksize_mask) == 0);')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: chunk_record
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(chunk != NULL);'), (5, 1, u'+\tassert(CHUNK_ADDR2BASE(chunk) == chunk);'), (6, 1, u'+\tassert(size != 0);'), (7, 1, u'+\tassert((size & chunksize_mask) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(chunk != NULL);'), (5, 1, u'+\tassert(CHUNK_ADDR2BASE(chunk) == chunk);'), (6, 1, u'+\tassert(size != 0);'), (7, 1, u'+\tassert((size & chunksize_mask) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(stats_chunks.curchunks >= (size / chunksize));')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: chunk_dealloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(stats_chunks.curchunks >= (size / chunksize));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(stats_chunks.curchunks >= (size / chunksize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(narenas_auto == narenas_total_get());')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: ctl_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(narenas_auto == narenas_total_get());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(narenas_auto == narenas_total_get());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\tassert(arena < narenas);')]
===========================================
===========================================
Total add: 27
Total del: 21
Header: arenas_purge_ctl
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\tassert(arena < narenas);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\tassert(arena < narenas);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert(opt_zero == false);')]
===========================================
===========================================
Total add: 16
Total del: 0
Header: malloc_conf_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert(opt_zero == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert(opt_zero == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\tassert(zero_pad == false);')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: malloc_vsnprintf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\tassert(zero_pad == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\tassert(zero_pad == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+            redisAssertWithInfo(c,sortval,ln != NULL);')]
===========================================
===========================================
Total add: 42
Total del: 0
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+            redisAssertWithInfo(c,sortval,ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+            redisAssertWithInfo(c,sortval,ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    redisAssert(master->flags & SRI_MASTER);'), (11, 1, u'+    redisAssert(state == SENTINEL_FAILOVER_STATE_WAIT_START ||')]
===========================================
===========================================
Total add: 29
Total del: 0
Header: *sentinelGetObjectiveLeader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    redisAssert(master->flags & SRI_MASTER);'), (11, 1, u'+    redisAssert(state == SENTINEL_FAILOVER_STATE_WAIT_START ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    redisAssert(master->flags & SRI_MASTER);'), (11, 1, u'+    redisAssert(state == SENTINEL_FAILOVER_STATE_WAIT_START ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+        redisAssert(listLength(sentinel.scripts_queue) <=')]
===========================================
===========================================
Total add: 249
Total del: 2
Header: sentinelEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+        redisAssert(listLength(sentinel.scripts_queue) <=')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+        redisAssert(listLength(sentinel.scripts_queue) <=')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    redisAssert(ri->flags & SRI_FAILOVER_IN_PROGRESS);')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: sentinelAbortFailoverIfNeeded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    redisAssert(ri->flags & SRI_FAILOVER_IN_PROGRESS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    redisAssert(ri->flags & SRI_FAILOVER_IN_PROGRESS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    redisAssert(retval == DICT_OK);'), (15, 2, u'-    redisAssert(new != NULL);')]
===========================================
===========================================
Total add: 8
Total del: 24
Header: sentinelFailoverReconfNextSlave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    redisAssert(retval == DICT_OK);'), (15, 2, u'-    redisAssert(new != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    redisAssert(retval == DICT_OK);'), (15, 2, u'-    redisAssert(new != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Total add: 16
Total del: 1
Header: sentinelRefreshInstanceInfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+            redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 1, u'+            redisAssert(retval == DICT_OK);'), (96, 1, u'+        redisAssert(dictSize(d) == size);')]
===========================================
===========================================
Total add: 144
Total del: 0
Header: spopCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 1, u'+            redisAssert(retval == DICT_OK);'), (96, 1, u'+        redisAssert(dictSize(d) == size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 1, u'+            redisAssert(retval == DICT_OK);'), (96, 1, u'+        redisAssert(dictSize(d) == size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+    redisAssert(dictAdd(c->db->ready_keys,key,NULL) == DICT_OK);'), (66, 2, u'-        redisAssertWithInfo(c,key,ln != NULL);')]
===========================================
===========================================
Total add: 180
Total del: 56
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+    redisAssert(dictAdd(c->db->ready_keys,key,NULL) == DICT_OK);'), (66, 2, u'-        redisAssertWithInfo(c,key,ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+    redisAssert(dictAdd(c->db->ready_keys,key,NULL) == DICT_OK);'), (66, 2, u'-        redisAssertWithInfo(c,key,ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.repl_state == REDIS_REPL_CONNECTING);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_CONNECTING ||')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: undoConnectWithMaster
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.repl_state == REDIS_REPL_CONNECTING);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_CONNECTING ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.repl_state == REDIS_REPL_CONNECTING);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_CONNECTING ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(c->flags & REDIS_SUBSCRIBED);'), (6, 1, u'+            assert((c->flags & REDIS_SUBSCRIBED || c->flags & REDIS_MONITORING));')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: redisProcessCallbacks
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(c->flags & REDIS_SUBSCRIBED);'), (6, 1, u'+            assert((c->flags & REDIS_SUBSCRIBED || c->flags & REDIS_MONITORING));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(c->flags & REDIS_SUBSCRIBED);'), (6, 1, u'+            assert((c->flags & REDIS_SUBSCRIBED || c->flags & REDIS_MONITORING));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        assert(memcmp(&e[i], &_e, sizeof(zlentry)) == 0);')]
===========================================
===========================================
Total add: 16
Total del: 0
Header: randstring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        assert(memcmp(&e[i], &_e, sizeof(zlentry)) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        assert(memcmp(&e[i], &_e, sizeof(zlentry)) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(e[0].prevrawlensize == 1);'), (24, 1, u'+        assert(e[1].prevrawlensize == 5);'), (25, 1, u'+        assert(e[2].prevrawlensize == 1);'), (33, 1, u'+        assert(e[0].prevrawlensize == 1);'), (34, 1, u'+        assert(e[1].prevrawlensize == 5);')]
===========================================
===========================================
Total add: 37
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(e[0].prevrawlensize == 1);'), (24, 1, u'+        assert(e[1].prevrawlensize == 5);'), (25, 1, u'+        assert(e[2].prevrawlensize == 1);'), (33, 1, u'+        assert(e[0].prevrawlensize == 1);'), (34, 1, u'+        assert(e[1].prevrawlensize == 5);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(e[0].prevrawlensize == 1);'), (24, 1, u'+        assert(e[1].prevrawlensize == 5);'), (25, 1, u'+        assert(e[2].prevrawlensize == 1);'), (33, 1, u'+        assert(e[0].prevrawlensize == 1);'), (34, 1, u'+        assert(e[1].prevrawlensize == 5);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(c->reply_bytes < ULONG_MAX-(1024*64));')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: checkClientOutputBufferLimits
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(c->reply_bytes < ULONG_MAX-(1024*64));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(c->reply_bytes < ULONG_MAX-(1024*64));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ret == DICT_OK);'), (6, 1, u'+                redisAssert(ret == DICT_OK);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: hashTypeConvertZiplist
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ret == DICT_OK);'), (6, 1, u'+                redisAssert(ret == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ret == DICT_OK);'), (6, 1, u'+                redisAssert(ret == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: arena_run_reg_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (28, 2, u'-\tassert((chunk->map[run_ind+total_pages-1-map_bias].bits &'), (33, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind+total_pages-1) ==')]
===========================================
===========================================
Total add: 12
Total del: 14
Header: static void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (28, 2, u'-\tassert((chunk->map[run_ind+total_pages-1-map_bias].bits &'), (33, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind+total_pages-1) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tassert((large && binind == BININD_INVALID) || (large == false && binind'), (28, 2, u'-\tassert((chunk->map[run_ind+total_pages-1-map_bias].bits &'), (33, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind+total_pages-1) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (3, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (4, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (6, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (8, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Total add: 10
Total del: 1
Header: arena_chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (3, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (4, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (6, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (8, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (3, 1, u'+\t\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (4, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (6, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (8, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & ~PAGE_MASK) == arena_maxclass);'), (3, 2, u'-\t\tassert((chunk->map[chunk_npages-1-map_bias].bits & ~PAGE_MASK)'), (5, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) ==')]
===========================================
===========================================
Total add: 2
Total del: 7
Header: arena_chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & ~PAGE_MASK) == arena_maxclass);'), (3, 2, u'-\t\tassert((chunk->map[chunk_npages-1-map_bias].bits & ~PAGE_MASK)'), (5, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & ~PAGE_MASK) == arena_maxclass);'), (3, 2, u'-\t\tassert((chunk->map[chunk_npages-1-map_bias].bits & ~PAGE_MASK)'), (5, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\t\tassert(chunk->map[i-map_bias].bits == unzeroed);'), (11, 1, u'+\t\t\t\tassert(arena_mapbits_unzeroed_get(chunk, i) ==')]
===========================================
===========================================
Total add: 8
Total del: 9
Header: arena_chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\t\tassert(chunk->map[i-map_bias].bits == unzeroed);'), (11, 1, u'+\t\t\t\tassert(arena_mapbits_unzeroed_get(chunk, i) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\t\tassert(chunk->map[i-map_bias].bits == unzeroed);'), (11, 1, u'+\t\t\t\tassert(arena_mapbits_unzeroed_get(chunk, i) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (3, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (4, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (6, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (8, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: arena_chunk_dealloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (3, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (4, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (6, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (8, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, map_bias) == 0);'), (3, 1, u'+\tassert(arena_mapbits_allocated_get(chunk, chunk_npages-1) == 0);'), (4, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, map_bias) =='), (6, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, chunk_npages-1) =='), (8, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, map_bias) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= arena_maxclass);'), (3, 2, u'-\tassert((size & PAGE_MASK) == 0);')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: arena_run_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= arena_maxclass);'), (3, 2, u'-\tassert((size & PAGE_MASK) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(size <= arena_maxclass);'), (3, 2, u'-\tassert((size & PAGE_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) != 0);'), (3, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (4, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) != 0);'), (3, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (4, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[0].bits & CHUNK_MAP_DIRTY) != 0);'), (3, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, map_bias) != 0);'), (4, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, chunk_npages-1) != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\t\tassert(arena_mapbits_dirty_get(chunk, pageind) ==')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\t\tassert(arena_mapbits_dirty_get(chunk, pageind) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\t\tassert(arena_mapbits_dirty_get(chunk, pageind) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\t\t\tassert((mapelm->bits >> PAGE_SHIFT) == 0);'), (14, 2, u'-\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (22, 1, u'+\t\t\t\tassert(arena_mapbits_small_runind_get(chunk,')]
===========================================
===========================================
Total add: 12
Total del: 11
Header: arena_chunk_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\t\t\tassert((mapelm->bits >> PAGE_SHIFT) == 0);'), (14, 2, u'-\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (22, 1, u'+\t\t\t\tassert(arena_mapbits_small_runind_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\t\t\tassert((mapelm->bits >> PAGE_SHIFT) == 0);'), (14, 2, u'-\t\t\t\tdassert(run->magic == ARENA_RUN_MAGIC);'), (22, 1, u'+\t\t\t\tassert(arena_mapbits_small_runind_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t    assert(chunk->dirtied);'), (11, 1, u'+\t\t    assert(chunk->dirtied);'), (14, 1, u'+\t\tassert(ndirty == arena->ndirty);'), (16, 2, u'-\tassert(ndirty == arena->ndirty);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t    assert(chunk->dirtied);'), (11, 1, u'+\t\t    assert(chunk->dirtied);'), (14, 1, u'+\t\tassert(ndirty == arena->ndirty);'), (16, 2, u'-\tassert(ndirty == arena->ndirty);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t    assert(chunk->dirtied);'), (11, 1, u'+\t\t    assert(chunk->dirtied);'), (14, 1, u'+\t\tassert(ndirty == arena->ndirty);'), (16, 2, u'-\tassert(ndirty == arena->ndirty);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(size == PAGE_SIZE ||'), (17, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (19, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (23, 1, u'+\t\tassert(size == PAGE ||')]
===========================================
===========================================
Total add: 6
Total del: 14
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(size == PAGE_SIZE ||'), (17, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (19, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (23, 1, u'+\t\tassert(size == PAGE ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(size == PAGE_SIZE ||'), (17, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (19, 2, u'-\t\tassert((chunk->map[run_ind+(size>>PAGE_SHIFT)-1-map_bias].bits &'), (23, 1, u'+\t\tassert(size == PAGE ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (4, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (6, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (8, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (10, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Total add: 5
Total del: 7
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (4, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (6, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (8, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (10, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (4, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (6, 2, u'-\t\tassert((chunk->map[run_ind+run_pages+nrun_pages-1-map_bias].bits'), (8, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk,'), (10, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK)'), (4, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_ALLOCATED)'), (6, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY)'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, run_ind) == flag_dirty);')]
===========================================
===========================================
Total add: 5
Total del: 8
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK)'), (4, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_ALLOCATED)'), (6, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY)'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, run_ind) == flag_dirty);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK)'), (4, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_ALLOCATED)'), (6, 2, u'-\t\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY)'), (10, 1, u'+\t\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (12, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk, run_ind) == flag_dirty);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK) =='), (4, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY) =='), (7, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (9, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK) =='), (4, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY) =='), (7, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (9, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & ~PAGE_MASK) =='), (4, 2, u'-\tassert((chunk->map[run_ind-map_bias].bits & CHUNK_MAP_DIRTY) =='), (7, 1, u'+\tassert(arena_mapbits_unallocated_size_get(chunk, run_ind) =='), (9, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) ==')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\t\tassert(run_ind == map_bias);'), (12, 1, u'+\t\tassert(run_pages == (arena_maxclass >> LG_PAGE));')]
===========================================
===========================================
Total add: 5
Total del: 7
Header: arena_run_dalloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\t\tassert(run_ind == map_bias);'), (12, 1, u'+\t\tassert(run_pages == (arena_maxclass >> LG_PAGE));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\t\tassert(run_ind == map_bias);'), (12, 1, u'+\t\tassert(run_pages == (arena_maxclass >> LG_PAGE));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (14, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (16, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (18, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (20, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (22, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (28, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (30, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Total add: 12
Total del: 24
Header: arena_run_trim_head
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (14, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (16, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (18, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (20, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (22, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (28, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (30, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (14, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (16, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (18, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (20, 2, u'-\t\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias]'), (22, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (28, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (30, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (11, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (13, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (15, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (24, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (30, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (32, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Total add: 13
Total del: 22
Header: arena_run_trim_tail
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (11, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (13, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (15, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (24, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (30, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (32, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_LARGE) != 0);'), (3, 2, u'-\tassert((chunk->map[pageind-map_bias].bits & CHUNK_MAP_ALLOCATED) != 0);'), (11, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (13, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (15, 2, u'-\tassert((chunk->map[pageind+head_npages+tail_npages-1-map_bias].bits &'), (24, 1, u'+\tassert(arena_mapbits_large_size_get(chunk, pageind) == oldsize);'), (30, 1, u'+\t\tassert(arena_mapbits_large_size_get(chunk,'), (32, 1, u'+\t\tassert(arena_mapbits_dirty_get(chunk,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: arena_bin_malloc_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(bin->runcur->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: arena_prof_accum
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(binind < nbins);'), (3, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: arena_malloc_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(binind < nbins);'), (3, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(binind < nbins);'), (3, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert((offset & PAGE_MASK) == 0);'), (8, 2, u'-\tassert(offset < alloc_size);'), (24, 2, u'-\t\t\tassert(trailsize < alloc_size);'), (30, 1, u'+\tassert(alloc_size >= leadsize + size);')]
===========================================
===========================================
Total add: 21
Total del: 38
Header: arena_palloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert((offset & PAGE_MASK) == 0);'), (8, 2, u'-\tassert(offset < alloc_size);'), (24, 2, u'-\t\t\tassert(trailsize < alloc_size);'), (30, 1, u'+\tassert(alloc_size >= leadsize + size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert((offset & PAGE_MASK) == 0);'), (8, 2, u'-\tassert(offset < alloc_size);'), (24, 2, u'-\t\t\tassert(trailsize < alloc_size);'), (30, 1, u'+\tassert(alloc_size >= leadsize + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(isalloc(ptr) == PAGE_SIZE);'), (6, 2, u'-\tassert(size <= small_maxclass);'), (7, 1, u'+\tassert(isalloc(ptr, false) == PAGE);'), (8, 1, u'+\tassert(isalloc(ptr, true) == PAGE);'), (9, 1, u'+\tassert(size <= SMALL_MAXCLASS);'), (15, 2, u'-\tassert(binind < nbins);')]
===========================================
===========================================
Total add: 9
Total del: 47
Header: arena_prof_promoted
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(isalloc(ptr) == PAGE_SIZE);'), (6, 2, u'-\tassert(size <= small_maxclass);'), (7, 1, u'+\tassert(isalloc(ptr, false) == PAGE);'), (8, 1, u'+\tassert(isalloc(ptr, true) == PAGE);'), (9, 1, u'+\tassert(size <= SMALL_MAXCLASS);'), (15, 2, u'-\tassert(binind < nbins);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(isalloc(ptr) == PAGE_SIZE);'), (6, 2, u'-\tassert(size <= small_maxclass);'), (7, 1, u'+\tassert(isalloc(ptr, false) == PAGE);'), (8, 1, u'+\tassert(isalloc(ptr, true) == PAGE);'), (9, 1, u'+\tassert(size <= SMALL_MAXCLASS);'), (15, 2, u'-\tassert(binind < nbins);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena_run_tree_search(&bin->runs, &chunk->map['), (4, 1, u'+\tassert(arena_run_tree_search(&bin->runs,')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: arena_dalloc_bin_run
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena_run_tree_search(&bin->runs, &chunk->map['), (4, 1, u'+\tassert(arena_run_tree_search(&bin->runs,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena_run_tree_search(&bin->runs, &chunk->map['), (4, 1, u'+\tassert(arena_run_tree_search(&bin->runs,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (21, 1, u'+\t\tassert(npages > 0);')]
===========================================
===========================================
Total add: 10
Total del: 17
Header: arena_dalloc_bin_run
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (21, 1, u'+\t\tassert(npages > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\tassert(arena_mapbits_dirty_get(chunk, run_ind) =='), (21, 1, u'+\t\tassert(npages > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\tassert(arena_run_tree_search(&bin->runs, run_mapelm) == NULL);')]
===========================================
===========================================
Total add: 10
Total del: 25
Header: arena_bin_lower_run
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\tassert(arena_run_tree_search(&bin->runs, run_mapelm) == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\tassert(arena_run_tree_search(&bin->runs, run_mapelm) == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Total add: 10
Total del: 15
Header: arena_dalloc_bin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tdassert(run->magic == ARENA_RUN_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(oldsize == (chunk->map[pageind-map_bias].bits & ~PAGE_MASK));'), (9, 1, u'+\tassert(oldsize == arena_mapbits_large_size_get(chunk, pageind));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: arena_ralloc_large_grow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(oldsize == (chunk->map[pageind-map_bias].bits & ~PAGE_MASK));'), (9, 1, u'+\tassert(oldsize == arena_mapbits_large_size_get(chunk, pageind));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(oldsize == (chunk->map[pageind-map_bias].bits & ~PAGE_MASK));'), (9, 1, u'+\tassert(oldsize == arena_mapbits_large_size_get(chunk, pageind));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: arena_ralloc_large
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tdassert(arena->magic == ARENA_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(min_run_size >= PAGE_SIZE);'), (9, 1, u'+\tassert(min_run_size >= PAGE);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: bin_info_run_size_calc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(min_run_size >= PAGE_SIZE);'), (9, 1, u'+\tassert(min_run_size >= PAGE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(min_run_size >= PAGE_SIZE);'), (9, 1, u'+\tassert(min_run_size >= PAGE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\tassert(good_hdr_size <= good_reg0_offset);'), (19, 1, u'+\tassert(good_hdr_size <= good_redzone0_offset);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: bin_info_run_size_calc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\tassert(good_hdr_size <= good_reg0_offset);'), (19, 1, u'+\tassert(good_hdr_size <= good_redzone0_offset);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\tassert(good_hdr_size <= good_reg0_offset);'), (19, 1, u'+\tassert(good_hdr_size <= good_redzone0_offset);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(bin_info->reg0_offset - bin_info->redzone_size + (bin_info->nregs')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: bin_info_run_size_calc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(bin_info->reg0_offset - bin_info->redzone_size + (bin_info->nregs')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(bin_info->reg0_offset - bin_info->redzone_size + (bin_info->nregs')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(sspace_min < PAGE_SIZE);'), (15, 2, u'-\tassert(LG_QUANTUM >= LG_TINY_MIN);'), (17, 2, u'-\tassert(ntbins <= LG_QUANTUM);')]
===========================================
===========================================
Total add: 0
Total del: 52
Header: arena_boot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(sspace_min < PAGE_SIZE);'), (15, 2, u'-\tassert(LG_QUANTUM >= LG_TINY_MIN);'), (17, 2, u'-\tassert(ntbins <= LG_QUANTUM);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tassert(sspace_min < PAGE_SIZE);'), (15, 2, u'-\tassert(LG_QUANTUM >= LG_TINY_MIN);'), (17, 2, u'-\tassert(ntbins <= LG_QUANTUM);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(alignment != 0);'), (3, 1, u'+\tassert((alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Total add: 12
Total del: 19
Header: chunk_alloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(alignment != 0);'), (3, 1, u'+\tassert((alignment & chunksize_mask) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(alignment != 0);'), (3, 1, u'+\tassert((alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+\t\t\tassert(p[i] == 0);')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+\t\t\tassert(p[i] == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+\t\t\tassert(p[i] == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(chunksize >= PAGE_SIZE);'), (3, 1, u'+\tassert(chunksize >= PAGE);')]
===========================================
===========================================
Total add: 16
Total del: 21
Header: chunk_boot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(chunksize >= PAGE_SIZE);'), (3, 1, u'+\tassert(chunksize >= PAGE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(chunksize >= PAGE_SIZE);'), (3, 1, u'+\tassert(chunksize >= PAGE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-\t\t\tassert(node->size > size);')]
===========================================
===========================================
Total add: 3
Total del: 32
Header: *chunk_dealloc_dss_record
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-\t\t\tassert(node->size > size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-\t\t\tassert(node->size > size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_dss);'), (6, 1, u'+\tassert(size > 0 && (size & chunksize_mask) == 0);'), (7, 1, u'+\tassert(alignment > 0 && (alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: chunk_alloc_dss
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_dss);'), (6, 1, u'+\tassert(size > 0 && (size & chunksize_mask) == 0);'), (7, 1, u'+\tassert(alignment > 0 && (alignment & chunksize_mask) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_dss);'), (6, 1, u'+\tassert(size > 0 && (size & chunksize_mask) == 0);'), (7, 1, u'+\tassert(alignment > 0 && (alignment & chunksize_mask) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: chunk_in_dss
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
Total add: 24
Total del: 50
Header: chunk_in_dss
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tcassert(config_dss);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size != 0);')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: pages_map
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+\tassert(alignment != 0);'), (32, 1, u'+\tassert((alignment & chunksize_mask) == 0);'), (69, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
Total add: 16
Total del: 47
Header: chunk_alloc_mmap_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+\tassert(alignment != 0);'), (32, 1, u'+\tassert((alignment & chunksize_mask) == 0);'), (69, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+\tassert(alignment != 0);'), (32, 1, u'+\tassert((alignment & chunksize_mask) == 0);'), (69, 1, u'+\tassert(ret != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_isearch
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_delete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_count
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_insert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: ckh_search
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tdassert(ckh->magic == CKH_MAGIC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(node->named);'), (3, 2, u'-\t\tassert(node->u.named.nchildren > 0);'), (6, 1, u'+\t\tassert(node);'), (7, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: ctl_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(node->named);'), (3, 2, u'-\t\tassert(node->u.named.nchildren > 0);'), (6, 1, u'+\t\tassert(node);'), (7, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(node->named);'), (3, 2, u'-\t\tassert(node->u.named.nchildren > 0);'), (6, 1, u'+\t\tassert(node);'), (7, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tassert(node);'), (4, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Total add: 10
Total del: 8
Header: ctl_bymib
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tassert(node);'), (4, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tassert(node);'), (4, 1, u'+\t\tassert(node->nchildren > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(arena == arenas[newind]);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: thread_arena_ctl
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(arena == arenas[newind]);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(arena == arenas[newind]);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-\tassert(alignment > chunksize);'), (65, 2, u'-\tassert((offset & chunksize_mask) == 0);'), (66, 2, u'-\tassert(offset < alloc_size);'), (82, 2, u'-\t\t    assert(trailsize < alloc_size);')]
===========================================
===========================================
Total add: 7
Total del: 94
Header: huge_malloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-\tassert(alignment > chunksize);'), (65, 2, u'-\tassert((offset & chunksize_mask) == 0);'), (66, 2, u'-\tassert(offset < alloc_size);'), (82, 2, u'-\t\t    assert(trailsize < alloc_size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-\tassert(alignment > chunksize);'), (65, 2, u'-\tassert((offset & chunksize_mask) == 0);'), (66, 2, u'-\tassert(offset < alloc_size);'), (82, 2, u'-\t\t    assert(trailsize < alloc_size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tassert(result != -1);'), (16, 2, u'-\t\tassert(((result - 1) & result) == 0);')]
===========================================
===========================================
Total add: 4
Total del: 21
Header: malloc_init_hard
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tassert(result != -1);'), (16, 2, u'-\t\tassert(((result - 1) & result) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tassert(result != -1);'), (16, 2, u'-\t\tassert(((result - 1) & result) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\t\tassert(usize == isalloc(ret));'), (20, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Total add: 7
Total del: 14
Header: OOM:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\t\tassert(usize == isalloc(ret));'), (20, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\t\tassert(usize == isalloc(ret));'), (20, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+\tassert(min_alignment != 0);')]
===========================================
===========================================
Total add: 6
Total del: 13
Header: JEMALLOC_ATTR
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+\tassert(min_alignment != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+\tassert(min_alignment != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\tassert(sa2u(small_maxclass+1,'), (8, 1, u'+\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: imemalign
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\tassert(sa2u(small_maxclass+1,'), (8, 1, u'+\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\tassert(sa2u(small_maxclass+1,'), (8, 1, u'+\t\t\t\t\tassert(sa2u(SMALL_MAXCLASS+1,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(usize == isalloc(result));'), (9, 1, u'+\t\tassert(usize == isalloc(result, config_prof));')]
===========================================
===========================================
Total add: 6
Total del: 9
Header: imemalign
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(usize == isalloc(result));'), (9, 1, u'+\t\tassert(usize == isalloc(result, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(usize == isalloc(result));'), (9, 1, u'+\t\tassert(usize == isalloc(result, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Total add: 7
Total del: 10
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (10, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 15
Total del: 8
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (10, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (10, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Total add: 10
Total del: 11
Header: OOM:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(usize == isalloc(ret));'), (17, 1, u'+\t\tassert(usize == isalloc(ret, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (17, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 14
Total del: 20
Header: RETURN:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (17, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tassert(malloc_initialized || malloc_initializer =='), (17, 1, u'+\t\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (8, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 7
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (8, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (8, 2, u'-\tassert(ptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,'), (4, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize,')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: iallocm
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,'), (4, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize, alignment,'), (4, 1, u'+\tassert(usize == ((alignment == 0) ? s2u(usize) : sa2u(usize,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\tassert(usize == isalloc(p));'), (35, 1, u'+\t\tassert(usize == isalloc(p, config_prof));')]
===========================================
===========================================
Total add: 13
Total del: 23
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\tassert(usize == isalloc(p));'), (35, 1, u'+\t\tassert(usize == isalloc(p, config_prof));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\tassert(usize == isalloc(p));'), (35, 1, u'+\t\tassert(usize == isalloc(p, config_prof));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (8, 2, u'-\tassert(ptr != NULL);'), (14, 1, u'+\t\tassert(ptr != NULL);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (8, 2, u'-\tassert(ptr != NULL);'), (14, 1, u'+\t\tassert(ptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (3, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);'), (8, 2, u'-\tassert(ptr != NULL);'), (14, 1, u'+\t\tassert(ptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (24, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Total add: 16
Total del: 20
Header: JEMALLOC_P
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (24, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(malloc_initialized || malloc_initializer == pthread_self());'), (24, 1, u'+\tassert(malloc_initialized || IS_INITIALIZER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(malloc_initialized);')]
===========================================
===========================================
Total add: 34
Total del: 11
Header: jemalloc_prefork
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(malloc_initialized);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(malloc_initialized);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: bt_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: bt_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: bt_dup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (11, 1, u'+\tassert(prof_tdata->enq == false);')]
===========================================
===========================================
Total add: 5
Total del: 4
Header: bt_dup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (11, 1, u'+\tassert(prof_tdata->enq == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (11, 1, u'+\tassert(prof_tdata->enq == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (13, 1, u'+\tassert(prof_tdata->enq);')]
===========================================
===========================================
Total add: 8
Total del: 7
Header: prof_leave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (13, 1, u'+\tassert(prof_tdata->enq);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (13, 1, u'+\tassert(prof_tdata->enq);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: prof_backtrace
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (5, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_unwind_init_callback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_unwind_callback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: prof_unwind_callback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (4, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: prof_backtrace
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (4, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);'), (4, 2, u'-\tassert(max <= (1U << opt_lg_prof_bt_max));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 5
Total del: 6
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(opt_lg_prof_tcmax < 0 ||'), (5, 1, u'+\t\t\tassert(ckh_count(&prof_tdata->bt2cnt) < PROF_TCMAX);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(opt_lg_prof_tcmax < 0 ||'), (5, 1, u'+\t\t\tassert(ckh_count(&prof_tdata->bt2cnt) < PROF_TCMAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(opt_lg_prof_tcmax < 0 ||'), (5, 1, u'+\t\t\tassert(ckh_count(&prof_tdata->bt2cnt) < PROF_TCMAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_flush
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_write
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: prof_ctx_sum
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);')]
===========================================
===========================================
Total add: 10
Total del: 7
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+\tassert((uintptr_t)prof_tdata > (uintptr_t)PROF_TDATA_STATE_MAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: prof_ctx_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (20, 1, u'+\t\tassert(ctx->cnt_summed.curobjs == 0);')]
===========================================
===========================================
Total add: 13
Total del: 3
Header: prof_ctx_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (20, 1, u'+\t\tassert(ctx->cnt_summed.curobjs == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tcassert(config_prof);'), (20, 1, u'+\t\tassert(ctx->cnt_summed.curobjs == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 5
Total del: 25
Header: prof_dump_maps
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: prof_dump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 12
Total del: 56
Header: prof_dump_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_fdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: prof_idump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_mdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 12
Total del: 5
Header: prof_gdump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: prof_bt_hash
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_bt_keycomp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_tdata_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 36
Total del: 16
Header: prof_tdata_cleanup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_boot0
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: prof_boot1
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: prof_boot2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcassert(config_prof);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(binind < nbins);'), (7, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: tcache_bin_flush_small
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(binind < nbins);'), (7, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(binind < nbins);'), (7, 1, u'+\tassert(binind < NBINS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tassert(tcache != (void *)(uintptr_t)1);'), (38, 1, u'+\t\tassert(tcache != TCACHE_STATE_PURGATORY);')]
===========================================
===========================================
Total add: 18
Total del: 14
Header: tcache_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tassert(tcache != (void *)(uintptr_t)1);'), (38, 1, u'+\t\tassert(tcache != TCACHE_STATE_PURGATORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tassert(tcache != (void *)(uintptr_t)1);'), (38, 1, u'+\t\tassert(tcache != TCACHE_STATE_PURGATORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ivsalloc(ptr) == size);'), (5, 1, u'+\t\tassert(ivsalloc(ptr, config_prof) == size);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: zone_free_definite_size
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ivsalloc(ptr) == size);'), (5, 1, u'+\t\tassert(ivsalloc(ptr, config_prof) == size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(ivsalloc(ptr) == size);'), (5, 1, u'+\t\tassert(ivsalloc(ptr, config_prof) == size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+        assert(reply2 && reply2->type == REDIS_REPLY_STATUS);')]
===========================================
===========================================
Total add: 81
Total del: 0
Header: slaveMode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+        assert(reply2 && reply2->type == REDIS_REPLY_STATUS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+        assert(reply2 && reply2->type == REDIS_REPLY_STATUS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(expireat==-1) ? 0 : ttl));'), (3, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,ttl));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(expireat==-1) ? 0 : ttl));'), (3, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,ttl));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(expireat==-1) ? 0 : ttl));'), (3, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,ttl));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (3, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(expireat==-1) ? 0 : ttl));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (3, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(expireat==-1) ? 0 : ttl));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (3, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(expireat==-1) ? 0 : ttl));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    redisAssert(rdbSaveObjectType(payload,o));'), (19, 1, u'+    redisAssert(rdbSaveObject(payload,o));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (5, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (6, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (9, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (5, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (6, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (9, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (5, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (6, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (9, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (20, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
Total add: 0
Total del: 26
Header: socket_rd_err:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (20, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (20, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (18, 2, u'-                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Total add: 3
Total del: 13
Header: logRegisters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (18, 2, u'-                        server.assert_file, server.assert_line);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (18, 2, u'-                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (53, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Total add: 55
Total del: 0
Header: sigsegvHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (53, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (53, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    assert((bytes & 4095) == 0);'), (50, 1, u'+    assert((bytes & 4095) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-                redisAssert(server.cluster.myself == NULL);'), (109, 2, u'-                redisAssert(p != NULL);'), (141, 2, u'-    redisAssert(server.cluster.myself != NULL);'), (342, 2, u'-    redisAssert(dictDelete(server.cluster.nodes,nodename) == DICT_OK);'), (381, 2, u'-    redisAssert(retval == DICT_OK);'), (1099, 2, u'-    redisAssert(clusterNodeClearSlotBit(n,slot) == 1);'), (1307, 2, u'-                redisAssertWithInfo(c,NULL,retval == REDIS_OK);'), (1538, 2, u"-    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',2));"), (1539, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"SELECT",6));'), (1540, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,dbid));'), (1543, 2, u"-    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',4));"), (1544, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"RESTORE",7));'), (1545, 2, u'-    redisAssertWithInfo(c,NULL,c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (1546, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (1547, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (1552, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (1553, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (1554, 2, u'-    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (1638, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (1639, 2, u'-    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));'), (1722, 2, u'-                redisAssertWithInfo(c,firstkey,n != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',2));"), (83, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"SELECT",6));'), (84, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,dbid));'), (87, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',4));"), (88, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"RESTORE",7));'), (89, 1, u'+    redisAssertWithInfo(c,NULL,c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (90, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (91, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (96, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (97, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (98, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (182, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (183, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+                    redisAssert(value != NULL);')]
===========================================
===========================================
Total add: 15
Total del: 29
Header: blockingPopGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+                    redisAssert(value != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+                    redisAssert(value != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(pi->target == REDIS_PROPAGATE_NONE);')]
===========================================
===========================================
Total add: 1
Total del: 8
Header: alsoPropagate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(pi->target == REDIS_PROPAGATE_NONE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(pi->target == REDIS_PROPAGATE_NONE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(170, 1, u'+    assert(sizeof(f) == 4 && sizeof(d) == 8);'), (552, 1, u'+        assert(sizeof(float) == 4);'), (563, 1, u'+        assert(sizeof(double) == 8);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: createClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(p != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zzlIsInRange
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(task->type == REDIS_REPLY_ERROR ||'), (19, 1, u'+    assert(task->type == REDIS_REPLY_ERROR  ||')]
===========================================
===========================================
Total add: 14
Total del: 4
Header: freeReplyObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(task->type == REDIS_REPLY_ERROR ||'), (19, 1, u'+    assert(task->type == REDIS_REPLY_ERROR  ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(task->type == REDIS_REPLY_ERROR ||'), (19, 1, u'+    assert(task->type == REDIS_REPLY_ERROR  ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(r->buf != NULL);')]
===========================================
===========================================
Total add: 21
Total del: 5
Header: redisReplyReaderFeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(r->buf != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(r->buf != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(redisReplyReaderSetReplyObjectFunctions(c->reader,c->fn) == REDIS_OK);')]
===========================================
===========================================
Total add: 0
Total del: 18
Header: redisSetTimeout
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(redisReplyReaderSetReplyObjectFunctions(c->reader,c->fn) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(redisReplyReaderSetReplyObjectFunctions(c->reader,c->fn) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(reply != NULL);'), (19, 1, u'+    assert(reply != NULL);'), (36, 1, u'+    assert(reply != NULL);'), (39, 1, u'+    assert(reply != NULL);'), (54, 1, u'+        assert(NULL);')]
===========================================
===========================================
Total add: 52
Total del: 7
Header: usec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(reply != NULL);'), (19, 1, u'+    assert(reply != NULL);'), (36, 1, u'+    assert(reply != NULL);'), (39, 1, u'+    assert(reply != NULL);'), (54, 1, u'+        assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(reply != NULL);'), (19, 1, u'+    assert(reply != NULL);'), (36, 1, u'+    assert(reply != NULL);'), (39, 1, u'+    assert(reply != NULL);'), (54, 1, u'+        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+    assert(ret == REDIS_OK && reply == NULL);'), (63, 1, u'+    assert(ret == REDIS_ERR);')]
===========================================
===========================================
Total add: 78
Total del: 3
Header: test_format_commands
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+    assert(ret == REDIS_OK && reply == NULL);'), (63, 1, u'+    assert(ret == REDIS_ERR);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+    assert(ret == REDIS_OK && reply == NULL);'), (63, 1, u'+    assert(ret == REDIS_ERR);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-    assert(ret == REDIS_OK && reply == NULL);'), (74, 2, u'-    assert(ret == REDIS_ERR);')]
===========================================
===========================================
Total add: 4
Total del: 75
Header: test_blocking_connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-    assert(ret == REDIS_OK && reply == NULL);'), (74, 2, u'-    assert(ret == REDIS_ERR);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-    assert(ret == REDIS_OK && reply == NULL);'), (74, 2, u'-    assert(ret == REDIS_ERR);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(reply != NULL); freeReplyObject(reply);'), (12, 2, u'-    assert(reply != NULL); freeReplyObject(reply);')]
===========================================
===========================================
Total add: 1
Total del: 11
Header: test_throughput
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(reply != NULL); freeReplyObject(reply);'), (12, 2, u'-    assert(reply != NULL); freeReplyObject(reply);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(reply != NULL); freeReplyObject(reply);'), (12, 2, u'-    assert(reply != NULL); freeReplyObject(reply);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->length == inserts);'), (3, 1, u'+        assert(intrev32ifbe(is->length) == inserts);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->length == inserts);'), (3, 1, u'+        assert(intrev32ifbe(is->length) == inserts);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->length == inserts);'), (3, 1, u'+        assert(intrev32ifbe(is->length) == inserts);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT16);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT16);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(is->encoding == INTSET_ENC_INT32);'), (3, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(is->encoding == INTSET_ENC_INT64);'), (6, 1, u'+        assert(intrev32ifbe(is->encoding) == INTSET_ENC_INT64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 1, u'+    default: assert(0);')]
===========================================
Class:            class = getClientLimitClassByName(v[j]);
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        redisAssert(ln != NULL);')]
===========================================
Class:    class = getClientLimitClass(c);
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (133, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Total add: 210
Total del: 0
Header: _redisPanic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (133, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (133, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (55, 2, u'-                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Total add: 0
Total del: 130
Header: redisAsciiArt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (55, 2, u'-                        server.assert_file, server.assert_line);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (55, 2, u'-                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: _redisAssertPrintClientInfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: _redisAssertPrintObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(vptr != NULL);'), (15, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 11
Header: hashTypeGetFromZiplist
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(vptr != NULL);'), (15, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(vptr != NULL);'), (15, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                redisAssert(vptr != NULL);'), (20, 2, u'-            redisAssert(vptr != NULL);')]
===========================================
===========================================
Total add: 17
Total del: 16
Header: hashTypeSet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                redisAssert(vptr != NULL);'), (20, 2, u'-            redisAssert(vptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                redisAssert(vptr != NULL);'), (20, 2, u'-            redisAssert(vptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            redisAssert(vptr != NULL);')]
===========================================
===========================================
Total add: 0
Total del: 8
Header: hashTypeDelete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            redisAssert(vptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            redisAssert(vptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    assert(NULL);')]
===========================================
===========================================
Total add: 7
Total del: 13
Header: typedef struct zlentry {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-            assert(NULL);')]
===========================================
===========================================
Total add: 0
Total del: 30
Header: zipIntSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-            assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-            assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+            assert(NULL);                                                      \\')]
===========================================
===========================================
Total add: 27
Total del: 12
Header: zipEncodeLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+            assert(NULL);                                                      \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+            assert(NULL);                                                      \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+        assert(sizeof((prevlensize)) == 4);                                    \\')]
===========================================
===========================================
Total add: 35
Total del: 4
Header: zipPrevEncodeLengthForceLarge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+        assert(sizeof((prevlensize)) == 4);                                    \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+        assert(sizeof((prevlensize)) == 4);                                    \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+                    assert(vencoding);')]
===========================================
===========================================
Total add: 56
Total del: 0
Header: ziplistCompare
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+                    assert(vencoding);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+                    assert(vencoding);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+            redisAssert(field->encoding == REDIS_ENCODING_RAW);'), (42, 1, u'+            redisAssert(field->encoding == REDIS_ENCODING_RAW);'), (92, 1, u'+            redisAssert(ret == REDIS_OK);'), (96, 1, u'+        redisAssert(len == 0);')]
===========================================
===========================================
Total add: 51
Total del: 38
Header: *rdbLoadObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+            redisAssert(field->encoding == REDIS_ENCODING_RAW);'), (42, 1, u'+            redisAssert(field->encoding == REDIS_ENCODING_RAW);'), (92, 1, u'+            redisAssert(ret == REDIS_OK);'), (96, 1, u'+        redisAssert(len == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 1, u'+            redisAssert(field->encoding == REDIS_ENCODING_RAW);'), (42, 1, u'+            redisAssert(field->encoding == REDIS_ENCODING_RAW);'), (92, 1, u'+            redisAssert(ret == REDIS_OK);'), (96, 1, u'+        redisAssert(len == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_ZIPLIST);'), (44, 1, u'+        redisAssert(vptr != NULL);'), (60, 1, u'+        redisAssert(ret);'), (73, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_HT);')]
===========================================
===========================================
Total add: 53
Total del: 25
Header: hashTypeTryObjectEncoding
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_ZIPLIST);'), (44, 1, u'+        redisAssert(vptr != NULL);'), (60, 1, u'+        redisAssert(ret);'), (73, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_HT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_ZIPLIST);'), (44, 1, u'+        redisAssert(vptr != NULL);'), (60, 1, u'+        redisAssert(ret);'), (73, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_HT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
Total add: 47
Total del: 16
Header: hashTypeExists
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
Total add: 39
Total del: 8
Header: hashTypeSet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+            redisAssert(vptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssertWithInfo(NULL,subject,0);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: *hashTypeInitIterator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssertWithInfo(NULL,subject,0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssertWithInfo(NULL,subject,0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            redisAssert(vptr == NULL);'), (19, 1, u'+            redisAssert(vptr != NULL);'), (29, 1, u'+        redisAssert(vptr != NULL);')]
===========================================
===========================================
Total add: 37
Total del: 4
Header: hashTypeReleaseIterator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            redisAssert(vptr == NULL);'), (19, 1, u'+            redisAssert(vptr != NULL);'), (29, 1, u'+        redisAssert(vptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            redisAssert(vptr == NULL);'), (19, 1, u'+            redisAssert(vptr != NULL);'), (29, 1, u'+        redisAssert(vptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    redisAssert(hi->encoding == REDIS_ENCODING_ZIPLIST);'), (35, 1, u'+        redisAssert(ret);'), (38, 1, u'+        redisAssert(ret);'), (45, 1, u'+    redisAssert(hi->encoding == REDIS_ENCODING_HT);')]
===========================================
===========================================
Total add: 52
Total del: 38
Header: hashTypeNext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    redisAssert(hi->encoding == REDIS_ENCODING_ZIPLIST);'), (35, 1, u'+        redisAssert(ret);'), (38, 1, u'+        redisAssert(ret);'), (45, 1, u'+    redisAssert(hi->encoding == REDIS_ENCODING_HT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    redisAssert(hi->encoding == REDIS_ENCODING_ZIPLIST);'), (35, 1, u'+        redisAssert(ret);'), (38, 1, u'+        redisAssert(ret);'), (45, 1, u'+    redisAssert(hi->encoding == REDIS_ENCODING_HT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_ZIPLIST);'), (17, 2, u'-    redisAssertWithInfo(NULL,o,o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);'), (37, 1, u'+            redisAssert(ret == DICT_OK);')]
===========================================
===========================================
Total add: 41
Total del: 16
Header: *hashTypeLookupWriteOrCreate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_ZIPLIST);'), (17, 2, u'-    redisAssertWithInfo(NULL,o,o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);'), (37, 1, u'+            redisAssert(ret == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_ZIPLIST);'), (17, 2, u'-    redisAssertWithInfo(NULL,o,o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);'), (37, 1, u'+            redisAssert(ret == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(count == length);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: genericHgetallCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(count == length);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(count == length);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.replstate == REDIS_REPL_TRANSFER);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_TRANSFER);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: updateSlavesWaitingBgsave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.replstate == REDIS_REPL_TRANSFER);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_TRANSFER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.replstate == REDIS_REPL_TRANSFER);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_TRANSFER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.replstate == REDIS_REPL_CONNECTING);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_CONNECTING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: undoConnectWithMaster
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.replstate == REDIS_REPL_CONNECTING);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_CONNECTING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.replstate == REDIS_REPL_CONNECTING);'), (3, 1, u'+    redisAssert(server.repl_state == REDIS_REPL_CONNECTING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(server.aof_state != REDIS_AOF_OFF);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: aof_background_fsync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(server.aof_state != REDIS_AOF_OFF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(server.aof_state != REDIS_AOF_OFF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(server.aof_state == REDIS_AOF_OFF);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: startAppendOnly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(server.aof_state == REDIS_AOF_OFF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(server.aof_state == REDIS_AOF_OFF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(!isnan(score));')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *zslInsert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(!isnan(score));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(!isnan(score));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        redisAssert(eptr != NULL);'), (18, 1, u'+        redisAssert(sptr != NULL);'), (21, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Total add: 69
Total del: 0
Header: rewriteSetObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        redisAssert(eptr != NULL);'), (18, 1, u'+        redisAssert(sptr != NULL);'), (21, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        redisAssert(eptr != NULL);'), (18, 1, u'+        redisAssert(sptr != NULL);'), (21, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-                    redisAssert(eptr != NULL);'), (16, 2, u'-                    redisAssert(sptr != NULL);'), (19, 2, u'-                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Total add: 1
Total del: 50
Header: rewriteAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-                    redisAssert(eptr != NULL);'), (16, 2, u'-                    redisAssert(sptr != NULL);'), (19, 2, u'-                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-                    redisAssert(eptr != NULL);'), (16, 2, u'-                    redisAssert(sptr != NULL);'), (19, 2, u'-                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(server.replstate == REDIS_REPL_CONNECTING);')]
===========================================
===========================================
Total add: 12
Total del: 0
Header: connectWithMaster
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(server.replstate == REDIS_REPL_CONNECTING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(server.replstate == REDIS_REPL_CONNECTING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    server.assert_failed = estr;'), (4, 1, u'+    server.assert_file = file;'), (5, 1, u'+    server.assert_line = line;')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: _redisAssert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    server.assert_failed = estr;'), (4, 1, u'+    server.assert_file = file;'), (5, 1, u'+    server.assert_line = line;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    server.assert_failed = estr;'), (4, 1, u'+    server.assert_file = file;'), (5, 1, u'+    server.assert_line = line;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    server.assert_failed = "<no assertion failed>";'), (5, 1, u'+    server.assert_file = "<no file>";'), (6, 1, u'+    server.assert_line = 0;')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: initServerConfig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    server.assert_failed = "<no assertion failed>";'), (5, 1, u'+    server.assert_file = "<no file>";'), (6, 1, u'+    server.assert_line = 0;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    server.assert_failed = "<no assertion failed>";'), (5, 1, u'+    server.assert_file = "<no file>";'), (6, 1, u'+    server.assert_line = 0;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (12, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Total add: 7
Total del: 5
Header: sigsegvHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (12, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        "    Failed assertion: %s (%s:%d)", server.assert_failed,'), (12, 1, u'+                        server.assert_file, server.assert_line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (3, 1, u'+\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: arena_purge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (3, 1, u'+\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(arena->ndirty > chunk_npages || all);'), (3, 1, u'+\tassert(arena->ndirty - arena->npurgatory > chunk_npages || all);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size <= small_maxclass);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: arena_prof_promoted
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size <= small_maxclass);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(size <= small_maxclass);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: prof_lookup
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: prof_ctx_destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(result != -1);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(result != -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(result != -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 39
Total del: 1
Header: getDoubleFromObjectOrReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    redisAssertWithInfo(NULL,key,de != NULL);'), (12, 1, u'+    redisAssertWithInfo(NULL,key,kde != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 5
Header: removeExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    redisAssertWithInfo(NULL,key,de != NULL);'), (12, 1, u'+    redisAssertWithInfo(NULL,key,kde != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    redisAssertWithInfo(NULL,key,de != NULL);'), (12, 1, u'+    redisAssertWithInfo(NULL,key,kde != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    assert(sh->free >= incr);'), (29, 1, u'+    assert(sh->free >= 0);')]
===========================================
===========================================
Total add: 31
Total del: 0
Header: sdsMakeRoomFor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    assert(sh->free >= incr);'), (29, 1, u'+    assert(sh->free >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    assert(sh->free >= incr);'), (29, 1, u'+    assert(sh->free >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+        redisAssertWithInfo(c,NULL,retval == DICT_OK);')]
===========================================
===========================================
Total add: 46
Total del: 0
Header: luaSetGlobalArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+        redisAssertWithInfo(c,NULL,retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+        redisAssertWithInfo(c,NULL,retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-            redisAssertWithInfo(c,NULL,retval == DICT_OK);'), (39, 1, u'+        redisAssert(!lua_isnil(lua,1));')]
===========================================
===========================================
Total add: 3
Total del: 34
Header: evalGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-            redisAssertWithInfo(c,NULL,retval == DICT_OK);'), (39, 1, u'+        redisAssert(!lua_isnil(lua,1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-            redisAssertWithInfo(c,NULL,retval == DICT_OK);'), (39, 1, u'+        redisAssert(!lua_isnil(lua,1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssertWithInfo(c,curobj,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);'), (3, 1, u'+                redisAssertWithInfo(c,NULL,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssertWithInfo(c,curobj,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);'), (3, 1, u'+                redisAssertWithInfo(c,NULL,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssertWithInfo(c,curobj,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);'), (3, 1, u'+                redisAssertWithInfo(c,NULL,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(retval == REDIS_OK);'), (3, 1, u'+                redisAssertWithInfo(c,NULL,retval == REDIS_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: clusterCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(retval == REDIS_OK);'), (3, 1, u'+                redisAssertWithInfo(c,NULL,retval == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(retval == REDIS_OK);'), (3, 1, u'+                redisAssertWithInfo(c,NULL,retval == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-    redisAssert(rioWriteBulkCount(&cmd,'*',2));"), (3, 2, u'-    redisAssert(rioWriteBulkString(&cmd,"SELECT",6));'), (4, 2, u'-    redisAssert(rioWriteBulkLongLong(&cmd,dbid));'), (5, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',2));"), (6, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"SELECT",6));'), (7, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,dbid));'), (10, 2, u"-    redisAssert(rioWriteBulkCount(&cmd,'*',4));"), (11, 2, u'-    redisAssert(rioWriteBulkString(&cmd,"RESTORE",7));'), (12, 2, u'-    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (13, 2, u'-    redisAssert(rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (14, 2, u'-    redisAssert(rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (15, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',4));"), (16, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"RESTORE",7));'), (17, 1, u'+    redisAssertWithInfo(c,NULL,c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (18, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (19, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-    redisAssert(rioWriteBulkCount(&cmd,'*',2));"), (3, 2, u'-    redisAssert(rioWriteBulkString(&cmd,"SELECT",6));'), (4, 2, u'-    redisAssert(rioWriteBulkLongLong(&cmd,dbid));'), (5, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',2));"), (6, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"SELECT",6));'), (7, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,dbid));'), (10, 2, u"-    redisAssert(rioWriteBulkCount(&cmd,'*',4));"), (11, 2, u'-    redisAssert(rioWriteBulkString(&cmd,"RESTORE",7));'), (12, 2, u'-    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (13, 2, u'-    redisAssert(rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (14, 2, u'-    redisAssert(rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (15, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',4));"), (16, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"RESTORE",7));'), (17, 1, u'+    redisAssertWithInfo(c,NULL,c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (18, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (19, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-    redisAssert(rioWriteBulkCount(&cmd,'*',2));"), (3, 2, u'-    redisAssert(rioWriteBulkString(&cmd,"SELECT",6));'), (4, 2, u'-    redisAssert(rioWriteBulkLongLong(&cmd,dbid));'), (5, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',2));"), (6, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"SELECT",6));'), (7, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,dbid));'), (10, 2, u"-    redisAssert(rioWriteBulkCount(&cmd,'*',4));"), (11, 2, u'-    redisAssert(rioWriteBulkString(&cmd,"RESTORE",7));'), (12, 2, u'-    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (13, 2, u'-    redisAssert(rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (14, 2, u'-    redisAssert(rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (15, 1, u"+    redisAssertWithInfo(c,NULL,rioWriteBulkCount(&cmd,'*',4));"), (16, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,"RESTORE",7));'), (17, 1, u'+    redisAssertWithInfo(c,NULL,c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (18, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (19, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rdbSaveObjectType(&payload,o));'), (3, 2, u'-    redisAssert(rdbSaveObject(&payload,o) != -1);'), (4, 2, u'-    redisAssert(rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (5, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (6, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (7, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rdbSaveObjectType(&payload,o));'), (3, 2, u'-    redisAssert(rdbSaveObject(&payload,o) != -1);'), (4, 2, u'-    redisAssert(rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (5, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (6, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (7, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rdbSaveObjectType(&payload,o));'), (3, 2, u'-    redisAssert(rdbSaveObject(&payload,o) != -1);'), (4, 2, u'-    redisAssert(rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));'), (5, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (6, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o) != -1);'), (7, 1, u'+    redisAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rdbSaveObjectType(&payload,o));'), (3, 2, u'-    redisAssert(rdbSaveObject(&payload,o));'), (4, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (5, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: dumpCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rdbSaveObjectType(&payload,o));'), (3, 2, u'-    redisAssert(rdbSaveObject(&payload,o));'), (4, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (5, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rdbSaveObjectType(&payload,o));'), (3, 2, u'-    redisAssert(rdbSaveObject(&payload,o));'), (4, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObjectType(&payload,o));'), (5, 1, u'+    redisAssertWithInfo(c,NULL,rdbSaveObject(&payload,o));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(n != NULL);'), (3, 1, u'+                redisAssertWithInfo(c,firstkey,n != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getNodeByQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(n != NULL);'), (3, 1, u'+                redisAssertWithInfo(c,firstkey,n != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(n != NULL);'), (3, 1, u'+                redisAssertWithInfo(c,firstkey,n != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (3, 2, u'-    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (4, 1, u'+    redisAssertWithInfo(c,c->argv[2],c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (5, 1, u'+    redisAssertWithInfo(c,c->argv[2],c->argv[3]->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: configSetCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (3, 2, u'-    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (4, 1, u'+    redisAssertWithInfo(c,c->argv[2],c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (5, 1, u'+    redisAssertWithInfo(c,c->argv[2],c->argv[3]->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (3, 2, u'-    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (4, 1, u'+    redisAssertWithInfo(c,c->argv[2],c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (5, 1, u'+    redisAssertWithInfo(c,c->argv[2],c->argv[3]->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(c,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: configGetCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(c,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(c,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(retval == REDIS_OK);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,retval == REDIS_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: dbAdd
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(retval == REDIS_OK);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,retval == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(retval == REDIS_OK);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,retval == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(de != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,de != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: dbOverwrite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(de != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(de != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: removeExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(de != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,de != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: setExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(de != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(de != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: getExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (3, 1, u'+    redisAssertWithInfo(NULL,key,dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(dbDelete(c->db,key));'), (3, 1, u'+        redisAssertWithInfo(c,key,dbDelete(c->db,key));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: expireGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(dbDelete(c->db,key));'), (3, 1, u'+        redisAssertWithInfo(c,key,dbDelete(c->db,key));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(dbDelete(c->db,key));'), (3, 1, u'+        redisAssertWithInfo(c,key,dbDelete(c->db,key));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(clients != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,clients != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: unwatchAllKeys
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(clients != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,clients != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(clients != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,clients != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(c->argc == 0);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,c->argc == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: processMultibulkBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(c->argc == 0);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,c->argc == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(c->argc == 0);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,c->argc == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-        redisAssert(c->querybuf[0] == '*');"), (3, 1, u"+        redisAssertWithInfo(c,NULL,c->querybuf[0] == '*');")]
===========================================
===========================================
Total add: 1
Total del: 1
Header: processMultibulkBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-        redisAssert(c->querybuf[0] == '*');"), (3, 1, u"+        redisAssertWithInfo(c,NULL,c->querybuf[0] == '*');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u"-        redisAssert(c->querybuf[0] == '*');"), (3, 1, u"+        redisAssertWithInfo(c,NULL,c->querybuf[0] == '*');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->multibulklen > 0);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->multibulklen > 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: processMultibulkBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->multibulklen > 0);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->multibulklen > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->multibulklen > 0);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->multibulklen > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->cmd != NULL);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->cmd != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteClientCommandVector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->cmd != NULL);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->cmd != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->cmd != NULL);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->cmd != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(i < c->argc);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,i < c->argc);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteClientCommandArgument
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(i < c->argc);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,i < c->argc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(i < c->argc);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,i < c->argc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(c->cmd != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,c->cmd != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteClientCommandArgument
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(c->cmd != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,c->cmd != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(c->cmd != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,c->cmd != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *createStringObjectFromLongLong
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: checkType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *tryObjectEncoding
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: equalStringObjects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: getDoubleFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: getLongLongFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->type == REDIS_STRING);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(de != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,de != NULL);'), (6, 2, u'-        redisAssert(ln != NULL);'), (7, 1, u'+        redisAssertWithInfo(c,NULL,ln != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: pubsubUnsubscribeChannel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(de != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,de != NULL);'), (6, 2, u'-        redisAssert(ln != NULL);'), (7, 1, u'+        redisAssertWithInfo(c,NULL,ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(de != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,de != NULL);'), (6, 2, u'-        redisAssert(ln != NULL);'), (7, 1, u'+        redisAssertWithInfo(c,NULL,ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(obj->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(NULL,obj,obj->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbSaveStringObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(obj->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(NULL,obj,obj->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(obj->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(NULL,obj,obj->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(len != -1);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,len != -1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbSavedObjectLen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(len != -1);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,len != -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(len != -1);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,len != -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(retval == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(c,NULL,retval == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: evalGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(retval == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(c,NULL,retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(retval == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(c,NULL,retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(script != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,script != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: evalGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(script != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,script != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(script != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,NULL,script != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(j == vectorlen);'), (3, 1, u'+    redisAssertWithInfo(c,sortval,j == vectorlen);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(j == vectorlen);'), (3, 1, u'+    redisAssertWithInfo(c,sortval,j == vectorlen);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(j == vectorlen);'), (3, 1, u'+    redisAssertWithInfo(c,sortval,j == vectorlen);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(1 != 1);'), (3, 1, u'+                    redisAssertWithInfo(c,sortval,1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(1 != 1);'), (3, 1, u'+                    redisAssertWithInfo(c,sortval,1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(1 != 1);'), (3, 1, u'+                    redisAssertWithInfo(c,sortval,1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */'), (4, 1, u'+                    redisAssertWithInfo(c,sortval,sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */'), (4, 1, u'+                    redisAssertWithInfo(c,sortval,sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */'), (4, 1, u'+                    redisAssertWithInfo(c,sortval,sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                        redisAssert(sop->type == REDIS_SORT_GET);'), (5, 1, u'+                        redisAssertWithInfo(c,sortval,sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                        redisAssert(sop->type == REDIS_SORT_GET);'), (5, 1, u'+                        redisAssertWithInfo(c,sortval,sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                        redisAssert(sop->type == REDIS_SORT_GET);'), (5, 1, u'+                        redisAssertWithInfo(c,sortval,sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,subject,0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *hashTypeInitIterator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,subject,0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,subject,0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: convertToRealHash
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);'), (3, 1, u'+    redisAssertWithInfo(NULL,o,o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: listTypeEqual
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(subject->type == REDIS_LIST);'), (3, 1, u'+    redisAssertWithInfo(NULL,subject,subject->type == REDIS_LIST);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: listTypeConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(subject->type == REDIS_LIST);'), (3, 1, u'+    redisAssertWithInfo(NULL,subject,subject->type == REDIS_LIST);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(subject->type == REDIS_LIST);'), (3, 1, u'+    redisAssertWithInfo(NULL,subject,subject->type == REDIS_LIST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(refval->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(c,refval,refval->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: pushxGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(refval->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(c,refval,refval->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(refval->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+        redisAssertWithInfo(c,refval,refval->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(retval == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(c,keys[j],retval == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: blockForKeys
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(retval == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(c,keys[j],retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(retval == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(c,keys[j],retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->bpop.keys != NULL);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->bpop.keys != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->bpop.keys != NULL);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->bpop.keys != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->bpop.keys != NULL);'), (3, 1, u'+    redisAssertWithInfo(c,NULL,c->bpop.keys != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(de != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,c->bpop.keys[j],de != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(de != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,c->bpop.keys[j],de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(de != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,c->bpop.keys[j],de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(ln != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,key,ln != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: handleClientsWaitingListPush
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(ln != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,key,ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(ln != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,key,ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(listTypeLength(key) > 0);'), (3, 1, u'+            redisAssertWithInfo(c,key,listTypeLength(key) > 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: brpoplpushCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(listTypeLength(key) > 0);'), (3, 1, u'+            redisAssertWithInfo(c,key,listTypeLength(key) > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(listTypeLength(key) > 0);'), (3, 1, u'+            redisAssertWithInfo(c,key,listTypeLength(key) > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(subject->ptr,value,NULL) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,value,dictAdd(subject->ptr,value,NULL) == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: setTypeAdd
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(subject->ptr,value,NULL) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,value,dictAdd(subject->ptr,value,NULL) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(subject->ptr,value,NULL) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,value,dictAdd(subject->ptr,value,NULL) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(setobj->type == REDIS_SET &&'), (4, 1, u'+    redisAssertWithInfo(NULL,setobj,setobj->type == REDIS_SET &&')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: setTypeConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(setobj->type == REDIS_SET &&'), (4, 1, u'+    redisAssertWithInfo(NULL,setobj,setobj->type == REDIS_SET &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(setobj->type == REDIS_SET &&'), (4, 1, u'+    redisAssertWithInfo(NULL,setobj,setobj->type == REDIS_SET &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(d,element,NULL) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,element,dictAdd(d,element,NULL) == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: setTypeConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(d,element,NULL) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,element,dictAdd(d,element,NULL) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(d,element,NULL) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,element,dictAdd(d,element,NULL) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(sptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,sptr != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *zzlFind
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(sptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(sptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(NULL,ele,ele->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *zzlInsertAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(NULL,ele,ele->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(NULL,ele,ele->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert((sptr = ziplistNext(zl,eptr)) != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,(sptr = ziplistNext(zl,eptr)) != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *zzlInsertAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert((sptr = ziplistNext(zl,eptr)) != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,(sptr = ziplistNext(zl,eptr)) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert((sptr = ziplistNext(zl,eptr)) != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,(sptr = ziplistNext(zl,eptr)) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(sptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,sptr != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *zzlInsert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(sptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(sptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,ele,sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,zobj,eptr != NULL);'), (5, 2, u'-        redisAssert(sptr != NULL);'), (6, 1, u'+        redisAssertWithInfo(NULL,zobj,sptr != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: zsetConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,zobj,eptr != NULL);'), (5, 2, u'-        redisAssert(sptr != NULL);'), (6, 1, u'+        redisAssertWithInfo(NULL,zobj,sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(NULL,zobj,eptr != NULL);'), (5, 2, u'-        redisAssert(sptr != NULL);'), (6, 1, u'+        redisAssertWithInfo(NULL,zobj,sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (3, 1, u'+            redisAssertWithInfo(NULL,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zsetConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (3, 1, u'+            redisAssertWithInfo(NULL,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (3, 1, u'+            redisAssertWithInfo(NULL,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(zs->dict,ele,&node->score) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,zobj,dictAdd(zs->dict,ele,&node->score) == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zsetConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(zs->dict,ele,&node->score) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,zobj,dictAdd(zs->dict,ele,&node->score) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(dictAdd(zs->dict,ele,&node->score) == DICT_OK);'), (3, 1, u'+            redisAssertWithInfo(NULL,zobj,dictAdd(zs->dict,ele,&node->score) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (3, 1, u'+                    redisAssertWithInfo(c,curobj,zslDelete(zs->zsl,curscore,curobj));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (3, 1, u'+                    redisAssertWithInfo(c,curobj,zslDelete(zs->zsl,curscore,curobj));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (3, 1, u'+                    redisAssertWithInfo(c,curobj,zslDelete(zs->zsl,curscore,curobj));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);'), (3, 1, u'+                redisAssertWithInfo(c,curobj,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);'), (3, 1, u'+                redisAssertWithInfo(c,curobj,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);'), (3, 1, u'+                redisAssertWithInfo(c,curobj,dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(zslDelete(zs->zsl,score,c->argv[j]));'), (3, 1, u'+                redisAssertWithInfo(c,c->argv[j],zslDelete(zs->zsl,score,c->argv[j]));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zremCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(zslDelete(zs->zsl,score,c->argv[j]));'), (3, 1, u'+                redisAssertWithInfo(c,c->argv[j],zslDelete(zs->zsl,score,c->argv[j]));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(zslDelete(zs->zsl,score,c->argv[j]));'), (3, 1, u'+                redisAssertWithInfo(c,c->argv[j],zslDelete(zs->zsl,score,c->argv[j]));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zrangeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(eptr != NULL && sptr != NULL);'), (3, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (4, 1, u'+            redisAssertWithInfo(c,zobj,eptr != NULL && sptr != NULL);'), (5, 1, u'+            redisAssertWithInfo(c,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: zrangeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(eptr != NULL && sptr != NULL);'), (3, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (4, 1, u'+            redisAssertWithInfo(c,zobj,eptr != NULL && sptr != NULL);'), (5, 1, u'+            redisAssertWithInfo(c,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(eptr != NULL && sptr != NULL);'), (3, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (4, 1, u'+            redisAssertWithInfo(c,zobj,eptr != NULL && sptr != NULL);'), (5, 1, u'+            redisAssertWithInfo(c,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ln != NULL);'), (3, 1, u'+            redisAssertWithInfo(c,zobj,ln != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zrangeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ln != NULL);'), (3, 1, u'+            redisAssertWithInfo(c,zobj,ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ln != NULL);'), (3, 1, u'+            redisAssertWithInfo(c,zobj,ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: genericZrangebyscoreCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (3, 1, u'+            redisAssertWithInfo(c,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: genericZrangebyscoreCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (3, 1, u'+            redisAssertWithInfo(c,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (3, 1, u'+            redisAssertWithInfo(c,zobj,ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(zslValueLteMax(score,&range));'), (3, 1, u'+        redisAssertWithInfo(c,zobj,zslValueLteMax(score,&range));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zcountCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(zslValueLteMax(score,&range));'), (3, 1, u'+        redisAssertWithInfo(c,zobj,zslValueLteMax(score,&range));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(zslValueLteMax(score,&range));'), (3, 1, u'+        redisAssertWithInfo(c,zobj,zslValueLteMax(score,&range));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(c,ele,ele->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zrankGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(c,ele,ele->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (3, 1, u'+    redisAssertWithInfo(c,ele,ele->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);'), (5, 2, u'-        redisAssert(sptr != NULL);'), (6, 1, u'+        redisAssertWithInfo(c,zobj,sptr != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: zrankGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);'), (5, 2, u'-        redisAssert(sptr != NULL);'), (6, 1, u'+        redisAssertWithInfo(c,zobj,sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(eptr != NULL);'), (3, 1, u'+        redisAssertWithInfo(c,zobj,eptr != NULL);'), (5, 2, u'-        redisAssert(sptr != NULL);'), (6, 1, u'+        redisAssertWithInfo(c,zobj,sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(rank); /* Existing elements always have a rank. */'), (3, 1, u'+            redisAssertWithInfo(c,ele,rank); /* Existing elements always have a rank. */')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zrankGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(rank); /* Existing elements always have a rank. */'), (3, 1, u'+            redisAssertWithInfo(c,ele,rank); /* Existing elements always have a rank. */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(rank); /* Existing elements always have a rank. */'), (3, 1, u'+            redisAssertWithInfo(c,ele,rank); /* Existing elements always have a rank. */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssertWithClientInfo(c,1 == 2);'), (3, 1, u'+        redisAssertWithInfo(c,c->argv[0],1 == 2);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: debugCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssertWithClientInfo(c,1 == 2);'), (3, 1, u'+        redisAssertWithInfo(c,c->argv[0],1 == 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssertWithClientInfo(c,1 == 2);'), (3, 1, u'+        redisAssertWithInfo(c,c->argv[0],1 == 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
Total add: 31
Total del: 21
Header: _redisAssert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+void _redisAssertPrintObject(robj *o) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void _redisAssertWithClientInfo(redisClient *c, char *estr, char *file, int line) {'), (3, 2, u'-    _redisAssertPrintClientInfo(c);'), (4, 1, u'+void _redisAssertWithInfo(redisClient *c, robj *o, char *estr, char *file, int line) {'), (5, 1, u'+    if (c) _redisAssertPrintClientInfo(c);'), (6, 1, u'+    if (o) _redisAssertPrintObject(o);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: _redisAssertPrintClientInfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void _redisAssertWithClientInfo(redisClient *c, char *estr, char *file, int line) {'), (3, 2, u'-    _redisAssertPrintClientInfo(c);'), (4, 1, u'+void _redisAssertWithInfo(redisClient *c, robj *o, char *estr, char *file, int line) {'), (5, 1, u'+    if (c) _redisAssertPrintClientInfo(c);'), (6, 1, u'+    if (o) _redisAssertPrintObject(o);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void _redisAssertWithClientInfo(redisClient *c, char *estr, char *file, int line) {'), (3, 2, u'-    _redisAssertPrintClientInfo(c);'), (4, 1, u'+void _redisAssertWithInfo(redisClient *c, robj *o, char *estr, char *file, int line) {'), (5, 1, u'+    if (c) _redisAssertPrintClientInfo(c);'), (6, 1, u'+    if (o) _redisAssertPrintObject(o);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        redisAssertWithClientInfo(c,1 == 2);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: debugCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        redisAssertWithClientInfo(c,1 == 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        redisAssertWithClientInfo(c,1 == 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void _redisAssertPrintClientInfo(redisClient *c) {'), (29, 1, u'+void _redisAssertWithClientInfo(redisClient *c, char *estr, char *file, int line) {'), (30, 1, u'+    _redisAssertPrintClientInfo(c);'), (31, 1, u'+    _redisAssert(estr,file,line);')]
===========================================
===========================================
Total add: 32
Total del: 0
Header: _redisAssert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void _redisAssertPrintClientInfo(redisClient *c) {'), (29, 1, u'+void _redisAssertWithClientInfo(redisClient *c, char *estr, char *file, int line) {'), (30, 1, u'+    _redisAssertPrintClientInfo(c);'), (31, 1, u'+    _redisAssert(estr,file,line);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void _redisAssertPrintClientInfo(redisClient *c) {'), (29, 1, u'+void _redisAssertWithClientInfo(redisClient *c, char *estr, char *file, int line) {'), (30, 1, u'+    _redisAssertPrintClientInfo(c);'), (31, 1, u'+    _redisAssert(estr,file,line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (8, 2, u'-                redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Total add: 11
Total del: 10
Header: genericZrangebyscoreCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (8, 2, u'-                redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (8, 2, u'-                redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+        redisAssert(zslValueLteMax(score,&range));')]
===========================================
===========================================
Total add: 74
Total del: 1
Header: zrevrangebyscoreCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+        redisAssert(zslValueLteMax(score,&range));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+        redisAssert(zslValueLteMax(score,&range));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(i < c->argc);'), (17, 1, u'+        redisAssert(c->cmd != NULL);')]
===========================================
===========================================
Total add: 18
Total del: 0
Header: rewriteClientCommandVector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(i < c->argc);'), (17, 1, u'+        redisAssert(c->cmd != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(i < c->argc);'), (17, 1, u'+        redisAssert(c->cmd != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: evalGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        redisAssert(script != NULL);')]
===========================================
===========================================
Total add: 19
Total del: 0
Header: evalGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        redisAssert(script != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        redisAssert(script != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(c->cmd != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: rewriteClientCommandVector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(c->cmd != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(c->cmd != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        redisAssert(dbDelete(c->db,key));')]
===========================================
===========================================
Total add: 17
Total del: 3
Header: expireGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        redisAssert(dbDelete(c->db,key));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        redisAssert(dbDelete(c->db,key));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        redisAssert((fakeClient->flags & REDIS_BLOCKED) == 0);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: loadAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        redisAssert((fakeClient->flags & REDIS_BLOCKED) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        redisAssert((fakeClient->flags & REDIS_BLOCKED) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Total add: 0
Total del: 7
Header: SlotToKeyDel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(252, 2, u'-    redisAssert(equalStringObjects(key,dskey));'), (303, 2, u'-    redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(server.ds_enabled);'), (11, 2, u'-            redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 0
Total del: 19
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(server.ds_enabled);'), (11, 2, u'-            redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(server.ds_enabled);'), (11, 2, u'-            redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-            redisAssert(cmd != NULL);')]
===========================================
===========================================
Total add: 0
Total del: 25
Header: beforeSleep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-            redisAssert(cmd != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-            redisAssert(cmd != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    redisAssert(sdslen(c->argv[0]->ptr) == 4);')]
===========================================
===========================================
Total add: 5
Total del: 10
Header: spopCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    redisAssert(sdslen(c->argv[0]->ptr) == 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    redisAssert(sdslen(c->argv[0]->ptr) == 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    redisAssert(retval == REDIS_OK);'), (38, 1, u'+    redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 36
Total del: 31
Header: *lookupKeyWriteOrReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    redisAssert(retval == REDIS_OK);'), (38, 1, u'+    redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+    redisAssert(retval == REDIS_OK);'), (38, 1, u'+    redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            redisAssert(zslDelete(zs->zsl,score,ele));'), (22, 1, u'+                redisAssert(zslDelete(zs->zsl,score,c->argv[j]));')]
===========================================
===========================================
Total add: 17
Total del: 13
Header: zremCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            redisAssert(zslDelete(zs->zsl,score,ele));'), (22, 1, u'+                redisAssert(zslDelete(zs->zsl,score,c->argv[j]));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            redisAssert(zslDelete(zs->zsl,score,ele));'), (22, 1, u'+                redisAssert(zslDelete(zs->zsl,score,c->argv[j]));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-                redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (78, 1, u'+                    redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (89, 1, u'+                redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Total add: 37
Total del: 48
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-                redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (78, 1, u'+                    redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (89, 1, u'+                redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-                redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (78, 1, u'+                    redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (89, 1, u'+                redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Total add: 7
Total del: 19
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (618, 1, u'+      lua_assert(0);  /* cannot happen */'), (653, 1, u'+    default: lua_assert(0); r = 0; break;'), (713, 1, u'+    default: lua_assert(0);'), (748, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (755, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (764, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (787, 1, u'+    default: lua_assert(0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (814, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (815, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (821, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (822, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (830, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(218, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (292, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (314, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (387, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (396, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 1, u'+  lua_assert(L->errfunc == 0);'), (434, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (630, 1, u'+    lua_assert(g->totalbytes >= g->estimate);'), (648, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (651, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (664, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (665, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (666, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (678, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (679, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (707, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (129, 1, u'+  lua_assert(currIsNewline(ls));'), (193, 1, u'+  lua_assert(isdigit(ls->current));'), (211, 1, u"+  lua_assert(s == '[' || s == ']');"), (412, 1, u'+          lua_assert(!currIsNewline(ls));'), (458, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (328, 1, u'+      default: lua_assert(0); break;'), (379, 1, u'+  lua_assert(isLua(L->ci));'), (399, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (400, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (401, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (432, 1, u'+        lua_assert(ttisstring(rb));'), (443, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (607, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (620, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (645, 1, u'+          lua_assert(isLua(L->ci));'), (646, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (731, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rioWrite(&payload,&type,1));'), (3, 1, u'+    redisAssert(rdbSaveObjectType(&payload,o));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rioWrite(&payload,&type,1));'), (3, 1, u'+    redisAssert(rdbSaveObjectType(&payload,o));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(rioWrite(&payload,&type,1));'), (3, 1, u'+    redisAssert(rdbSaveObjectType(&payload,o));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    redisAssert(rdbSaveObject(&payload,o)); /* always write >= 1 bytes. */'), (25, 1, u'+    redisAssert(rdbSaveObjectType(&payload,o));'), (26, 1, u'+    redisAssert(rdbSaveObject(&payload,o));')]
===========================================
===========================================
Total add: 6
Total del: 20
Header: dumpCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    redisAssert(rdbSaveObject(&payload,o)); /* always write >= 1 bytes. */'), (25, 1, u'+    redisAssert(rdbSaveObjectType(&payload,o));'), (26, 1, u'+    redisAssert(rdbSaveObject(&payload,o));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    redisAssert(rdbSaveObject(&payload,o)); /* always write >= 1 bytes. */'), (25, 1, u'+    redisAssert(rdbSaveObjectType(&payload,o));'), (26, 1, u'+    redisAssert(rdbSaveObject(&payload,o));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u"+    redisAssert(rioWriteBulkCount(&cmd,'*',2));"), (20, 1, u'+    redisAssert(rioWriteBulkString(&cmd,"SELECT",6));'), (21, 1, u'+    redisAssert(rioWriteBulkLongLong(&cmd,dbid));')]
===========================================
===========================================
Total add: 4
Total del: 16
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u"+    redisAssert(rioWriteBulkCount(&cmd,'*',2));"), (20, 1, u'+    redisAssert(rioWriteBulkString(&cmd,"SELECT",6));'), (21, 1, u'+    redisAssert(rioWriteBulkLongLong(&cmd,dbid));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u"+    redisAssert(rioWriteBulkCount(&cmd,'*',2));"), (20, 1, u'+    redisAssert(rioWriteBulkString(&cmd,"SELECT",6));'), (21, 1, u'+    redisAssert(rioWriteBulkLongLong(&cmd,dbid));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u"+    redisAssert(rioWriteBulkCount(&cmd,'*',4));"), (16, 1, u'+    redisAssert(rioWriteBulkString(&cmd,"RESTORE",7));'), (17, 1, u'+    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (18, 1, u'+    redisAssert(rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (19, 1, u'+    redisAssert(rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (33, 1, u'+    redisAssert(rioWrite(&payload,&type,1));'), (34, 1, u'+    redisAssert(rdbSaveObject(&payload,o) != -1);'), (35, 1, u'+    redisAssert(rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));')]
===========================================
===========================================
Total add: 32
Total del: 23
Header: migrateCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u"+    redisAssert(rioWriteBulkCount(&cmd,'*',4));"), (16, 1, u'+    redisAssert(rioWriteBulkString(&cmd,"RESTORE",7));'), (17, 1, u'+    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (18, 1, u'+    redisAssert(rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (19, 1, u'+    redisAssert(rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (33, 1, u'+    redisAssert(rioWrite(&payload,&type,1));'), (34, 1, u'+    redisAssert(rdbSaveObject(&payload,o) != -1);'), (35, 1, u'+    redisAssert(rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u"+    redisAssert(rioWriteBulkCount(&cmd,'*',4));"), (16, 1, u'+    redisAssert(rioWriteBulkString(&cmd,"RESTORE",7));'), (17, 1, u'+    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);'), (18, 1, u'+    redisAssert(rioWriteBulkString(&cmd,c->argv[3]->ptr,sdslen(c->argv[3]->ptr)));'), (19, 1, u'+    redisAssert(rioWriteBulkLongLong(&cmd,(ttl == -1) ? 0 : ttl));'), (33, 1, u'+    redisAssert(rioWrite(&payload,&type,1));'), (34, 1, u'+    redisAssert(rdbSaveObject(&payload,o) != -1);'), (35, 1, u'+    redisAssert(rioWriteBulkString(&cmd,payload.io.buffer.ptr,sdslen(payload.io.buffer.ptr)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    redisAssert(rdbSaveObject(&payload,o)); /* always write >= 1 bytes. */')]
===========================================
===========================================
Total add: 9
Total del: 21
Header: dumpCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    redisAssert(rdbSaveObject(&payload,o)); /* always write >= 1 bytes. */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    redisAssert(rdbSaveObject(&payload,o)); /* always write >= 1 bytes. */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(ln != listFirst(clients));')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: handleClientsWaitingListPush
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(ln != listFirst(clients));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(ln != listFirst(clients));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(clusterNodeSetSlotBit(n,slot) == 0);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: clusterNodeGetSlotBit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(clusterNodeSetSlotBit(n,slot) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(clusterNodeSetSlotBit(n,slot) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(clusterNodeClearSlotBit(n,slot) == 1);')]
===========================================
===========================================
Total add: 12
Total del: 0
Header: clusterAddSlot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(clusterNodeClearSlotBit(n,slot) == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(clusterNodeClearSlotBit(n,slot) == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (8, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: test_string2ll
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (8, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (8, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: checkType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (36, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (39, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (40, 1, u'+    assert(v == -1);'), (43, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (44, 1, u'+    assert(v == 0);'), (47, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (48, 1, u'+    assert(v == 1);'), (51, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (52, 1, u'+    assert(v == 99);'), (55, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (56, 1, u'+    assert(v == -99);'), (59, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (60, 1, u'+    assert(v == LLONG_MIN);'), (63, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (66, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (67, 1, u'+    assert(v == LLONG_MAX);'), (70, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (81, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (85, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (88, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (89, 1, u'+    assert(v == -1);'), (92, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (93, 1, u'+    assert(v == 0);'), (96, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (97, 1, u'+    assert(v == 1);'), (100, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (101, 1, u'+    assert(v == 99);'), (108, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (109, 1, u'+    assert(v == -99);'), (113, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (114, 1, u'+    assert(v == LONG_MIN);'), (117, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (120, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (121, 1, u'+    assert(v == LONG_MAX);'), (124, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (129, 2, u'-    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 99
Total del: 35
Header: d2string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (36, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (39, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (40, 1, u'+    assert(v == -1);'), (43, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (44, 1, u'+    assert(v == 0);'), (47, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (48, 1, u'+    assert(v == 1);'), (51, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (52, 1, u'+    assert(v == 99);'), (55, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (56, 1, u'+    assert(v == -99);'), (59, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (60, 1, u'+    assert(v == LLONG_MIN);'), (63, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (66, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (67, 1, u'+    assert(v == LLONG_MAX);'), (70, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (81, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (85, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (88, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (89, 1, u'+    assert(v == -1);'), (92, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (93, 1, u'+    assert(v == 0);'), (96, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (97, 1, u'+    assert(v == 1);'), (100, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (101, 1, u'+    assert(v == 99);'), (108, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (109, 1, u'+    assert(v == -99);'), (113, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (114, 1, u'+    assert(v == LONG_MIN);'), (117, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (120, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (121, 1, u'+    assert(v == LONG_MAX);'), (124, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (129, 2, u'-    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (36, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (39, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (40, 1, u'+    assert(v == -1);'), (43, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (44, 1, u'+    assert(v == 0);'), (47, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (48, 1, u'+    assert(v == 1);'), (51, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (52, 1, u'+    assert(v == 99);'), (55, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (56, 1, u'+    assert(v == -99);'), (59, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (60, 1, u'+    assert(v == LLONG_MIN);'), (63, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (66, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 1);'), (67, 1, u'+    assert(v == LLONG_MAX);'), (70, 1, u'+    assert(string2ll(buf,strlen(buf),&v) == 0);'), (81, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (85, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (88, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (89, 1, u'+    assert(v == -1);'), (92, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (93, 1, u'+    assert(v == 0);'), (96, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (97, 1, u'+    assert(v == 1);'), (100, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (101, 1, u'+    assert(v == 99);'), (108, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (109, 1, u'+    assert(v == -99);'), (113, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (114, 1, u'+    assert(v == LONG_MIN);'), (117, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (120, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 1);'), (121, 1, u'+    assert(v == LONG_MAX);'), (124, 1, u'+    assert(string2l(buf,strlen(buf),&v) == 0);'), (129, 2, u'-    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+        assert(reply->elements >= 2);'), (59, 1, u'+        assert(reply->element[0]->type == REDIS_REPLY_STRING);'), (69, 1, u'+        assert(reply->element[1]->type == REDIS_REPLY_STRING);'), (81, 1, u'+                assert(reply->element[2]->type == REDIS_REPLY_INTEGER);')]
===========================================
===========================================
Total add: 65
Total del: 17
Header: __redisAsyncDisconnect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+        assert(reply->elements >= 2);'), (59, 1, u'+        assert(reply->element[0]->type == REDIS_REPLY_STRING);'), (69, 1, u'+        assert(reply->element[1]->type == REDIS_REPLY_STRING);'), (81, 1, u'+                assert(reply->element[2]->type == REDIS_REPLY_INTEGER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+        assert(reply->elements >= 2);'), (59, 1, u'+        assert(reply->element[0]->type == REDIS_REPLY_STRING);'), (69, 1, u'+        assert(reply->element[1]->type == REDIS_REPLY_STRING);'), (81, 1, u'+                assert(reply->element[2]->type == REDIS_REPLY_INTEGER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(__redisShiftCallback(&ac->replies,&cb) == REDIS_OK);'), (8, 1, u'+            assert(c->flags & REDIS_SUBSCRIBED);')]
===========================================
===========================================
Total add: 20
Total del: 3
Header: redisProcessCallbacks
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(__redisShiftCallback(&ac->replies,&cb) == REDIS_OK);'), (8, 1, u'+            assert(c->flags & REDIS_SUBSCRIBED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(__redisShiftCallback(&ac->replies,&cb) == REDIS_OK);'), (8, 1, u'+            assert(c->flags & REDIS_SUBSCRIBED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    assert(p);')]
===========================================
===========================================
Total add: 19
Total del: 5
Header: redisAsyncHandleWrite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    assert(p);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+    assert(p);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(p != NULL);')]
===========================================
===========================================
Total add: 47
Total del: 6
Header: __redisAsyncCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(126, 1, u'+    assert(ht->used == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(redisSetTimeout(c,tv) == REDIS_OK);')]
===========================================
===========================================
Total add: 9
Total del: 1
Header: test_blocking_connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(redisSetTimeout(c,tv) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(redisSetTimeout(c,tv) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(ret == REDIS_ERR);')]
===========================================
===========================================
Total add: 11
Total del: 2
Header: test_reply_reader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(ret == REDIS_ERR);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(ret == REDIS_ERR);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(redisGetReply(c, (void*)&replies[i]) == REDIS_OK);'), (14, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_STATUS);'), (26, 1, u'+        assert(redisGetReply(c, (void*)&replies[i]) == REDIS_OK);'), (27, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_ARRAY);'), (28, 1, u'+        assert(replies[i] != NULL && replies[i]->elements == 500);')]
===========================================
===========================================
Total add: 31
Total del: 3
Header: test_throughput
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(redisGetReply(c, (void*)&replies[i]) == REDIS_OK);'), (14, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_STATUS);'), (26, 1, u'+        assert(redisGetReply(c, (void*)&replies[i]) == REDIS_OK);'), (27, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_ARRAY);'), (28, 1, u'+        assert(replies[i] != NULL && replies[i]->elements == 500);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(redisGetReply(c, (void*)&replies[i]) == REDIS_OK);'), (14, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_STATUS);'), (26, 1, u'+        assert(redisGetReply(c, (void*)&replies[i]) == REDIS_OK);'), (27, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_ARRAY);'), (28, 1, u'+        assert(replies[i] != NULL && replies[i]->elements == 500);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                    assert(NULL);'), (31, 1, u'+                        assert(NULL);')]
===========================================
===========================================
Total add: 16
Total del: 15
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                    assert(NULL);'), (31, 1, u'+                        assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                    assert(NULL);'), (31, 1, u'+                        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                assert(strcmp(buf,listNodeValue(refnode)) == 0);'), (12, 1, u'+                assert(memcmp(buf,listNodeValue(refnode),buflen) == 0);')]
===========================================
===========================================
Total add: 5
Total del: 4
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                assert(strcmp(buf,listNodeValue(refnode)) == 0);'), (12, 1, u'+                assert(memcmp(buf,listNodeValue(refnode),buflen) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                assert(strcmp(buf,listNodeValue(refnode)) == 0);'), (12, 1, u'+                assert(memcmp(buf,listNodeValue(refnode),buflen) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+                redisAssert(n != NULL);')]
===========================================
===========================================
Total add: 15
Total del: 14
Header: *getNodeByQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+                redisAssert(n != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+                redisAssert(n != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+                redisAssert(p != NULL);')]
===========================================
===========================================
Total add: 24
Total del: 1
Header: clusterLoadConfig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+                redisAssert(p != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+                redisAssert(p != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+                redisAssert(server.cluster.myself == NULL);')]
===========================================
===========================================
Total add: 66
Total del: 1
Header: clusterLoadConfig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+                redisAssert(server.cluster.myself == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+                redisAssert(server.cluster.myself == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(server.cluster.myself != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: clusterLoadConfig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(server.cluster.myself != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(server.cluster.myself != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: *createClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 1, u'+    redisAssert(dictDelete(server.cluster.nodes,nodename) == DICT_OK);'), (243, 1, u'+    redisAssert(retval == DICT_OK);'), (841, 1, u'+    redisAssert(clusterNodeSetSlotBit(n,slot) == 0);'), (982, 1, u'+                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        redisAssert(j < argc);')]
===========================================
===========================================
Total add: 0
Total del: 55
Header: waitForSwappedKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        redisAssert(j < argc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        redisAssert(j < argc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        redisAssert(j < argc);')]
===========================================
===========================================
Total add: 72
Total del: 0
Header: persistCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        redisAssert(j < argc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        redisAssert(j < argc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+                    redisAssert(eptr != NULL);'), (28, 1, u'+                    redisAssert(sptr != NULL);'), (31, 1, u'+                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Total add: 48
Total del: 14
Header: rewriteAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+                    redisAssert(eptr != NULL);'), (28, 1, u'+                    redisAssert(sptr != NULL);'), (31, 1, u'+                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+                    redisAssert(eptr != NULL);'), (28, 1, u'+                    redisAssert(sptr != NULL);'), (31, 1, u'+                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+                    redisAssert(eptr != NULL);'), (27, 1, u'+                    redisAssert(sptr != NULL);'), (30, 1, u'+                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Total add: 48
Total del: 13
Header: computeDatasetDigest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+                    redisAssert(eptr != NULL);'), (27, 1, u'+                    redisAssert(sptr != NULL);'), (30, 1, u'+                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+                    redisAssert(eptr != NULL);'), (27, 1, u'+                    redisAssert(sptr != NULL);'), (30, 1, u'+                        redisAssert(ziplistGet(eptr,&vstr,&vlen,&vll));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (7, 1, u'+    redisAssert(x != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: *zslFirstInRange
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (7, 1, u'+    redisAssert(x != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (7, 1, u'+    redisAssert(x != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (6, 1, u'+    redisAssert(x != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: *zslLastInRange
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (6, 1, u'+    redisAssert(x != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (6, 1, u'+    redisAssert(x != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            redisAssert(zzlInsertAt(zobj,ele,node->score,NULL) == REDIS_OK);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: zsetConvert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            redisAssert(zzlInsertAt(zobj,ele,node->score,NULL) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            redisAssert(zzlInsertAt(zobj,ele,node->score,NULL) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (3, 2, u'-                redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (3, 2, u'-                redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (3, 2, u'-                redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: zremCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+                redisAssert(it->zl.sptr != NULL);'), (195, 1, u'+            redisAssert(ziplistGet(it->zl.eptr,&val->estr,&val->elen,&val->ell));')]
===========================================
===========================================
Total add: 318
Total del: 7
Header: zremrangebyrankCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+                redisAssert(it->zl.sptr != NULL);'), (195, 1, u'+            redisAssert(ziplistGet(it->zl.eptr,&val->estr,&val->elen,&val->ell));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+                redisAssert(it->zl.sptr != NULL);'), (195, 1, u'+            redisAssert(ziplistGet(it->zl.eptr,&val->estr,&val->elen,&val->ell));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
Total add: 9
Total del: 8
Header: zunionInterGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(zobj->encoding == REDIS_ENCODING_ZIPLIST);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: zzlCompareElements
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(zobj->encoding == REDIS_ENCODING_ZIPLIST);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(zobj->encoding == REDIS_ENCODING_ZIPLIST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(zobj->encoding == REDIS_ENCODING_ZIPLIST);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: zzlLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(zobj->encoding == REDIS_ENCODING_ZIPLIST);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(zobj->encoding == REDIS_ENCODING_ZIPLIST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        redisAssert(eptr != NULL);'), (26, 1, u'+        redisAssert(sptr != NULL);'), (30, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (38, 1, u'+            redisAssert(dictAdd(zs->dict,ele,&node->score) == DICT_OK);'), (66, 1, u'+            redisAssert(zzlInsertAt(zobj,ele,node->score,NULL) == REDIS_OK);')]
===========================================
===========================================
Total add: 79
Total del: 0
Header: zsLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        redisAssert(eptr != NULL);'), (26, 1, u'+        redisAssert(sptr != NULL);'), (30, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (38, 1, u'+            redisAssert(dictAdd(zs->dict,ele,&node->score) == DICT_OK);'), (66, 1, u'+            redisAssert(zzlInsertAt(zobj,ele,node->score,NULL) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        redisAssert(eptr != NULL);'), (26, 1, u'+        redisAssert(sptr != NULL);'), (30, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (38, 1, u'+            redisAssert(dictAdd(zs->dict,ele,&node->score) == DICT_OK);'), (66, 1, u'+            redisAssert(zzlInsertAt(zobj,ele,node->score,NULL) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (38, 1, u'+        redisAssert(eptr != NULL);'), (40, 1, u'+        redisAssert(sptr != NULL);'), (70, 1, u'+            redisAssert(rank); /* Existing elements always have a rank. */')]
===========================================
===========================================
Total add: 50
Total del: 22
Header: zscoreCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (38, 1, u'+        redisAssert(eptr != NULL);'), (40, 1, u'+        redisAssert(sptr != NULL);'), (70, 1, u'+            redisAssert(rank); /* Existing elements always have a rank. */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (38, 1, u'+        redisAssert(eptr != NULL);'), (40, 1, u'+        redisAssert(sptr != NULL);'), (70, 1, u'+            redisAssert(rank); /* Existing elements always have a rank. */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+        redisAssert(eptr != NULL);'), (87, 1, u'+                redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Total add: 110
Total del: 39
Header: genericZrangebyscoreCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+        redisAssert(eptr != NULL);'), (87, 1, u'+                redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+        redisAssert(eptr != NULL);'), (87, 1, u'+                redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(*eptr != NULL && *sptr != NULL);'), (11, 1, u'+        redisAssert(_sptr != NULL);'), (25, 1, u'+    redisAssert(*eptr != NULL && *sptr != NULL);'), (30, 1, u'+        redisAssert(_eptr != NULL);')]
===========================================
===========================================
Total add: 38
Total del: 0
Header: zzlLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(*eptr != NULL && *sptr != NULL);'), (11, 1, u'+        redisAssert(_sptr != NULL);'), (25, 1, u'+    redisAssert(*eptr != NULL && *sptr != NULL);'), (30, 1, u'+        redisAssert(_eptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(*eptr != NULL && *sptr != NULL);'), (11, 1, u'+        redisAssert(_sptr != NULL);'), (25, 1, u'+    redisAssert(*eptr != NULL && *sptr != NULL);'), (30, 1, u'+        redisAssert(_eptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        redisAssert(eptr != NULL);'), (6, 2, u'-            redisAssert(eptr != NULL);'), (7, 1, u'+            redisAssert(eptr != NULL && sptr != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: zrangeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        redisAssert(eptr != NULL);'), (6, 2, u'-            redisAssert(eptr != NULL);'), (7, 1, u'+            redisAssert(eptr != NULL && sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        redisAssert(eptr != NULL);'), (6, 2, u'-            redisAssert(eptr != NULL);'), (7, 1, u'+            redisAssert(eptr != NULL && sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                redisAssert(sptr != NULL);'), (15, 2, u'-                    redisAssert(eptr != NULL);'), (21, 2, u'-                redisAssert(sptr != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 19
Header: zrangeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                redisAssert(sptr != NULL);'), (15, 2, u'-                    redisAssert(eptr != NULL);'), (21, 2, u'-                redisAssert(sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-                redisAssert(sptr != NULL);'), (15, 2, u'-                    redisAssert(eptr != NULL);'), (21, 2, u'-                redisAssert(sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+            redisAssert(eptr != NULL);'), (35, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (43, 1, u'+                redisAssert(sptr != NULL);'), (53, 1, u'+                    redisAssert(eptr != NULL);'), (59, 1, u'+                redisAssert(sptr != NULL);'), (82, 1, u'+            redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 72
Total del: 16
Header: zrangeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+            redisAssert(eptr != NULL);'), (35, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (43, 1, u'+                redisAssert(sptr != NULL);'), (53, 1, u'+                    redisAssert(eptr != NULL);'), (59, 1, u'+                redisAssert(sptr != NULL);'), (82, 1, u'+            redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+            redisAssert(eptr != NULL);'), (35, 1, u'+            redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (43, 1, u'+                redisAssert(sptr != NULL);'), (53, 1, u'+                    redisAssert(eptr != NULL);'), (59, 1, u'+                redisAssert(sptr != NULL);'), (82, 1, u'+            redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    redisAssert(p != NULL);'), (20, 1, u'+    redisAssert(p != NULL);'), (40, 1, u'+        redisAssert(sptr != NULL);'), (65, 1, u'+        redisAssert(sptr != NULL);'), (75, 1, u'+            redisAssert((eptr = ziplistPrev(zl,sptr)) != NULL);')]
===========================================
===========================================
Total add: 81
Total del: 0
Header: zzlLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    redisAssert(p != NULL);'), (20, 1, u'+    redisAssert(p != NULL);'), (40, 1, u'+        redisAssert(sptr != NULL);'), (65, 1, u'+        redisAssert(sptr != NULL);'), (75, 1, u'+            redisAssert((eptr = ziplistPrev(zl,sptr)) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    redisAssert(p != NULL);'), (20, 1, u'+    redisAssert(p != NULL);'), (40, 1, u'+        redisAssert(sptr != NULL);'), (65, 1, u'+        redisAssert(sptr != NULL);'), (75, 1, u'+            redisAssert((eptr = ziplistPrev(zl,sptr)) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+            redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (41, 1, u'+            redisAssert(zslDelete(zs->zsl,score,ele));'), (57, 2, u'-    redisAssert(deleted != 0);')]
===========================================
===========================================
Total add: 37
Total del: 22
Header: zincrbyCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+            redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (41, 1, u'+            redisAssert(zslDelete(zs->zsl,score,ele));'), (57, 2, u'-    redisAssert(deleted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+            redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (41, 1, u'+            redisAssert(zslDelete(zs->zsl,score,ele));'), (57, 2, u'-    redisAssert(deleted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    redisAssert(sptr != NULL);'), (14, 1, u'+    redisAssert(ziplistGet(sptr,&vstr,&vlen,&vlong));'), (35, 1, u'+    redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (55, 1, u'+        redisAssert(sptr != NULL);'), (92, 1, u'+    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (104, 1, u'+        redisAssert((sptr = ziplistNext(zl,eptr)) != NULL);'), (123, 1, u'+        redisAssert(sptr != NULL);')]
===========================================
===========================================
Total add: 151
Total del: 0
Header: zslParseRange
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    redisAssert(sptr != NULL);'), (14, 1, u'+    redisAssert(ziplistGet(sptr,&vstr,&vlen,&vlong));'), (35, 1, u'+    redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (55, 1, u'+        redisAssert(sptr != NULL);'), (92, 1, u'+    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (104, 1, u'+        redisAssert((sptr = ziplistNext(zl,eptr)) != NULL);'), (123, 1, u'+        redisAssert(sptr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    redisAssert(sptr != NULL);'), (14, 1, u'+    redisAssert(ziplistGet(sptr,&vstr,&vlen,&vlong));'), (35, 1, u'+    redisAssert(ziplistGet(eptr,&vstr,&vlen,&vlong));'), (55, 1, u'+        redisAssert(sptr != NULL);'), (92, 1, u'+    redisAssert(ele->encoding == REDIS_ENCODING_RAW);'), (104, 1, u'+        redisAssert((sptr = ziplistNext(zl,eptr)) != NULL);'), (123, 1, u'+        redisAssert(sptr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+                redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (47, 1, u'+                redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);'), (51, 2, u'-        redisAssert(de != NULL);'), (69, 1, u'+            redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);'), (89, 2, u'-        redisAssert(de != NULL);'), (97, 2, u'-            redisAssert(deleted != 0);'), (122, 1, u'+                redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (138, 1, u'+            redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Total add: 83
Total del: 61
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+                redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (47, 1, u'+                redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);'), (51, 2, u'-        redisAssert(de != NULL);'), (69, 1, u'+            redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);'), (89, 2, u'-        redisAssert(de != NULL);'), (97, 2, u'-            redisAssert(deleted != 0);'), (122, 1, u'+                redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (138, 1, u'+            redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+                redisAssert(zzlDelete(zobj,eptr) == REDIS_OK);'), (47, 1, u'+                redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);'), (51, 2, u'-        redisAssert(de != NULL);'), (69, 1, u'+            redisAssert(zzlInsert(zobj,ele,score) == REDIS_OK);'), (89, 2, u'-        redisAssert(de != NULL);'), (97, 2, u'-            redisAssert(deleted != 0);'), (122, 1, u'+                redisAssert(zslDelete(zs->zsl,curscore,curobj));'), (138, 1, u'+            redisAssert(dictAdd(zs->dict,ele,&znode->score) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (70, 1, u'+    redisAssert(x != NULL && zslValueInRange(x->score,&range));')]
===========================================
===========================================
Total add: 72
Total del: 0
Header: typedef struct {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (70, 1, u'+    redisAssert(x != NULL && zslValueInRange(x->score,&range));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+    redisAssert(x != NULL && zslValueInRange(x->score,&range));'), (70, 1, u'+    redisAssert(x != NULL && zslValueInRange(x->score,&range));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    redisAssert(sdslen(c->argv[0]->ptr) == 4);')]
===========================================
===========================================
Total add: 15
Total del: 2
Header: spopCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    redisAssert(sdslen(c->argv[0]->ptr) == 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    redisAssert(sdslen(c->argv[0]->ptr) == 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(d->ht[0].size > (unsigned)d->rehashidx);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: dictRehash
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(d->ht[0].size > (unsigned)d->rehashidx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(d->ht[0].size > (unsigned)d->rehashidx);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: rewriteAppendOnlyFileBackground
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: dsExists
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Total add: 2
Total del: 11
Header: dsFlushOneDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-            redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: rdbSave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: rdbSaveBackground
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+    redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            redisAssert(!(cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG));')]
===========================================
===========================================
Total add: 3
Total del: 5
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            redisAssert(!(cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            redisAssert(!(cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-                redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Total add: 16
Total del: 8
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-                redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-                redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+            redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Total add: 47
Total del: 1
Header: dsExists
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+            redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+            redisAssert(p != NULL && len < 64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert((cacheScheduleIOGetFlags(db,key) & (REDIS_IO_SAVE|REDIS_IO_SAVEINPROG)) == 0);'), (3, 1, u'+                redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert((cacheScheduleIOGetFlags(db,key) & (REDIS_IO_SAVE|REDIS_IO_SAVEINPROG)) == 0);'), (3, 1, u'+                redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert((cacheScheduleIOGetFlags(db,key) & (REDIS_IO_SAVE|REDIS_IO_SAVEINPROG)) == 0);'), (3, 1, u'+                redisAssert((cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            redisAssert(!(flags & flag));')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: cacheScheduleIOAddFlag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            redisAssert(!(flags & flag));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            redisAssert(!(flags & flag));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                redisAssert((cacheScheduleIOGetFlags(db,key) & (REDIS_IO_SAVE|REDIS_IO_SAVEINPROG)) == 0);')]
===========================================
===========================================
Total add: 11
Total del: 5
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                redisAssert((cacheScheduleIOGetFlags(db,key) & (REDIS_IO_SAVE|REDIS_IO_SAVEINPROG)) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                redisAssert((cacheScheduleIOGetFlags(db,key) & (REDIS_IO_SAVE|REDIS_IO_SAVEINPROG)) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            redisAssert(val->storage != REDIS_DS_SAVING);'), (13, 1, u'+            redisAssert(!(cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG));')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            redisAssert(val->storage != REDIS_DS_SAVING);'), (13, 1, u'+            redisAssert(!(cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            redisAssert(val->storage != REDIS_DS_SAVING);'), (13, 1, u'+            redisAssert(!(cacheScheduleIOGetFlags(db,key) & REDIS_IO_SAVEINPROG));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: *IOThreadEntryPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+    redisAssert(de != NULL);'), (70, 1, u'+    redisAssert(flags & flag);')]
===========================================
===========================================
Total add: 95
Total del: 18
Header: dsCreateIOJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+    redisAssert(de != NULL);'), (70, 1, u'+    redisAssert(flags & flag);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+    redisAssert(de != NULL);'), (70, 1, u'+    redisAssert(flags & flag);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                redisAssert(val->storage == REDIS_DS_DIRTY);')]
===========================================
===========================================
Total add: 27
Total del: 18
Header: cacheCron
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                redisAssert(val->storage == REDIS_DS_DIRTY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                redisAssert(val->storage == REDIS_DS_DIRTY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: addReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(o->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(o->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(o->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Total add: 20
Total del: 4
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+                redisAssert(retval == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(j->val->storage == REDIS_DS_SAVING);'), (5, 1, u'+                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(j->val->storage == REDIS_DS_SAVING);'), (5, 1, u'+                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(j->val->storage == REDIS_DS_SAVING);'), (5, 1, u'+                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(j->val->storage == REDIS_DS_SAVING);'), (5, 1, u'+                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: *IOThreadEntryPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(j->val->storage == REDIS_DS_SAVING);'), (5, 1, u'+                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(j->val->storage == REDIS_DS_SAVING);'), (5, 1, u'+                redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage == REDIS_DS_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: addReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage == REDIS_DS_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage == REDIS_DS_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    redisAssert(equalStringObjects(key,dskey));')]
===========================================
===========================================
Total add: 46
Total del: 1
Header: dsSet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    redisAssert(equalStringObjects(key,dskey));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    redisAssert(equalStringObjects(key,dskey));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(j->val != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: *IOThreadEntryPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(j->val != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(j->val != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *IOThreadEntryPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+                redisAssert(val->storage == REDIS_DS_DIRTY);')]
===========================================
===========================================
Total add: 60
Total del: 0
Header: dsCreateIOJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+                redisAssert(val->storage == REDIS_DS_DIRTY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+                redisAssert(val->storage == REDIS_DS_DIRTY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            redisAssert(j->val != NULL);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: *IOThreadEntryPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            redisAssert(j->val != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            redisAssert(j->val != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-            redisAssert(j->val->storage == REDIS_VM_SWAPPING);'), (48, 1, u'+            redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 5
Total del: 60
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-            redisAssert(j->val->storage == REDIS_VM_SWAPPING);'), (48, 1, u'+            redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-            redisAssert(j->val->storage == REDIS_VM_SWAPPING);'), (48, 1, u'+            redisAssert(j->val->storage == REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-    redisAssert(val->storage == REDIS_VM_MEMORY);'), (32, 2, u'-    redisAssert(val->refcount == 1);'), (76, 2, u'-    redisAssert(vp->type == REDIS_VMPOINTER &&')]
===========================================
===========================================
Total add: 4
Total del: 117
Header: vmInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-    redisAssert(val->storage == REDIS_VM_MEMORY);'), (32, 2, u'-    redisAssert(val->refcount == 1);'), (76, 2, u'-    redisAssert(vp->type == REDIS_VMPOINTER &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-    redisAssert(val->storage == REDIS_VM_MEMORY);'), (32, 2, u'-    redisAssert(val->refcount == 1);'), (76, 2, u'-    redisAssert(vp->type == REDIS_VMPOINTER &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(vmFreePage(page) == 1);'), (25, 2, u'-    redisAssert(vmFreePage(page) == 0);')]
===========================================
===========================================
Total add: 0
Total del: 118
Header: vmInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(vmFreePage(page) == 1);'), (25, 2, u'-    redisAssert(vmFreePage(page) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(vmFreePage(page) == 1);'), (25, 2, u'-    redisAssert(vmFreePage(page) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    redisAssert(o->storage == REDIS_VM_LOADING || o->storage == REDIS_VM_SWAPPING);'), (82, 2, u'-    redisAssert(1 != 1); /* We should never reach this */')]
===========================================
===========================================
Total add: 0
Total del: 83
Header: unlockThreadedIO
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    redisAssert(o->storage == REDIS_VM_LOADING || o->storage == REDIS_VM_SWAPPING);'), (82, 2, u'-    redisAssert(1 != 1); /* We should never reach this */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    redisAssert(o->storage == REDIS_VM_LOADING || o->storage == REDIS_VM_SWAPPING);'), (82, 2, u'-    redisAssert(1 != 1); /* We should never reach this */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteAppendOnlyFileBackground
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                redisAssert(val->type == REDIS_VMPOINTER);'), (25, 1, u'+            redisAssert(val->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 5
Total del: 19
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                redisAssert(val->type == REDIS_VMPOINTER);'), (25, 1, u'+            redisAssert(val->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                redisAssert(val->type == REDIS_VMPOINTER);'), (25, 1, u'+            redisAssert(val->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage == REDIS_DS_MEMORY);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: addReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage == REDIS_DS_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.ds_enabled || obj->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage == REDIS_DS_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+        redisAssert(o->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Total add: 3
Total del: 23
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+        redisAssert(o->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+        redisAssert(o->storage != REDIS_DS_SAVING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: rdbSave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbSaveBackground
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(server.ds_enabled == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.vm_enabled || obj->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: addReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.vm_enabled || obj->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.vm_enabled || obj->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.ds_enabled || obj->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(server.vm_enabled);'), (3, 1, u'+        redisAssert(server.ds_enabled);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(server.vm_enabled);'), (3, 1, u'+        redisAssert(server.ds_enabled);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(server.vm_enabled);'), (3, 1, u'+        redisAssert(server.ds_enabled);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(NULL);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: processItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(c->err == REDIS_ERR_IO &&'), (20, 2, u'-        assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Total add: 12
Total del: 21
Header: test_blocking_connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(c->err == REDIS_ERR_IO &&'), (20, 2, u'-        assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(c->err == REDIS_ERR_IO &&'), (20, 2, u'-        assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+    assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Total add: 37
Total del: 0
Header: test_blocking_connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+    assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+    assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
Total add: 5
Total del: 20
Header: resetClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(newline-(p+6) == 12); /* 12 chars for randomness */'), (14, 1, u'+            assert(c->randlen < (signed)(sizeof(c->randptr)/sizeof(char*)));')]
===========================================
===========================================
Total add: 15
Total del: 2
Header: createClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(newline-(p+6) == 12); /* 12 chars for randomness */'), (14, 1, u'+            assert(c->randlen < (signed)(sizeof(c->randptr)/sizeof(char*)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(newline-(p+6) == 12); /* 12 chars for randomness */'), (14, 1, u'+            assert(c->randlen < (signed)(sizeof(c->randptr)/sizeof(char*)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
Total add: 18
Total del: 5
Header: randomizeClientKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+            assert(newline-(p+6) == 12); /* 12 chars for randomness */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(NULL);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: processItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(c->err == REDIS_ERR_IO &&'), (20, 2, u'-        assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Total add: 12
Total del: 21
Header: test_blocking_connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(c->err == REDIS_ERR_IO &&'), (20, 2, u'-        assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-        assert(c->err == REDIS_ERR_IO &&'), (20, 2, u'-        assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+    assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Total add: 37
Total del: 0
Header: test_blocking_connection
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+    assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+    assert(c->err == REDIS_ERR_EOF &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(subject->type == REDIS_SET);'), (7, 1, u'+    redisAssert(setobj->type == REDIS_SET &&')]
===========================================
===========================================
Total add: 15
Total del: 10
Header: setTypeSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(subject->type == REDIS_SET);'), (7, 1, u'+    redisAssert(setobj->type == REDIS_SET &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(subject->type == REDIS_SET);'), (7, 1, u'+    redisAssert(setobj->type == REDIS_SET &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(listTypeNext(li,&entry));')]
===========================================
===========================================
Total add: 24
Total del: 7
Header: lrangeCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(listTypeNext(li,&entry));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(listTypeNext(li,&entry));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: beforeSleep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(ln != NULL);'), (35, 1, u'+        redisAssert(ln != NULL);'), (41, 1, u'+        redisAssert(ln != listFirst(clients));')]
===========================================
===========================================
Total add: 38
Total del: 22
Header: handleClientsWaitingListPush
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(ln != NULL);'), (35, 1, u'+        redisAssert(ln != NULL);'), (41, 1, u'+        redisAssert(ln != listFirst(clients));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    redisAssert(ln != NULL);'), (35, 1, u'+        redisAssert(ln != NULL);'), (41, 1, u'+        redisAssert(ln != listFirst(clients));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->bstate.keys != NULL);'), (3, 1, u'+    redisAssert(c->bpop.keys != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->bstate.keys != NULL);'), (3, 1, u'+    redisAssert(c->bpop.keys != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->bstate.keys != NULL);'), (3, 1, u'+    redisAssert(c->bpop.keys != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        redisAssert(listTypeLength(key) > 0);'), (29, 1, u'+            redisAssert(listTypeLength(key) > 0);')]
===========================================
===========================================
Total add: 15
Total del: 8
Header: brpoplpushCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        redisAssert(listTypeLength(key) > 0);'), (29, 1, u'+            redisAssert(listTypeLength(key) > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        redisAssert(listTypeLength(key) > 0);'), (29, 1, u'+            redisAssert(listTypeLength(key) > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        redisAssert(listTypeLength(key) > 0);')]
===========================================
===========================================
Total add: 23
Total del: 4
Header: brpopCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        redisAssert(listTypeLength(key) > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        redisAssert(listTypeLength(key) > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->blocking_keys != NULL);'), (3, 1, u'+    redisAssert(c->bstate.keys != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->blocking_keys != NULL);'), (3, 1, u'+    redisAssert(c->bstate.keys != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(c->blocking_keys != NULL);'), (3, 1, u'+    redisAssert(c->bstate.keys != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    assert(argc > 0);')]
===========================================
===========================================
Total add: 15
Total del: 6
Header: outputGroupHelp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    assert(argc > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+    assert(argc > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    redisAssert((nwritten = rdbSaveObject(fp,o)) != -1);'), (12, 1, u'+    redisAssert(len != -1);')]
===========================================
===========================================
Total add: 4
Total del: 8
Header: rdbSaveObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    redisAssert((nwritten = rdbSaveObject(fp,o)) != -1);'), (12, 1, u'+    redisAssert(len != -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    redisAssert((nwritten = rdbSaveObject(fp,o)) != -1);'), (12, 1, u'+    redisAssert(len != -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    redisAssert(rdbSaveObject(fp,o) != 1);'), (9, 1, u'+    redisAssert((nwritten = rdbSaveObject(fp,o)) != -1);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: rdbSaveObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    redisAssert(rdbSaveObject(fp,o) != 1);'), (9, 1, u'+    redisAssert((nwritten = rdbSaveObject(fp,o)) != -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    redisAssert(rdbSaveObject(fp,o) != 1);'), (9, 1, u'+    redisAssert((nwritten = rdbSaveObject(fp,o)) != -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(ret == REDIS_OK && reply == NULL);')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: test_reply_reader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(ret == REDIS_OK && reply == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(ret == REDIS_OK && reply == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(server.replstate == REDIS_REPL_TRANSFER);')]
===========================================
===========================================
Total add: 60
Total del: 1
Header: updateSlavesWaitingBgsave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(server.replstate == REDIS_REPL_TRANSFER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(server.replstate == REDIS_REPL_TRANSFER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(r->ridx >= 0);'), (18, 2, u'-    assert(prv->type == REDIS_REPLY_ARRAY);'), (24, 2, u'-        assert(cur->idx < prv->elements);'), (30, 1, u'+        assert(prv->type == REDIS_REPLY_ARRAY);'), (35, 1, u'+            assert(cur->idx < prv->elements);')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: moveToNextTask
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(r->ridx >= 0);'), (18, 2, u'-    assert(prv->type == REDIS_REPLY_ARRAY);'), (24, 2, u'-        assert(cur->idx < prv->elements);'), (30, 1, u'+        assert(prv->type == REDIS_REPLY_ARRAY);'), (35, 1, u'+            assert(cur->idx < prv->elements);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(r->ridx >= 0);'), (18, 2, u'-    assert(prv->type == REDIS_REPLY_ARRAY);'), (24, 2, u'-        assert(cur->idx < prv->elements);'), (30, 1, u'+        assert(prv->type == REDIS_REPLY_ARRAY);'), (35, 1, u'+            assert(cur->idx < prv->elements);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        assert(redisReplyReaderSetReplyObjectFunctions(c->reader,c->fn) == REDIS_OK);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: redisSetReplyObjectFunctions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        assert(redisReplyReaderSetReplyObjectFunctions(c->reader,c->fn) == REDIS_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        assert(redisReplyReaderSetReplyObjectFunctions(c->reader,c->fn) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(143, 1, u'+        assert(__redisShiftCallback(&ac->replies,NULL) == REDIS_ERR);'), (186, 1, u'+        assert(__redisShiftCallback(&ac->replies,&cb) == REDIS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(103, 1, u'+    assert(task->type == REDIS_REPLY_ERROR ||'), (115, 1, u'+        assert(parent->type == REDIS_REPLY_ARRAY);'), (128, 1, u'+        assert(parent->type == REDIS_REPLY_ARRAY);'), (139, 1, u'+        assert(parent->type == REDIS_REPLY_ARRAY);'), (149, 1, u'+        assert(parent->type == REDIS_REPLY_ARRAY);'), (180, 1, u'+    assert(r->ridx >= 0);'), (190, 1, u'+    assert(prv->type == REDIS_REPLY_ARRAY);'), (196, 1, u'+        assert(cur->idx < prv->elements);'), (553, 1, u'+    assert(pos == totlen);'), (611, 1, u'+    assert(pos == totlen);'), (623, 1, u'+        assert(type == REDIS_ERR_IO);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(91, 1, u'+        assert(c->err == REDIS_ERR_IO &&'), (95, 1, u'+        assert(c->err == REDIS_ERR_EOF &&'), (229, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_STATUS);'), (240, 1, u'+        assert(replies[i] != NULL && replies[i]->type == REDIS_REPLY_ARRAY);'), (241, 1, u'+        assert(replies[i] != NULL && replies[i]->elements == 500);'), (255, 1, u'+    assert(reply != NULL); freeReplyObject(reply);'), (257, 1, u'+    assert(reply != NULL); freeReplyObject(reply);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 26
Total del: 2
Header: loadServerConfig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+        assert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: initServer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+        assert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+        assert(retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: *createClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: processCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!(c->flags & REDIS_QUIT));'), (3, 1, u'+    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: processCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!(c->flags & REDIS_QUIT));'), (3, 1, u'+    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!(c->flags & REDIS_QUIT));'), (3, 1, u'+    redisAssert(!(c->flags & REDIS_CLOSE_AFTER_REPLY));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (6, 1, u'+    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: loaderr:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (6, 1, u'+    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(c->argv[2]->encoding == REDIS_ENCODING_RAW);'), (6, 1, u'+    redisAssert(c->argv[3]->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: configGetCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(103, 1, u'+        redisAssert(c->argc == 0);'), (112, 1, u"+        redisAssert(c->querybuf[0] == '*');"), (128, 1, u'+    redisAssert(c->multibulklen > 0);')]
===========================================
===========================================
Total add: 157
Total del: 83
Header: closeTimedoutClients
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(103, 1, u'+        redisAssert(c->argc == 0);'), (112, 1, u"+        redisAssert(c->querybuf[0] == '*');"), (128, 1, u'+    redisAssert(c->multibulklen > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(103, 1, u'+        redisAssert(c->argc == 0);'), (112, 1, u"+        redisAssert(c->querybuf[0] == '*');"), (128, 1, u'+    redisAssert(c->multibulklen > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        assert(NULL);')]
===========================================
===========================================
Total add: 26
Total del: 0
Header: pop
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(strncmp(v1,entry,elen) == 0);'), (3, 1, u'+        assert(strncmp(v1,(char*)entry,elen) == 0);'), (6, 2, u'-        assert(strncmp(v2,entry,elen) == 0);'), (7, 1, u'+        assert(strncmp(v2,(char*)entry,elen) == 0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(strncmp(v1,entry,elen) == 0);'), (3, 1, u'+        assert(strncmp(v1,(char*)entry,elen) == 0);'), (6, 2, u'-        assert(strncmp(v2,entry,elen) == 0);'), (7, 1, u'+        assert(strncmp(v2,(char*)entry,elen) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(strncmp(v1,entry,elen) == 0);'), (3, 1, u'+        assert(strncmp(v1,(char*)entry,elen) == 0);'), (6, 2, u'-        assert(strncmp(v2,entry,elen) == 0);'), (7, 1, u'+        assert(strncmp(v2,(char*)entry,elen) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+                    assert(NULL);'), (78, 1, u'+                    assert(NULL);'), (87, 2, u'-            assert(len == idx+1);'), (94, 2, u'-            assert(len == idx+1);'), (95, 1, u'+            assert(listLength(ref) == ziplistLen(zl));'), (102, 1, u'+                assert(ziplistGet(p,&sstr,&slen,&sval));'), (109, 1, u'+                assert(strcmp(buf,listNodeValue(refnode)) == 0);')]
===========================================
===========================================
Total add: 67
Total del: 39
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+                    assert(NULL);'), (78, 1, u'+                    assert(NULL);'), (87, 2, u'-            assert(len == idx+1);'), (94, 2, u'-            assert(len == idx+1);'), (95, 1, u'+            assert(listLength(ref) == ziplistLen(zl));'), (102, 1, u'+                assert(ziplistGet(p,&sstr,&slen,&sval));'), (109, 1, u'+                assert(strcmp(buf,listNodeValue(refnode)) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+                    assert(NULL);'), (78, 1, u'+                    assert(NULL);'), (87, 2, u'-            assert(len == idx+1);'), (94, 2, u'-            assert(len == idx+1);'), (95, 1, u'+            assert(listLength(ref) == ziplistLen(zl));'), (102, 1, u'+                assert(ziplistGet(p,&sstr,&slen,&sval));'), (109, 1, u'+                assert(strcmp(buf,listNodeValue(refnode)) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(!(c->flags & REDIS_QUIT));')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: processCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(!(c->flags & REDIS_QUIT));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(!(c->flags & REDIS_QUIT));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(ziplistGet(p,&entry,&elen,&value));'), (14, 1, u'+        assert(strncmp(v1,entry,elen) == 0);'), (16, 1, u'+        assert(ziplistGet(p,&entry,&elen,&value));'), (17, 1, u'+        assert(strncmp(v2,entry,elen) == 0);')]
===========================================
===========================================
Total add: 19
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(ziplistGet(p,&entry,&elen,&value));'), (14, 1, u'+        assert(strncmp(v1,entry,elen) == 0);'), (16, 1, u'+        assert(ziplistGet(p,&entry,&elen,&value));'), (17, 1, u'+        assert(strncmp(v2,entry,elen) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(ziplistGet(p,&entry,&elen,&value));'), (14, 1, u'+        assert(strncmp(v1,entry,elen) == 0);'), (16, 1, u'+        assert(ziplistGet(p,&entry,&elen,&value));'), (17, 1, u'+        assert(strncmp(v2,entry,elen) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(!server.vm_enabled || obj->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Total add: 16
Total del: 8
Header: _addReplyStringToList
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(!server.vm_enabled || obj->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    redisAssert(!server.vm_enabled || obj->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(entry.prevrawlen > 0);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *ziplistPrev
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(entry.prevrawlen > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(entry.prevrawlen > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+            assert(len == idx+1);'), (51, 1, u'+            assert(len == idx+1);')]
===========================================
===========================================
Total add: 51
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+            assert(len == idx+1);'), (51, 1, u'+            assert(len == idx+1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+            assert(len == idx+1);'), (51, 1, u'+            assert(len == idx+1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(size > sizeof(redisClient));')]
===========================================
===========================================
Total add: 3
Total del: 7
Header: *createClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(size > sizeof(redisClient));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    redisAssert(size > sizeof(redisClient));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(obj->type == REDIS_STRING &&'), (11, 1, u'+    redisAssert(listLength(reply) > 0);'), (43, 2, u'-    redisAssert(len < REDIS_REPLY_CHUNK_THRESHOLD);')]
===========================================
===========================================
Total add: 81
Total del: 26
Header: _ensureFileEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(obj->type == REDIS_STRING &&'), (11, 1, u'+    redisAssert(listLength(reply) > 0);'), (43, 2, u'-    redisAssert(len < REDIS_REPLY_CHUNK_THRESHOLD);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    redisAssert(obj->type == REDIS_STRING &&'), (11, 1, u'+    redisAssert(listLength(reply) > 0);'), (43, 2, u'-    redisAssert(len < REDIS_REPLY_CHUNK_THRESHOLD);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        redisAssert(fakeClient->bufpos == 0 && listLength(fakeClient->reply) == 0);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: loadAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        redisAssert(fakeClient->bufpos == 0 && listLength(fakeClient->reply) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        redisAssert(fakeClient->bufpos == 0 && listLength(fakeClient->reply) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(size > sizeof(redisClient));')]
===========================================
===========================================
Total add: 10
Total del: 1
Header: listMatchObjects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(size > sizeof(redisClient));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(size > sizeof(redisClient));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(obj->type == REDIS_STRING &&'), (21, 1, u'+    redisAssert(len < REDIS_REPLY_CHUNK_THRESHOLD);')]
===========================================
===========================================
Total add: 54
Total del: 3
Header: addReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(obj->type == REDIS_STRING &&'), (21, 1, u'+    redisAssert(len < REDIS_REPLY_CHUNK_THRESHOLD);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert(obj->type == REDIS_STRING &&'), (21, 1, u'+    redisAssert(len < REDIS_REPLY_CHUNK_THRESHOLD);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 20
Total del: 1
Header: isStringRepresentableAsLong
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(INTSET_VALUE_ENCODING(-32768) == INTSET_ENC_INT16);'), (3, 2, u'-        assert(INTSET_VALUE_ENCODING(+32767) == INTSET_ENC_INT16);'), (4, 2, u'-        assert(INTSET_VALUE_ENCODING(-32769) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(INTSET_VALUE_ENCODING(+32768) == INTSET_ENC_INT32);'), (6, 2, u'-        assert(INTSET_VALUE_ENCODING(-2147483648) == INTSET_ENC_INT32);'), (7, 2, u'-        assert(INTSET_VALUE_ENCODING(+2147483647) == INTSET_ENC_INT32);'), (8, 2, u'-        assert(INTSET_VALUE_ENCODING(-2147483649) == INTSET_ENC_INT64);'), (9, 2, u'-        assert(INTSET_VALUE_ENCODING(+2147483648) == INTSET_ENC_INT64);'), (10, 2, u'-        assert(INTSET_VALUE_ENCODING(-9223372036854775808ull) == INTSET_ENC_INT64);'), (11, 2, u'-        assert(INTSET_VALUE_ENCODING(+9223372036854775807ull) == INTSET_ENC_INT64);'), (12, 1, u'+        assert(_intsetValueEncoding(-32768) == INTSET_ENC_INT16);'), (13, 1, u'+        assert(_intsetValueEncoding(+32767) == INTSET_ENC_INT16);'), (14, 1, u'+        assert(_intsetValueEncoding(-32769) == INTSET_ENC_INT32);'), (15, 1, u'+        assert(_intsetValueEncoding(+32768) == INTSET_ENC_INT32);'), (16, 1, u'+        assert(_intsetValueEncoding(-2147483648) == INTSET_ENC_INT32);'), (17, 1, u'+        assert(_intsetValueEncoding(+2147483647) == INTSET_ENC_INT32);'), (18, 1, u'+        assert(_intsetValueEncoding(-2147483649) == INTSET_ENC_INT64);'), (19, 1, u'+        assert(_intsetValueEncoding(+2147483648) == INTSET_ENC_INT64);'), (20, 1, u'+        assert(_intsetValueEncoding(-9223372036854775808ull) == INTSET_ENC_INT64);'), (21, 1, u'+        assert(_intsetValueEncoding(+9223372036854775807ull) == INTSET_ENC_INT64);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(INTSET_VALUE_ENCODING(-32768) == INTSET_ENC_INT16);'), (3, 2, u'-        assert(INTSET_VALUE_ENCODING(+32767) == INTSET_ENC_INT16);'), (4, 2, u'-        assert(INTSET_VALUE_ENCODING(-32769) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(INTSET_VALUE_ENCODING(+32768) == INTSET_ENC_INT32);'), (6, 2, u'-        assert(INTSET_VALUE_ENCODING(-2147483648) == INTSET_ENC_INT32);'), (7, 2, u'-        assert(INTSET_VALUE_ENCODING(+2147483647) == INTSET_ENC_INT32);'), (8, 2, u'-        assert(INTSET_VALUE_ENCODING(-2147483649) == INTSET_ENC_INT64);'), (9, 2, u'-        assert(INTSET_VALUE_ENCODING(+2147483648) == INTSET_ENC_INT64);'), (10, 2, u'-        assert(INTSET_VALUE_ENCODING(-9223372036854775808ull) == INTSET_ENC_INT64);'), (11, 2, u'-        assert(INTSET_VALUE_ENCODING(+9223372036854775807ull) == INTSET_ENC_INT64);'), (12, 1, u'+        assert(_intsetValueEncoding(-32768) == INTSET_ENC_INT16);'), (13, 1, u'+        assert(_intsetValueEncoding(+32767) == INTSET_ENC_INT16);'), (14, 1, u'+        assert(_intsetValueEncoding(-32769) == INTSET_ENC_INT32);'), (15, 1, u'+        assert(_intsetValueEncoding(+32768) == INTSET_ENC_INT32);'), (16, 1, u'+        assert(_intsetValueEncoding(-2147483648) == INTSET_ENC_INT32);'), (17, 1, u'+        assert(_intsetValueEncoding(+2147483647) == INTSET_ENC_INT32);'), (18, 1, u'+        assert(_intsetValueEncoding(-2147483649) == INTSET_ENC_INT64);'), (19, 1, u'+        assert(_intsetValueEncoding(+2147483648) == INTSET_ENC_INT64);'), (20, 1, u'+        assert(_intsetValueEncoding(-9223372036854775808ull) == INTSET_ENC_INT64);'), (21, 1, u'+        assert(_intsetValueEncoding(+9223372036854775807ull) == INTSET_ENC_INT64);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(INTSET_VALUE_ENCODING(-32768) == INTSET_ENC_INT16);'), (3, 2, u'-        assert(INTSET_VALUE_ENCODING(+32767) == INTSET_ENC_INT16);'), (4, 2, u'-        assert(INTSET_VALUE_ENCODING(-32769) == INTSET_ENC_INT32);'), (5, 2, u'-        assert(INTSET_VALUE_ENCODING(+32768) == INTSET_ENC_INT32);'), (6, 2, u'-        assert(INTSET_VALUE_ENCODING(-2147483648) == INTSET_ENC_INT32);'), (7, 2, u'-        assert(INTSET_VALUE_ENCODING(+2147483647) == INTSET_ENC_INT32);'), (8, 2, u'-        assert(INTSET_VALUE_ENCODING(-2147483649) == INTSET_ENC_INT64);'), (9, 2, u'-        assert(INTSET_VALUE_ENCODING(+2147483648) == INTSET_ENC_INT64);'), (10, 2, u'-        assert(INTSET_VALUE_ENCODING(-9223372036854775808ull) == INTSET_ENC_INT64);'), (11, 2, u'-        assert(INTSET_VALUE_ENCODING(+9223372036854775807ull) == INTSET_ENC_INT64);'), (12, 1, u'+        assert(_intsetValueEncoding(-32768) == INTSET_ENC_INT16);'), (13, 1, u'+        assert(_intsetValueEncoding(+32767) == INTSET_ENC_INT16);'), (14, 1, u'+        assert(_intsetValueEncoding(-32769) == INTSET_ENC_INT32);'), (15, 1, u'+        assert(_intsetValueEncoding(+32768) == INTSET_ENC_INT32);'), (16, 1, u'+        assert(_intsetValueEncoding(-2147483648) == INTSET_ENC_INT32);'), (17, 1, u'+        assert(_intsetValueEncoding(+2147483647) == INTSET_ENC_INT32);'), (18, 1, u'+        assert(_intsetValueEncoding(-2147483649) == INTSET_ENC_INT64);'), (19, 1, u'+        assert(_intsetValueEncoding(+2147483648) == INTSET_ENC_INT64);'), (20, 1, u'+        assert(_intsetValueEncoding(-9223372036854775808ull) == INTSET_ENC_INT64);'), (21, 1, u'+        assert(_intsetValueEncoding(+9223372036854775807ull) == INTSET_ENC_INT64);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    assert(NULL);')]
===========================================
===========================================
Total add: 18
Total del: 7
Header: typedef struct zlentry {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+            assert(NULL);')]
===========================================
===========================================
Total add: 16
Total del: 11
Header: zipEncodingSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+            assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+            assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 16
Total del: 9
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);'), (9, 1, u'+    redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: setExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);'), (9, 1, u'+    redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);'), (9, 1, u'+    redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(server.vm_enabled);'), (16, 1, u'+            redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 16
Total del: 11
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(server.vm_enabled);'), (16, 1, u'+            redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(server.vm_enabled);'), (16, 1, u'+            redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);'), (398, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);'), (410, 1, u'+    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);'), (429, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(293, 1, u'+void _redisAssert(char *estr, char *file, int line) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(190, 1, u'+        redisAssert(clients != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+    redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (212, 1, u'+    redisAssert(o->type == REDIS_STRING);'), (259, 1, u'+    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (294, 1, u'+    redisAssert(o->type == REDIS_STRING);'), (311, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (348, 1, u'+        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+        redisAssert(de != NULL);'), (65, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 1, u'+        redisAssert(enclen < 32);'), (169, 1, u'+        redisAssert(obj->encoding == REDIS_ENCODING_RAW);'), (324, 1, u'+    redisAssert(rdbSaveObject(fp,o) != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(243, 1, u'+    redisAssert(j == vectorlen);'), (269, 1, u'+                    redisAssert(1 != 1);'), (326, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */'), (357, 1, u'+                        redisAssert(sop->type == REDIS_SORT_GET);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 1, u'+        redisAssert(NULL);'), (198, 1, u'+    redisAssert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+    redisAssert(li->subject->encoding == li->encoding);'), (149, 1, u'+        redisAssert(entry->zi != NULL);'), (158, 1, u'+        redisAssert(entry->ln != NULL);'), (201, 1, u'+        redisAssert(o->encoding == REDIS_ENCODING_RAW);'), (238, 1, u'+    redisAssert(subject->type == REDIS_LIST);'), (305, 1, u'+        redisAssert(refval->encoding == REDIS_ENCODING_RAW);'), (494, 1, u'+        redisAssert(listTypeNext(li,&entry));'), (700, 1, u'+            redisAssert(retval == DICT_OK);'), (717, 1, u'+    redisAssert(c->blocking_keys != NULL);'), (722, 1, u'+        redisAssert(de != NULL);'), (763, 1, u'+    redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(393, 1, u'+        redisAssert(de != NULL);'), (400, 1, u'+            redisAssert(deleted != 0);'), (449, 1, u'+    redisAssert(deleted != 0);'), (698, 1, u'+        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+    assert(NULL);'), (214, 1, u'+        assert(NULL);'), (233, 1, u'+        assert(NULL);'), (915, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (916, 1, u'+            assert(i == value);'), (919, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (920, 1, u'+            assert(999-i == value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 2, u'-    assert(NULL);'), (214, 2, u'-        assert(NULL);'), (233, 2, u'-        assert(NULL);'), (915, 2, u'-            assert(ziplistGet(p,NULL,NULL,&value));'), (916, 2, u'-            assert(i == value);'), (919, 2, u'-            assert(ziplistGet(p,NULL,NULL,&value));'), (920, 2, u'-            assert(999-i == value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            redisAssert(dictAdd(subject->ptr,value,NULL) == DICT_OK);')]
===========================================
===========================================
Total add: 15
Total del: 0
Header: setTypeAdd
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            redisAssert(dictAdd(subject->ptr,value,NULL) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            redisAssert(dictAdd(subject->ptr,value,NULL) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(subject->type == REDIS_SET);'), (13, 1, u'+            redisAssert(dictAdd(d,element,NULL) == DICT_OK);')]
===========================================
===========================================
Total add: 22
Total del: 0
Header: setTypeSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(subject->type == REDIS_SET);'), (13, 1, u'+            redisAssert(dictAdd(d,element,NULL) == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(subject->type == REDIS_SET);'), (13, 1, u'+            redisAssert(dictAdd(d,element,NULL) == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 1, u'+#define assert(_e) ((_e)?(void)0:(_assert(#_e,__FILE__,__LINE__),exit(1)))'), (209, 1, u'+void _assert(char *estr, char *file, int line) {'), (236, 1, u'+            assert(i16[i] < i16[i+1]);'), (239, 1, u'+            assert(i32[i] < i32[i+1]);'), (242, 1, u'+            assert(i64[i] < i64[i+1]);'), (254, 1, u'+        assert(INTSET_VALUE_ENCODING(-32768) == INTSET_ENC_INT16);'), (255, 1, u'+        assert(INTSET_VALUE_ENCODING(+32767) == INTSET_ENC_INT16);'), (256, 1, u'+        assert(INTSET_VALUE_ENCODING(-32769) == INTSET_ENC_INT32);'), (257, 1, u'+        assert(INTSET_VALUE_ENCODING(+32768) == INTSET_ENC_INT32);'), (258, 1, u'+        assert(INTSET_VALUE_ENCODING(-2147483648) == INTSET_ENC_INT32);'), (259, 1, u'+        assert(INTSET_VALUE_ENCODING(+2147483647) == INTSET_ENC_INT32);'), (260, 1, u'+        assert(INTSET_VALUE_ENCODING(-2147483649) == INTSET_ENC_INT64);'), (261, 1, u'+        assert(INTSET_VALUE_ENCODING(+2147483648) == INTSET_ENC_INT64);'), (262, 1, u'+        assert(INTSET_VALUE_ENCODING(-9223372036854775808ull) == INTSET_ENC_INT64);'), (263, 1, u'+        assert(INTSET_VALUE_ENCODING(+9223372036854775807ull) == INTSET_ENC_INT64);'), (269, 1, u'+        is = intsetAdd(is,5,&success); assert(success);'), (270, 1, u'+        is = intsetAdd(is,6,&success); assert(success);'), (271, 1, u'+        is = intsetAdd(is,4,&success); assert(success);'), (272, 1, u'+        is = intsetAdd(is,4,&success); assert(!success);'), (283, 1, u'+        assert(is->length == inserts);'), (291, 1, u'+        assert(is->encoding == INTSET_ENC_INT16);'), (293, 1, u'+        assert(is->encoding == INTSET_ENC_INT32);'), (294, 1, u'+        assert(intsetFind(is,32));'), (295, 1, u'+        assert(intsetFind(is,65535));'), (300, 1, u'+        assert(is->encoding == INTSET_ENC_INT16);'), (302, 1, u'+        assert(is->encoding == INTSET_ENC_INT32);'), (303, 1, u'+        assert(intsetFind(is,32));'), (304, 1, u'+        assert(intsetFind(is,-65535));'), (312, 1, u'+        assert(is->encoding == INTSET_ENC_INT16);'), (314, 1, u'+        assert(is->encoding == INTSET_ENC_INT64);'), (315, 1, u'+        assert(intsetFind(is,32));'), (316, 1, u'+        assert(intsetFind(is,4294967295));'), (321, 1, u'+        assert(is->encoding == INTSET_ENC_INT16);'), (323, 1, u'+        assert(is->encoding == INTSET_ENC_INT64);'), (324, 1, u'+        assert(intsetFind(is,32));'), (325, 1, u'+        assert(intsetFind(is,-4294967295));'), (333, 1, u'+        assert(is->encoding == INTSET_ENC_INT32);'), (335, 1, u'+        assert(is->encoding == INTSET_ENC_INT64);'), (336, 1, u'+        assert(intsetFind(is,65535));'), (337, 1, u'+        assert(intsetFind(is,4294967295));'), (342, 1, u'+        assert(is->encoding == INTSET_ENC_INT32);'), (344, 1, u'+        assert(is->encoding == INTSET_ENC_INT64);'), (345, 1, u'+        assert(intsetFind(is,65535));'), (346, 1, u'+        assert(intsetFind(is,-4294967295));'), (369, 1, u'+            assert(intsetFind(is,v1));'), (373, 1, u'+            assert(!intsetFind(is,v2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(refval->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 8
Total del: 3
Header: pushxGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(refval->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        redisAssert(refval->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: monitorCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: removeExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    redisAssert((de = dictFind(db->dict,key->ptr)) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: getExpire
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    redisAssert(dictFind(db->dict,key->ptr) != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(li->subject->encoding == li->encoding);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: listTypeReleaseIterator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(li->subject->encoding == li->encoding);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    redisAssert(li->subject->encoding == li->encoding);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(lNext(li,&entry));'), (7, 1, u'+        redisAssert(listTypeNext(li,&entry));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: lrangeCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(lNext(li,&entry));'), (7, 1, u'+        redisAssert(listTypeNext(li,&entry));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        redisAssert(lNext(li,&entry));'), (7, 1, u'+        redisAssert(listTypeNext(li,&entry));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(subject->type == REDIS_LIST);')]
===========================================
===========================================
Total add: 21
Total del: 0
Header: lDelete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(subject->type == REDIS_LIST);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    redisAssert(subject->type == REDIS_LIST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: vmSwapObjectThreaded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(de != NULL);')]
===========================================
===========================================
Total add: 0
Total del: 6
Header: appendCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
Total add: 0
Total del: 57
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
Total add: 74
Total del: 0
Header: getLongFromObjectOrReply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(de != NULL);'), (3, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(de != NULL);'), (3, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(de != NULL);'), (3, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+                        redisAssert(sop->type == REDIS_SORT_GET);'), (39, 2, u'-                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Total add: 17
Total del: 18
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+                        redisAssert(sop->type == REDIS_SORT_GET);'), (39, 2, u'-                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+                        redisAssert(sop->type == REDIS_SORT_GET);'), (39, 2, u'-                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        redisAssert(enclen < 32);')]
===========================================
===========================================
Total add: 16
Total del: 2
Header: rdbSaveRawString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        redisAssert(enclen < 32);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        redisAssert(enclen < 32);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+        redisAssert(obj->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 3
Total del: 23
Header: rdbSaveStringObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+        redisAssert(obj->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+        redisAssert(obj->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(li->zi != NULL);'), (4, 1, u'+        redisAssert(entry->zi != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: *lGet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(li->zi != NULL);'), (4, 1, u'+        redisAssert(entry->zi != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(li->zi != NULL);'), (4, 1, u'+        redisAssert(entry->zi != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(li->ln != NULL);'), (4, 1, u'+        redisAssert(entry->ln != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: *lGet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(li->ln != NULL);'), (4, 1, u'+        redisAssert(entry->ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(li->ln != NULL);'), (4, 1, u'+        redisAssert(entry->ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        redisAssert(li->zi != NULL);'), (20, 2, u'-        redisAssert(li->ln != NULL);')]
===========================================
===========================================
Total add: 17
Total del: 11
Header: lEqualTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        redisAssert(li->zi != NULL);'), (20, 2, u'-        redisAssert(li->ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        redisAssert(li->zi != NULL);'), (20, 2, u'-        redisAssert(li->ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        redisAssert(value != NULL);'), (7, 1, u'+        redisAssert(lNext(li,&entry));')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: lrangeCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        redisAssert(value != NULL);'), (7, 1, u'+        redisAssert(lNext(li,&entry));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        redisAssert(value != NULL);'), (7, 1, u'+        redisAssert(lNext(li,&entry));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 6
Total del: 9
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                redisAssert(val == NULL);'), (24, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
Total add: 9
Total del: 10
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                redisAssert(val == NULL);'), (24, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                redisAssert(val == NULL);'), (24, 1, u'+                redisAssert(val->type == REDIS_VMPOINTER);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(key->storage == REDIS_VM_MEMORY);'), (9, 2, u'-    assert(key->refcount == 1);'), (16, 1, u'+    assert(val->storage == REDIS_VM_MEMORY);'), (17, 1, u'+    assert(val->refcount == 1);')]
===========================================
===========================================
Total add: 12
Total del: 11
Header: vmWriteObjectOnSwap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(key->storage == REDIS_VM_MEMORY);'), (9, 2, u'-    assert(key->refcount == 1);'), (16, 1, u'+    assert(val->storage == REDIS_VM_MEMORY);'), (17, 1, u'+    assert(val->refcount == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(key->storage == REDIS_VM_MEMORY);'), (9, 2, u'-    assert(key->refcount == 1);'), (16, 1, u'+    assert(val->storage == REDIS_VM_MEMORY);'), (17, 1, u'+    assert(val->refcount == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING);'), (10, 1, u'+    redisAssert(vp->type == REDIS_VMPOINTER &&')]
===========================================
===========================================
Total add: 9
Total del: 11
Header: *vmReadObjectFromSwap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING);'), (10, 1, u'+    redisAssert(vp->type == REDIS_VMPOINTER &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING);'), (10, 1, u'+    redisAssert(vp->type == REDIS_VMPOINTER &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(key->storage == REDIS_VM_SWAPPING);'), (10, 1, u'+            redisAssert(j->val->storage == REDIS_VM_SWAPPING);')]
===========================================
===========================================
Total add: 7
Total del: 9
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(key->storage == REDIS_VM_SWAPPING);'), (10, 1, u'+            redisAssert(j->val->storage == REDIS_VM_SWAPPING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(key->storage == REDIS_VM_SWAPPING);'), (10, 1, u'+            redisAssert(j->val->storage == REDIS_VM_SWAPPING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(1 != 1); /* We should never reach this */'), (4, 1, u'+    redisAssert(1 != 1); /* We should never reach this */')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: again:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(1 != 1); /* We should never reach this */'), (4, 1, u'+    redisAssert(1 != 1); /* We should never reach this */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(1 != 1); /* We should never reach this */'), (4, 1, u'+    redisAssert(1 != 1); /* We should never reach this */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->refcount == 1);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: vmSwapObjectThreaded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->refcount == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->refcount == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (14, 1, u'+            assert(i == value);'), (17, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (18, 1, u'+            assert(999-i == value);')]
===========================================
===========================================
Total add: 21
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (14, 1, u'+            assert(i == value);'), (17, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (18, 1, u'+            assert(999-i == value);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (14, 1, u'+            assert(i == value);'), (17, 1, u'+            assert(ziplistGet(p,NULL,NULL,&value));'), (18, 1, u'+            assert(999-i == value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        redisAssert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 30
Total del: 0
Header: *lGet
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        redisAssert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        redisAssert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 1, u'+        redisAssert(li->zi != NULL);'), (46, 1, u'+        redisAssert(li->ln != NULL);'), (58, 1, u'+        redisAssert(li->zi != NULL);'), (64, 1, u'+        redisAssert(li->ln != NULL);')]
===========================================
===========================================
Total add: 71
Total del: 0
Header: lLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 1, u'+        redisAssert(li->zi != NULL);'), (46, 1, u'+        redisAssert(li->ln != NULL);'), (58, 1, u'+        redisAssert(li->zi != NULL);'), (64, 1, u'+        redisAssert(li->ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 1, u'+        redisAssert(li->zi != NULL);'), (46, 1, u'+        redisAssert(li->ln != NULL);'), (58, 1, u'+        redisAssert(li->zi != NULL);'), (64, 1, u'+        redisAssert(li->ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(value != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: lrangeCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(value != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(value != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    assert(NULL);'), (123, 2, u'-        assert(NULL);'), (141, 2, u'-        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(NULL);'), (111, 1, u'+        assert(NULL);'), (130, 1, u'+        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+        assert(NULL);'), (99, 1, u'+        assert(NULL);')]
===========================================
===========================================
Total add: 87
Total del: 10
Header: zipDecodeLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+        assert(NULL);'), (99, 1, u'+        assert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+        assert(NULL);'), (99, 1, u'+        assert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(c->blockingkeys != NULL);'), (3, 1, u'+    assert(c->blocking_keys != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: unblockClientWaitingData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(c->blockingkeys != NULL);'), (3, 1, u'+    assert(c->blocking_keys != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(c->blockingkeys != NULL);'), (3, 1, u'+    assert(c->blocking_keys != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+        assert(clients != NULL);')]
===========================================
===========================================
Total add: 110
Total del: 0
Header: publishCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+        assert(clients != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+        assert(clients != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(j < argc);')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: waitForSwappedKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(j < argc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        redisAssert(j < argc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: getDoubleFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: getLongLongFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 5
Total del: 6
Header: hincrbyCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (19, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 16
Total del: 4
Header: stringObjectLen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (19, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (19, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 11
Total del: 10
Header: getDoubleFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (19, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 16
Total del: 4
Header: getDoubleFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (19, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        redisAssert(o->type == REDIS_STRING);'), (19, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 11
Total del: 10
Header: getLongLongFromObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: freeHashObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: redisAssert(0); break;')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: redisAssert(0); break;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: redisAssert(0); break;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbSaveObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadIntegerObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadStringObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zunionInterAggregate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: vectorlen = 0; redisAssert(0); /* Avoid GCC warning */')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: vectorlen = 0; redisAssert(0); /* Avoid GCC warning */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: vectorlen = 0; redisAssert(0); /* Avoid GCC warning */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        redisAssert(1 != 1);'), (8, 1, u'+                    redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        redisAssert(1 != 1);'), (8, 1, u'+                    redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        redisAssert(1 != 1);'), (8, 1, u'+                    redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-                            redisAssert(1 != 1);'), (41, 1, u'+                        redisAssert(1 != 1);'), (51, 2, u'-                            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 26
Total del: 25
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-                            redisAssert(1 != 1);'), (41, 1, u'+                        redisAssert(1 != 1);'), (51, 2, u'-                            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-                            redisAssert(1 != 1);'), (41, 1, u'+                        redisAssert(1 != 1);'), (51, 2, u'-                            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(161, 1, u'+        redisAssert(NULL);')]
===========================================
===========================================
Total add: 136
Total del: 86
Header: hsetCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(161, 1, u'+        redisAssert(NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(161, 1, u'+        redisAssert(NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-                redisAssert(1 != 1);'), (95, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 51
Total del: 47
Header: hincrbyCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-                redisAssert(1 != 1);'), (95, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-                redisAssert(1 != 1);'), (95, 1, u'+            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-    assert(ht->used == 0);')]
===========================================
===========================================
Total add: 59
Total del: 24
Header: dictExpand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-    assert(ht->used == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-    assert(ht->used == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        redisAssert(1 != 1);'), (46, 1, u'+        redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 71
Total del: 0
Header: stringObjectLen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        redisAssert(1 != 1);'), (46, 1, u'+        redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        redisAssert(1 != 1);'), (46, 1, u'+        redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-                redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 15
Header: incrDecrCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-                redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-                redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(o->refcount == 1);')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(o->refcount == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            redisAssert(o->refcount == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (27, 2, u'-            redisAssert(de != NULL);'), (40, 2, u'-            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 0
Total del: 45
Header: deleteKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (27, 2, u'-            redisAssert(de != NULL);'), (40, 2, u'-            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    redisAssert(o->type == REDIS_STRING);'), (27, 2, u'-            redisAssert(de != NULL);'), (40, 2, u'-            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: freeHashObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+        assert(de != NULL);'), (50, 1, u'+        assert(ln != NULL);')]
===========================================
===========================================
Total add: 126
Total del: 0
Header: badarity:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+        assert(de != NULL);'), (50, 1, u'+        assert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+        assert(de != NULL);'), (50, 1, u'+        assert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert(reqfreelen != 0);')]
===========================================
===========================================
Total add: 20
Total del: 30
Header: zipmapEncodeLength
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert(reqfreelen != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert(reqfreelen != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+                redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 76
Total del: 0
Header: hsetCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+                redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+                redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 18
Total del: 0
Header: qsortCompareZsetopsrcByCardinality
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: redisAssert(0 != 0); break;'), (3, 1, u'+        default: redisAssert(0); break;')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: redisAssert(0 != 0); break;'), (3, 1, u'+        default: redisAssert(0); break;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: redisAssert(0 != 0); break;'), (3, 1, u'+        default: redisAssert(0); break;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbSaveObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0!=0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadIntegerObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0!=0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0!=0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(0!=0);'), (3, 1, u'+            redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadStringObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(0!=0);'), (3, 1, u'+            redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            redisAssert(0!=0);'), (3, 1, u'+            redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        redisAssert(0 != 0);'), (3, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(0 != 0);'), (3, 1, u'+                redisAssert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(0 != 0);'), (3, 1, u'+                redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                redisAssert(0 != 0);'), (3, 1, u'+                redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        redisAssert(deleted != 0);'), (45, 1, u'+    redisAssert(deleted != 0);')]
===========================================
===========================================
Total add: 20
Total del: 27
Header: zremCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        redisAssert(deleted != 0);'), (45, 1, u'+    redisAssert(deleted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        redisAssert(deleted != 0);'), (45, 1, u'+    redisAssert(deleted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
Total add: 21
Total del: 0
Header: hgetCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(o->type == REDIS_HASH && o->encoding != REDIS_ENCODING_HT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(129, 1, u'+        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
Total add: 96
Total del: 22
Header: zmergeGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(129, 1, u'+        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(129, 1, u'+        redisAssert(op == REDIS_OP_INTER || op == REDIS_OP_UNION);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Total add: 11
Total del: 1
Header: freeZsetObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        redisAssert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+        redisAssert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 1, u'+        assert(reqfreelen != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
Total add: 46
Total del: 0
Header: decrbyCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define redisAssert(_e) ((_e)?(void)0 : (_redisAssert(#_e,__FILE__,__LINE__),exit(1)))'), (3, 1, u'+#define redisAssert(_e) ((_e)?(void)0 : (_redisAssert(#_e,__FILE__,__LINE__),_exit(1)))')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+            assert(cmd != NULL);')]
===========================================
===========================================
Total add: 32
Total del: 0
Header: serverCron
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+            assert(cmd != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+            assert(cmd != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED);'), (3, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *vmGenericLoadObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED);'), (3, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED);'), (3, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED || key->storage == REDIS_VM_LOADING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+        assert(retval == DICT_OK);'), (117, 1, u'+    assert(ln != NULL);'), (121, 1, u'+    assert(de != NULL);'), (124, 1, u'+    assert(ln != NULL);')]
===========================================
===========================================
Total add: 145
Total del: 7
Header: vmSwapObjectThreaded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+        assert(retval == DICT_OK);'), (117, 1, u'+    assert(ln != NULL);'), (121, 1, u'+    assert(de != NULL);'), (124, 1, u'+    assert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+        assert(retval == DICT_OK);'), (117, 1, u'+    assert(ln != NULL);'), (121, 1, u'+    assert(de != NULL);'), (124, 1, u'+    assert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(vmFreePage(page) == 1);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: vmMarkPageUsed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(vmFreePage(page) == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(vmFreePage(page) == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(vmFreePage(page) == 0);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: vmMarkPageFree
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(vmFreePage(page) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    redisAssert(vmFreePage(page) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(listLength(server.io_processed) != 0);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(listLength(server.io_processed) != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(listLength(server.io_processed) != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(listLength(server.io_processed) != 0);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(listLength(server.io_processed) != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(listLength(server.io_processed) != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define redisAssert(_e) ((_e)?(void)0 : (_redisAssert(#_e),exit(1)))'), (3, 2, u'-static void _redisAssert(char *estr);'), (4, 1, u'+#define redisAssert(_e) ((_e)?(void)0 : (_redisAssert(#_e,__FILE__,__LINE__),exit(1)))'), (5, 1, u'+static void _redisAssert(char *estr, char *file, int line);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            redisAssert(key->storage == REDIS_VM_SWAPPING);')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            redisAssert(key->storage == REDIS_VM_SWAPPING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            redisAssert(key->storage == REDIS_VM_SWAPPING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static void _redisAssert(char *estr) {'), (3, 1, u'+static void _redisAssert(char *estr, char *file, int line) {')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: debugCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static void _redisAssert(char *estr) {'), (3, 1, u'+static void _redisAssert(char *estr, char *file, int line) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-static void _redisAssert(char *estr) {'), (3, 1, u'+static void _redisAssert(char *estr, char *file, int line) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Total add: 4
Total del: 9
Header: vmSwapObjectBlocking
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: *vmGenericLoadObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *createStringObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(o->encoding == REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(fp != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: rdbSaveObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(fp != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(fp != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(listLength(server.io_processed) != 0);'), (24, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
Total add: 65
Total del: 0
Header: vmThreadedIOCompletedJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(listLength(server.io_processed) != 0);'), (24, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(listLength(server.io_processed) != 0);'), (24, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        assert(write(server.io_ready_pipe_write,"x",1) == 1);'), (70, 1, u'+    assert(key->storage == REDIS_VM_MEMORY);'), (71, 1, u'+    assert(key->refcount == 1);')]
===========================================
===========================================
Total add: 86
Total del: 0
Header: vmCancelThreadedIOJob
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        assert(write(server.io_ready_pipe_write,"x",1) == 1);'), (70, 1, u'+    assert(key->storage == REDIS_VM_MEMORY);'), (71, 1, u'+    assert(key->refcount == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        assert(write(server.io_ready_pipe_write,"x",1) == 1);'), (70, 1, u'+    assert(key->storage == REDIS_VM_MEMORY);'), (71, 1, u'+    assert(key->refcount == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(o->refcount == 1);'), (10, 1, u'+            redisAssert(o->refcount == 1);')]
===========================================
===========================================
Total add: 8
Total del: 3
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(o->refcount == 1);'), (10, 1, u'+            redisAssert(o->refcount == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        redisAssert(o->refcount == 1);'), (10, 1, u'+            redisAssert(o->refcount == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(anetNonBlock(NULL,server.io_ready_pipe_read) != ANET_ERR);')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: vmInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(anetNonBlock(NULL,server.io_ready_pipe_read) != ANET_ERR);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    redisAssert(anetNonBlock(NULL,server.io_ready_pipe_read) != ANET_ERR);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->storage == REDIS_VM_SWAPPED);'), (3, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *vmGenericLoadObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->storage == REDIS_VM_SWAPPED);'), (3, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(key->storage == REDIS_VM_SWAPPED);'), (3, 1, u'+    redisAssert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: freeHashObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);'), (3, 1, u'+    redisAssert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(o->refcount == 1);'), (3, 2, u'-        assert(o->type == REDIS_STRING);'), (4, 1, u'+        redisAssert(o->refcount == 1);'), (5, 1, u'+        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(o->refcount == 1);'), (3, 2, u'-        assert(o->type == REDIS_STRING);'), (4, 1, u'+        redisAssert(o->refcount == 1);'), (5, 1, u'+        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(o->refcount == 1);'), (3, 2, u'-        assert(o->type == REDIS_STRING);'), (4, 1, u'+        redisAssert(o->refcount == 1);'), (5, 1, u'+        redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(val == NULL);'), (3, 1, u'+                redisAssert(val == NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(val == NULL);'), (3, 1, u'+                redisAssert(val == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(val == NULL);'), (3, 1, u'+                redisAssert(val == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(key->refcount == 1);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: vmSwapObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(key->refcount == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(key->refcount == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+                assert(val == NULL);')]
===========================================
===========================================
Total add: 14
Total del: 4
Header: *lookupKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+                assert(val == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+                assert(val == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: freeHashObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(!server.vm_enabled || o->storage == REDIS_VM_MEMORY);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(o->refcount == 1);'), (9, 1, u'+        assert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 12
Total del: 4
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(o->refcount == 1);'), (9, 1, u'+        assert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(o->refcount == 1);'), (9, 1, u'+        assert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(key->storage == REDIS_VM_MEMORY);'), (36, 1, u'+    assert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Total add: 49
Total del: 1
Header: vmFindContiguousPages
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(key->storage == REDIS_VM_MEMORY);'), (36, 1, u'+    assert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(key->storage == REDIS_VM_MEMORY);'), (36, 1, u'+    assert(key->storage == REDIS_VM_SWAPPED);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(50, 1, u'+        redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 53
Total del: 0
Header: rdbLoadDoubleValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(50, 1, u'+        redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(50, 1, u'+        redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-            redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 3
Total del: 49
Header: rdbLoad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-            redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-            redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        redisAssert(0 != 0);'), (61, 1, u'+    assert(fp != NULL);'), (64, 1, u'+    assert(rdbSaveObject(fp,o) != 1);')]
===========================================
===========================================
Total add: 66
Total del: 0
Header: rdbSaveDoubleValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        redisAssert(0 != 0);'), (61, 1, u'+    assert(fp != NULL);'), (64, 1, u'+    assert(rdbSaveObject(fp,o) != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        redisAssert(0 != 0);'), (61, 1, u'+    assert(fp != NULL);'), (64, 1, u'+    assert(rdbSaveObject(fp,o) != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-                redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 2
Total del: 46
Header: rdbSave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-                redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-                redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-        assert(retval == DICT_OK);'), (37, 1, u'+            assert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 23
Total del: 15
Header: execCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-        assert(retval == DICT_OK);'), (37, 1, u'+            assert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-        assert(retval == DICT_OK);'), (37, 1, u'+            assert(retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(c->blockingkey != NULL);'), (7, 2, u'-    assert(de != NULL);'), (16, 1, u'+    assert(c->blockingkeys != NULL);'), (21, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
Total add: 17
Total del: 12
Header: unblockClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(c->blockingkey != NULL);'), (7, 2, u'-    assert(de != NULL);'), (16, 1, u'+    assert(c->blockingkeys != NULL);'), (21, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(c->blockingkey != NULL);'), (7, 2, u'-    assert(de != NULL);'), (16, 1, u'+    assert(c->blockingkeys != NULL);'), (21, 1, u'+        assert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        assert(retval == DICT_OK);'), (63, 1, u'+    assert(c->blockingkey != NULL);'), (65, 1, u'+    assert(de != NULL);'), (109, 1, u'+    assert(ln != NULL);')]
===========================================
===========================================
Total add: 154
Total del: 0
Header: execCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        assert(retval == DICT_OK);'), (63, 1, u'+    assert(c->blockingkey != NULL);'), (65, 1, u'+    assert(de != NULL);'), (109, 1, u'+    assert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+        assert(retval == DICT_OK);'), (63, 1, u'+    assert(c->blockingkey != NULL);'), (65, 1, u'+    assert(de != NULL);'), (109, 1, u'+    assert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+#define redisAssert(_e) ((_e)?(void)0 : (_redisAssert(#_e),exit(1)))'), (4, 1, u'+static void _redisAssert(char *estr);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ln != NULL);'), (3, 1, u'+    redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ln != NULL);'), (3, 1, u'+    redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ln != NULL);'), (3, 1, u'+    redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(ln != NULL);'), (3, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: freeClient
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(ln != NULL);'), (3, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(ln != NULL);'), (3, 1, u'+        redisAssert(ln != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: assert(0 != 0); break;'), (3, 1, u'+        default: redisAssert(0 != 0); break;')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: assert(0 != 0); break;'), (3, 1, u'+        default: redisAssert(0 != 0); break;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        default: assert(0 != 0); break;'), (3, 1, u'+        default: redisAssert(0 != 0); break;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *tryObjectSharing
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(de != NULL);'), (3, 1, u'+            redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *tryObjectSharing
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(de != NULL);'), (3, 1, u'+            redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(de != NULL);'), (3, 1, u'+            redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(retval == DICT_OK);'), (3, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *tryObjectSharing
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(retval == DICT_OK);'), (3, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(retval == DICT_OK);'), (3, 1, u'+            redisAssert(retval == DICT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: tryObjectEncoding
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(1 != 1);'), (3, 1, u'+        redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(1 != 1);'), (3, 1, u'+        redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(1 != 1);'), (3, 1, u'+        redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(a->type == REDIS_STRING && b->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: compareStringObjects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(o->type == REDIS_STRING);'), (3, 1, u'+    redisAssert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(0 != 0);'), (3, 1, u'+                redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbSave
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(0 != 0);'), (3, 1, u'+                redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(0 != 0);'), (3, 1, u'+                redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(0!=0);'), (3, 1, u'+        redisAssert(0!=0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadIntegerObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(0!=0);'), (3, 1, u'+        redisAssert(0!=0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(0!=0);'), (3, 1, u'+        redisAssert(0!=0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(0!=0);'), (3, 1, u'+            redisAssert(0!=0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *rdbLoadStringObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(0!=0);'), (3, 1, u'+            redisAssert(0!=0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(0!=0);'), (3, 1, u'+            redisAssert(0!=0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(0 != 0);'), (3, 1, u'+            redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rdbLoad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(0 != 0);'), (3, 1, u'+            redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(0 != 0);'), (3, 1, u'+            redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(1 != 1);'), (3, 1, u'+                redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: incrDecrCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(1 != 1);'), (3, 1, u'+                redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(1 != 1);'), (3, 1, u'+                redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(de != NULL);'), (3, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(de != NULL);'), (3, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(de != NULL);'), (3, 1, u'+        redisAssert(de != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(deleted != 0);'), (3, 1, u'+            redisAssert(deleted != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zaddGenericCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(deleted != 0);'), (3, 1, u'+            redisAssert(deleted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(deleted != 0);'), (3, 1, u'+            redisAssert(deleted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(deleted != 0);'), (3, 1, u'+        redisAssert(deleted != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: zremCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(deleted != 0);'), (3, 1, u'+        redisAssert(deleted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(deleted != 0);'), (3, 1, u'+        redisAssert(deleted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: vectorlen = 0; assert(0); /* Avoid GCC warning */'), (3, 1, u'+    default: vectorlen = 0; redisAssert(0); /* Avoid GCC warning */')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: vectorlen = 0; assert(0); /* Avoid GCC warning */'), (3, 1, u'+    default: vectorlen = 0; redisAssert(0); /* Avoid GCC warning */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    default: vectorlen = 0; assert(0); /* Avoid GCC warning */'), (3, 1, u'+    default: vectorlen = 0; redisAssert(0); /* Avoid GCC warning */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(j == vectorlen);'), (3, 1, u'+    redisAssert(j == vectorlen);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(j == vectorlen);'), (3, 1, u'+    redisAssert(j == vectorlen);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(j == vectorlen);'), (3, 1, u'+    redisAssert(j == vectorlen);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(1 != 1);'), (3, 1, u'+                            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(1 != 1);'), (3, 1, u'+                            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(1 != 1);'), (3, 1, u'+                            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(1 != 1);'), (3, 1, u'+                            redisAssert(1 != 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(1 != 1);'), (3, 1, u'+                            redisAssert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                            assert(1 != 1);'), (3, 1, u'+                            redisAssert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (3, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (3, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (3, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (3, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (3, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (3, 1, u'+                    redisAssert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(0 != 0);'), (3, 1, u'+                redisAssert(0 != 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: rewriteAppendOnlyFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(0 != 0);'), (3, 1, u'+                redisAssert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(0 != 0);'), (3, 1, u'+                redisAssert(0 != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+static void _redisAssert(char *estr) {')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: debugCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+static void _redisAssert(char *estr) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+static void _redisAssert(char *estr) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    default: vectorlen = 0; assert(0); /* Avoid GCC warning */')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    default: vectorlen = 0; assert(0); /* Avoid GCC warning */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    default: vectorlen = 0; assert(0); /* Avoid GCC warning */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(o->encoding != REDIS_ENCODING_RAW);')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: tryObjectEncoding
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(o->encoding != REDIS_ENCODING_RAW);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(o->encoding != REDIS_ENCODING_RAW);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 1, u'+                assert(0 != 0);')]
===========================================
===========================================
Total add: 232
Total del: 0
Header: fmterr:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 1, u'+                assert(0 != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 1, u'+                assert(0 != 0);')]
===========================================
Class:  class makecmd   class makecmd
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (75, 1, u'+                    assert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Total add: 59
Total del: 21
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (75, 1, u'+                    assert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+                    assert(sop->type == REDIS_SORT_GET); /* always fails */'), (75, 1, u'+                    assert(sop->type == REDIS_SORT_GET); /* always fails */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        assert(deleted != 0);')]
===========================================
===========================================
Total add: 35
Total del: 0
Header: zaddCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        assert(deleted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        assert(deleted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+        assert(de != NULL);'), (46, 1, u'+            assert(deleted != 0);')]
===========================================
===========================================
Total add: 53
Total del: 0
Header: zslInsert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+        assert(de != NULL);'), (46, 1, u'+            assert(deleted != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+        assert(de != NULL);'), (46, 1, u'+            assert(deleted != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(o->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: compareStringObjects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(o->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(o->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Total add: 19
Total del: 0
Header: *getDecodedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(a->type == REDIS_STRING && b->type == REDIS_STRING);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    assert(o->type == REDIS_STRING);'), (63, 1, u'+    assert(o->encoding != REDIS_ENCODING_RAW);'), (71, 1, u'+        assert(1 != 1);')]
===========================================
===========================================
Total add: 43
Total del: 23
Header: *tryObjectSharing
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    assert(o->type == REDIS_STRING);'), (63, 1, u'+    assert(o->encoding != REDIS_ENCODING_RAW);'), (71, 1, u'+        assert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+    assert(o->type == REDIS_STRING);'), (63, 1, u'+    assert(o->encoding != REDIS_ENCODING_RAW);'), (71, 1, u'+        assert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                assert(1 != 1);')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: incrDecrCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                assert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+                assert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+                            assert(1 != 1);'), (30, 1, u'+                            assert(1 != 1);')]
===========================================
===========================================
Total add: 24
Total del: 4
Header: sortCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+                            assert(1 != 1);'), (30, 1, u'+                            assert(1 != 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+                            assert(1 != 1);'), (30, 1, u'+                            assert(1 != 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+      ASSERT_EQUAL(c.sinterstore("setc", keys), 2L);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+      ASSERT_EQUAL(c.sinterstore("setc", keys), 2L);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+      ASSERT_EQUAL(c.sinterstore("setc", keys), 2L);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+      ASSERT_EQUAL(c.sunionstore("seth", keys), 2L);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+      ASSERT_EQUAL(c.sunionstore("seth", keys), 2L);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+      ASSERT_EQUAL(c.sunionstore("seth", keys), 2L);')]
===========================================
Class:  class makecmd   class makecmd
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(0!=0);'), (41, 1, u'+            assert(0!=0);')]
===========================================
===========================================
Total add: 39
Total del: 2
Header: rdbLoadLen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(0!=0);'), (41, 1, u'+            assert(0!=0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(0!=0);'), (41, 1, u'+            assert(0!=0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert(o->type == REDIS_STRING);'), (27, 1, u'+            assert(de != NULL);'), (40, 1, u'+            assert(retval == DICT_OK);')]
===========================================
===========================================
Total add: 45
Total del: 0
Header: decrRefCount
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert(o->type == REDIS_STRING);'), (27, 1, u'+            assert(de != NULL);'), (40, 1, u'+            assert(retval == DICT_OK);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    assert(o->type == REDIS_STRING);'), (27, 1, u'+            assert(de != NULL);'), (40, 1, u'+            assert(retval == DICT_OK);')]
===========================================
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
2018
Mismatch count:127752
Normal count:2737070
