projects/top_C/cocos2d-x
Going to process projects/top_C/cocos2d-x/all_log.txt 
---------- cocos2d-x ------------

===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != nullptr, "");'), (3, 2, u'-    CCASSERT(_children.contains(child), "");'), (9, 1, u'+    CCASSERT(child != nullptr, "child must be non null");'), (10, 1, u'+    CCASSERT(_children.contains(child), "child does not belong to this");')]
===========================================
===========================================
Total add: 2
Total del: 7
Header: Sprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != nullptr, "");'), (3, 2, u'-    CCASSERT(_children.contains(child), "");'), (9, 1, u'+    CCASSERT(child != nullptr, "child must be non null");'), (10, 1, u'+    CCASSERT(_children.contains(child), "child does not belong to this");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != nullptr, "");'), (3, 2, u'-    CCASSERT(_children.contains(child), "");'), (9, 1, u'+    CCASSERT(child != nullptr, "child must be non null");'), (10, 1, u'+    CCASSERT(_children.contains(child), "child does not belong to this");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(renderQueue >=0, "Invalid render queue");'), (3, 1, u'+    CCASSERT(command->getType() != RenderCommand::Type::UNKNOWN_COMMAND, "Invalid Command Type");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Renderer::addCommand
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(renderQueue >=0, "Invalid render queue");'), (3, 1, u'+    CCASSERT(command->getType() != RenderCommand::Type::UNKNOWN_COMMAND, "Invalid Command Type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(renderQueue >=0, "Invalid render queue");'), (3, 1, u'+    CCASSERT(command->getType() != RenderCommand::Type::UNKNOWN_COMMAND, "Invalid Command Type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    CCASSERT(true, "Invalid command");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    CCASSERT(true, "Invalid command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    CCASSERT(true, "Invalid command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
Total add: 47
Total del: 2
Header: LuaEngine::handleTableViewEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
Total add: 45
Total del: 2
Header: LuaEngine::handleTableViewEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(0, "TableView is not bound yet");')]
===========================================
Class:class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT(cmdQuadCount < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (3, 1, u'+                        CCASSERT(cmdQuadCount>=0 && cmdQuadCount<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT(cmdQuadCount < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (3, 1, u'+                        CCASSERT(cmdQuadCount>=0 && cmdQuadCount<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT(cmdQuadCount < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (3, 1, u'+                        CCASSERT(cmdQuadCount>=0 && cmdQuadCount<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(version == 3, "Only version 3 is supported");'), (4, 1, u'+    CCASSERT(pData[3] == 3, "Only version 3 is supported");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCBMFontConfiguration::parseBinaryConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(version == 3, "Only version 3 is supported");'), (4, 1, u'+    CCASSERT(pData[3] == 3, "Only version 3 is supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(version == 3, "Only version 3 is supported");'), (4, 1, u'+    CCASSERT(pData[3] == 3, "Only version 3 is supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCASSERT(len < blockSize, "Block size should be less then string");'), (4, 1, u'+            CCASSERT(strlen(value) < blockSize, "Block size should be less then string");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCBMFontConfiguration::parseBinaryConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCASSERT(len < blockSize, "Block size should be less then string");'), (4, 1, u'+            CCASSERT(strlen(value) < blockSize, "Block size should be less then string");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCASSERT(len < blockSize, "Block size should be less then string");'), (4, 1, u'+            CCASSERT(strlen(value) < blockSize, "Block size should be less then string");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!_running, "already running");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: Console::listenOnFileDescriptor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!_running, "already running");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!_running, "already running");')]
===========================================
Class:      class MySprite : public Sprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(v < INT_MAX, "The size should not bigger than 32 bit (int32_t).");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: ssize_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(v < INT_MAX, "The size should not bigger than 32 bit (int32_t).");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(v < INT_MAX, "The size should not bigger than 32 bit (int32_t).");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_shader->getProgram() < 64, "ShaderID is greater than 64");'), (3, 1, u'+    CCASSERT(_shader->getProgram() < pow(2,10), "ShaderID is greater than 2^10");'), (5, 2, u'-    CCASSERT(_textureID < 1024, "TextureID is greater than 1024");'), (6, 1, u'+    CCASSERT(_textureID < pow(2,18), "TextureID is greater than 2^18");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: QuadCommand::generateID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_shader->getProgram() < 64, "ShaderID is greater than 64");'), (3, 1, u'+    CCASSERT(_shader->getProgram() < pow(2,10), "ShaderID is greater than 2^10");'), (5, 2, u'-    CCASSERT(_textureID < 1024, "TextureID is greater than 1024");'), (6, 1, u'+    CCASSERT(_textureID < pow(2,18), "TextureID is greater than 2^18");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_shader->getProgram() < 64, "ShaderID is greater than 64");'), (3, 1, u'+    CCASSERT(_shader->getProgram() < pow(2,10), "ShaderID is greater than 2^10");'), (5, 2, u'-    CCASSERT(_textureID < 1024, "TextureID is greater than 1024");'), (6, 1, u'+    CCASSERT(_textureID < pow(2,18), "TextureID is greater than 2^18");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(map1.bucketCount() == 0, "");')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: TemplateMapTest::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(map1.bucketCount() == 0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(map1.bucketCount() == 0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
Total add: 2
Total del: 46
Header: LuaEngine::handleTableViewEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
Total add: 2
Total del: 45
Header: LuaEngine::handleTableViewEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+    CCASSERT(0, "TableView is not bound yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+    CCASSERT(0, "TableView is not bound yet");')]
===========================================
Class:class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(dynamic_cast<Widget*>(child) != NULL, "Widget only supports Widgets as children");'), (3, 1, u'+    CCASSERT(dynamic_cast<Widget*>(child) != nullptr, "Widget only supports Widgets as children");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Widget::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(dynamic_cast<Widget*>(child) != NULL, "Widget only supports Widgets as children");'), (3, 1, u'+    CCASSERT(dynamic_cast<Widget*>(child) != nullptr, "Widget only supports Widgets as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(dynamic_cast<Widget*>(child) != NULL, "Widget only supports Widgets as children");'), (3, 1, u'+    CCASSERT(dynamic_cast<Widget*>(child) != nullptr, "Widget only supports Widgets as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(dynamic_cast<Widget*>(node) == NULL, "Widget only supports Nodes as renderer");'), (3, 1, u'+    CCAssert(dynamic_cast<Widget*>(node) == nullptr, "Widget only supports Nodes as renderer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Widget::addNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(dynamic_cast<Widget*>(node) == NULL, "Widget only supports Nodes as renderer");'), (3, 1, u'+    CCAssert(dynamic_cast<Widget*>(node) == nullptr, "Widget only supports Nodes as renderer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(dynamic_cast<Widget*>(node) == NULL, "Widget only supports Nodes as renderer");'), (3, 1, u'+    CCAssert(dynamic_cast<Widget*>(node) == nullptr, "Widget only supports Nodes as renderer");')]
===========================================
Class:class LuaCocoStudioEventListener:public Object { 
Class: class LuaCocoStudioEventListener:public Object { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(s_pHttpClient, "");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: HttpClient::destroyInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(s_pHttpClient, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(s_pHttpClient, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(con != nullptr, "class named classname can not implement!");'), (6, 1, u'+            CCASSERT(con != nullptr, "");'), (9, 1, u'+        CCASSERT(con != nullptr, "");')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: TriggerObj::serialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(con != nullptr, "class named classname can not implement!");'), (6, 1, u'+            CCASSERT(con != nullptr, "");'), (9, 1, u'+        CCASSERT(con != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(con != nullptr, "class named classname can not implement!");'), (6, 1, u'+            CCASSERT(con != nullptr, "");'), (9, 1, u'+        CCASSERT(con != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(act != nullptr, "class named classname can not implement!");'), (6, 1, u'+            CCASSERT(act != nullptr, "");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: TriggerObj::serialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(act != nullptr, "class named classname can not implement!");'), (6, 1, u'+            CCASSERT(act != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(act != nullptr, "class named classname can not implement!");'), (6, 1, u'+            CCASSERT(act != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(!contents.empty(), "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (8, 1, u'+    CCASSERT((!data.isNull() && data.getSize() > 0), "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 10
Total del: 4
Header: CCBMFontConfiguration::parseConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(!contents.empty(), "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (8, 1, u'+    CCASSERT((!data.isNull() && data.getSize() > 0), "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(!contents.empty(), "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (8, 1, u'+    CCASSERT((!data.isNull() && data.getSize() > 0), "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    CCASSERT(version == 3, "Only version 3 is supported");'), (66, 1, u'+            CCASSERT(scaleW <= Configuration::getInstance()->getMaxTextureSize() && scaleH <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (69, 1, u'+            CCASSERT(pages == 1, "CCBitfontAtlas: only supports 1 page");'), (79, 1, u'+            CCASSERT(len < blockSize, "Block size should be less then string");')]
===========================================
===========================================
Total add: 161
Total del: 0
Header: CCBMFontConfiguration::parseConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    CCASSERT(version == 3, "Only version 3 is supported");'), (66, 1, u'+            CCASSERT(scaleW <= Configuration::getInstance()->getMaxTextureSize() && scaleH <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (69, 1, u'+            CCASSERT(pages == 1, "CCBitfontAtlas: only supports 1 page");'), (79, 1, u'+            CCASSERT(len < blockSize, "Block size should be less then string");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    CCASSERT(version == 3, "Only version 3 is supported");'), (66, 1, u'+            CCASSERT(scaleW <= Configuration::getInstance()->getMaxTextureSize() && scaleH <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (69, 1, u'+            CCASSERT(pages == 1, "CCBitfontAtlas: only supports 1 page");'), (79, 1, u'+            CCASSERT(len < blockSize, "Block size should be less then string");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pObj != nullptr, "Argument must be non-nil");'), (8, 1, u'+    CCAssert(obj != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: TriggerMng::getTriggerObj
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pObj != nullptr, "Argument must be non-nil");'), (8, 1, u'+    CCAssert(obj != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pObj != nullptr, "Argument must be non-nil");'), (8, 1, u'+    CCAssert(obj != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObj != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCAssert(pObj != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TriggerMng::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObj != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCAssert(pObj != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObj != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCAssert(pObj != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: FileUtilsAndroid::getDataFromFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-                CCASSERT(resultArray.count() == 2, "tableCellSizeForIndex Array count error");'), (19, 1, u'+                    CCASSERT(numReturn == 2, "tableCellSizeForIndex return count error");')]
===========================================
===========================================
Total add: 13
Total del: 12
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-                CCASSERT(resultArray.count() == 2, "tableCellSizeForIndex Array count error");'), (19, 1, u'+                    CCASSERT(numReturn == 2, "tableCellSizeForIndex return count error");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-                CCASSERT(resultArray.count() == 2, "tableCellSizeForIndex Array count error");'), (19, 1, u'+                    CCASSERT(numReturn == 2, "tableCellSizeForIndex return count error");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    CCASSERT(numReturn == 1, "tableCellAtIndex return count error");')]
===========================================
===========================================
Total add: 7
Total del: 10
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    CCASSERT(numReturn == 1, "tableCellAtIndex return count error");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    CCASSERT(numReturn == 1, "tableCellAtIndex return count error");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    CCASSERT(numReturn == 1, "numberOfCellsInTableView return count error");')]
===========================================
===========================================
Total add: 8
Total del: 10
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    CCASSERT(numReturn == 1, "numberOfCellsInTableView return count error");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                    CCASSERT(numReturn == 1, "numberOfCellsInTableView return count error");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(con != NULL, "class named classname can not implement!");'), (3, 1, u'+        CCAssert(con != nullptr, "class named classname can not implement!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TriggerObj::serialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(con != NULL, "class named classname can not implement!");'), (3, 1, u'+        CCAssert(con != nullptr, "class named classname can not implement!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(con != NULL, "class named classname can not implement!");'), (3, 1, u'+        CCAssert(con != nullptr, "class named classname can not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(act != NULL, "class named classname can not implement!");'), (3, 1, u'+\t\tCCAssert(act != nullptr, "class named classname can not implement!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TriggerObj::serialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(act != NULL, "class named classname can not implement!");'), (3, 1, u'+\t\tCCAssert(act != nullptr, "class named classname can not implement!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(act != NULL, "class named classname can not implement!");'), (3, 1, u'+\t\tCCAssert(act != nullptr, "class named classname can not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(101, 1, u'+    CCAssert(event >= 0, "Argument must be larger than 0");'), (124, 1, u'+    CCAssert(pObj != NULL, "Argument must be non-nil");'), (171, 1, u'+    CCAssert(event >= 0, "event must be larger than 0");'), (198, 1, u'+\tCCAssert(event >= 0, "event must be larger than 0");'), (199, 1, u'+\tCCAssert(Obj != 0, "TriggerObj must be not 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(192, 1, u'+        CCAssert(con != NULL, "class named classname can not implement!");'), (209, 1, u'+\t\tCCAssert(act != NULL, "class named classname can not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ComAttribute::setFloat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ComAttribute::setBool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ComAttribute::setCString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(410, 2, u'-   assert( collectComments_ );'), (413, 2, u'-      assert( lastValue_ != 0 );')]
===========================================
Class:class DefaultValueAllocator : public ValueAllocator class DefaultValueAllocator : public ValueAllocator
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-   assert( current >= buffer );'), (62, 2, u'-   assert( current >= buffer );'), (390, 2, u'-         assert( childValues_.size() == size );'), (478, 2, u'-   assert( int(indentString_.size()) >= indentSize_ );'), (666, 2, u'-         assert( childValues_.size() == size );'), (758, 2, u'-   assert( indentString_.size() >= indentation_.size() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: ComponentContainer::~ComponentContainer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ComponentContainer::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != nullptr && strlen(value) != 0, "Value length must be greater than 0");'), (6, 1, u'+    CCASSERT( !value.empty(), "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MenuItemFont::~MenuItemFont
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != nullptr && strlen(value) != 0, "Value length must be greater than 0");'), (6, 1, u'+    CCASSERT( !value.empty(), "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != nullptr && strlen(value) != 0, "Value length must be greater than 0");'), (6, 1, u'+    CCASSERT( !value.empty(), "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( value.size() >= 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( !value.empty(), "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MenuItemFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( value.size() >= 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( !value.empty(), "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( value.size() >= 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( !value.empty(), "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(path != nullptr, "Invalid filename");'), (6, 1, u'+    CCASSERT(!path.empty(), "Invalid filename");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MotionStreak::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(path != nullptr, "Invalid filename");'), (6, 1, u'+    CCASSERT(!path.empty(), "Invalid filename");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(path != nullptr, "Invalid filename");'), (6, 1, u'+    CCASSERT(!path.empty(), "Invalid filename");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != nullptr && size != nullptr && mode != nullptr, "Invalid parameters.");'), (7, 1, u'+    CCASSERT(!filename.empty() && size != nullptr && mode != nullptr, "Invalid parameters.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: FileUtils::purgeCachedEntries
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != nullptr && size != nullptr && mode != nullptr, "Invalid parameters.");'), (7, 1, u'+    CCASSERT(!filename.empty() && size != nullptr && mode != nullptr, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != nullptr && size != nullptr && mode != nullptr, "Invalid parameters.");'), (7, 1, u'+    CCASSERT(!filename.empty() && size != nullptr && mode != nullptr, "Invalid parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+                CCASSERT(false, "string type is needed");')]
===========================================
===========================================
Total add: 37
Total del: 2
Header: luaval_to_std_vector_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+                CCASSERT(false, "string type is needed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+                CCASSERT(false, "string type is needed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+                CCASSERT(false, "int type is needed");')]
===========================================
===========================================
Total add: 34
Total del: 2
Header: luaval_to_std_vector_int
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+                CCASSERT(false, "int type is needed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+                CCASSERT(false, "int type is needed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: TMXLayer::setupTiles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(event, "event shoud not be nullptr!");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: __getListenerID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(event, "event shoud not be nullptr!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(event, "event shoud not be nullptr!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                CCASSERT(event, "event shoud not be nullptr!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: getListenerID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                CCASSERT(event, "event shoud not be nullptr!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                CCASSERT(event, "event shoud not be nullptr!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            CCASSERT(false, "Don\'t call this method if the event is for touch.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: getListenerID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            CCASSERT(false, "Don\'t call this method if the event is for touch.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            CCASSERT(false, "Don\'t call this method if the event is for touch.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(listenerType != EventListener::Type::CUSTOM, "Not support custom event listener type, please use EventDispatcher::removeCustomEventListeners instead.");'), (27, 1, u'+        CCASSERT(false, "Invalid listener type!");')]
===========================================
===========================================
Total add: 24
Total del: 3
Header: EventDispatcher::removeEventListeners
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(listenerType != EventListener::Type::CUSTOM, "Not support custom event listener type, please use EventDispatcher::removeCustomEventListeners instead.");'), (27, 1, u'+        CCASSERT(false, "Invalid listener type!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(listenerType != EventListener::Type::CUSTOM, "Not support custom event listener type, please use EventDispatcher::removeCustomEventListeners instead.");'), (27, 1, u'+        CCASSERT(false, "Invalid listener type!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (17, 2, u'-    CCASSERT(typeClass, "The value is null.");'), (42, 1, u'+        CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (44, 1, u'+        CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: js_cocos2dx_GLNode_constructor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (17, 2, u'-    CCASSERT(typeClass, "The value is null.");'), (42, 1, u'+        CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (44, 1, u'+        CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (17, 2, u'-    CCASSERT(typeClass, "The value is null.");'), (42, 1, u'+        CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (44, 1, u'+        CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        CCASSERT(row < rows.size(), "");'), (9, 1, u'+        CCASSERT(rowColumns, "");'), (17, 2, u'-            CCASSERT(row < rows.size(), "");'), (21, 2, u'-            CCASSERT(rowColumns, "");')]
===========================================
===========================================
Total add: 17
Total del: 20
Header: Menu::alignItemsInColumnsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        CCASSERT(row < rows.size(), "");'), (9, 1, u'+        CCASSERT(rowColumns, "");'), (17, 2, u'-            CCASSERT(row < rows.size(), "");'), (21, 2, u'-            CCASSERT(rowColumns, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        CCASSERT(row < rows.size(), "");'), (9, 1, u'+        CCASSERT(rowColumns, "");'), (17, 2, u'-            CCASSERT(row < rows.size(), "");'), (21, 2, u'-            CCASSERT(rowColumns, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            CCASSERT(column < columns.size(), "");'), (9, 1, u'+        CCASSERT(column < columns.size(), "");'), (13, 2, u'-            CCASSERT(columnRows, "");'), (16, 1, u'+        CCASSERT(columnRows, "");')]
===========================================
===========================================
Total add: 22
Total del: 25
Header: Menu::alignItemsInRowsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            CCASSERT(column < columns.size(), "");'), (9, 1, u'+        CCASSERT(column < columns.size(), "");'), (13, 2, u'-            CCASSERT(columnRows, "");'), (16, 1, u'+        CCASSERT(columnRows, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            CCASSERT(column < columns.size(), "");'), (9, 1, u'+        CCASSERT(column < columns.size(), "");'), (13, 2, u'-            CCASSERT(columnRows, "");'), (16, 1, u'+        CCASSERT(columnRows, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_inSceneProxy && _outSceneProxy, "TransitionPageTurn proxy scene can not be nullptr");')]
===========================================
===========================================
Total add: 0
Total del: 6
Header: TransitionPageTurn::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_inSceneProxy && _outSceneProxy, "TransitionPageTurn proxy scene can not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_inSceneProxy && _outSceneProxy, "TransitionPageTurn proxy scene can not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (28, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCSkeleton::setSkeletonData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (28, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (28, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(atlas, "Error reading atlas file.");'), (8, 1, u'+\tCCAssert(atlas, "Error reading atlas file.");'), (13, 2, u'-    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (18, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCSkeleton::CCSkeleton
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(atlas, "Error reading atlas file.");'), (8, 1, u'+\tCCAssert(atlas, "Error reading atlas file.");'), (13, 2, u'-    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (18, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(atlas, "Error reading atlas file.");'), (8, 1, u'+\tCCAssert(atlas, "Error reading atlas file.");'), (13, 2, u'-    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (18, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tCCAssert(stateData, "stateData cannot be null.");'), (32, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (33, 2, u'-\tCCASSERT(stateData, "stateData cannot be null.");'), (78, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (85, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (92, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (99, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Total add: 44
Total del: 44
Header: CCSkeletonAnimation::update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tCCAssert(stateData, "stateData cannot be null.");'), (32, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (33, 2, u'-\tCCASSERT(stateData, "stateData cannot be null.");'), (78, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (85, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (92, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (99, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tCCAssert(stateData, "stateData cannot be null.");'), (32, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (33, 2, u'-\tCCASSERT(stateData, "stateData cannot be null.");'), (78, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (85, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (92, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (99, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        CCASSERT(cmdQuadCount < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (6, 1, u'+                        CCASSERT(cmdQuadCount < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        CCASSERT(cmdQuadCount < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (6, 1, u'+                        CCASSERT(cmdQuadCount < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        CCASSERT(cmdQuadCount < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (6, 1, u'+                        CCASSERT(cmdQuadCount < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pName != nullptr, "Argument must be non-nil");'), (8, 1, u'+    CCASSERT(name != nullptr, "Argument must be non-nil");'), (25, 2, u'-    CCASSERT(pCom != nullptr, "Argument must be non-nil");'), (26, 2, u'-    CCASSERT(pCom->getOwner() == nullptr, "Component already added. It can\'t be added again");'), (28, 1, u'+    CCASSERT(com != nullptr, "Argument must be non-nil");'), (29, 1, u'+    CCASSERT(com->getOwner() == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: ComponentContainer::~ComponentContainer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pName != nullptr, "Argument must be non-nil");'), (8, 1, u'+    CCASSERT(name != nullptr, "Argument must be non-nil");'), (25, 2, u'-    CCASSERT(pCom != nullptr, "Argument must be non-nil");'), (26, 2, u'-    CCASSERT(pCom->getOwner() == nullptr, "Component already added. It can\'t be added again");'), (28, 1, u'+    CCASSERT(com != nullptr, "Argument must be non-nil");'), (29, 1, u'+    CCASSERT(com->getOwner() == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pName != nullptr, "Argument must be non-nil");'), (8, 1, u'+    CCASSERT(name != nullptr, "Argument must be non-nil");'), (25, 2, u'-    CCASSERT(pCom != nullptr, "Argument must be non-nil");'), (26, 2, u'-    CCASSERT(pCom->getOwner() == nullptr, "Component already added. It can\'t be added again");'), (28, 1, u'+    CCASSERT(com != nullptr, "Argument must be non-nil");'), (29, 1, u'+    CCASSERT(com->getOwner() == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        CCASSERT(pComponent == nullptr, "Component already added. It can\'t be added again");'), (11, 1, u'+        CCASSERT(component == nullptr, "Component already added. It can\'t be added again");'), (26, 2, u'-    CCASSERT(pName != nullptr, "Argument must be non-nil");'), (28, 1, u'+    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: ComponentContainer::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        CCASSERT(pComponent == nullptr, "Component already added. It can\'t be added again");'), (11, 1, u'+        CCASSERT(component == nullptr, "Component already added. It can\'t be added again");'), (26, 2, u'-    CCASSERT(pName != nullptr, "Argument must be non-nil");'), (28, 1, u'+    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        CCASSERT(pComponent == nullptr, "Component already added. It can\'t be added again");'), (11, 1, u'+        CCASSERT(component == nullptr, "Component already added. It can\'t be added again");'), (26, 2, u'-    CCASSERT(pName != nullptr, "Argument must be non-nil");'), (28, 1, u'+    CCASSERT(name != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pActionOne != NULL, "");'), (13, 2, u'-    CCASSERT(pActionTwo != NULL, "");'), (14, 1, u'+    CCASSERT(actionOne != nullptr, "");'), (15, 1, u'+    CCASSERT(actionTwo != nullptr, "");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: Sequence::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pActionOne != NULL, "");'), (13, 2, u'-    CCASSERT(pActionTwo != NULL, "");'), (14, 1, u'+    CCASSERT(actionOne != nullptr, "");'), (15, 1, u'+    CCASSERT(actionTwo != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pActionOne != NULL, "");'), (13, 2, u'-    CCASSERT(pActionTwo != NULL, "");'), (14, 1, u'+    CCASSERT(actionOne != nullptr, "");'), (15, 1, u'+    CCASSERT(actionTwo != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    CCASSERT(pAction != NULL, "");'), (27, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: RepeatForever::~RepeatForever
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    CCASSERT(pAction != NULL, "");'), (27, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    CCASSERT(pAction != NULL, "");'), (27, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction1 != NULL, "");'), (6, 2, u'-    CCASSERT(pAction2 != NULL, "");'), (7, 1, u'+    CCASSERT(action1 != nullptr, "");'), (8, 1, u'+    CCASSERT(action2 != nullptr, "");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Spawn::createWithTwoActions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction1 != NULL, "");'), (6, 2, u'-    CCASSERT(pAction2 != NULL, "");'), (7, 1, u'+    CCASSERT(action1 != nullptr, "");'), (8, 1, u'+    CCASSERT(action2 != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction1 != NULL, "");'), (6, 2, u'-    CCASSERT(pAction2 != NULL, "");'), (7, 1, u'+    CCASSERT(action1 != nullptr, "");'), (8, 1, u'+    CCASSERT(action2 != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    CCASSERT(pAction != NULL, "");'), (21, 2, u'-    CCASSERT(pAction != _other, "");'), (22, 1, u'+    CCASSERT(action != nullptr, "");'), (23, 1, u'+    CCASSERT(action != _other, "");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: DelayTime::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    CCASSERT(pAction != NULL, "");'), (21, 2, u'-    CCASSERT(pAction != _other, "");'), (22, 1, u'+    CCASSERT(action != nullptr, "");'), (23, 1, u'+    CCASSERT(action != _other, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    CCASSERT(pAction != NULL, "");'), (21, 2, u'-    CCASSERT(pAction != _other, "");'), (22, 1, u'+    CCASSERT(action != nullptr, "");'), (23, 1, u'+    CCASSERT(action != _other, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( animation!=NULL, "Animate: argument Animation must be non-NULL");'), (3, 1, u'+    CCASSERT( animation!=nullptr, "Animate: argument Animation must be non-nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Animate::initWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( animation!=NULL, "Animate: argument Animation must be non-NULL");'), (3, 1, u'+    CCASSERT( animation!=nullptr, "Animate: argument Animation must be non-nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( animation!=NULL, "Animate: argument Animation must be non-NULL");'), (3, 1, u'+    CCASSERT( animation!=nullptr, "Animate: argument Animation must be non-nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(action != NULL, "");'), (3, 2, u'-    CCASSERT(target != NULL, "");'), (4, 1, u'+    CCASSERT(action != nullptr, "");'), (5, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(action != NULL, "");'), (3, 2, u'-    CCASSERT(target != NULL, "");'), (4, 1, u'+    CCASSERT(action != nullptr, "");'), (5, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(action != NULL, "");'), (3, 2, u'-    CCASSERT(target != NULL, "");'), (4, 1, u'+    CCASSERT(action != nullptr, "");'), (5, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(pName != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pName != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: ComponentContainer::get
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(pName != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pName != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(pName != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pName != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pCom != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT(pCom != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pCom->getOwner() == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ComponentContainer::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pCom != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT(pCom != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pCom->getOwner() == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pCom != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT(pCom != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pCom->getOwner() == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(pComponent == NULL, "Component already added. It can\'t be added again");'), (3, 1, u'+        CCASSERT(pComponent == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComponentContainer::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(pComponent == NULL, "Component already added. It can\'t be added again");'), (3, 1, u'+        CCASSERT(pComponent == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(pComponent == NULL, "Component already added. It can\'t be added again");'), (3, 1, u'+        CCASSERT(pComponent == nullptr, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComponentContainer::remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(name != NULL, "Invalid uniform name" );'), (3, 1, u'+    CCASSERT(name != nullptr, "Invalid uniform name" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GLProgram::getUniformLocationForName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(name != NULL, "Invalid uniform name" );'), (3, 1, u'+    CCASSERT(name != nullptr, "Invalid uniform name" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(name != NULL, "Invalid uniform name" );'), (3, 1, u'+    CCASSERT(name != nullptr, "Invalid uniform name" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT( dynamic_cast<MenuItem*>(child) != nullptr, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT( dynamic_cast<MenuItem*>(child) != nullptr, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT( dynamic_cast<MenuItem*>(child) != nullptr, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(pMenuItem != NULL, "Menu only supports MenuItem objects as children");'), (5, 1, u'+    CCASSERT(menuItem != nullptr, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Menu::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(pMenuItem != NULL, "Menu only supports MenuItem objects as children");'), (5, 1, u'+    CCASSERT(menuItem != nullptr, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(pMenuItem != NULL, "Menu only supports MenuItem objects as children");'), (5, 1, u'+    CCASSERT(menuItem != nullptr, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != nullptr && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MenuItemFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != nullptr && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != nullptr && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(path != NULL, "Invalid filename");'), (3, 1, u'+    CCASSERT(path != nullptr, "Invalid filename");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MotionStreak::initWithFade
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(path != NULL, "Invalid filename");'), (3, 1, u'+    CCASSERT(path != nullptr, "Invalid filename");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(path != NULL, "Invalid filename");'), (3, 1, u'+    CCASSERT(path != nullptr, "Invalid filename");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( aTag != Node::INVALID_TAG, "Invalid tag");'), (6, 1, u'+    CCASSERT( tag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Node::childrenAlloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( aTag != Node::INVALID_TAG, "Invalid tag");'), (6, 1, u'+    CCASSERT( tag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( aTag != Node::INVALID_TAG, "Invalid tag");'), (6, 1, u'+    CCASSERT( tag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( child->_parent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->_parent == nullptr, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Node::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( child->_parent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->_parent == nullptr, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( child->_parent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->_parent == nullptr, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Child must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Child must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Child must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Child must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Child must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Child must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( action != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( action != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::runAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( action != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( action != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( action != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( action != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParallaxNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aChild != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( aChild != nullptr, "Argument must be non-nullptr");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aChild != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( aChild != nullptr, "Argument must be non-nullptr");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aChild != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( aChild != nullptr, "Argument must be non-nullptr");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->getParent() == nullptr, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleBatchNode::addChildHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->getParent() == nullptr, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->getParent() == nullptr, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aChild != NULL, "Child must be non-NULL");'), (3, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( aChild != nullptr, "Child must be non-nullptr");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aChild != NULL, "Child must be non-NULL");'), (3, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( aChild != nullptr, "Child must be non-nullptr");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aChild != NULL, "Child must be non-NULL");'), (3, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( aChild != nullptr, "Child must be non-nullptr");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != nullptr, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT( this->_texture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCASSERT( this->_texture != nullptr, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT( this->_texture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCASSERT( this->_texture != nullptr, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT( this->_texture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCASSERT( this->_texture != nullptr, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(eFormat != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCASSERT(format != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: RenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(eFormat != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCASSERT(format != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(eFormat != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCASSERT(format != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    if (pEngine && pEngine->handleAssert(msg))'), (5, 1, u'+    if (engine && engine->handleAssert(msg))')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cc_assert_script_compatible
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    if (pEngine && pEngine->handleAssert(msg))'), (5, 1, u'+    if (engine && engine->handleAssert(msg))')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    if (pEngine && pEngine->handleAssert(msg))'), (5, 1, u'+    if (engine && engine->handleAssert(msg))')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(frame != NULL, msg);'), (3, 1, u'+    CCASSERT(frame != nullptr, msg);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::createWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(frame != NULL, msg);'), (3, 1, u'+    CCASSERT(frame != nullptr, msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(frame != NULL, msg);'), (3, 1, u'+    CCASSERT(frame != nullptr, msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(texture != NULL, "Invalid texture for sprite");'), (3, 1, u'+    CCASSERT(texture != nullptr, "Invalid texture for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(texture != NULL, "Invalid texture for sprite");'), (3, 1, u'+    CCASSERT(texture != nullptr, "Invalid texture for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(texture != NULL, "Invalid texture for sprite");'), (3, 1, u'+    CCASSERT(texture != nullptr, "Invalid texture for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(spriteFrame != NULL, "");'), (3, 1, u'+    CCASSERT(spriteFrame != nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(spriteFrame != NULL, "");'), (3, 1, u'+    CCASSERT(spriteFrame != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(spriteFrame != NULL, "");'), (3, 1, u'+    CCASSERT(spriteFrame != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT(child != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT(child != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT(child != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "");'), (3, 1, u'+    CCASSERT(child != nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "");'), (3, 1, u'+    CCASSERT(child != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "");'), (3, 1, u'+    CCASSERT(child != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (3, 1, u'+    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (3, 1, u'+    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (3, 1, u'+    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "child should not be null");'), (3, 2, u'-    CCASSERT(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(child != nullptr, "child should not be null");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(child) != nullptr, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "child should not be null");'), (3, 2, u'-    CCASSERT(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(child != nullptr, "child should not be null");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(child) != nullptr, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "child should not be null");'), (3, 2, u'-    CCASSERT(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(child != nullptr, "child should not be null");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(child) != nullptr, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "the child should not be null");'), (3, 1, u'+    CCASSERT(child != nullptr, "the child should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "the child should not be null");'), (3, 1, u'+    CCASSERT(child != nullptr, "the child should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(child != NULL, "the child should not be null");'), (3, 1, u'+    CCASSERT(child != nullptr, "the child should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( sprite != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT( sprite != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::insertQuadFromSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( sprite != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT( sprite != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( sprite != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT( sprite != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(sprite != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(sprite != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(sprite) != nullptr, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::updateQuadFromSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(sprite != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(sprite != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(sprite) != nullptr, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(sprite != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(sprite != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(sprite) != nullptr, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::addSpriteWithoutQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( child != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT( child != nullptr, "Argument must be non-nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pszPlist.size()>0, "plist filename should not be NULL");'), (3, 1, u'+    CCASSERT(pszPlist.size()>0, "plist filename should not be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pszPlist.size()>0, "plist filename should not be NULL");'), (3, 1, u'+    CCASSERT(pszPlist.size()>0, "plist filename should not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pszPlist.size()>0, "plist filename should not be NULL");'), (3, 1, u'+    CCASSERT(pszPlist.size()>0, "plist filename should not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_quads == NULL && _indices == NULL, "");'), (3, 1, u'+    CCASSERT(_quads == nullptr && _indices == nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_quads == NULL && _indices == NULL, "");'), (3, 1, u'+    CCASSERT(_quads == nullptr && _indices == nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_quads == NULL && _indices == NULL, "");'), (3, 1, u'+    CCASSERT(_quads == nullptr && _indices == nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(image != NULL, "TextureCache: image MUST not be nil");'), (3, 1, u'+    CCASSERT(image != nullptr, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(image != NULL, "TextureCache: image MUST not be nil");'), (3, 1, u'+    CCASSERT(image != nullptr, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(image != NULL, "TextureCache: image MUST not be nil");'), (3, 1, u'+    CCASSERT(image != nullptr, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::calculateItemsToRender
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 1, u'+    CCASSERT(_TGAInfo != nullptr, "tgaInfo must not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 1, u'+    CCASSERT(_TGAInfo != nullptr, "tgaInfo must not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 1, u'+    CCASSERT(_TGAInfo != nullptr, "tgaInfo must not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::getTileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != nullptr, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCASSERT( scene != nullptr, "Argument scene must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCASSERT( scene != nullptr, "Argument scene must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCASSERT( scene != nullptr, "Argument scene must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCASSERT(arr->arr!=NULL,"could not reallocate the memory");'), (3, 1, u'+\t\tCCASSERT(arr->arr!=nullptr,"could not reallocate the memory");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayShrink
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCASSERT(arr->arr!=NULL,"could not reallocate the memory");'), (3, 1, u'+\t\tCCASSERT(arr->arr!=nullptr,"could not reallocate the memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCASSERT(arr->arr!=NULL,"could not reallocate the memory");'), (3, 1, u'+\t\tCCASSERT(arr->arr!=nullptr,"could not reallocate the memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(object != NULL, "Invalid parameter!");'), (3, 1, u'+    CCASSERT(object != nullptr, "Invalid parameter!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayAppendObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(object != NULL, "Invalid parameter!");'), (3, 1, u'+    CCASSERT(object != nullptr, "Invalid parameter!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(object != NULL, "Invalid parameter!");'), (3, 1, u'+    CCASSERT(object != nullptr, "Invalid parameter!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(object != NULL, "Invalid parameter!");'), (3, 1, u'+\tCCASSERT(object != nullptr, "Invalid parameter!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayInsertObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(object != NULL, "Invalid parameter!");'), (3, 1, u'+\tCCASSERT(object != nullptr, "Invalid parameter!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(object != NULL, "Invalid parameter!");'), (3, 1, u'+\tCCASSERT(object != nullptr, "Invalid parameter!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-        CCASSERT(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (31, 1, u'+        CCASSERT(readedSize == 0 || readedSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: FileUtils::getFileDataFromZip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-        CCASSERT(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (31, 1, u'+        CCASSERT(readedSize == 0 || readedSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 2, u'-        CCASSERT(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (31, 1, u'+        CCASSERT(readedSize == 0 || readedSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            CCASSERT(false, "Invalid type!");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            CCASSERT(false, "Invalid type!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            CCASSERT(false, "Invalid type!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(node != NULL, "Label must not be nil.");'), (3, 1, u'+        CCASSERT(node != nullptr, "Label must not be nil.");'), (6, 2, u'-        CCASSERT(backgroundSprite != NULL, "Background sprite must not be nil.");'), (7, 2, u'-        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (8, 1, u'+        CCASSERT(backgroundSprite != nullptr, "Background sprite must not be nil.");'), (9, 1, u'+        CCASSERT(label != nullptr || rgbaLabel!=nullptr || backgroundSprite != nullptr, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ControlButton::initWithLabelAndBackgroundSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(node != NULL, "Label must not be nil.");'), (3, 1, u'+        CCASSERT(node != nullptr, "Label must not be nil.");'), (6, 2, u'-        CCASSERT(backgroundSprite != NULL, "Background sprite must not be nil.");'), (7, 2, u'-        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (8, 1, u'+        CCASSERT(backgroundSprite != nullptr, "Background sprite must not be nil.");'), (9, 1, u'+        CCASSERT(label != nullptr || rgbaLabel!=nullptr || backgroundSprite != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(node != NULL, "Label must not be nil.");'), (3, 1, u'+        CCASSERT(node != nullptr, "Label must not be nil.");'), (6, 2, u'-        CCASSERT(backgroundSprite != NULL, "Background sprite must not be nil.");'), (7, 2, u'-        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (8, 1, u'+        CCASSERT(backgroundSprite != nullptr, "Background sprite must not be nil.");'), (9, 1, u'+        CCASSERT(label != nullptr || rgbaLabel!=nullptr || backgroundSprite != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (7, 1, u'+    CCASSERT(!contents.empty(), "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCBMFontConfiguration::parseConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (7, 1, u'+    CCASSERT(!contents.empty(), "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (7, 1, u'+    CCASSERT(!contents.empty(), "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "Invalid pointer for buffer!");')]
===========================================
===========================================
Total add: 3
Total del: 7
Header: ZipUtils::inflateCCZFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "Invalid pointer for buffer!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "Invalid pointer for buffer!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                        CCASSERT(cmd->getQuadCount() < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (17, 1, u'+                        CCASSERT(cmdQuadCount < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                        CCASSERT(cmd->getQuadCount() < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (17, 1, u'+                        CCASSERT(cmdQuadCount < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-                        CCASSERT(cmd->getQuadCount() < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (17, 1, u'+                        CCASSERT(cmdQuadCount < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        CCASSERT(cmd->getQuadCount() < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (6, 1, u'+                        CCASSERT(cmd->getQuadCount() < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        CCASSERT(cmd->getQuadCount() < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (6, 1, u'+                        CCASSERT(cmd->getQuadCount() < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                        CCASSERT(cmd->getQuadCount() < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (6, 1, u'+                        CCASSERT(cmd->getQuadCount() < vbo_size, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (7, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (11, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Total add: 3
Total del: 11
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (7, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (11, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (7, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (11, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( index < (int)_decoDisplayList.size(), "the _index value is out of range");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DisplayManager::changeDisplayByIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( index < (int)_decoDisplayList.size(), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( index < (int)_decoDisplayList.size(), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == nullptr, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCASSERT(_boneDic.at(bone->getName()) == nullptr, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == nullptr, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCASSERT(_boneDic.at(bone->getName()) == nullptr, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == nullptr, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCASSERT(_boneDic.at(bone->getName()) == nullptr, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: ColliderDetector::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: GridAction::cacheTargetAsGridNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: StopGrid::cacheTargetAsGridNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ReuseGrid::cacheTargetAsGridNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(_gridNodeTarget, "GridActions can only used on GridNode");'), (5, 1, u'+    CCASSERT(_gridNodeTarget, "GridActions can only used on NodeGrid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(_inSceneProxy && _outSceneProxy, "TransitionPageTurn proxy scene can not be nullptr");')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: TransitionPageTurn::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(_inSceneProxy && _outSceneProxy, "TransitionPageTurn proxy scene can not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(_inSceneProxy && _outSceneProxy, "TransitionPageTurn proxy scene can not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(dict["version"].asInt() == 1, "Unsupported version. Upgrade cocos2d version");'), (8, 2, u'-    CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Total add: 9
Total del: 8
Header: LabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(dict["version"].asInt() == 1, "Unsupported version. Upgrade cocos2d version");'), (8, 2, u'-    CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(dict["version"].asInt() == 1, "Unsupported version. Upgrade cocos2d version");'), (8, 2, u'-    CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");'), (27, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");'), (50, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 4
Total del: 50
Header: Configuration::supportsShareableVAO
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");'), (27, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");'), (50, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");'), (27, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");'), (50, 2, u'-\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCASSERT(dict, "cannot create dictionary");'), (5, 1, u'+\tCCASSERT(!dict.empty(), "cannot create dictionary");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Configuration::loadConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCASSERT(dict, "cannot create dictionary");'), (5, 1, u'+\tCCASSERT(!dict.empty(), "cannot create dictionary");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCASSERT(dict, "cannot create dictionary");'), (5, 1, u'+\tCCASSERT(!dict.empty(), "cannot create dictionary");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: TileMapAtlas::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(baseValue, "No baseValue found for property");'), (7, 1, u'+        CCASSERT(!baseValue.isNull(), "No baseValue found for property");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: CCBAnimationManager::setFirstFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(baseValue, "No baseValue found for property");'), (7, 1, u'+        CCASSERT(!baseValue.isNull(), "No baseValue found for property");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(baseValue, "No baseValue found for property");'), (7, 1, u'+        CCASSERT(!baseValue.isNull(), "No baseValue found for property");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Total add: 148
Total del: 0
Header: Value::operator=
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(ccbRootPath != NULL, "");'), (3, 1, u'+    CCASSERT(ccbRootPath != nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBReader::setCCBRootPath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(ccbRootPath != NULL, "");'), (3, 1, u'+    CCASSERT(ccbRootPath != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(ccbRootPath != NULL, "");'), (3, 1, u'+    CCASSERT(ccbRootPath != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            CCASSERT(ownerCallbackNames->count() == ownerCallbackNodes->count(), "");'), (12, 1, u'+            CCASSERT(ownerCallbackNames.size() == ownerCallbackNodes.size(), "");')]
===========================================
===========================================
Total add: 5
Total del: 6
Header: NodeLoader::parsePropTypeCCBFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            CCASSERT(ownerCallbackNames->count() == ownerCallbackNodes->count(), "");'), (12, 1, u'+            CCASSERT(ownerCallbackNames.size() == ownerCallbackNodes.size(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            CCASSERT(ownerCallbackNames->count() == ownerCallbackNodes->count(), "");'), (12, 1, u'+            CCASSERT(ownerCallbackNames.size() == ownerCallbackNodes.size(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            CCASSERT(ownerOutletNames->count() == ownerOutletNodes->count(), "");'), (12, 1, u'+            CCASSERT(ownerOutletNames.size() == ownerOutletNodes.size(), "");')]
===========================================
===========================================
Total add: 5
Total del: 6
Header: NodeLoader::parsePropTypeCCBFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            CCASSERT(ownerOutletNames->count() == ownerOutletNodes->count(), "");'), (12, 1, u'+            CCASSERT(ownerOutletNames.size() == ownerOutletNodes.size(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-            CCASSERT(ownerOutletNames->count() == ownerOutletNodes->count(), "");'), (12, 1, u'+            CCASSERT(ownerOutletNames.size() == ownerOutletNodes.size(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (5, 1, u'+        CCASSERT(label != NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: ControlButton::initWithLabelAndBackgroundSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (5, 1, u'+        CCASSERT(label != NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (5, 1, u'+        CCASSERT(label != NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( static_cast<long>(n) <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT(n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LabelAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( static_cast<long>(n) <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT(n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( static_cast<long>(n) <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT(n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) && static_cast<unsigned long>(_pixelsHigh) == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT(_pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) && static_cast<unsigned long>(_pixelsHigh) == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT(_pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) && static_cast<unsigned long>(_pixelsHigh) == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT(_pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCASSERT((_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Texture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCASSERT((_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCASSERT((_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                        CCASSERT(cmd->getQuadCount() < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                        CCASSERT(cmd->getQuadCount() < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                        CCASSERT(cmd->getQuadCount() < VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.size(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LayerMultiplex::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.size(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.size(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.size(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: LayerMultiplex::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.size(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.size(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _children.containsObject(aChild), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCASSERT( _children.contains(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _children.containsObject(aChild), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCASSERT( _children.contains(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _children.containsObject(aChild), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCASSERT( _children.contains(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCASSERT(_children.contains(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCASSERT(_children.contains(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCASSERT(_children.contains(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(child), "");'), (3, 1, u'+    CCASSERT(_children.contains(child), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(child), "");'), (3, 1, u'+    CCASSERT(_children.contains(child), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(child), "");'), (3, 1, u'+    CCASSERT(_children.contains(child), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCASSERT(_children.contains(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCASSERT(_children.contains(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCASSERT(_children.contains(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(sprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children.contains(sprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(sprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children.contains(sprite), "sprite batch node should contain the child");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(sprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children.contains(sprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children.count(), "Invalid index");'), (4, 1, u'+    CCASSERT(index>=0 && index < _children.size(), "Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::removeChildAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children.count(), "Invalid index");'), (4, 1, u'+    CCASSERT(index>=0 && index < _children.size(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children.count(), "Invalid index");'), (4, 1, u'+    CCASSERT(index>=0 && index < _children.size(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children.count(), "Invalid index");'), (3, 1, u'+    CCASSERT(index>=0 && index < _children.size(), "Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::rebuildIndexInOrder
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children.count(), "Invalid index");'), (3, 1, u'+    CCASSERT(index>=0 && index < _children.size(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children.count(), "Invalid index");'), (3, 1, u'+    CCASSERT(index>=0 && index < _children.size(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children.contains(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children.contains(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children.containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children.contains(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Value::asInt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Value::asFloat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Value::asDouble
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Value::asBool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Value::asString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type != Type::ARRAY && _type != Type::DICTIONARY, "");'), (3, 1, u'+    CCASSERT(_type != Type::VECTOR && _type != Type::MAP, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        CCASSERT(parser.init("UTF-8"), "The file format isn\'t UTF-8");')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        CCASSERT(parser.init("UTF-8"), "The file format isn\'t UTF-8");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        CCASSERT(parser.init("UTF-8"), "The file format isn\'t UTF-8");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        CCASSERT(parser.init("UTF-8"), "The file format isn\'t UTF-8");')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        CCASSERT(parser.init("UTF-8"), "The file format isn\'t UTF-8");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+        CCASSERT(parser.init("UTF-8"), "The file format isn\'t UTF-8");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");'), (5, 1, u'+    CCASSERT(filename != nullptr && size != nullptr && mode != nullptr, "Invalid parameters.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: FileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");'), (5, 1, u'+    CCASSERT(filename != nullptr && size != nullptr && mode != nullptr, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");'), (5, 1, u'+    CCASSERT(filename != nullptr && size != nullptr && mode != nullptr, "Invalid parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( dict != NULL, "Particles: file not found");'), (6, 1, u'+    CCASSERT( !dict.empty(), "Particles: file not found");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleSystem::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( dict != NULL, "Particles: file not found");'), (6, 1, u'+    CCASSERT( !dict.empty(), "Particles: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( dict != NULL, "Particles: file not found");'), (6, 1, u'+    CCASSERT( !dict.empty(), "Particles: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    CCASSERT(textureData, "");'), (5, 1, u'+                    CCASSERT(!textureData.empty(), "");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    CCASSERT(textureData, "");'), (5, 1, u'+                    CCASSERT(!textureData.empty(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-                    CCASSERT(textureData, "");'), (5, 1, u'+                    CCASSERT(!textureData.empty(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (3, 1, u'+                        CCASSERT( buffer != nullptr, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (3, 1, u'+                        CCASSERT( buffer != nullptr, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (3, 1, u'+                        CCASSERT( buffer != nullptr, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (3, 1, u'+                        CCASSERT( deflated != nullptr, "CCParticleSystem: error ungzipping textureImageData");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (3, 1, u'+                        CCASSERT( deflated != nullptr, "CCParticleSystem: error ungzipping textureImageData");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCASSERT( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (3, 1, u'+                        CCASSERT( deflated != nullptr, "CCParticleSystem: error ungzipping textureImageData");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( dict, "CCAnimationCache: File could not be found");'), (6, 1, u'+    CCASSERT( !dict.empty(), "CCAnimationCache: File could not be found");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: AnimationCache::addAnimationsWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( dict, "CCAnimationCache: File could not be found");'), (6, 1, u'+    CCASSERT( !dict.empty(), "CCAnimationCache: File could not be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( dict, "CCAnimationCache: File could not be found");'), (6, 1, u'+    CCASSERT( !dict.empty(), "CCAnimationCache: File could not be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_layers, "");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: LayerMultiplex::addLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_layers, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_layers, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LayerMultiplex::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: LayerMultiplex::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers.count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( !mapInfo->getTilesets().empty(), "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::initWithTMXFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( !mapInfo->getTilesets().empty(), "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( !mapInfo->getTilesets().empty(), "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( !mapInfo->getTilesets().empty(), "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::initWithXML
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( !mapInfo->getTilesets().empty(), "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( !mapInfo->getTilesets().empty(), "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");'), (6, 1, u'+    CCASSERT( animation!=NULL, "Animate: argument Animation must be non-NULL");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Animate::~Animate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");'), (6, 1, u'+    CCASSERT( animation!=NULL, "Animate: argument Animation must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");'), (6, 1, u'+    CCASSERT( animation!=NULL, "Animate: argument Animation must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            CCASSERT(row < rows.size(), "");'), (15, 1, u'+            CCASSERT(rowColumns, "");'), (23, 2, u'-                CCASSERT(row < rows.size(), "");'), (27, 2, u'-                CCASSERT(rowColumns, "");')]
===========================================
===========================================
Total add: 19
Total del: 25
Header: Menu::alignItemsInColumnsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            CCASSERT(row < rows.size(), "");'), (15, 1, u'+            CCASSERT(rowColumns, "");'), (23, 2, u'-                CCASSERT(row < rows.size(), "");'), (27, 2, u'-                CCASSERT(rowColumns, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            CCASSERT(row < rows.size(), "");'), (15, 1, u'+            CCASSERT(rowColumns, "");'), (23, 2, u'-                CCASSERT(row < rows.size(), "");'), (27, 2, u'-                CCASSERT(rowColumns, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                CCASSERT(column < columns.size(), "");'), (15, 1, u'+            CCASSERT(column < columns.size(), "");'), (19, 2, u'-                CCASSERT(columnRows, "");'), (22, 1, u'+            CCASSERT(columnRows, "");')]
===========================================
===========================================
Total add: 23
Total del: 29
Header: Menu::alignItemsInRowsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                CCASSERT(column < columns.size(), "");'), (15, 1, u'+            CCASSERT(column < columns.size(), "");'), (19, 2, u'-                CCASSERT(columnRows, "");'), (22, 1, u'+            CCASSERT(columnRows, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-                CCASSERT(column < columns.size(), "");'), (15, 1, u'+            CCASSERT(column < columns.size(), "");'), (19, 2, u'-                CCASSERT(columnRows, "");'), (22, 1, u'+            CCASSERT(columnRows, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _children->containsObject(aChild), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCASSERT( _children.containsObject(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _children->containsObject(aChild), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCASSERT( _children.containsObject(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _children->containsObject(aChild), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCASSERT( _children.containsObject(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCASSERT(_children.containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCASSERT(_children.containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCASSERT(_children.containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(child), "");'), (3, 1, u'+    CCASSERT(_children.containsObject(child), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(child), "");'), (3, 1, u'+    CCASSERT(_children.containsObject(child), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(child), "");'), (3, 1, u'+    CCASSERT(_children.containsObject(child), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCASSERT(_children.containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCASSERT(_children.containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCASSERT(_children.containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(sprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children.containsObject(sprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(sprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children.containsObject(sprite), "sprite batch node should contain the child");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(sprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children.containsObject(sprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children->count(), "Invalid index");'), (4, 1, u'+    CCASSERT(index>=0 && index < _children.count(), "Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::removeChildAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children->count(), "Invalid index");'), (4, 1, u'+    CCASSERT(index>=0 && index < _children.count(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children->count(), "Invalid index");'), (4, 1, u'+    CCASSERT(index>=0 && index < _children.count(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children->count(), "Invalid index");'), (3, 1, u'+    CCASSERT(index>=0 && index < _children.count(), "Invalid index");')]
===========================================
===========================================
Total add: 7
Total del: 12
Header: SpriteBatchNode::rebuildIndexInOrder
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children->count(), "Invalid index");'), (3, 1, u'+    CCASSERT(index>=0 && index < _children.count(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(index>=0 && index < _children->count(), "Invalid index");'), (3, 1, u'+    CCASSERT(index>=0 && index < _children.count(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children.containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children.containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children.containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCASSERT(idx1>=0 && idx2>=2, "invalid object index");'), (8, 1, u'+    CCASSERT(idx1 >= 0 && idx2 >= 2, "invalid object index");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: Array::exchangeObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCASSERT(idx1>=0 && idx2>=2, "invalid object index");'), (8, 1, u'+    CCASSERT(idx1 >= 0 && idx2 >= 2, "invalid object index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCASSERT(idx1>=0 && idx2>=2, "invalid object index");'), (8, 1, u'+    CCASSERT(idx1 >= 0 && idx2 >= 2, "invalid object index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(index>=0 && index < count(), "Invalid index");'), (6, 1, u'+    CCASSERT(index >= 0 && index < count(), "Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Array::insertObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(index>=0 && index < count(), "Invalid index");'), (6, 1, u'+    CCASSERT(index >= 0 && index < count(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(index>=0 && index < count(), "Invalid index");'), (6, 1, u'+    CCASSERT(index >= 0 && index < count(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    CCASSERT( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 78
Total del: 1
Header: ParticleSystemQuad::postStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    CCASSERT( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    CCASSERT( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a ParticleSystem that uses a different blending function");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a ParticleSystem that uses a different blending function");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a ParticleSystem that uses a different blending function");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert( sizeof(long)==8);'), (23, 1, u'+\tassert( sizeof(int)==4);')]
===========================================
===========================================
Total add: 46
Total del: 1
Header: jsval_to_uint16
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert( sizeof(long)==8);'), (23, 1, u'+\tassert( sizeof(int)==4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert( sizeof(long)==8);'), (23, 1, u'+\tassert( sizeof(int)==4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: Sprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Total add: 156
Total del: 5
Header: Sprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: Sprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Total add: 7
Total del: 83
Header: Sprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_vertices == NULL && m_count == 0);'), (3, 2, u'-    b2Assert(count >= 3);'), (12, 1, u'+\tb2Assert(m_vertices == NULL && m_count == 0);'), (13, 1, u'+\tb2Assert(count >= 3);'), (19, 1, u'+\t\tb2Assert(b2DistanceSquared(v1, v2) > b2_linearSlop * b2_linearSlop);')]
===========================================
===========================================
Total add: 18
Total del: 10
Header: b2ChainShape::CreateLoop
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_vertices == NULL && m_count == 0);'), (3, 2, u'-    b2Assert(count >= 3);'), (12, 1, u'+\tb2Assert(m_vertices == NULL && m_count == 0);'), (13, 1, u'+\tb2Assert(count >= 3);'), (19, 1, u'+\t\tb2Assert(b2DistanceSquared(v1, v2) > b2_linearSlop * b2_linearSlop);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_vertices == NULL && m_count == 0);'), (3, 2, u'-    b2Assert(count >= 3);'), (12, 1, u'+\tb2Assert(m_vertices == NULL && m_count == 0);'), (13, 1, u'+\tb2Assert(count >= 3);'), (19, 1, u'+\t\tb2Assert(b2DistanceSquared(v1, v2) > b2_linearSlop * b2_linearSlop);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_vertices == NULL && m_count == 0);'), (3, 2, u'-    b2Assert(count >= 2);'), (9, 1, u'+\tb2Assert(m_vertices == NULL && m_count == 0);'), (10, 1, u'+\tb2Assert(count >= 2);'), (16, 1, u'+\t\tb2Assert(b2DistanceSquared(v1, v2) > b2_linearSlop * b2_linearSlop);')]
===========================================
===========================================
Total add: 19
Total del: 7
Header: b2ChainShape::CreateChain
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_vertices == NULL && m_count == 0);'), (3, 2, u'-    b2Assert(count >= 2);'), (9, 1, u'+\tb2Assert(m_vertices == NULL && m_count == 0);'), (10, 1, u'+\tb2Assert(count >= 2);'), (16, 1, u'+\t\tb2Assert(b2DistanceSquared(v1, v2) > b2_linearSlop * b2_linearSlop);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_vertices == NULL && m_count == 0);'), (3, 2, u'-    b2Assert(count >= 2);'), (9, 1, u'+\tb2Assert(m_vertices == NULL && m_count == 0);'), (10, 1, u'+\tb2Assert(count >= 2);'), (16, 1, u'+\t\tb2Assert(b2DistanceSquared(v1, v2) > b2_linearSlop * b2_linearSlop);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= index && index < m_count - 1);'), (30, 1, u'+\tb2Assert(0 <= index && index < m_count - 1);')]
===========================================
===========================================
Total add: 28
Total del: 28
Header: b2ChainShape::GetChildEdge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= index && index < m_count - 1);'), (30, 1, u'+\tb2Assert(0 <= index && index < m_count - 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= index && index < m_count - 1);'), (30, 1, u'+\tb2Assert(0 <= index && index < m_count - 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(childIndex < m_count);'), (6, 1, u'+\tb2Assert(childIndex < m_count);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: b2ChainShape::TestPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(childIndex < m_count);'), (6, 1, u'+\tb2Assert(childIndex < m_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(childIndex < m_count);'), (6, 1, u'+\tb2Assert(childIndex < m_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(childIndex < m_count);'), (3, 1, u'+\tb2Assert(childIndex < m_count);')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: b2ChainShape::ComputeAABB
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(childIndex < m_count);'), (3, 1, u'+\tb2Assert(childIndex < m_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(childIndex < m_count);'), (3, 1, u'+\tb2Assert(childIndex < m_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(count >= 3);'), (3, 1, u'+\tb2Assert(count >= 3);'), (68, 2, u'-    b2Assert(area > b2_epsilon);'), (72, 1, u'+\tb2Assert(area > b2_epsilon);')]
===========================================
===========================================
Total add: 31
Total del: 31
Header: ComputeCentroid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(count >= 3);'), (3, 1, u'+\tb2Assert(count >= 3);'), (68, 2, u'-    b2Assert(area > b2_epsilon);'), (72, 1, u'+\tb2Assert(area > b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(count >= 3);'), (3, 1, u'+\tb2Assert(count >= 3);'), (68, 2, u'-    b2Assert(area > b2_epsilon);'), (72, 1, u'+\tb2Assert(area > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(3 <= count && count <= b2_maxPolygonVertices);'), (17, 2, u'-        b2Assert(edge.LengthSquared() > b2_epsilon * b2_epsilon);'), (44, 2, u'-            b2Assert(s > 0.0f && "ERROR: Please ensure your polygon is convex and has a CCW winding order");'), (51, 1, u'+\tb2Assert(3 <= count && count <= b2_maxPolygonVertices);'), (87, 1, u'+\t\tb2Assert(false);'), (163, 1, u'+\t\tb2Assert(edge.LengthSquared() > b2_epsilon * b2_epsilon);')]
===========================================
===========================================
Total add: 119
Total del: 49
Header: b2PolygonShape::Set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(3 <= count && count <= b2_maxPolygonVertices);'), (17, 2, u'-        b2Assert(edge.LengthSquared() > b2_epsilon * b2_epsilon);'), (44, 2, u'-            b2Assert(s > 0.0f && "ERROR: Please ensure your polygon is convex and has a CCW winding order");'), (51, 1, u'+\tb2Assert(3 <= count && count <= b2_maxPolygonVertices);'), (87, 1, u'+\t\tb2Assert(false);'), (163, 1, u'+\t\tb2Assert(edge.LengthSquared() > b2_epsilon * b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(3 <= count && count <= b2_maxPolygonVertices);'), (17, 2, u'-        b2Assert(edge.LengthSquared() > b2_epsilon * b2_epsilon);'), (44, 2, u'-            b2Assert(s > 0.0f && "ERROR: Please ensure your polygon is convex and has a CCW winding order");'), (51, 1, u'+\tb2Assert(3 <= count && count <= b2_maxPolygonVertices);'), (87, 1, u'+\t\tb2Assert(false);'), (163, 1, u'+\t\tb2Assert(edge.LengthSquared() > b2_epsilon * b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 2, u'-    b2Assert(0.0f <= lower && lower <= input.maxFraction);'), (129, 1, u'+\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
Total add: 68
Total del: 68
Header: b2PolygonShape::TestPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 2, u'-    b2Assert(0.0f <= lower && lower <= input.maxFraction);'), (129, 1, u'+\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 2, u'-    b2Assert(0.0f <= lower && lower <= input.maxFraction);'), (129, 1, u'+\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-    b2Assert(m_vertexCount >= 3);'), (72, 2, u'-    b2Assert(area > b2_epsilon);'), (105, 1, u'+\tb2Assert(m_count >= 3);'), (151, 1, u'+\tb2Assert(area > b2_epsilon);')]
===========================================
===========================================
Total add: 107
Total del: 79
Header: b2PolygonShape::ComputeMass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-    b2Assert(m_vertexCount >= 3);'), (72, 2, u'-    b2Assert(area > b2_epsilon);'), (105, 1, u'+\tb2Assert(m_count >= 3);'), (151, 1, u'+\tb2Assert(area > b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-    b2Assert(m_vertexCount >= 3);'), (72, 2, u'-    b2Assert(area > b2_epsilon);'), (105, 1, u'+\tb2Assert(m_count >= 3);'), (151, 1, u'+\tb2Assert(area > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(103, 2, u'-    b2Assert(den > 0.0f);'), (224, 1, u'+\tb2Assert(den > 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    b2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);'), (52, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_count);')]
===========================================
===========================================
Total add: 41
Total del: 41
Header: b2FindMaxSeparation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    b2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);'), (52, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    b2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);'), (52, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-            b2Assert(0 <= index && index < chain->m_count);'), (53, 2, u'-        b2Assert(false);'), (78, 1, u'+\t\t\tb2Assert(0 <= index && index < chain->m_count);'), (106, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Total add: 53
Total del: 53
Header: b2DistanceProxy::Set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-            b2Assert(0 <= index && index < chain->m_count);'), (53, 2, u'-        b2Assert(false);'), (78, 1, u'+\t\t\tb2Assert(0 <= index && index < chain->m_count);'), (106, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-            b2Assert(0 <= index && index < chain->m_count);'), (53, 2, u'-        b2Assert(false);'), (78, 1, u'+\t\t\tb2Assert(0 <= index && index < chain->m_count);'), (106, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 2, u'-            b2Assert(false);'), (213, 1, u'+\t\t\tb2Assert(false);')]
===========================================
===========================================
Total add: 157
Total del: 158
Header: b2Simplex::Solve3
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 2, u'-            b2Assert(false);'), (213, 1, u'+\t\t\tb2Assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 2, u'-            b2Assert(false);'), (213, 1, u'+\t\t\tb2Assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        b2Assert(m_nodeCount == m_nodeCapacity);'), (39, 1, u'+\t\tb2Assert(m_nodeCount == m_nodeCapacity);')]
===========================================
===========================================
Total add: 34
Total del: 34
Header: b2DynamicTree::AllocateNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        b2Assert(m_nodeCount == m_nodeCapacity);'), (39, 1, u'+\t\tb2Assert(m_nodeCount == m_nodeCapacity);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        b2Assert(m_nodeCount == m_nodeCapacity);'), (39, 1, u'+\t\tb2Assert(m_nodeCount == m_nodeCapacity);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (3, 2, u'-    b2Assert(0 < m_nodeCount);'), (8, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (9, 1, u'+\tb2Assert(0 < m_nodeCount);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: b2DynamicTree::FreeNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (3, 2, u'-    b2Assert(0 < m_nodeCount);'), (8, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (9, 1, u'+\tb2Assert(0 < m_nodeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (3, 2, u'-    b2Assert(0 < m_nodeCount);'), (8, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (9, 1, u'+\tb2Assert(0 < m_nodeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (3, 2, u'-    b2Assert(m_nodes[proxyId].IsLeaf());'), (4, 1, u'+\tb2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (5, 1, u'+\tb2Assert(m_nodes[proxyId].IsLeaf());')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: b2DynamicTree::DestroyProxy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (3, 2, u'-    b2Assert(m_nodes[proxyId].IsLeaf());'), (4, 1, u'+\tb2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (5, 1, u'+\tb2Assert(m_nodes[proxyId].IsLeaf());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (3, 2, u'-    b2Assert(m_nodes[proxyId].IsLeaf());'), (4, 1, u'+\tb2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (5, 1, u'+\tb2Assert(m_nodes[proxyId].IsLeaf());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (4, 2, u'-    b2Assert(m_nodes[proxyId].IsLeaf());'), (44, 1, u'+\tb2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (46, 1, u'+\tb2Assert(m_nodes[proxyId].IsLeaf());')]
===========================================
===========================================
Total add: 42
Total del: 42
Header: b2DynamicTree::MoveProxy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (4, 2, u'-    b2Assert(m_nodes[proxyId].IsLeaf());'), (44, 1, u'+\tb2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (46, 1, u'+\tb2Assert(m_nodes[proxyId].IsLeaf());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (4, 2, u'-    b2Assert(m_nodes[proxyId].IsLeaf());'), (44, 1, u'+\tb2Assert(0 <= proxyId && proxyId < m_nodeCapacity);'), (46, 1, u'+\tb2Assert(m_nodes[proxyId].IsLeaf());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(128, 2, u'-        b2Assert(child1 != b2_nullNode);'), (129, 2, u'-        b2Assert(child2 != b2_nullNode);'), (264, 1, u'+\t\tb2Assert(child1 != b2_nullNode);'), (265, 1, u'+\t\tb2Assert(child2 != b2_nullNode);')]
===========================================
===========================================
Total add: 136
Total del: 136
Header: b2DynamicTree::InsertLeaf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(128, 2, u'-        b2Assert(child1 != b2_nullNode);'), (129, 2, u'-        b2Assert(child2 != b2_nullNode);'), (264, 1, u'+\t\tb2Assert(child1 != b2_nullNode);'), (265, 1, u'+\t\tb2Assert(child2 != b2_nullNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(128, 2, u'-        b2Assert(child1 != b2_nullNode);'), (129, 2, u'-        b2Assert(child2 != b2_nullNode);'), (264, 1, u'+\t\tb2Assert(child1 != b2_nullNode);'), (265, 1, u'+\t\tb2Assert(child2 != b2_nullNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(iA != b2_nullNode);'), (12, 2, u'-    b2Assert(0 <= iB && iB < m_nodeCapacity);'), (13, 2, u'-    b2Assert(0 <= iC && iC < m_nodeCapacity);'), (27, 2, u'-        b2Assert(0 <= iF && iF < m_nodeCapacity);'), (28, 2, u'-        b2Assert(0 <= iG && iG < m_nodeCapacity);'), (44, 2, u'-                b2Assert(m_nodes[C->parent].child2 == iA);'), (87, 2, u'-        b2Assert(0 <= iD && iD < m_nodeCapacity);'), (88, 2, u'-        b2Assert(0 <= iE && iE < m_nodeCapacity);'), (104, 2, u'-                b2Assert(m_nodes[B->parent].child2 == iA);'), (141, 1, u'+\tb2Assert(iA != b2_nullNode);'), (151, 1, u'+\tb2Assert(0 <= iB && iB < m_nodeCapacity);'), (152, 1, u'+\tb2Assert(0 <= iC && iC < m_nodeCapacity);'), (166, 1, u'+\t\tb2Assert(0 <= iF && iF < m_nodeCapacity);'), (167, 1, u'+\t\tb2Assert(0 <= iG && iG < m_nodeCapacity);'), (183, 1, u'+\t\t\t\tb2Assert(m_nodes[C->parent].child2 == iA);'), (226, 1, u'+\t\tb2Assert(0 <= iD && iD < m_nodeCapacity);'), (227, 1, u'+\t\tb2Assert(0 <= iE && iE < m_nodeCapacity);'), (243, 1, u'+\t\t\t\tb2Assert(m_nodes[B->parent].child2 == iA);')]
===========================================
===========================================
Total add: 139
Total del: 139
Header: b2DynamicTree::Balance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(iA != b2_nullNode);'), (12, 2, u'-    b2Assert(0 <= iB && iB < m_nodeCapacity);'), (13, 2, u'-    b2Assert(0 <= iC && iC < m_nodeCapacity);'), (27, 2, u'-        b2Assert(0 <= iF && iF < m_nodeCapacity);'), (28, 2, u'-        b2Assert(0 <= iG && iG < m_nodeCapacity);'), (44, 2, u'-                b2Assert(m_nodes[C->parent].child2 == iA);'), (87, 2, u'-        b2Assert(0 <= iD && iD < m_nodeCapacity);'), (88, 2, u'-        b2Assert(0 <= iE && iE < m_nodeCapacity);'), (104, 2, u'-                b2Assert(m_nodes[B->parent].child2 == iA);'), (141, 1, u'+\tb2Assert(iA != b2_nullNode);'), (151, 1, u'+\tb2Assert(0 <= iB && iB < m_nodeCapacity);'), (152, 1, u'+\tb2Assert(0 <= iC && iC < m_nodeCapacity);'), (166, 1, u'+\t\tb2Assert(0 <= iF && iF < m_nodeCapacity);'), (167, 1, u'+\t\tb2Assert(0 <= iG && iG < m_nodeCapacity);'), (183, 1, u'+\t\t\t\tb2Assert(m_nodes[C->parent].child2 == iA);'), (226, 1, u'+\t\tb2Assert(0 <= iD && iD < m_nodeCapacity);'), (227, 1, u'+\t\tb2Assert(0 <= iE && iE < m_nodeCapacity);'), (243, 1, u'+\t\t\t\tb2Assert(m_nodes[B->parent].child2 == iA);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(iA != b2_nullNode);'), (12, 2, u'-    b2Assert(0 <= iB && iB < m_nodeCapacity);'), (13, 2, u'-    b2Assert(0 <= iC && iC < m_nodeCapacity);'), (27, 2, u'-        b2Assert(0 <= iF && iF < m_nodeCapacity);'), (28, 2, u'-        b2Assert(0 <= iG && iG < m_nodeCapacity);'), (44, 2, u'-                b2Assert(m_nodes[C->parent].child2 == iA);'), (87, 2, u'-        b2Assert(0 <= iD && iD < m_nodeCapacity);'), (88, 2, u'-        b2Assert(0 <= iE && iE < m_nodeCapacity);'), (104, 2, u'-                b2Assert(m_nodes[B->parent].child2 == iA);'), (141, 1, u'+\tb2Assert(iA != b2_nullNode);'), (151, 1, u'+\tb2Assert(0 <= iB && iB < m_nodeCapacity);'), (152, 1, u'+\tb2Assert(0 <= iC && iC < m_nodeCapacity);'), (166, 1, u'+\t\tb2Assert(0 <= iF && iF < m_nodeCapacity);'), (167, 1, u'+\t\tb2Assert(0 <= iG && iG < m_nodeCapacity);'), (183, 1, u'+\t\t\t\tb2Assert(m_nodes[C->parent].child2 == iA);'), (226, 1, u'+\t\tb2Assert(0 <= iD && iD < m_nodeCapacity);'), (227, 1, u'+\t\tb2Assert(0 <= iE && iE < m_nodeCapacity);'), (243, 1, u'+\t\t\t\tb2Assert(m_nodes[B->parent].child2 == iA);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (4, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: b2DynamicTree::ComputeHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (4, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(0 <= nodeId && nodeId < m_nodeCapacity);'), (4, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-        b2Assert(m_nodes[index].parent == b2_nullNode);'), (17, 1, u'+\t\tb2Assert(m_nodes[index].parent == b2_nullNode);'), (30, 2, u'-        b2Assert(child1 == b2_nullNode);'), (31, 2, u'-        b2Assert(child2 == b2_nullNode);'), (32, 2, u'-        b2Assert(node->height == 0);'), (37, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (38, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (39, 1, u'+\t\tb2Assert(node->height == 0);'), (43, 2, u'-    b2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (44, 2, u'-    b2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (45, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (46, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (48, 2, u'-    b2Assert(m_nodes[child1].parent == index);'), (49, 2, u'-    b2Assert(m_nodes[child2].parent == index);'), (50, 1, u'+\tb2Assert(m_nodes[child1].parent == index);'), (51, 1, u'+\tb2Assert(m_nodes[child2].parent == index);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: b2DynamicTree::ValidateStructure
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-        b2Assert(m_nodes[index].parent == b2_nullNode);'), (17, 1, u'+\t\tb2Assert(m_nodes[index].parent == b2_nullNode);'), (30, 2, u'-        b2Assert(child1 == b2_nullNode);'), (31, 2, u'-        b2Assert(child2 == b2_nullNode);'), (32, 2, u'-        b2Assert(node->height == 0);'), (37, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (38, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (39, 1, u'+\t\tb2Assert(node->height == 0);'), (43, 2, u'-    b2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (44, 2, u'-    b2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (45, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (46, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (48, 2, u'-    b2Assert(m_nodes[child1].parent == index);'), (49, 2, u'-    b2Assert(m_nodes[child2].parent == index);'), (50, 1, u'+\tb2Assert(m_nodes[child1].parent == index);'), (51, 1, u'+\tb2Assert(m_nodes[child2].parent == index);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-        b2Assert(m_nodes[index].parent == b2_nullNode);'), (17, 1, u'+\t\tb2Assert(m_nodes[index].parent == b2_nullNode);'), (30, 2, u'-        b2Assert(child1 == b2_nullNode);'), (31, 2, u'-        b2Assert(child2 == b2_nullNode);'), (32, 2, u'-        b2Assert(node->height == 0);'), (37, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (38, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (39, 1, u'+\t\tb2Assert(node->height == 0);'), (43, 2, u'-    b2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (44, 2, u'-    b2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (45, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (46, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (48, 2, u'-    b2Assert(m_nodes[child1].parent == index);'), (49, 2, u'-    b2Assert(m_nodes[child2].parent == index);'), (50, 1, u'+\tb2Assert(m_nodes[child1].parent == index);'), (51, 1, u'+\tb2Assert(m_nodes[child2].parent == index);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        b2Assert(child1 == b2_nullNode);'), (22, 2, u'-        b2Assert(child2 == b2_nullNode);'), (23, 2, u'-        b2Assert(node->height == 0);'), (28, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (29, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (30, 1, u'+\t\tb2Assert(node->height == 0);'), (34, 2, u'-    b2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (35, 2, u'-    b2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (36, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (37, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (43, 2, u'-    b2Assert(node->height == height);'), (48, 1, u'+\tb2Assert(node->height == height);'), (55, 2, u'-    b2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (56, 2, u'-    b2Assert(aabb.upperBound == node->aabb.upperBound);'), (57, 1, u'+\tb2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (58, 1, u'+\tb2Assert(aabb.upperBound == node->aabb.upperBound);')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: b2DynamicTree::ValidateMetrics
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        b2Assert(child1 == b2_nullNode);'), (22, 2, u'-        b2Assert(child2 == b2_nullNode);'), (23, 2, u'-        b2Assert(node->height == 0);'), (28, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (29, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (30, 1, u'+\t\tb2Assert(node->height == 0);'), (34, 2, u'-    b2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (35, 2, u'-    b2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (36, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (37, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (43, 2, u'-    b2Assert(node->height == height);'), (48, 1, u'+\tb2Assert(node->height == height);'), (55, 2, u'-    b2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (56, 2, u'-    b2Assert(aabb.upperBound == node->aabb.upperBound);'), (57, 1, u'+\tb2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (58, 1, u'+\tb2Assert(aabb.upperBound == node->aabb.upperBound);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        b2Assert(child1 == b2_nullNode);'), (22, 2, u'-        b2Assert(child2 == b2_nullNode);'), (23, 2, u'-        b2Assert(node->height == 0);'), (28, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (29, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (30, 1, u'+\t\tb2Assert(node->height == 0);'), (34, 2, u'-    b2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (35, 2, u'-    b2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (36, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (37, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (43, 2, u'-    b2Assert(node->height == height);'), (48, 1, u'+\tb2Assert(node->height == height);'), (55, 2, u'-    b2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (56, 2, u'-    b2Assert(aabb.upperBound == node->aabb.upperBound);'), (57, 1, u'+\tb2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (58, 1, u'+\tb2Assert(aabb.upperBound == node->aabb.upperBound);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        b2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (19, 1, u'+\t\tb2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (24, 2, u'-    b2Assert(GetHeight() == ComputeHeight());'), (25, 1, u'+\tb2Assert(GetHeight() == ComputeHeight());'), (27, 2, u'-    b2Assert(m_nodeCount + freeCount == m_nodeCapacity);'), (28, 1, u'+\tb2Assert(m_nodeCount + freeCount == m_nodeCapacity);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: b2DynamicTree::Validate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        b2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (19, 1, u'+\t\tb2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (24, 2, u'-    b2Assert(GetHeight() == ComputeHeight());'), (25, 1, u'+\tb2Assert(GetHeight() == ComputeHeight());'), (27, 2, u'-    b2Assert(m_nodeCount + freeCount == m_nodeCapacity);'), (28, 1, u'+\tb2Assert(m_nodeCount + freeCount == m_nodeCapacity);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        b2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (19, 1, u'+\t\tb2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (24, 2, u'-    b2Assert(GetHeight() == ComputeHeight());'), (25, 1, u'+\tb2Assert(GetHeight() == ComputeHeight());'), (27, 2, u'-    b2Assert(m_nodeCount + freeCount == m_nodeCapacity);'), (28, 1, u'+\tb2Assert(m_nodeCount + freeCount == m_nodeCapacity);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        b2Assert(node->IsLeaf() == false);'), (29, 1, u'+\t\tb2Assert(node->IsLeaf() == false);')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: b2DynamicTree::GetMaxBalance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        b2Assert(node->IsLeaf() == false);'), (29, 1, u'+\t\tb2Assert(node->IsLeaf() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-        b2Assert(node->IsLeaf() == false);'), (29, 1, u'+\t\tb2Assert(node->IsLeaf() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    b2Assert(target > tolerance);'), (95, 1, u'+\tb2Assert(target > tolerance);')]
===========================================
===========================================
Total add: 222
Total del: 216
Header: b2TimeOfImpact
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    b2Assert(target > tolerance);'), (95, 1, u'+\tb2Assert(target > tolerance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    b2Assert(target > tolerance);'), (95, 1, u'+\tb2Assert(target > tolerance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2_blockSizes < UCHAR_MAX);'), (16, 2, u'-            b2Assert(j < b2_blockSizes);'), (30, 1, u'+\tb2Assert(b2_blockSizes < UCHAR_MAX);'), (44, 1, u'+\t\t\tb2Assert(j < b2_blockSizes);')]
===========================================
===========================================
Total add: 28
Total del: 28
Header: b2BlockAllocator::b2BlockAllocator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2_blockSizes < UCHAR_MAX);'), (16, 2, u'-            b2Assert(j < b2_blockSizes);'), (30, 1, u'+\tb2Assert(b2_blockSizes < UCHAR_MAX);'), (44, 1, u'+\t\t\tb2Assert(j < b2_blockSizes);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2_blockSizes < UCHAR_MAX);'), (16, 2, u'-            b2Assert(j < b2_blockSizes);'), (30, 1, u'+\tb2Assert(b2_blockSizes < UCHAR_MAX);'), (44, 1, u'+\t\t\tb2Assert(j < b2_blockSizes);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(0 < size);'), (13, 2, u'-    b2Assert(0 <= index && index < b2_blockSizes);'), (38, 1, u'+\tb2Assert(0 < size);'), (46, 1, u'+\tb2Assert(0 <= index && index < b2_blockSizes);'), (75, 2, u'-        b2Assert(blockCount * blockSize <= b2_chunkSize);'), (93, 1, u'+\t\tb2Assert(blockCount * blockSize <= b2_chunkSize);')]
===========================================
===========================================
Total add: 52
Total del: 52
Header: b2BlockAllocator::Allocate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(0 < size);'), (13, 2, u'-    b2Assert(0 <= index && index < b2_blockSizes);'), (38, 1, u'+\tb2Assert(0 < size);'), (46, 1, u'+\tb2Assert(0 <= index && index < b2_blockSizes);'), (75, 2, u'-        b2Assert(blockCount * blockSize <= b2_chunkSize);'), (93, 1, u'+\t\tb2Assert(blockCount * blockSize <= b2_chunkSize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(0 < size);'), (13, 2, u'-    b2Assert(0 <= index && index < b2_blockSizes);'), (38, 1, u'+\tb2Assert(0 < size);'), (46, 1, u'+\tb2Assert(0 <= index && index < b2_blockSizes);'), (75, 2, u'-        b2Assert(blockCount * blockSize <= b2_chunkSize);'), (93, 1, u'+\t\tb2Assert(blockCount * blockSize <= b2_chunkSize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    b2Assert(0 < size);'), (12, 1, u'+\tb2Assert(0 < size);'), (26, 2, u'-    b2Assert(0 <= index && index < b2_blockSizes);'), (28, 1, u'+\tb2Assert(0 <= index && index < b2_blockSizes);'), (39, 2, u'-            b2Assert(    (int8*)p + blockSize <= (int8*)chunk->blocks ||'), (51, 2, u'-    b2Assert(found);'), (62, 1, u'+\t\t\tb2Assert(\t(int8*)p + blockSize <= (int8*)chunk->blocks ||'), (74, 1, u'+\tb2Assert(found);')]
===========================================
===========================================
Total add: 38
Total del: 38
Header: b2BlockAllocator::Free
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    b2Assert(0 < size);'), (12, 1, u'+\tb2Assert(0 < size);'), (26, 2, u'-    b2Assert(0 <= index && index < b2_blockSizes);'), (28, 1, u'+\tb2Assert(0 <= index && index < b2_blockSizes);'), (39, 2, u'-            b2Assert(    (int8*)p + blockSize <= (int8*)chunk->blocks ||'), (51, 2, u'-    b2Assert(found);'), (62, 1, u'+\t\t\tb2Assert(\t(int8*)p + blockSize <= (int8*)chunk->blocks ||'), (74, 1, u'+\tb2Assert(found);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    b2Assert(0 < size);'), (12, 1, u'+\tb2Assert(0 < size);'), (26, 2, u'-    b2Assert(0 <= index && index < b2_blockSizes);'), (28, 1, u'+\tb2Assert(0 <= index && index < b2_blockSizes);'), (39, 2, u'-            b2Assert(    (int8*)p + blockSize <= (int8*)chunk->blocks ||'), (51, 2, u'-    b2Assert(found);'), (62, 1, u'+\t\t\tb2Assert(\t(int8*)p + blockSize <= (int8*)chunk->blocks ||'), (74, 1, u'+\tb2Assert(found);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_index == 0);'), (3, 2, u'-    b2Assert(m_entryCount == 0);'), (4, 1, u'+\tb2Assert(m_index == 0);'), (5, 1, u'+\tb2Assert(m_entryCount == 0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2StackAllocator::~b2StackAllocator
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_index == 0);'), (3, 2, u'-    b2Assert(m_entryCount == 0);'), (4, 1, u'+\tb2Assert(m_index == 0);'), (5, 1, u'+\tb2Assert(m_entryCount == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_index == 0);'), (3, 2, u'-    b2Assert(m_entryCount == 0);'), (4, 1, u'+\tb2Assert(m_index == 0);'), (5, 1, u'+\tb2Assert(m_entryCount == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_entryCount < b2_maxStackEntries);'), (3, 1, u'+\tb2Assert(m_entryCount < b2_maxStackEntries);')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: b2StackAllocator::Allocate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_entryCount < b2_maxStackEntries);'), (3, 1, u'+\tb2Assert(m_entryCount < b2_maxStackEntries);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_entryCount < b2_maxStackEntries);'), (3, 1, u'+\tb2Assert(m_entryCount < b2_maxStackEntries);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_entryCount > 0);'), (4, 2, u'-    b2Assert(p == entry->data);'), (15, 1, u'+\tb2Assert(m_entryCount > 0);'), (17, 1, u'+\tb2Assert(p == entry->data);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: b2StackAllocator::Free
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_entryCount > 0);'), (4, 2, u'-    b2Assert(p == entry->data);'), (15, 1, u'+\tb2Assert(m_entryCount > 0);'), (17, 1, u'+\tb2Assert(p == entry->data);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_entryCount > 0);'), (4, 2, u'-    b2Assert(p == entry->data);'), (15, 1, u'+\tb2Assert(m_entryCount > 0);'), (17, 1, u'+\tb2Assert(p == entry->data);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2ChainAndCircleContact::b2ChainAndCircleContact
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2ChainAndPolygonContact::b2ChainAndPolygonContact
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_chain);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_circle);'), (6, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (7, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_circle);'), (8, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: b2CircleContact::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_circle);'), (6, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (7, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_circle);'), (8, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_circle);'), (6, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (7, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_circle);'), (8, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (6, 2, u'-    b2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);'), (18, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (19, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: b2Contact::InitializeRegisters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (6, 2, u'-    b2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);'), (18, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (19, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (6, 2, u'-    b2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);'), (18, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (19, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    b2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (12, 2, u'-    b2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);'), (39, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (40, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Total add: 28
Total del: 28
Header: b2Contact::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    b2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (12, 2, u'-    b2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);'), (39, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (40, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    b2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (12, 2, u'-    b2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);'), (39, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (40, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(s_initialized == true);'), (3, 1, u'+\tb2Assert(s_initialized == true);'), (23, 2, u'-    b2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (24, 2, u'-    b2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (30, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (31, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);')]
===========================================
===========================================
Total add: 17
Total del: 12
Header: b2Contact::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(s_initialized == true);'), (3, 1, u'+\tb2Assert(s_initialized == true);'), (23, 2, u'-    b2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (24, 2, u'-    b2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (30, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (31, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(s_initialized == true);'), (3, 1, u'+\tb2Assert(s_initialized == true);'), (23, 2, u'-    b2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (24, 2, u'-    b2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (30, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (31, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        b2Assert(pointCount > 0);'), (109, 1, u'+\t\tb2Assert(pointCount > 0);')]
===========================================
===========================================
Total add: 83
Total del: 82
Header: b2ContactSolver::b2ContactSolver
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        b2Assert(pointCount > 0);'), (109, 1, u'+\t\tb2Assert(pointCount > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        b2Assert(pointCount > 0);'), (109, 1, u'+\t\tb2Assert(pointCount > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-        b2Assert(manifold->pointCount > 0);'), (138, 1, u'+\t\tb2Assert(manifold->pointCount > 0);')]
===========================================
===========================================
Total add: 107
Total del: 107
Header: b2ContactSolver::InitializeVelocityConstraints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-        b2Assert(manifold->pointCount > 0);'), (138, 1, u'+\t\tb2Assert(manifold->pointCount > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-        b2Assert(manifold->pointCount > 0);'), (138, 1, u'+\t\tb2Assert(manifold->pointCount > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        b2Assert(pointCount == 1 || pointCount == 2);'), (118, 2, u'-            b2Assert(a.x >= 0.0f && a.y >= 0.0f);'), (189, 1, u'+\t\tb2Assert(pointCount == 1 || pointCount == 2);'), (284, 1, u'+\t\t\tb2Assert(a.x >= 0.0f && a.y >= 0.0f);'), (350, 2, u'-                    b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (351, 2, u'-                    b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (352, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (353, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (429, 2, u'-                    b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (430, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (508, 2, u'-                    b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (509, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);')]
===========================================
===========================================
Total add: 291
Total del: 291
Header: b2ContactSolver::SolveVelocityConstraints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        b2Assert(pointCount == 1 || pointCount == 2);'), (118, 2, u'-            b2Assert(a.x >= 0.0f && a.y >= 0.0f);'), (189, 1, u'+\t\tb2Assert(pointCount == 1 || pointCount == 2);'), (284, 1, u'+\t\t\tb2Assert(a.x >= 0.0f && a.y >= 0.0f);'), (350, 2, u'-                    b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (351, 2, u'-                    b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (352, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (353, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (429, 2, u'-                    b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (430, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (508, 2, u'-                    b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (509, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        b2Assert(pointCount == 1 || pointCount == 2);'), (118, 2, u'-            b2Assert(a.x >= 0.0f && a.y >= 0.0f);'), (189, 1, u'+\t\tb2Assert(pointCount == 1 || pointCount == 2);'), (284, 1, u'+\t\t\tb2Assert(a.x >= 0.0f && a.y >= 0.0f);'), (350, 2, u'-                    b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (351, 2, u'-                    b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (352, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (353, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (429, 2, u'-                    b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (430, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);'), (508, 2, u'-                    b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);'), (509, 1, u'+\t\t\t\t\tb2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2EdgeAndCircleContact::b2EdgeAndCircleContact
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2EdgeAndPolygonContact::b2EdgeAndPolygonContact
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_edge);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2PolygonAndCircleContact::b2PolygonAndCircleContact
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (3, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_circle);'), (4, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (5, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_circle);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (6, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (7, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (8, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: b2PolygonContact::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (6, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (7, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (8, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    b2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (6, 2, u'-    b2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);'), (7, 1, u'+\tb2Assert(m_fixtureA->GetType() == b2Shape::e_polygon);'), (8, 1, u'+\tb2Assert(m_fixtureB->GetType() == b2Shape::e_polygon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(force) && force >= 0.0f);'), (4, 1, u'+\tb2Assert(b2IsValid(force) && force >= 0.0f);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2FrictionJoint::SetMaxForce
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(force) && force >= 0.0f);'), (4, 1, u'+\tb2Assert(b2IsValid(force) && force >= 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(force) && force >= 0.0f);'), (4, 1, u'+\tb2Assert(b2IsValid(force) && force >= 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(torque) && torque >= 0.0f);'), (4, 1, u'+\tb2Assert(b2IsValid(torque) && torque >= 0.0f);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2FrictionJoint::SetMaxTorque
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(torque) && torque >= 0.0f);'), (4, 1, u'+\tb2Assert(b2IsValid(torque) && torque >= 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(torque) && torque >= 0.0f);'), (4, 1, u'+\tb2Assert(b2IsValid(torque) && torque >= 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    b2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (9, 2, u'-    b2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);'), (90, 1, u'+\tb2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (91, 1, u'+\tb2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);')]
===========================================
===========================================
Total add: 82
Total del: 82
Header: b2GearJoint::b2GearJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    b2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (9, 2, u'-    b2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);'), (90, 1, u'+\tb2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (91, 1, u'+\tb2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    b2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (9, 2, u'-    b2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);'), (90, 1, u'+\tb2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (91, 1, u'+\tb2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(ratio));'), (4, 1, u'+\tb2Assert(b2IsValid(ratio));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2GearJoint::SetRatio
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(ratio));'), (4, 1, u'+\tb2Assert(b2IsValid(ratio));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(b2IsValid(ratio));'), (4, 1, u'+\tb2Assert(b2IsValid(ratio));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-        b2Assert(false);'), (163, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Total add: 86
Total del: 79
Header: b2Joint::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-        b2Assert(false);'), (163, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-        b2Assert(false);'), (163, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(76, 2, u'-        b2Assert(false);'), (96, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Total add: 50
Total del: 46
Header: b2Joint::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(76, 2, u'-        b2Assert(false);'), (96, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(76, 2, u'-        b2Assert(false);'), (96, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->bodyA != def->bodyB);'), (23, 1, u'+\tb2Assert(def->bodyA != def->bodyB);')]
===========================================
===========================================
Total add: 21
Total del: 21
Header: b2Joint::b2Joint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->bodyA != def->bodyB);'), (23, 1, u'+\tb2Assert(def->bodyA != def->bodyB);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->bodyA != def->bodyB);'), (23, 1, u'+\tb2Assert(def->bodyA != def->bodyB);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->target.IsValid());'), (3, 2, u'-    b2Assert(b2IsValid(def->maxForce) && def->maxForce >= 0.0f);'), (4, 2, u'-    b2Assert(b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f);'), (5, 2, u'-    b2Assert(b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f);'), (6, 1, u'+\tb2Assert(def->target.IsValid());'), (7, 1, u'+\tb2Assert(b2IsValid(def->maxForce) && def->maxForce >= 0.0f);'), (8, 1, u'+\tb2Assert(b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f);'), (9, 1, u'+\tb2Assert(b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: b2MouseJoint::b2MouseJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->target.IsValid());'), (3, 2, u'-    b2Assert(b2IsValid(def->maxForce) && def->maxForce >= 0.0f);'), (4, 2, u'-    b2Assert(b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f);'), (5, 2, u'-    b2Assert(b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f);'), (6, 1, u'+\tb2Assert(def->target.IsValid());'), (7, 1, u'+\tb2Assert(b2IsValid(def->maxForce) && def->maxForce >= 0.0f);'), (8, 1, u'+\tb2Assert(b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f);'), (9, 1, u'+\tb2Assert(b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->target.IsValid());'), (3, 2, u'-    b2Assert(b2IsValid(def->maxForce) && def->maxForce >= 0.0f);'), (4, 2, u'-    b2Assert(b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f);'), (5, 2, u'-    b2Assert(b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f);'), (6, 1, u'+\tb2Assert(def->target.IsValid());'), (7, 1, u'+\tb2Assert(b2IsValid(def->maxForce) && def->maxForce >= 0.0f);'), (8, 1, u'+\tb2Assert(b2IsValid(def->frequencyHz) && def->frequencyHz >= 0.0f);'), (9, 1, u'+\tb2Assert(b2IsValid(def->dampingRatio) && def->dampingRatio >= 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-    b2Assert(d + h * k > b2_epsilon);'), (56, 1, u'+\tb2Assert(d + h * k > b2_epsilon);')]
===========================================
===========================================
Total add: 54
Total del: 54
Header: b2MouseJoint::InitVelocityConstraints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-    b2Assert(d + h * k > b2_epsilon);'), (56, 1, u'+\tb2Assert(d + h * k > b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-    b2Assert(d + h * k > b2_epsilon);'), (56, 1, u'+\tb2Assert(d + h * k > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(lower <= upper);'), (11, 1, u'+\tb2Assert(lower <= upper);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: b2PrismaticJoint::SetLimits
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(lower <= upper);'), (11, 1, u'+\tb2Assert(lower <= upper);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(lower <= upper);'), (11, 1, u'+\tb2Assert(lower <= upper);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    b2Assert(ratio > b2_epsilon);'), (32, 1, u'+\tb2Assert(ratio > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    b2Assert(def->ratio != 0.0f);'), (18, 1, u'+\tb2Assert(def->ratio != 0.0f);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: b2PulleyJoint::b2PulleyJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    b2Assert(def->ratio != 0.0f);'), (18, 1, u'+\tb2Assert(def->ratio != 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    b2Assert(def->ratio != 0.0f);'), (18, 1, u'+\tb2Assert(def->ratio != 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(lower <= upper);'), (12, 1, u'+\tb2Assert(lower <= upper);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: b2RevoluteJoint::SetLimits
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(lower <= upper);'), (12, 1, u'+\tb2Assert(lower <= upper);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(lower <= upper);'), (12, 1, u'+\tb2Assert(lower <= upper);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(bd->position.IsValid());'), (3, 2, u'-    b2Assert(bd->linearVelocity.IsValid());'), (4, 2, u'-    b2Assert(b2IsValid(bd->angle));'), (5, 2, u'-    b2Assert(b2IsValid(bd->angularVelocity));'), (6, 2, u'-    b2Assert(b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f);'), (7, 2, u'-    b2Assert(b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f);'), (81, 1, u'+\tb2Assert(bd->position.IsValid());'), (82, 1, u'+\tb2Assert(bd->linearVelocity.IsValid());'), (83, 1, u'+\tb2Assert(b2IsValid(bd->angle));'), (84, 1, u'+\tb2Assert(b2IsValid(bd->angularVelocity));'), (85, 1, u'+\tb2Assert(b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f);'), (86, 1, u'+\tb2Assert(b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f);')]
===========================================
===========================================
Total add: 79
Total del: 79
Header: b2Body::b2Body
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(bd->position.IsValid());'), (3, 2, u'-    b2Assert(bd->linearVelocity.IsValid());'), (4, 2, u'-    b2Assert(b2IsValid(bd->angle));'), (5, 2, u'-    b2Assert(b2IsValid(bd->angularVelocity));'), (6, 2, u'-    b2Assert(b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f);'), (7, 2, u'-    b2Assert(b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f);'), (81, 1, u'+\tb2Assert(bd->position.IsValid());'), (82, 1, u'+\tb2Assert(bd->linearVelocity.IsValid());'), (83, 1, u'+\tb2Assert(b2IsValid(bd->angle));'), (84, 1, u'+\tb2Assert(b2IsValid(bd->angularVelocity));'), (85, 1, u'+\tb2Assert(b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f);'), (86, 1, u'+\tb2Assert(b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(bd->position.IsValid());'), (3, 2, u'-    b2Assert(bd->linearVelocity.IsValid());'), (4, 2, u'-    b2Assert(b2IsValid(bd->angle));'), (5, 2, u'-    b2Assert(b2IsValid(bd->angularVelocity));'), (6, 2, u'-    b2Assert(b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f);'), (7, 2, u'-    b2Assert(b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f);'), (81, 1, u'+\tb2Assert(bd->position.IsValid());'), (82, 1, u'+\tb2Assert(bd->linearVelocity.IsValid());'), (83, 1, u'+\tb2Assert(b2IsValid(bd->angle));'), (84, 1, u'+\tb2Assert(b2IsValid(bd->angularVelocity));'), (85, 1, u'+\tb2Assert(b2IsValid(bd->angularDamping) && bd->angularDamping >= 0.0f);'), (86, 1, u'+\tb2Assert(b2IsValid(bd->linearDamping) && bd->linearDamping >= 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (36, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Total add: 49
Total del: 34
Header: b2Body::SetType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (36, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (36, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (7, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: b2Body::CreateFixture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (7, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (7, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (8, 2, u'-    b2Assert(fixture->m_body == this);'), (11, 2, u'-    b2Assert(m_fixtureCount > 0);'), (27, 2, u'-    b2Assert(found);'), (65, 1, u'+\tb2Assert(m_world->IsLocked() == false);'), (71, 1, u'+\tb2Assert(fixture->m_body == this);'), (74, 1, u'+\tb2Assert(m_fixtureCount > 0);'), (90, 1, u'+\tb2Assert(found);')]
===========================================
===========================================
Total add: 63
Total del: 63
Header: b2Body::DestroyFixture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (8, 2, u'-    b2Assert(fixture->m_body == this);'), (11, 2, u'-    b2Assert(m_fixtureCount > 0);'), (27, 2, u'-    b2Assert(found);'), (65, 1, u'+\tb2Assert(m_world->IsLocked() == false);'), (71, 1, u'+\tb2Assert(fixture->m_body == this);'), (74, 1, u'+\tb2Assert(m_fixtureCount > 0);'), (90, 1, u'+\tb2Assert(found);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (8, 2, u'-    b2Assert(fixture->m_body == this);'), (11, 2, u'-    b2Assert(m_fixtureCount > 0);'), (27, 2, u'-    b2Assert(found);'), (65, 1, u'+\tb2Assert(m_world->IsLocked() == false);'), (71, 1, u'+\tb2Assert(fixture->m_body == this);'), (74, 1, u'+\tb2Assert(m_fixtureCount > 0);'), (90, 1, u'+\tb2Assert(found);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-    b2Assert(m_type == b2_dynamicBody);'), (53, 2, u'-        b2Assert(m_I > 0.0f);'), (86, 1, u'+\tb2Assert(m_type == b2_dynamicBody);'), (121, 1, u'+\t\tb2Assert(m_I > 0.0f);')]
===========================================
===========================================
Total add: 68
Total del: 68
Header: b2Body::ResetMassData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-    b2Assert(m_type == b2_dynamicBody);'), (53, 2, u'-        b2Assert(m_I > 0.0f);'), (86, 1, u'+\tb2Assert(m_type == b2_dynamicBody);'), (121, 1, u'+\t\tb2Assert(m_I > 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-    b2Assert(m_type == b2_dynamicBody);'), (53, 2, u'-        b2Assert(m_I > 0.0f);'), (86, 1, u'+\tb2Assert(m_type == b2_dynamicBody);'), (121, 1, u'+\t\tb2Assert(m_I > 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (28, 2, u'-        b2Assert(m_I > 0.0f);'), (39, 1, u'+\tb2Assert(m_world->IsLocked() == false);'), (65, 1, u'+\t\tb2Assert(m_I > 0.0f);')]
===========================================
===========================================
Total add: 37
Total del: 37
Header: b2Body::SetMassData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (28, 2, u'-        b2Assert(m_I > 0.0f);'), (39, 1, u'+\tb2Assert(m_world->IsLocked() == false);'), (65, 1, u'+\t\tb2Assert(m_I > 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (28, 2, u'-        b2Assert(m_I > 0.0f);'), (39, 1, u'+\tb2Assert(m_world->IsLocked() == false);'), (65, 1, u'+\t\tb2Assert(m_I > 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (24, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Total add: 20
Total del: 22
Header: b2Body::SetTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (24, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (24, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (43, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Total add: 63
Total del: 41
Header: b2Body::SetActive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (43, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_world->IsLocked() == false);'), (43, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    b2Assert(m_proxyCount == 0);'), (46, 2, u'-        b2Assert(false);'), (52, 1, u'+\tb2Assert(m_proxyCount == 0);'), (95, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Total add: 49
Total del: 49
Header: b2Fixture::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    b2Assert(m_proxyCount == 0);'), (46, 2, u'-        b2Assert(false);'), (52, 1, u'+\tb2Assert(m_proxyCount == 0);'), (95, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    b2Assert(m_proxyCount == 0);'), (46, 2, u'-        b2Assert(false);'), (52, 1, u'+\tb2Assert(m_proxyCount == 0);'), (95, 1, u'+\t\tb2Assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_proxyCount == 0);'), (15, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: b2Fixture::CreateProxies
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_proxyCount == 0);'), (15, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_proxyCount == 0);'), (15, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(toiIndexA < m_bodyCount);'), (3, 2, u'-    b2Assert(toiIndexB < m_bodyCount);'), (33, 1, u'+\tb2Assert(toiIndexA < m_bodyCount);'), (34, 1, u'+\tb2Assert(toiIndexB < m_bodyCount);')]
===========================================
===========================================
Total add: 124
Total del: 124
Header: b2Island::SolveTOI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(toiIndexA < m_bodyCount);'), (3, 2, u'-    b2Assert(toiIndexB < m_bodyCount);'), (33, 1, u'+\tb2Assert(toiIndexA < m_bodyCount);'), (34, 1, u'+\tb2Assert(toiIndexB < m_bodyCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(toiIndexA < m_bodyCount);'), (3, 2, u'-    b2Assert(toiIndexB < m_bodyCount);'), (33, 1, u'+\tb2Assert(toiIndexA < m_bodyCount);'), (34, 1, u'+\tb2Assert(toiIndexB < m_bodyCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (22, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: b2World::CreateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (22, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (22, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_bodyCount > 0);'), (3, 2, u'-    b2Assert(IsLocked() == false);'), (79, 1, u'+\tb2Assert(m_bodyCount > 0);'), (80, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
Total add: 77
Total del: 77
Header: b2World::DestroyBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_bodyCount > 0);'), (3, 2, u'-    b2Assert(IsLocked() == false);'), (79, 1, u'+\tb2Assert(m_bodyCount > 0);'), (80, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(m_bodyCount > 0);'), (3, 2, u'-    b2Assert(IsLocked() == false);'), (79, 1, u'+\tb2Assert(m_bodyCount > 0);'), (80, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (58, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
Total add: 56
Total del: 56
Header: b2World::CreateJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (58, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (58, 1, u'+\tb2Assert(IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (74, 2, u'-    b2Assert(m_jointCount > 0);'), (93, 1, u'+\tb2Assert(IsLocked() == false);'), (165, 1, u'+\tb2Assert(m_jointCount > 0);')]
===========================================
===========================================
Total add: 91
Total del: 91
Header: b2World::DestroyJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (74, 2, u'-    b2Assert(m_jointCount > 0);'), (93, 1, u'+\tb2Assert(IsLocked() == false);'), (165, 1, u'+\tb2Assert(m_jointCount > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(IsLocked() == false);'), (74, 2, u'-    b2Assert(m_jointCount > 0);'), (93, 1, u'+\tb2Assert(IsLocked() == false);'), (165, 1, u'+\tb2Assert(m_jointCount > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-            b2Assert(b->IsActive() == true);'), (109, 2, u'-                b2Assert(stackCount < stackSize);'), (138, 2, u'-                b2Assert(stackCount < stackSize);'), (245, 1, u'+\t\t\tb2Assert(b->IsActive() == true);'), (295, 1, u'+\t\t\t\tb2Assert(stackCount < stackSize);'), (324, 1, u'+\t\t\t\tb2Assert(stackCount < stackSize);')]
===========================================
===========================================
Total add: 186
Total del: 186
Header: b2World::Solve
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-            b2Assert(b->IsActive() == true);'), (109, 2, u'-                b2Assert(stackCount < stackSize);'), (138, 2, u'-                b2Assert(stackCount < stackSize);'), (245, 1, u'+\t\t\tb2Assert(b->IsActive() == true);'), (295, 1, u'+\t\t\t\tb2Assert(stackCount < stackSize);'), (324, 1, u'+\t\t\t\tb2Assert(stackCount < stackSize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-            b2Assert(b->IsActive() == true);'), (109, 2, u'-                b2Assert(stackCount < stackSize);'), (138, 2, u'-                b2Assert(stackCount < stackSize);'), (245, 1, u'+\t\t\tb2Assert(b->IsActive() == true);'), (295, 1, u'+\t\t\t\tb2Assert(stackCount < stackSize);'), (324, 1, u'+\t\t\t\tb2Assert(stackCount < stackSize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-                b2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (99, 2, u'-                b2Assert(alpha0 < 1.0f);'), (380, 1, u'+\t\t\t\tb2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (415, 1, u'+\t\t\t\tb2Assert(alpha0 < 1.0f);')]
===========================================
===========================================
Total add: 316
Total del: 316
Header: b2World::SolveTOI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-                b2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (99, 2, u'-                b2Assert(alpha0 < 1.0f);'), (380, 1, u'+\t\t\t\tb2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (415, 1, u'+\t\t\t\tb2Assert(alpha0 < 1.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-                b2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (99, 2, u'-                b2Assert(alpha0 < 1.0f);'), (380, 1, u'+\t\t\t\tb2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (415, 1, u'+\t\t\t\tb2Assert(alpha0 < 1.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-            b2Assert(vertexCount <= b2_maxPolygonVertices);'), (101, 1, u'+\t\t\tb2Assert(vertexCount <= b2_maxPolygonVertices);')]
===========================================
===========================================
Total add: 55
Total del: 55
Header: b2World::DrawShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-            b2Assert(vertexCount <= b2_maxPolygonVertices);'), (101, 1, u'+\t\t\tb2Assert(vertexCount <= b2_maxPolygonVertices);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-            b2Assert(vertexCount <= b2_maxPolygonVertices);'), (101, 1, u'+\t\t\tb2Assert(vertexCount <= b2_maxPolygonVertices);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->count >= 3);'), (57, 1, u'+\tb2Assert(def->count >= 3);')]
===========================================
===========================================
Total add: 55
Total del: 55
Header: b2Rope::Initialize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->count >= 3);'), (57, 1, u'+\tb2Assert(def->count >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    b2Assert(def->count >= 3);'), (57, 1, u'+\tb2Assert(def->count >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (58, 1, u'+                    CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 56
Total del: 29
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (58, 1, u'+                    CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");'), (58, 1, u'+                    CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCASSERT(a != nullptr && b != nullptr, "the body passed in is nil");'), (4, 1, u'+        CCASSERT(a != b, "the two bodies are equal");')]
===========================================
===========================================
Total add: 7
Total del: 11
Header: PhysicsJoint::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCASSERT(a != nullptr && b != nullptr, "the body passed in is nil");'), (4, 1, u'+        CCASSERT(a != b, "the two bodies are equal");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCASSERT(a != nullptr && b != nullptr, "the body passed in is nil");'), (4, 1, u'+        CCASSERT(a != b, "the two bodies are equal");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (13, 1, u'+    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCSkeleton::CCSkeleton
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (13, 1, u'+    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (13, 1, u'+    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCASSERT(atlas, "Error reading atlas file.");'), (8, 1, u'+    CCASSERT(atlas, "Error reading atlas file.");'), (13, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (18, 1, u'+    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCSkeleton::CCSkeleton
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCASSERT(atlas, "Error reading atlas file.");'), (8, 1, u'+    CCASSERT(atlas, "Error reading atlas file.");'), (13, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (18, 1, u'+    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCASSERT(atlas, "Error reading atlas file.");'), (8, 1, u'+    CCASSERT(atlas, "Error reading atlas file.");'), (13, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (18, 1, u'+    CCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
Class: class JSStudioEventListenerWrapper: public JSCallbackWrapper { class JSStudioEventListenerWrapper: public JSCallbackWrapper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(onKeyPressed && onKeyReleased, "");'), (5, 1, u'+        CCASSERT(false, "Invalid EventListenerKeyboard!");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: EventListenerKeyboard::checkAvailable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(onKeyPressed && onKeyReleased, "");'), (5, 1, u'+        CCASSERT(false, "Invalid EventListenerKeyboard!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(onKeyPressed && onKeyReleased, "");'), (5, 1, u'+        CCASSERT(false, "Invalid EventListenerKeyboard!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    CCASSERT(pAction != NULL, "");'), (28, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: Speed::~Speed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    CCASSERT(pAction != NULL, "");'), (28, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-    CCASSERT(pAction != NULL, "");'), (28, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pFollowedNode != NULL, "");'), (6, 1, u'+    CCASSERT(followedNode != nullptr, "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Follow::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pFollowedNode != NULL, "");'), (6, 1, u'+    CCASSERT(followedNode != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pFollowedNode != NULL, "");'), (6, 1, u'+    CCASSERT(followedNode != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(controlPoints != NULL, "control points should not be NULL");'), (3, 1, u'+    CCASSERT(controlPoints != nullptr, "control points should not be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PointArray::setControlPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(controlPoints != NULL, "control points should not be NULL");'), (3, 1, u'+    CCASSERT(controlPoints != nullptr, "control points should not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(controlPoints != NULL, "control points should not be NULL");'), (3, 1, u'+    CCASSERT(controlPoints != nullptr, "control points should not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction != NULL, "");'), (6, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: NS_CC_BEGIN
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction != NULL, "");'), (6, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction != NULL, "");'), (6, 1, u'+    CCASSERT(action != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pobOpenGLView, "opengl view should not be null");'), (6, 1, u'+    CCASSERT(openGLView, "opengl view should not be null");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Director::getDeltaTime
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pobOpenGLView, "opengl view should not be null");'), (6, 1, u'+    CCASSERT(openGLView, "opengl view should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pobOpenGLView, "opengl view should not be null");'), (6, 1, u'+    CCASSERT(openGLView, "opengl view should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCASSERT(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-nullptr");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-nullptr");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Scheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCASSERT(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-nullptr");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCASSERT(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-nullptr");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        CCASSERT(pHashElement->entry->markedForDeletion,"");'), (11, 1, u'+        CCASSERT(hashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Scheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        CCASSERT(pHashElement->entry->markedForDeletion,"");'), (11, 1, u'+        CCASSERT(hashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        CCASSERT(pHashElement->entry->markedForDeletion,"");'), (11, 1, u'+        CCASSERT(hashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCASSERT(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-nullptr");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-nullptr");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Scheduler::isScheduledForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCASSERT(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-nullptr");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCASSERT(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-nullptr");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( target != NULL, "target must be non nil" );'), (3, 1, u'+    CCASSERT( target != nullptr, "target must be non nil" );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scheduler::isTargetPaused
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( target != NULL, "target must be non nil" );'), (3, 1, u'+    CCASSERT( target != nullptr, "target must be non nil" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( target != NULL, "target must be non nil" );'), (3, 1, u'+    CCASSERT( target != nullptr, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: TileMapAtlas::calculateItemsToRender
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( file != NULL, "file must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(spriteFrameName.size() > 0, "Invalid spriteFrameName");')]
===========================================
===========================================
Total add: 49
Total del: 5
Header: Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(spriteFrameName.size() > 0, "Invalid spriteFrameName");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(spriteFrameName.size() > 0, "Invalid spriteFrameName");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 6
Total del: 44
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 65
Total del: 2
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT( static_cast<long>(n) <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LabelAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT( static_cast<long>(n) <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT( static_cast<long>(n) <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT( static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) && static_cast<unsigned long>(_pixelsHigh) == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT( static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) && static_cast<unsigned long>(_pixelsHigh) == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT( static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) && static_cast<unsigned long>(_pixelsHigh) == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCASSERT( (static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Texture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCASSERT( (static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCASSERT( (static_cast<unsigned long>(_pixelsWide) == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Renderer::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                CCASSERT(cmd->getQuadCount()<VBO_SIZE, "VBO is not big enough for quad data, please break the quad data down or use customized render command");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (3, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (4, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (5, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (6, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: ZipUtils::ccDecodeEncodedPvr
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (3, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (4, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (5, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (6, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (3, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (4, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (5, 2, u'-    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (6, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::setPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsWorld::rayCast
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsWorld::rectQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsWorld::pointQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");'), (3, 1, u'+    CCASSERT(func != nullptr, "func shouldn\'t be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(p);'), (8, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (10, 1, u'+    CCASSERT(p, "The value is null.");')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: dummy_constructor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(p);'), (8, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (10, 1, u'+    CCASSERT(p, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(p);'), (8, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (10, 1, u'+    CCASSERT(p, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(typeClass);'), (10, 1, u'+            CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+            CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 8
Total del: 4
Header: JSB_CCPhysicsDebugNode_debugNodeForCPSpace__static
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(typeClass);'), (10, 1, u'+            CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+            CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(typeClass);'), (10, 1, u'+            CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+            CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(typeClass);'), (10, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+    CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: JSB_CCPhysicsDebugNode_createClass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(typeClass);'), (10, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+    CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(typeClass);'), (10, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+    CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(typeClass);'), (9, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: JSPROXY_CCPhysicsSprite_spriteWithFile_rect__static
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(typeClass);'), (9, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(typeClass);'), (9, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(typeClass);'), (9, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: JSPROXY_CCPhysicsSprite_spriteWithFile_rect__static
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(typeClass);'), (9, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                assert(typeClass);'), (9, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(typeClass);'), (9, 1, u'+            CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+            CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: JSPROXY_CCPhysicsSprite_spriteWithSpriteFrame__static
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(typeClass);'), (9, 1, u'+            CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+            CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(typeClass);'), (9, 1, u'+            CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+            CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-            assert(typeClass);'), (35, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (37, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 27
Total del: 21
Header: JSPROXY_CCPhysicsSprite_spriteWithSpriteFrameName__static
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-            assert(typeClass);'), (35, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (37, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-            assert(typeClass);'), (35, 1, u'+                CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (37, 1, u'+                CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(typeClass);'), (9, 1, u'+\tCCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+\tCCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: JSPROXY_CCPhysicsSprite_createClass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(typeClass);'), (9, 1, u'+\tCCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+\tCCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(typeClass);'), (9, 1, u'+\tCCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (11, 1, u'+\tCCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(typeClass);'), (10, 1, u'+        CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+        CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: js_cocos2dx_CCSet_constructor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(typeClass);'), (10, 1, u'+        CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+        CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tassert(typeClass);'), (10, 1, u'+        CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (12, 1, u'+        CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(typeClass);'), (13, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (15, 1, u'+    CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Total add: 9
Total del: 5
Header: js_cocos2dx_GLNode_constructor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(typeClass);'), (13, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (15, 1, u'+    CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(typeClass);'), (13, 1, u'+    CCASSERT(typeMapIter != _js_global_type_map.end(), "Can\'t find the class type!");'), (15, 1, u'+    CCASSERT(typeClass, "The value is null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    assert(p);')]
===========================================
===========================================
Total add: 0
Total del: 69
Header: JSCallbackWrapper::getJSExtraData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    assert(p);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    assert(p);')]
===========================================
Class: class LuaArmatureWrapper:public Object { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        CCASSERT(false, "Invalid TouchEventListener.");'), (7, 1, u'+        CCASSERT(false, "Invalid EventListenerTouchOneByOne!");')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: EventListenerTouchOneByOne::checkAvailable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        CCASSERT(false, "Invalid TouchEventListener.");'), (7, 1, u'+        CCASSERT(false, "Invalid EventListenerTouchOneByOne!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        CCASSERT(false, "Invalid TouchEventListener.");'), (7, 1, u'+        CCASSERT(false, "Invalid EventListenerTouchOneByOne!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(false, "Invalid TouchEventListener.");'), (3, 1, u'+        CCASSERT(false, "Invalid EventListenerTouchAllAtOnce!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: EventListenerTouchAllAtOnce::checkAvailable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(false, "Invalid TouchEventListener.");'), (3, 1, u'+        CCASSERT(false, "Invalid EventListenerTouchAllAtOnce!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(false, "Invalid TouchEventListener.");'), (3, 1, u'+        CCASSERT(false, "Invalid EventListenerTouchAllAtOnce!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: TextureCache::TextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_shaderID < 64, "ShaderID is greater than 64");'), (3, 1, u'+    CCASSERT(_shader->getProgram() < 64, "ShaderID is greater than 64");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: QuadCommand::generateID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_shaderID < 64, "ShaderID is greater than 64");'), (3, 1, u'+    CCASSERT(_shader->getProgram() < 64, "ShaderID is greater than 64");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_shaderID < 64, "ShaderID is greater than 64");'), (3, 1, u'+    CCASSERT(_shader->getProgram() < 64, "ShaderID is greater than 64");')]
===========================================
Class: class LuaCocoStudioEventListener:public Object { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");'), (6, 1, u'+    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: PhysicsWorld::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");'), (6, 1, u'+    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");'), (6, 1, u'+    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");'), (6, 1, u'+    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: PhysicsWorld::rayCast
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");'), (6, 1, u'+    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");'), (6, 1, u'+    CCASSERT(func != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
Class:class PhysicsDemoNearestRayCastCallback : public PhysicsRayCastCallback { 
Class: class PhysicsDemoMultiRayCastCallback : public PhysicsRayCastCallback { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(tile != NULL, "title should not be null");'), (6, 1, u'+    CCASSERT(tile.size() > 0, "file size should not be empty");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: AtlasNode::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(tile != NULL, "title should not be null");'), (6, 1, u'+    CCASSERT(tile.size() > 0, "file size should not be empty");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(tile != NULL, "title should not be null");'), (6, 1, u'+    CCASSERT(tile.size() > 0, "file size should not be empty");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(count >= 0, "invalid count value");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: DrawNode::drawSegment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(count >= 0, "invalid count value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(count >= 0, "invalid count value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(string != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: LabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(string != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(string != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (25, 1, u'+    CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: LabelAtlas::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (25, 1, u'+    CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (25, 1, u'+    CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: MenuItemAtlasFont::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (6, 1, u'+    CCASSERT( value.size() != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MenuItemAtlasFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (6, 1, u'+    CCASSERT( value.size() != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (6, 1, u'+    CCASSERT( value.size() != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (6, 1, u'+    CCASSERT( value.size() >= 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: MenuItemFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (6, 1, u'+    CCASSERT( value.size() >= 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (6, 1, u'+    CCASSERT( value.size() >= 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");'), (6, 1, u'+    CCASSERT(tmxFile.size()>0, "TMXTiledMap: tmx file should not be empty");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXTiledMap::createWithXML
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");'), (6, 1, u'+    CCASSERT(tmxFile.size()>0, "TMXTiledMap: tmx file should not be empty");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");'), (6, 1, u'+    CCASSERT(tmxFile.size()>0, "TMXTiledMap: tmx file should not be empty");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");'), (6, 1, u'+    CCASSERT(layerName.size() > 0, "Invalid layer name!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXTiledMap::buildWithMapInfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");'), (6, 1, u'+    CCASSERT(layerName.size() > 0, "Invalid layer name!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");'), (6, 1, u'+    CCASSERT(layerName.size() > 0, "Invalid layer name!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");'), (6, 1, u'+    CCASSERT(groupName.size() > 0, "Invalid group name!");')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: TMXTiledMap::getLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");'), (6, 1, u'+    CCASSERT(groupName.size() > 0, "Invalid group name!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");'), (6, 1, u'+    CCASSERT(groupName.size() > 0, "Invalid group name!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCASSERT(_shaderID < 64, "ShaderID is greater than 64");'), (6, 1, u'+    CCASSERT(_textureID < 1024, "TextureID is greater than 1024");')]
===========================================
===========================================
Total add: 34
Total del: 0
Header: RenderCommand::generateID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCASSERT(_shaderID < 64, "ShaderID is greater than 64");'), (6, 1, u'+    CCASSERT(_textureID < 1024, "TextureID is greater than 1024");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCASSERT(_shaderID < 64, "ShaderID is greater than 64");'), (6, 1, u'+    CCASSERT(_textureID < 1024, "TextureID is greater than 1024");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pszSpriteFrameName != nullptr, "");'), (6, 1, u'+    CCAssert(spriteFrameName != "", "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Skin::Skin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pszSpriteFrameName != nullptr, "");'), (6, 1, u'+    CCAssert(spriteFrameName != "", "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pszSpriteFrameName != nullptr, "");'), (6, 1, u'+    CCAssert(spriteFrameName != "", "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( plist, "Invalid texture file name");'), (6, 1, u'+    CCASSERT( plist.size()>0, "Invalid texture file name");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: AnimationCache::addAnimationsWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( plist, "Invalid texture file name");'), (6, 1, u'+    CCASSERT( plist.size()>0, "Invalid texture file name");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( plist, "Invalid texture file name");'), (6, 1, u'+    CCASSERT( plist.size()>0, "Invalid texture file name");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCASSERT( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: LabelBMFont::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCASSERT( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCASSERT( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(string != NULL, "Invalid string");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: LabelTTF::initWithStringAndTextDefinition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(string != NULL, "Invalid string");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(string != NULL, "Invalid string");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "Invalid filename for sprite");'), (6, 1, u'+    CCASSERT(filename.size()>0, "Invalid filename for sprite");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "Invalid filename for sprite");'), (6, 1, u'+    CCASSERT(filename.size()>0, "Invalid filename for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "Invalid filename for sprite");'), (6, 1, u'+    CCASSERT(filename.size()>0, "Invalid filename for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "");'), (6, 1, u'+    CCASSERT(filename.size()>0, "Invalid filename");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "");'), (6, 1, u'+    CCASSERT(filename.size()>0, "Invalid filename");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "");'), (6, 1, u'+    CCASSERT(filename.size()>0, "Invalid filename");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(spriteFrameName != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrameName.size() > 0, "Invalid spriteFrameName");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(spriteFrameName != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrameName.size() > 0, "Invalid spriteFrameName");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(spriteFrameName != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrameName.size() > 0, "Invalid spriteFrameName");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (6, 1, u'+    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (6, 1, u'+    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (6, 1, u'+    CCASSERT(animationName.size()>0, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(textureFileName, "texture name should not be null");'), (6, 1, u'+    CCASSERT(textureFileName.size()>0, "texture name should not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(textureFileName, "texture name should not be null");'), (6, 1, u'+    CCASSERT(textureFileName.size()>0, "texture name should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(textureFileName, "texture name should not be null");'), (6, 1, u'+    CCASSERT(textureFileName.size()>0, "texture name should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszPlist, "plist filename should not be NULL");'), (6, 1, u'+    CCASSERT(pszPlist.size()>0, "plist filename should not be NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszPlist, "plist filename should not be NULL");'), (6, 1, u'+    CCASSERT(pszPlist.size()>0, "plist filename should not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszPlist, "plist filename should not be NULL");'), (6, 1, u'+    CCASSERT(pszPlist.size()>0, "plist filename should not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CC_ASSERT(ita != PhysicsShapeInfo::map.end() && itb != PhysicsShapeInfo::map.end());'), (7, 1, u'+    CC_ASSERT(ita != PhysicsShapeInfo::getMap().end() && itb != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: PhysicsWorldCallback::collisionBeginCallbackFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CC_ASSERT(ita != PhysicsShapeInfo::map.end() && itb != PhysicsShapeInfo::map.end());'), (7, 1, u'+    CC_ASSERT(ita != PhysicsShapeInfo::getMap().end() && itb != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CC_ASSERT(ita != PhysicsShapeInfo::map.end() && itb != PhysicsShapeInfo::map.end());'), (7, 1, u'+    CC_ASSERT(ita != PhysicsShapeInfo::getMap().end() && itb != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (5, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: PhysicsWorldCallback::rayCastCallbackFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (5, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (5, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (6, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: PhysicsWorldCallback::rectQueryCallbackFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (6, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (6, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (6, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: PhysicsWorldCallback::nearestPointQueryFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (6, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(it != PhysicsShapeInfo::map.end());'), (6, 1, u'+    CC_ASSERT(it != PhysicsShapeInfo::getMap().end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: PhysicsWorld::rayCast
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: PhysicsWorld::rectQuery
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(callback.report != nullptr, "callback.report shouldn\'t be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == nullptr, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Armature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == nullptr, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != nullptr, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == nullptr, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != nullptr, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Armature::removeBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != nullptr, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != nullptr, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != nullptr, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::changeBoneParent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != nullptr, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != nullptr, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(nullptr != boneData, "_boneData must not be nullptr");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Bone::setBoneData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(nullptr != boneData, "_boneData must not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(nullptr != boneData, "_boneData must not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( nullptr != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( nullptr == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Bone::addChildBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( nullptr != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( nullptr == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( nullptr != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( nullptr == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszSpriteFrameName != NULL, "");'), (3, 1, u'+    CCAssert(pszSpriteFrameName != nullptr, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Skin::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszSpriteFrameName != NULL, "");'), (3, 1, u'+    CCAssert(pszSpriteFrameName != nullptr, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszSpriteFrameName != NULL, "");'), (3, 1, u'+    CCAssert(pszSpriteFrameName != nullptr, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(dataLen>0 && pixelsWide>0 && pixelsHigh>0, "Invalid size");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: Texture2D::hasPremultipliedAlpha
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(dataLen>0 && pixelsWide>0 && pixelsHigh>0, "Invalid size");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(dataLen>0 && pixelsWide>0 && pixelsHigh>0, "Invalid size");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pixelFormat != PixelFormat::NONE && pixelFormat != PixelFormat::AUTO, "the \\"pixelFormat\\" param must be a certain value!");'), (7, 1, u'+    CCASSERT(pixelFormat != PixelFormat::NONE && pixelFormat != PixelFormat::AUTO, "the \\"pixelFormat\\" param must be a certain value!");'), (8, 1, u'+    CCASSERT(pixelsWide>0 && pixelsHigh>0, "Invalid size");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: Texture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pixelFormat != PixelFormat::NONE && pixelFormat != PixelFormat::AUTO, "the \\"pixelFormat\\" param must be a certain value!");'), (7, 1, u'+    CCASSERT(pixelFormat != PixelFormat::NONE && pixelFormat != PixelFormat::AUTO, "the \\"pixelFormat\\" param must be a certain value!");'), (8, 1, u'+    CCASSERT(pixelsWide>0 && pixelsHigh>0, "Invalid size");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pixelFormat != PixelFormat::NONE && pixelFormat != PixelFormat::AUTO, "the \\"pixelFormat\\" param must be a certain value!");'), (7, 1, u'+    CCASSERT(pixelFormat != PixelFormat::NONE && pixelFormat != PixelFormat::AUTO, "the \\"pixelFormat\\" param must be a certain value!");'), (8, 1, u'+    CCASSERT(pixelsWide>0 && pixelsHigh>0, "Invalid size");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction != NULL, "");'), (6, 1, u'+    CCASSERT(action != NULL, "");'), (32, 2, u'-     CCASSERT(! ccArrayContainsObject(pElement->actions, pAction), "");'), (34, 1, u'+     CCASSERT(! ccArrayContainsObject(element->actions, action), "");')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: ActionManager::resumeTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction != NULL, "");'), (6, 1, u'+    CCASSERT(action != NULL, "");'), (32, 2, u'-     CCASSERT(! ccArrayContainsObject(pElement->actions, pAction), "");'), (34, 1, u'+     CCASSERT(! ccArrayContainsObject(element->actions, action), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pAction != NULL, "");'), (6, 1, u'+    CCASSERT(action != NULL, "");'), (32, 2, u'-     CCASSERT(! ccArrayContainsObject(pElement->actions, pAction), "");'), (34, 1, u'+     CCASSERT(! ccArrayContainsObject(element->actions, action), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCASSERT(progressSprite,    "Progress sprite must be not nil");'), (4, 2, u'-        CCASSERT(thumbSprite,       "Thumb sprite must be not nil");'), (5, 1, u'+        CCASSERT(backgroundSprite,      "Background sprite must be not nil");'), (6, 1, u'+        CCASSERT(progressSprite,        "Progress sprite must be not nil");'), (7, 1, u'+        CCASSERT(thumbSprite,           "Thumb sprite must be not nil");'), (8, 1, u'+        CCASSERT(selectedThumbSprite,   "Thumb sprite must be not nil");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: ControlSlider::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCASSERT(progressSprite,    "Progress sprite must be not nil");'), (4, 2, u'-        CCASSERT(thumbSprite,       "Thumb sprite must be not nil");'), (5, 1, u'+        CCASSERT(backgroundSprite,      "Background sprite must be not nil");'), (6, 1, u'+        CCASSERT(progressSprite,        "Progress sprite must be not nil");'), (7, 1, u'+        CCASSERT(thumbSprite,           "Thumb sprite must be not nil");'), (8, 1, u'+        CCASSERT(selectedThumbSprite,   "Thumb sprite must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCASSERT(progressSprite,    "Progress sprite must be not nil");'), (4, 2, u'-        CCASSERT(thumbSprite,       "Thumb sprite must be not nil");'), (5, 1, u'+        CCASSERT(backgroundSprite,      "Background sprite must be not nil");'), (6, 1, u'+        CCASSERT(progressSprite,        "Progress sprite must be not nil");'), (7, 1, u'+        CCASSERT(thumbSprite,           "Thumb sprite must be not nil");'), (8, 1, u'+        CCASSERT(selectedThumbSprite,   "Thumb sprite must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
Total add: 13
Total del: 6
Header: Skin::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!listener->_isRegistered, "The listener has been registered.");'), (3, 1, u'+    CCASSERT(!listener->isRegistered(), "The listener has been registered.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: EventDispatcher::addEventListenerWithSceneGraphPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!listener->_isRegistered, "The listener has been registered.");'), (3, 1, u'+    CCASSERT(!listener->isRegistered(), "The listener has been registered.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!listener->_isRegistered, "The listener has been registered.");'), (3, 1, u'+    CCASSERT(!listener->isRegistered(), "The listener has been registered.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!listener->_isRegistered, "The listener has been registered.");'), (3, 1, u'+    CCASSERT(!listener->isRegistered(), "The listener has been registered.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: EventDispatcher::addEventListenerWithFixedPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!listener->_isRegistered, "The listener has been registered.");'), (3, 1, u'+    CCASSERT(!listener->isRegistered(), "The listener has been registered.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!listener->_isRegistered, "The listener has been registered.");'), (3, 1, u'+    CCASSERT(!listener->isRegistered(), "The listener has been registered.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(listener->_node == nullptr, "Can\'t set fixed priority with scene graph based listener.");'), (3, 1, u'+                CCASSERT(listener->getSceneGraphPriority() == nullptr, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: EventDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(listener->_node == nullptr, "Can\'t set fixed priority with scene graph based listener.");'), (3, 1, u'+                CCASSERT(listener->getSceneGraphPriority() == nullptr, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(listener->_node == nullptr, "Can\'t set fixed priority with scene graph based listener.");'), (3, 1, u'+                CCASSERT(listener->getSceneGraphPriority() == nullptr, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCASSERT(type >= TYPE_CUSTOM, "custom type should be greater than TYPE_CUSTOM.");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: NS_CC_BEGIN
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCASSERT(type >= TYPE_CUSTOM, "custom type should be greater than TYPE_CUSTOM.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCASSERT(type >= TYPE_CUSTOM, "custom type should be greater than TYPE_CUSTOM.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCASSERT(type >= TYPE_CUSTOM, "custom type should be greater than TYPE_CUSTOM.");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: NS_CC_BEGIN
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCASSERT(type >= TYPE_CUSTOM, "custom type should be greater than TYPE_CUSTOM.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCASSERT(type >= TYPE_CUSTOM, "custom type should be greater than TYPE_CUSTOM.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(listener->_node, "Can\'t set fixed priority with scene graph based listener.");'), (3, 1, u'+                CCASSERT(listener->_node == nullptr, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: EventDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(listener->_node, "Can\'t set fixed priority with scene graph based listener.");'), (3, 1, u'+                CCASSERT(listener->_node == nullptr, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCASSERT(listener->_node, "Can\'t set fixed priority with scene graph based listener.");'), (3, 1, u'+                CCASSERT(listener->_node == nullptr, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        CCASSERT(_lt0, "vector invaild");'), (13, 2, u'-        CCASSERT(_eq0, "vector invaild");'), (23, 2, u'-        CCASSERT(_gt0, "vector invalid");')]
===========================================
===========================================
Total add: 10
Total del: 11
Header: EventDispatcher::EventListenerItemVector::push_back
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        CCASSERT(_lt0, "vector invaild");'), (13, 2, u'-        CCASSERT(_eq0, "vector invaild");'), (23, 2, u'-        CCASSERT(_gt0, "vector invalid");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        CCASSERT(_lt0, "vector invaild");'), (13, 2, u'-        CCASSERT(_eq0, "vector invaild");'), (23, 2, u'-        CCASSERT(_gt0, "vector invalid");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                CCASSERT(item->node, "Can\'t set fixed priority with scene graph based listener.");'), (12, 1, u'+                CCASSERT(listener->_node, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Total add: 8
Total del: 7
Header: EventDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                CCASSERT(item->node, "Can\'t set fixed priority with scene graph based listener.");'), (12, 1, u'+                CCASSERT(listener->_node, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                CCASSERT(item->node, "Can\'t set fixed priority with scene graph based listener.");'), (12, 1, u'+                CCASSERT(listener->_node, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
Total add: 10
Total del: 12
Header: EventDispatcher::dispatchEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-            CCASSERT(false, "sort event node error...");')]
===========================================
===========================================
Total add: 19
Total del: 30
Header: EventDispatcher::sortAllEventListenerItemsForType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-            CCASSERT(false, "sort event node error...");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-            CCASSERT(false, "sort event node error...");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            CCASSERT(false, "Not supported touch listener type.");')]
===========================================
===========================================
Total add: 6
Total del: 29
Header: EventDispatcher::dispatchTouchEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            CCASSERT(false, "Not supported touch listener type.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            CCASSERT(false, "Not supported touch listener type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_dispatchMode == Touch::DispatchMode::ONE_BY_ONE, "Swallow touches only available in OneByOne mode.");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: EventListenerTouch::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_dispatchMode == Touch::DispatchMode::ONE_BY_ONE, "Swallow touches only available in OneByOne mode.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_dispatchMode == Touch::DispatchMode::ONE_BY_ONE, "Swallow touches only available in OneByOne mode.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            CCASSERT(false, "Invalid TouchEventListener.");'), (15, 1, u'+        CCASSERT(false, "Invalid TouchEventListener.");')]
===========================================
===========================================
Total add: 22
Total del: 15
Header: EventListenerTouch::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            CCASSERT(false, "Invalid TouchEventListener.");'), (15, 1, u'+        CCASSERT(false, "Invalid TouchEventListener.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            CCASSERT(false, "Invalid TouchEventListener.");'), (15, 1, u'+        CCASSERT(false, "Invalid TouchEventListener.");')]
===========================================
Class: class PhysicsDemoNearestRayCastCallback : public PhysicsRayCastCallback { 
Class: class PhysicsDemoMultiRayCastCallback : public PhysicsRayCastCallback { 
Class:class LuaAssetsManagerDelegateProtocol:public Object, public AssetsManagerDelegateProtocol { 
Class:  class JSB_ScrollViewDelegate : public Object , public ScrollViewDelegate { 
Class: class JSB_TableViewDataSource : public Object , public TableViewDataSource { 
Class: class JSB_EditBoxDelegate : public Object , public EditBoxDelegate { 
Class:   class JSB_ControlButtonTarget : public Object { 
Class:  class JSB_WebSocketDelegate : public WebSocket::Delegate { 
Class:  class JSB_ScrollViewDelegate : public Object , public ScrollViewDelegate { 
Class: class JSB_TableViewDataSource : public Object , public TableViewDataSource { 
Class: class JSB_EditBoxDelegate : public Object , public EditBoxDelegate { 
Class:   class JSB_ControlButtonTarget : public Object { 
Class: class JSArmatureWrapper: public JSCallbackWrapper { class JSArmatureWrapper: public JSCallbackWrapper 
Class:  class JSB_WebSocketDelegate : public WebSocket::Delegate { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 2, u'-static int luaB_assert(lua_State*L){'), (6411, 2, u'-{"assert",luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 1, u'+static int luaB_assert(lua_State*L){'), (6411, 1, u'+{"assert",luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(147, 1, u'+            CCASSERT(animationData, "AnimationData not exist! ");'), (153, 1, u'+            CCASSERT(armatureData, "");'), (256, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (257, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (291, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (313, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(190, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (193, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");'), (277, 1, u'+    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (86, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (90, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (242, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (243, 1, u'+    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");'), (74, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");'), (80, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");'), (86, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");'), (92, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");'), (98, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");'), (110, 1, u'+\t\tCCASSERT(false, "Key found, type is not integer");'), (126, 1, u'+\t\tCCASSERT(false, "Key found, type is not double");'), (142, 1, u'+\t\tCCASSERT(false, "Key found, type is not float");'), (159, 1, u'+\t\tCCASSERT(false, "Key found, type is not Bool");'), (175, 1, u'+\t\tCCASSERT(false, "Key found, type is not CString");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(473, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(147, 2, u'-            CCASSERT(animationData, "AnimationData not exist! ");'), (153, 2, u'-            CCASSERT(armatureData, "");'), (256, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (257, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (291, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (313, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (242, 2, u'-    CCASSERT( NULL != child, "Argument must be non-nil");'), (243, 2, u'-    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(190, 2, u'-    CCASSERT(_animationData, "_animationData can not be null");'), (193, 2, u'-    CCASSERT(_movementData, "_movementData can not be null");'), (277, 2, u'-    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (86, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (90, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(473, 2, u'-    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");'), (74, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");'), (80, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");'), (86, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");'), (92, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");'), (98, 2, u'-    CCASSERT(key != NULL, "Argument must be non-nil");'), (110, 2, u'-\t\tCCASSERT(false, "Key found, type is not integer");'), (126, 2, u'-\t\tCCASSERT(false, "Key found, type is not double");'), (142, 2, u'-\t\tCCASSERT(false, "Key found, type is not float");'), (159, 2, u'-\t\tCCASSERT(false, "Key found, type is not Bool");'), (175, 2, u'-\t\tCCASSERT(false, "Key found, type is not CString");')]
===========================================
Class: class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
Class: class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 2, u'-  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 2, u'-static int luaB_assert (lua_State *L) {'), (448, 2, u'-  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 2, u'-  lua_assert(dest != NO_JUMP);'), (173, 2, u'-    lua_assert(target < fs->pc);'), (218, 2, u'-    lua_assert(reg == fs->freereg);'), (235, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (518, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 2, u'-      lua_assert(0);  /* cannot happen */'), (645, 2, u'-    default: lua_assert(0); r = 0; break;'), (705, 2, u'-    default: lua_assert(0);'), (740, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 2, u'-    default: lua_assert(0);'), (805, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (806, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (822, 2, u'-  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 2, u'-    lua_assert(ttisfunction(ci->func));'), (507, 2, u'-    lua_assert(pc != -1);'), (511, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (583, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (200, 2, u'-    lua_assert(!L->allowhook);'), (218, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (238, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (293, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (315, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (388, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (393, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (397, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (426, 2, u'-  lua_assert(L->errfunc == 0);'), (435, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    lua_assert(p->v != &p->u.value);'), (77, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-  lua_assert(ttisnil(gval(n)));'), (70, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 2, u'-    default: lua_assert(0);'), (186, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (233, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (279, 2, u'-  lua_assert(isgray(o));'), (318, 2, u'-    default: lua_assert(0); return 0;'), (355, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 2, u'-    default: lua_assert(0);'), (415, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 2, u'-      lua_assert(old >= g->totalbytes);'), (588, 2, u'-      lua_assert(old >= g->totalbytes);'), (605, 2, u'-    default: lua_assert(0); return 0;'), (647, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (678, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (131, 2, u'-  lua_assert(currIsNewline(ls));'), (195, 2, u'-  lua_assert(isdigit(ls->current));'), (213, 2, u"-  lua_assert(s == '[' || s == ']');"), (414, 2, u'-          lua_assert(!currIsNewline(ls));'), (460, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (82, 2, u'-  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 2, u'-      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-      lua_assert(f->upvalues[i] == name);'), (200, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (303, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (374, 2, u'-  lua_assert(luaG_checkcode(f));'), (375, 2, u'-  lua_assert(fs->bl == NULL);'), (394, 2, u'-  lua_assert(funcstate.prev == NULL);'), (395, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (396, 2, u'-  lua_assert(lexstate.fs == NULL);'), (511, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 2, u'-  lua_assert(f->k == VNONRELOC);'), (887, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 2, u'-        lua_assert(nret == fs->freereg - first);'), (1332, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (110, 2, u'-  lua_assert(g->strt.nuse == 0);'), (114, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (129, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (136, 2, u'-  lua_assert(L1->openupval == NULL);'), (210, 2, u'-  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 2, u'-    lua_assert(n != dummynode);'), (427, 2, u'-  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 2, u"-    lua_assert(argv[i][0] == '-');"), (303, 2, u'-        lua_assert(chunk != NULL);'), (311, 2, u'-        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (332, 2, u'-      default: lua_assert(0); break;'), (383, 2, u'-  lua_assert(isLua(L->ci));'), (403, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 2, u'-        lua_assert(ttisstring(rb));'), (447, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (611, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 2, u'-          lua_assert(isLua(L->ci));'), (650, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 2, u'-static int luaB_assert(lua_State*L){'), (6411, 2, u'-{"assert",luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 1, u'+      lua_assert(0);  /* cannot happen */'), (645, 1, u'+    default: lua_assert(0); r = 0; break;'), (705, 1, u'+    default: lua_assert(0);'), (740, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 1, u'+    default: lua_assert(0);'), (805, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (806, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (822, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (238, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (293, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (315, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (388, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (393, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (397, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (426, 1, u'+  lua_assert(L->errfunc == 0);'), (435, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (647, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (678, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (131, 1, u'+  lua_assert(currIsNewline(ls));'), (195, 1, u'+  lua_assert(isdigit(ls->current));'), (213, 1, u"+  lua_assert(s == '[' || s == ']');"), (414, 1, u'+          lua_assert(!currIsNewline(ls));'), (460, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (332, 1, u'+      default: lua_assert(0); break;'), (383, 1, u'+  lua_assert(isLua(L->ci));'), (403, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 1, u'+        lua_assert(ttisstring(rb));'), (447, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (611, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 1, u'+          lua_assert(isLua(L->ci));'), (650, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 1, u'+static int luaB_assert(lua_State*L){'), (6411, 1, u'+{"assert",luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(410, 1, u'+   assert( collectComments_ );'), (413, 1, u'+      assert( lastValue_ != 0 );')]
===========================================
Class:class DefaultValueAllocator : public ValueAllocator class DefaultValueAllocator : public ValueAllocator
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+   assert( current >= buffer );'), (62, 1, u'+   assert( current >= buffer );'), (390, 1, u'+         assert( childValues_.size() == size );'), (478, 1, u'+   assert( int(indentString_.size()) >= indentSize_ );'), (666, 1, u'+         assert( childValues_.size() == size );'), (758, 1, u'+   assert( indentString_.size() >= indentation_.size() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(384, 2, u'-   assert( collectComments_ );'), (387, 2, u'-      assert( lastValue_ != 0 );'), (578, 2, u'-   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-#define JSON_ASSERT_UNREACHABLE assert( false )'), (26, 2, u'-#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (28, 2, u'-#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (62, 2, u'-   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (125, 2, u'-   JSON_ASSERT( text != 0 );'), (126, 2, u'-   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (277, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (451, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (499, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (583, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (645, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (659, 2, u'-   JSON_ASSERT( type_ == stringValue );'), (682, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (704, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (707, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (710, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (719, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (733, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (734, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (737, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (740, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (749, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (767, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (770, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (779, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (793, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (798, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (807, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (860, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (889, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (914, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (965, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (1002, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (1028, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1064, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1079, 2, u'-      assert( size() == newSize );'), (1090, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1111, 2, u'-   JSON_ASSERT( index >= 0 );'), (1119, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1138, 2, u'-   JSON_ASSERT( index >= 0 );'), (1154, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1194, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1272, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1336, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-   assert( current >= buffer );'), (55, 2, u'-   assert( current >= buffer );'), (399, 2, u'-         assert( childValues_.size() == size );'), (487, 2, u'-   assert( int(indentString_.size()) >= indentSize_ );'), (675, 2, u'-         assert( childValues_.size() == size );'), (767, 2, u'-   assert( indentString_.size() >= indentation_.size() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(body != nullptr, "the body can not be nullptr");')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: PhysicsWorld::addBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(body != nullptr, "the body can not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(body != nullptr, "the body can not be nullptr");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(body != nullptr, "the body can not be nullptr");')]
===========================================
===========================================
Total add: 12
Total del: 0
Header: PhysicsWorld::removeBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(body != nullptr, "the body can not be nullptr");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(body != nullptr, "the body can not be nullptr");')]
===========================================
Class:class DispatchGuard class DispatchGuard
Class:     class IMEDispatcher::Impl { 
Class: class ZipFilePrivate { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 1, u'+    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
Class:class DispatchGuard class DispatchGuard
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 2, u'-    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 2, u'-    TIXMLASSERT( endTag && *endTag );'), (228, 2, u'-                        TIXMLASSERT( q <= p );'), (527, 2, u'-    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 2, u'-    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 2, u'-    TIXMLASSERT( child->_parent == this );'), (648, 2, u'-    TIXMLASSERT( node->_parent == this );'), (656, 2, u'-        TIXMLASSERT( _firstChild );'), (657, 2, u'-        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 2, u'-        TIXMLASSERT( _firstChild == 0 );'), (680, 2, u'-        TIXMLASSERT( _lastChild );'), (681, 2, u'-        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 2, u'-        TIXMLASSERT( _lastChild == 0 );'), (704, 2, u'-    TIXMLASSERT( afterThis->_parent == this );'), (1519, 2, u'-\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 2, u'-\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 2, u'-\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 2, u'-\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 2, u'-        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 2, u'-    TIXMLASSERT( _elementJustOpened );')]
===========================================
Class: class ZipFilePrivate { 
Class:     class IMEDispatcher::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 1, u'+    TIXMLASSERT( endTag && *endTag );'), (228, 1, u'+                        TIXMLASSERT( q <= p );'), (527, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 1, u'+    TIXMLASSERT( child->_parent == this );'), (648, 1, u'+    TIXMLASSERT( node->_parent == this );'), (656, 1, u'+        TIXMLASSERT( _firstChild );'), (657, 1, u'+        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 1, u'+        TIXMLASSERT( _firstChild == 0 );'), (680, 1, u'+        TIXMLASSERT( _lastChild );'), (681, 1, u'+        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 1, u'+        TIXMLASSERT( _lastChild == 0 );'), (704, 1, u'+    TIXMLASSERT( afterThis->_parent == this );'), (1519, 1, u'+\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 1, u'+\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 1, u'+\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 1, u'+\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 1, u'+        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 1, u'+    TIXMLASSERT( _elementJustOpened );')]
===========================================
Class:class AlutDecoder : public OpenALDecoder class AlutDecoder : public OpenALDecoder
Class: class DataRaii { 
Class:    class MpgOpenRaii     class MpgOpenRaii
Class:    class OggRaii     class OggRaii
Class:class CocosQt5AudioBackend { class CocosQt5AudioBackend 
Class:class DispatchGuard class DispatchGuard
Class: class DictMaker : public SAXDelegator { 
Class:  class EGLViewEventHandler { 
Class: class EGLViewEventHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 1, u'+    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 1, u'+    TIXMLASSERT( endTag && *endTag );'), (228, 1, u'+                        TIXMLASSERT( q <= p );'), (527, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 1, u'+    TIXMLASSERT( child->_parent == this );'), (648, 1, u'+    TIXMLASSERT( node->_parent == this );'), (656, 1, u'+        TIXMLASSERT( _firstChild );'), (657, 1, u'+        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 1, u'+        TIXMLASSERT( _firstChild == 0 );'), (680, 1, u'+        TIXMLASSERT( _lastChild );'), (681, 1, u'+        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 1, u'+        TIXMLASSERT( _lastChild == 0 );'), (704, 1, u'+    TIXMLASSERT( afterThis->_parent == this );'), (1519, 1, u'+\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 1, u'+\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 1, u'+\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 1, u'+\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 1, u'+        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 1, u'+    TIXMLASSERT( _elementJustOpened );')]
===========================================
Class: class ZipFilePrivate { 
Class:     class IMEDispatcher::Impl { 
Class:class AlutDecoder : public OpenALDecoder class AlutDecoder : public OpenALDecoder
Class: class DataRaii { 
Class:    class MpgOpenRaii     class MpgOpenRaii
Class:    class OggRaii     class OggRaii
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 1, u'+    assert(ccNodeLoadersIterator != this->_nodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (98, 1, u'+\tCCASSERT(atlas, "Error reading atlas file.");'), (103, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(99, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (100, 1, u'+\tCCASSERT(stateData, "stateData cannot be null.");'), (123, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (128, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (133, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (138, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(184, 1, u'+    assert(0 && "Not implemented");')]
===========================================
Class: class CURLRaii { 
Class: class WsThreadHelper : public cocos2d::Object { 
Class:  class WebSocketCallbackWrapper { class WebSocketCallbackWrapper 
Class: class JSB_ScrollViewDelegate : public Object , public ScrollViewDelegate { 
Class: class JSB_TableViewDataSource : public Object , public TableViewDataSource { 
Class: class JSB_EditBoxDelegate : public Object , public EditBoxDelegate { 
Class:   class JSB_ControlButtonTarget : public Object { 
Class: class JSArmatureWrapper: public JSCallbackWrapper { class JSArmatureWrapper: public JSCallbackWrapper 
Class:  class JSB_WebSocketDelegate : public WebSocket::Delegate { 
Class: class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 1, u'+      lua_assert(0);  /* cannot happen */'), (645, 1, u'+    default: lua_assert(0); r = 0; break;'), (705, 1, u'+    default: lua_assert(0);'), (740, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 1, u'+    default: lua_assert(0);'), (805, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (806, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (822, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (238, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (293, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (315, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (388, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (393, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (397, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (426, 1, u'+  lua_assert(L->errfunc == 0);'), (435, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (647, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (678, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (131, 1, u'+  lua_assert(currIsNewline(ls));'), (195, 1, u'+  lua_assert(isdigit(ls->current));'), (213, 1, u"+  lua_assert(s == '[' || s == ']');"), (414, 1, u'+          lua_assert(!currIsNewline(ls));'), (460, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (332, 1, u'+      default: lua_assert(0); break;'), (383, 1, u'+  lua_assert(isLua(L->ci));'), (403, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 1, u'+        lua_assert(ttisstring(rb));'), (447, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (611, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 1, u'+          lua_assert(isLua(L->ci));'), (650, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 1, u'+static int luaB_assert(lua_State*L){'), (6411, 1, u'+{"assert",luaB_assert},')]
===========================================
Class:class DispatchGuard class DispatchGuard
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(184, 2, u'-    assert(0 && "Not implemented");')]
===========================================
Class: class DictMaker : public SAXDelegator { 
Class:  class EGLViewEventHandler { 
Class: class EGLViewEventHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 2, u'-    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 2, u'-    TIXMLASSERT( endTag && *endTag );'), (228, 2, u'-                        TIXMLASSERT( q <= p );'), (527, 2, u'-    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 2, u'-    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 2, u'-    TIXMLASSERT( child->_parent == this );'), (648, 2, u'-    TIXMLASSERT( node->_parent == this );'), (656, 2, u'-        TIXMLASSERT( _firstChild );'), (657, 2, u'-        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 2, u'-        TIXMLASSERT( _firstChild == 0 );'), (680, 2, u'-        TIXMLASSERT( _lastChild );'), (681, 2, u'-        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 2, u'-        TIXMLASSERT( _lastChild == 0 );'), (704, 2, u'-    TIXMLASSERT( afterThis->_parent == this );'), (1519, 2, u'-\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 2, u'-\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 2, u'-\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 2, u'-\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 2, u'-        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 2, u'-    TIXMLASSERT( _elementJustOpened );')]
===========================================
Class: class ZipFilePrivate { 
Class:     class IMEDispatcher::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(67, 2, u'-    assert(ccNodeLoadersIterator != this->_nodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(384, 2, u'-   assert( collectComments_ );'), (387, 2, u'-      assert( lastValue_ != 0 );'), (578, 2, u'-   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-#define JSON_ASSERT_UNREACHABLE assert( false )'), (26, 2, u'-#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (28, 2, u'-#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (62, 2, u'-   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (125, 2, u'-   JSON_ASSERT( text != 0 );'), (126, 2, u'-   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (277, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (451, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (499, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (583, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (645, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (659, 2, u'-   JSON_ASSERT( type_ == stringValue );'), (682, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (704, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (707, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (710, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (719, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (733, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (734, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (737, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (740, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (749, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (767, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (770, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (779, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (793, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (798, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (807, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (860, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (889, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (914, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (965, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (1002, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (1028, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1064, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1079, 2, u'-      assert( size() == newSize );'), (1090, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1111, 2, u'-   JSON_ASSERT( index >= 0 );'), (1119, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1138, 2, u'-   JSON_ASSERT( index >= 0 );'), (1154, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1194, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1272, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1336, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-   assert( current >= buffer );'), (55, 2, u'-   assert( current >= buffer );'), (399, 2, u'-         assert( childValues_.size() == size );'), (487, 2, u'-   assert( int(indentString_.size()) >= indentSize_ );'), (675, 2, u'-         assert( childValues_.size() == size );'), (767, 2, u'-   assert( indentString_.size() >= indentation_.size() );')]
===========================================
Class: class CURLRaii { 
Class: class WsThreadHelper : public cocos2d::Object { 
Class:  class WebSocketCallbackWrapper { class WebSocketCallbackWrapper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (98, 2, u'-\tCCASSERT(atlas, "Error reading atlas file.");'), (103, 2, u'-\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(99, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (100, 2, u'-\tCCASSERT(stateData, "stateData cannot be null.");'), (123, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (128, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (133, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (138, 2, u'-\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(384, 1, u'+   assert( collectComments_ );'), (387, 1, u'+      assert( lastValue_ != 0 );'), (578, 1, u'+   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+#define JSON_ASSERT_UNREACHABLE assert( false )'), (26, 1, u'+#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (28, 1, u'+#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (62, 1, u'+   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (125, 1, u'+   JSON_ASSERT( text != 0 );'), (126, 1, u'+   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (277, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (451, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (499, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (583, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (645, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (659, 1, u'+   JSON_ASSERT( type_ == stringValue );'), (682, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (704, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (707, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (710, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (719, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (733, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (734, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (737, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (740, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (749, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (767, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (770, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (779, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (793, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (798, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (807, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (860, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (889, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (914, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (965, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (1002, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (1028, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1064, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1079, 1, u'+      assert( size() == newSize );'), (1090, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1111, 1, u'+   JSON_ASSERT( index >= 0 );'), (1119, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1138, 1, u'+   JSON_ASSERT( index >= 0 );'), (1154, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1194, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1272, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1336, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+   assert( current >= buffer );'), (55, 1, u'+   assert( current >= buffer );'), (399, 1, u'+         assert( childValues_.size() == size );'), (487, 1, u'+   assert( int(indentString_.size()) >= indentSize_ );'), (675, 1, u'+         assert( childValues_.size() == size );'), (767, 1, u'+   assert( indentString_.size() >= indentation_.size() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-  assert(width > 0 && height > 0 && stride >= width);'), (55, 2, u'-  assert(data != NULL && output != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 2, u'-  assert(dec->thread_ctx_.filter_row_);'), (219, 2, u'-      assert(!(delta_y & 1));'), (268, 2, u'-    assert(worker->status_ == OK);'), (474, 2, u'-  assert((yuv_size & ALIGN_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-      assert(last_part >= 0);'), (138, 2, u'-  assert(mem->mode_ == MEM_MODE_APPEND);'), (162, 2, u'-  assert(mem->end_ <= mem->buf_size_);'), (172, 2, u'-  assert(mem->mode_ == MEM_MODE_MAP);'), (192, 2, u'-  assert(mem);'), (205, 2, u'-  assert(mem->mode_ == expected);   // mode is ok'), (258, 2, u'-  assert(mem->start_ <= mem->end_);'), (336, 2, u'-  assert(!idec->is_lossless_);'), (337, 2, u'-  assert(mem->part0_buf_ == NULL);'), (338, 2, u'-  assert(psize > 0);'), (339, 2, u'-  assert(psize <= mem->part0_size_);  // Format limit: no need for runtime check'), (409, 2, u'-  assert(dec->ready_);'), (435, 2, u'-        assert(idec->mem_.start_ <= idec->mem_.end_);'), (466, 2, u'-  assert(idec->is_lossless_);'), (489, 2, u'-  assert(idec->is_lossless_);'), (646, 2, u'-  assert(idec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(369, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (370, 2, u'-    assert(p->scaler_u.y_accum == p->scaler_v.y_accum);'), (398, 2, u'-    assert(u_lines_in == v_lines_in);'), (420, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (449, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (598, 2, u'-  assert(!(io->mb_y & 1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-  assert(dec);'), (25, 2, u'-  assert(dec->layer_data_size_ > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-  assert(hdr != NULL);'), (151, 2, u'-  assert(br != NULL);'), (152, 2, u'-  assert(hdr != NULL);'), (288, 2, u'-    assert(dec->alpha_data_size_ == 0);'), (300, 2, u"-  assert(headers.data_size >= headers.offset);  // WebPParseHeaders' guarantee"), (743, 2, u'-  assert(dec->ready_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 2, u'-  assert(node != NULL);'), (169, 2, u'-    assert(node != NULL);'), (340, 2, u'-  assert(num_htree_groups <= 0x10000);'), (393, 2, u'-  assert(dec->rescaler_memory == NULL);'), (577, 2, u'-  assert(y_start < y_end);'), (578, 2, u'-  assert(io->crop_left < io->crop_right);'), (609, 2, u'-  assert(meta_index < hdr->num_htree_groups_);'), (670, 2, u'-      assert(dec->last_out_row_ <= output->height);'), (676, 2, u'-  assert(dec->last_row_ <= dec->height_);'), (696, 2, u'-  assert(htree_group != NULL);'), (766, 2, u'-      assert(color_cache != NULL);'), (847, 2, u'-  assert(dec->next_transform_ <= NUM_TRANSFORMS);'), (874, 2, u"-      assert(0);    // can't happen"), (885, 2, u'-  assert(hdr);'), (890, 2, u'-  assert(hdr);'), (1031, 2, u'-      assert(data == NULL);'), (1032, 2, u'-      assert(is_level0);'), (1052, 2, u'-  assert(dec->width_ <= final_width);'), (1150, 2, u'-   assert(dec->status_ != VP8_STATUS_OK);'), (1162, 2, u'-  assert(io != NULL);'), (1164, 2, u'-  assert(params != NULL);'), (1166, 2, u'-  assert(dec->output_ != NULL);'), (1192, 2, u'-  assert(dec->status_ != VP8_STATUS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-  assert(data != NULL);'), (66, 2, u'-  assert(data_size != NULL);'), (67, 2, u'-  assert(riff_size != NULL);'), (104, 2, u'-  assert(data != NULL);'), (105, 2, u'-  assert(data_size != NULL);'), (106, 2, u'-  assert(found_vp8x != NULL);'), (161, 2, u'-  assert(data != NULL);'), (162, 2, u'-  assert(data_size != NULL);'), (166, 2, u'-  assert(alpha_data != NULL);'), (167, 2, u'-  assert(alpha_size != NULL);'), (232, 2, u'-  assert(data != NULL);'), (233, 2, u'-  assert(data_size != NULL);'), (234, 2, u'-  assert(chunk_size != NULL);'), (235, 2, u'-  assert(is_lossless != NULL);'), (366, 2, u'-    assert((uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD);'), (367, 2, u'-    assert(headers->offset == headers->data_size - data_size);'), (373, 2, u'-  assert(headers != NULL);'), (405, 2, u'-  assert(params != NULL);'), (610, 2, u'-    assert(buf->u_stride == buf->v_stride);'), (616, 2, u'-  assert(features != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(961, 2, u'-  assert(row_start < row_end);'), (962, 2, u'-  assert(row_end <= transform->ysize_);'), (1132, 2, u'-      assert(0);          // Code flow should not reach here.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 2, u'-  assert(len > 0);                                                             \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 2, u'-  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (115, 2, u'-  assert(filter >= 0 && filter < WEBP_FILTER_LAST);'), (116, 2, u'-  assert(method >= ALPHA_NO_COMPRESSION);'), (117, 2, u'-  assert(method <= ALPHA_LOSSLESS_COMPRESSION);'), (118, 2, u'-  assert(sizeof(header) == ALPHA_HEADER_LEN);'), (175, 2, u'-  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (176, 2, u'-  assert(enc != NULL && pic != NULL && pic->a != NULL);'), (177, 2, u'-  assert(output != NULL && output_size != NULL);'), (178, 2, u'-  assert(width > 0 && height > 0);'), (179, 2, u'-  assert(pic->a_stride >= width);'), (180, 2, u'-  assert(filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert((uint64_t)(w * h) == (uint64_t)w * h);   // no overflow, as per spec'), (135, 2, u'-  assert(mid <= max && mid >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 2, u'-  assert(refs != NULL);'), (161, 2, u'-  assert(xsize > 0);'), (583, 2, u'-    assert(k >= 1);'), (596, 2, u'-    assert(k >= 1);'), (635, 2, u'-      assert(len == maxlen);'), (664, 2, u'-  assert(size <= refs->max_size);'), (836, 2, u'-  assert(pixel_index == xsize * ysize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 2, u'-  assert(nb <= total);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(230, 2, u'-  assert(histo_bits > 0);'), (266, 2, u'-  assert(in->size <= out->size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 2, u'-  assert(src != NULL && dst != NULL);'), (657, 2, u'-    assert(step >= 4);'), (704, 2, u'-    assert(step >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(251, 2, u'-    assert(expn > 0.);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-  assert(riff_size == (uint32_t)riff_size);'), (71, 2, u'-  assert(IsVP8XNeeded(enc));'), (72, 2, u'-  assert(pic->width >= 1 && pic->height >= 1);'), (73, 2, u'-  assert(pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE);'), (95, 2, u'-  assert(enc->has_alpha_);'), (120, 2, u'-  assert(vp8_size == (uint32_t)vp8_size);'), (292, 2, u'-    assert(enc->use_layer_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(145, 2, u'-  assert(pic != NULL && pic->argb != NULL);'), (358, 2, u'-      assert(trimmed_length >= 2);'), (483, 2, u'-  assert(histogram_image->size == 1);'), (530, 2, u'-  assert(histogram_bits >= MIN_HUFFMAN_BITS);'), (531, 2, u'-  assert(histogram_bits <= MAX_HUFFMAN_BITS);'), (682, 2, u'-  assert(pred_bits >= 2);'), (703, 2, u'-  assert(ccolor_transform_bits >= 2);'), (739, 2, u'-  assert(width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION);'), (873, 2, u'-  assert(palette_size >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(314, 2, u'-  assert((int)error < VP8_ENC_ERROR_LAST);'), (315, 2, u'-  assert((int)error >= VP8_ENC_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  assert(mux != NULL);'), (79, 2, u'-  assert(!IsWPI(kChunks[idx].id));'), (103, 2, u'-  assert(mux != NULL);'), (104, 2, u'-  assert(size <= MAX_CHUNK_PAYLOAD);'), (105, 2, u'-  assert(idx != IDX_NIL);'), (125, 2, u'-  assert(width > 0 && height > 0 && duration > 0);'), (162, 2, u'-    assert(wpi != NULL && wpi->img_ != NULL);'), (175, 2, u'-  assert(chunk_list);'), (444, 2, u'-  assert(idx == IDX_FRAME || idx == IDX_TILE);'), (467, 2, u'-  assert(frame_tile_chunk != NULL);'), (468, 2, u'-  assert(tag == kChunks[IDX_FRAME].tag || tag ==  kChunks[IDX_TILE].tag);'), (483, 2, u'-  assert(image_chunk != NULL);'), (484, 2, u'-  assert(tag == kChunks[IDX_VP8].tag || tag ==  kChunks[IDX_VP8L].tag);'), (517, 2, u'-  assert(mux != NULL);'), (518, 2, u'-  assert(width != NULL && height != NULL);'), (521, 2, u'-  assert(wpi != NULL);'), (522, 2, u'-  assert(wpi->img_ != NULL);'), (536, 2, u'-      assert(x_offset < MAX_POSITION_OFFSET);'), (537, 2, u'-      assert(y_offset < MAX_POSITION_OFFSET);'), (580, 2, u'-  assert(mux != NULL);'), (691, 2, u'-  assert(dst == data + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-  assert(chunk);'), (106, 2, u'-  assert(chunk_list);'), (193, 2, u'-  assert(chunk);'), (194, 2, u'-  assert(chunk->tag_ != NIL_TAG);'), (197, 2, u'-  assert(chunk_size == (uint32_t)chunk_size);'), (245, 2, u'-  assert(wpi);'), (284, 2, u'-  assert(wpi_list);'), (288, 2, u'-  assert(id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE ||'), (290, 2, u'-  assert(id != WEBP_CHUNK_IMAGE || nth == 1);'), (356, 2, u'-  assert(wpi_list);'), (369, 2, u'-  assert(wpi_list);'), (370, 2, u'-  assert(wpi);'), (405, 2, u'-  assert(wpi);'), (425, 2, u'-    assert(images->img_ != NULL);'), (437, 2, u'-  assert(size == (uint32_t)size);'), (443, 2, u'-  assert(mux != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-  assert(mux != NULL);'), (39, 2, u'-  assert(!IsWPI(kChunks[idx].id));'), (149, 2, u'-      assert(wpi_chunk_ptr != NULL);'), (221, 2, u'-  assert(width >= 1 && height >= 1);'), (222, 2, u'-  assert(width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE);'), (223, 2, u'-  assert(width * (uint64_t)height < MAX_IMAGE_AREA);'), (253, 2, u'-    assert(wpi->img_ != NULL);'), (265, 2, u'-  assert(dst == data + size);'), (287, 2, u'-  assert(err == WEBP_MUX_OK);  // Already tested above.'), (339, 2, u'-  assert(wpi->header_ != NULL);  // As MuxImageGetNth() already checked header_.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-  assert(br != NULL);'), (26, 2, u'-  assert(start != NULL);'), (27, 2, u'-  assert(start <= end);'), (71, 2, u'-  assert(br != NULL && br->buf_ != NULL);'), (111, 2, u'-  assert(br != NULL);'), (112, 2, u'-  assert(start != NULL);'), (113, 2, u"-  assert(length < 0xfffffff8u);   // can't happen with a RIFF chunk."), (130, 2, u'-  assert(br != NULL);'), (131, 2, u'-  assert(buf != NULL);'), (132, 2, u"-  assert(len < 0xfffffff8u);   // can't happen with a RIFF chunk."), (191, 2, u'-  assert(n_bits >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-  assert(bw->nb_bits_ >= 0);'), (178, 2, u'-  assert(data);'), (265, 2, u'-    assert(n_bits <= 25);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-  assert(cc != NULL);'), (27, 2, u'-  assert(hash_bits > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-  assert(in != NULL);                                       \\'), (26, 2, u'-  assert(out != NULL);                                      \\'), (27, 2, u'-  assert(width > 0);                                        \\'), (28, 2, u'-  assert(height > 0);                                       \\'), (29, 2, u'-  assert(bpp > 0);                                          \\'), (30, 2, u'-  assert(stride >= width * bpp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert(children - node == (int)(children - node));'), (47, 2, u'-  assert(tree != NULL);'), (79, 2, u'-  assert(code_lengths != NULL);'), (80, 2, u'-  assert(code_lengths_size > 0);'), (81, 2, u'-  assert(huff_codes != NULL);'), (150, 2, u'-  assert(tree != NULL);'), (151, 2, u'-  assert(code_lengths != NULL);'), (210, 2, u'-  assert(tree != NULL);'), (211, 2, u'-  assert(code_lengths != NULL);'), (212, 2, u'-  assert(codes != NULL);'), (213, 2, u'-  assert(symbols != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 2, u'-  assert(tree_size_orig <= (1 << (tree_depth_limit - 1)));'), (284, 2, u'-  assert(value <= MAX_ALLOWED_CODE_LENGTH);'), (353, 2, u'-  assert(tokens != NULL);'), (367, 2, u'-    assert(tokens <= ending_token);'), (401, 2, u'-  assert(tree != NULL);'), (405, 2, u'-    assert(code_length <= MAX_ALLOWED_CODE_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-  assert(inv_q_level[0] == min_s);'), (74, 2, u'-  assert(inv_q_level[num_levels - 1] == max_s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 2, u'-  assert(worker->status_ <= OK);'), (216, 2, u'-  assert(!ok || (worker->status_ == OK));'), (240, 2, u'-  assert(worker->status_ == NOT_OK);')]
===========================================
Class: class JSB_ScrollViewDelegate : public Object , public ScrollViewDelegate { 
Class: class JSB_TableViewDataSource : public Object , public TableViewDataSource { 
Class: class JSB_EditBoxDelegate : public Object , public EditBoxDelegate { 
Class:   class JSB_ControlButtonTarget : public Object { 
Class: class JSArmatureWrapper: public JSCallbackWrapper { class JSArmatureWrapper: public JSCallbackWrapper 
Class:  class JSB_WebSocketDelegate : public WebSocket::Delegate { 
Class: class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 2, u'-  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 2, u'-static int luaB_assert (lua_State *L) {'), (448, 2, u'-  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 2, u'-  lua_assert(dest != NO_JUMP);'), (173, 2, u'-    lua_assert(target < fs->pc);'), (218, 2, u'-    lua_assert(reg == fs->freereg);'), (235, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (518, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 2, u'-      lua_assert(0);  /* cannot happen */'), (645, 2, u'-    default: lua_assert(0); r = 0; break;'), (705, 2, u'-    default: lua_assert(0);'), (740, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 2, u'-    default: lua_assert(0);'), (805, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (806, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (822, 2, u'-  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 2, u'-    lua_assert(ttisfunction(ci->func));'), (507, 2, u'-    lua_assert(pc != -1);'), (511, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (583, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (200, 2, u'-    lua_assert(!L->allowhook);'), (218, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (238, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (293, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (315, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (388, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (393, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (397, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (426, 2, u'-  lua_assert(L->errfunc == 0);'), (435, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    lua_assert(p->v != &p->u.value);'), (77, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-  lua_assert(ttisnil(gval(n)));'), (70, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 2, u'-    default: lua_assert(0);'), (186, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (233, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (279, 2, u'-  lua_assert(isgray(o));'), (318, 2, u'-    default: lua_assert(0); return 0;'), (355, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 2, u'-    default: lua_assert(0);'), (415, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 2, u'-      lua_assert(old >= g->totalbytes);'), (588, 2, u'-      lua_assert(old >= g->totalbytes);'), (605, 2, u'-    default: lua_assert(0); return 0;'), (647, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (678, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (131, 2, u'-  lua_assert(currIsNewline(ls));'), (195, 2, u'-  lua_assert(isdigit(ls->current));'), (213, 2, u"-  lua_assert(s == '[' || s == ']');"), (414, 2, u'-          lua_assert(!currIsNewline(ls));'), (460, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (82, 2, u'-  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 2, u'-      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-      lua_assert(f->upvalues[i] == name);'), (200, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (303, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (374, 2, u'-  lua_assert(luaG_checkcode(f));'), (375, 2, u'-  lua_assert(fs->bl == NULL);'), (394, 2, u'-  lua_assert(funcstate.prev == NULL);'), (395, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (396, 2, u'-  lua_assert(lexstate.fs == NULL);'), (511, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 2, u'-  lua_assert(f->k == VNONRELOC);'), (887, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 2, u'-        lua_assert(nret == fs->freereg - first);'), (1332, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (110, 2, u'-  lua_assert(g->strt.nuse == 0);'), (114, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (129, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (136, 2, u'-  lua_assert(L1->openupval == NULL);'), (210, 2, u'-  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 2, u'-    lua_assert(n != dummynode);'), (427, 2, u'-  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 2, u"-    lua_assert(argv[i][0] == '-');"), (303, 2, u'-        lua_assert(chunk != NULL);'), (311, 2, u'-        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (332, 2, u'-      default: lua_assert(0); break;'), (383, 2, u'-  lua_assert(isLua(L->ci));'), (403, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 2, u'-        lua_assert(ttisstring(rb));'), (447, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (611, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 2, u'-          lua_assert(isLua(L->ci));'), (650, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 2, u'-static int luaB_assert(lua_State*L){'), (6411, 2, u'-{"assert",luaB_assert},')]
===========================================
Class:class AlutDecoder : public OpenALDecoder class AlutDecoder : public OpenALDecoder
Class: class DataRaii { 
Class:    class MpgOpenRaii     class MpgOpenRaii
Class:    class OggRaii     class OggRaii
Class:class CocosQt5AudioBackend { class CocosQt5AudioBackend 
Class:class AlutDecoder : public OpenALDecoder class AlutDecoder : public OpenALDecoder
Class: class DataRaii { 
Class:    class MpgOpenRaii     class MpgOpenRaii
Class:    class OggRaii     class OggRaii
Class:class CocosQt5AudioBackend { class CocosQt5AudioBackend 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (shape->getBody() != this) CCASSERT(false, "");')]
===========================================
===========================================
Total add: 21
Total del: 2
Header: PhysicsBody::addShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (shape->getBody() != this) CCASSERT(false, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (shape->getBody() != this) CCASSERT(false, "");')]
===========================================
Class:class JSArmatureWrapper: public JSCallbackWrapper { class JSArmatureWrapper: public JSCallbackWrapper 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (shape->getBody() != this) CCASSERT(false, "");')]
===========================================
===========================================
Total add: 44
Total del: 2
Header: PhysicsBody::addShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (shape->getBody() != this) CCASSERT(false, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (shape->getBody() != this) CCASSERT(false, "");')]
===========================================
Class:class DispatchGuard class DispatchGuard
Class:class DispatchGuard class DispatchGuard
Class: class EGLViewEventHandler { 
Class: class EGLViewEventHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(!eventType.empty(), "Invalid event type.");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: EventDispatcher::setDirtyForEventType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(!eventType.empty(), "Invalid event type.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(!eventType.empty(), "Invalid event type.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                CCASSERT(item->node, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Total add: 4
Total del: 26
Header: EventDispatcher::setPriorityWithSceneGraph
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                CCASSERT(item->node, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                CCASSERT(item->node, "Can\'t set fixed priority with scene graph based listener.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-                CCASSERT(item, "listener item is invalid.");'), (15, 1, u'+            CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
Total add: 9
Total del: 12
Header: EventDispatcher::dispatchEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-                CCASSERT(item, "listener item is invalid.");'), (15, 1, u'+            CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-                CCASSERT(item, "listener item is invalid.");'), (15, 1, u'+            CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener && node, "Invalid parameters.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: EventDispatcher::addEventListenerWithSceneGraphPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener && node, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener && node, "Invalid parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener, "Invalid parameters.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: EventDispatcher::addEventListenerWithFixedPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener, "Invalid parameters.");')]
===========================================
Class: class ContactListener : public b2ContactListener { 
Class: class ContactListener : public b2ContactListener { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(fixedPriority != 0, "0 priority is forbidden for fixed priority since it\'s used for scene graph based priority.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: EventDispatcher::addEventListenerWithFixedPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(fixedPriority != 0, "0 priority is forbidden for fixed priority since it\'s used for scene graph based priority.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(fixedPriority != 0, "0 priority is forbidden for fixed priority since it\'s used for scene graph based priority.");')]
===========================================
Class:class PhysicsBodyInfo namespace { 
Class:   class TouchableSpriteWithFixedPriority : public Sprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                CCASSERT(*listenerIter, "listener is invalid.");'), (6, 1, u'+                CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: EventDispatcher::dispatchEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                CCASSERT(*listenerIter, "listener is invalid.");'), (6, 1, u'+                CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-                CCASSERT(*listenerIter, "listener is invalid.");'), (6, 1, u'+                CCASSERT(item, "listener item is invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(animationData, "AnimationData not exist! ");'), (3, 1, u'+            CCASSERT(animationData, "AnimationData not exist! ");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(animationData, "AnimationData not exist! ");'), (3, 1, u'+            CCASSERT(animationData, "AnimationData not exist! ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(animationData, "AnimationData not exist! ");'), (3, 1, u'+            CCASSERT(animationData, "AnimationData not exist! ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(armatureData, "");'), (3, 1, u'+            CCASSERT(armatureData, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(armatureData, "");'), (3, 1, u'+            CCASSERT(armatureData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(armatureData, "");'), (3, 1, u'+            CCASSERT(armatureData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Armature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::removeBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::changeBoneParent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Bone::setBoneData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( NULL == child->_parentBone, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Bone::addChildBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( NULL == child->_parentBone, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( NULL == child->_parentBone, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_animationData, "_animationData can not be null");'), (3, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(_movementData, "_movementData can not be null");'), (7, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ArmatureAnimation::play
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_animationData, "_animationData can not be null");'), (3, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(_movementData, "_movementData can not be null");'), (7, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_animationData, "_animationData can not be null");'), (3, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(_movementData, "_movementData can not be null");'), (7, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DisplayManager::changeDisplayByIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");'), (3, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ColliderDetector::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");'), (3, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");'), (3, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (3, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (3, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (3, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (3, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (3, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (3, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (3, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (3, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (3, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DataReaderHelper::addDataFromCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(384, 2, u'-   assert( collectComments_ );'), (387, 2, u'-      assert( lastValue_ != 0 );'), (578, 2, u'-   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-#define JSON_ASSERT_UNREACHABLE assert( false )'), (26, 2, u'-#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (28, 2, u'-#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (62, 2, u'-   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (125, 2, u'-   JSON_ASSERT( text != 0 );'), (126, 2, u'-   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (277, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (451, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (494, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (578, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (640, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (654, 2, u'-   JSON_ASSERT( type_ == stringValue );'), (677, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (699, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (702, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (705, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (714, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (728, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (729, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (732, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (735, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (744, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (762, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (765, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (774, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (788, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (793, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (802, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (855, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (884, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (909, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (960, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (997, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (1023, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1054, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1069, 2, u'-      assert( size() == newSize );'), (1080, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1101, 2, u'-   JSON_ASSERT( index >= 0 );'), (1109, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1128, 2, u'-   JSON_ASSERT( index >= 0 );'), (1144, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1184, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1262, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1326, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParentBone, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Bone::addChildBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParentBone, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParentBone, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->_parentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (3, 1, u'+    CCAssert(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(m_pMovementData, "m_pMovementData can not be null");'), (8, 1, u'+    CCAssert(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: ArmatureAnimation::play
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (3, 1, u'+    CCAssert(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(m_pMovementData, "m_pMovementData can not be null");'), (8, 1, u'+    CCAssert(_movementData, "_movementData can not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (3, 1, u'+    CCAssert(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(m_pMovementData, "m_pMovementData can not be null");'), (8, 1, u'+    CCAssert(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: DisplayManager::changeDisplayByIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");'), (6, 1, u'+    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ColliderDetector::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");'), (6, 1, u'+    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");'), (6, 1, u'+    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(m_pArmarureDatas, "create ArmatureDataManager::m_pArmarureDatas fail!");'), (6, 1, u'+        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (10, 2, u'-        CCAssert(m_pAnimationDatas, "create ArmatureDataManager::m_pAnimationDatas fail!");'), (13, 1, u'+        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (17, 2, u'-        CCAssert(m_pTextureDatas, "create ArmatureDataManager::m_pTextureDatas fail!");'), (20, 1, u'+        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(m_pArmarureDatas, "create ArmatureDataManager::m_pArmarureDatas fail!");'), (6, 1, u'+        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (10, 2, u'-        CCAssert(m_pAnimationDatas, "create ArmatureDataManager::m_pAnimationDatas fail!");'), (13, 1, u'+        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (17, 2, u'-        CCAssert(m_pTextureDatas, "create ArmatureDataManager::m_pTextureDatas fail!");'), (20, 1, u'+        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(m_pArmarureDatas, "create ArmatureDataManager::m_pArmarureDatas fail!");'), (6, 1, u'+        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (10, 2, u'-        CCAssert(m_pAnimationDatas, "create ArmatureDataManager::m_pAnimationDatas fail!");'), (13, 1, u'+        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (17, 2, u'-        CCAssert(m_pTextureDatas, "create ArmatureDataManager::m_pTextureDatas fail!");'), (20, 1, u'+        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(animationData, "CCAnimationData not exist! ");'), (5, 1, u'+            CCAssert(animationData, "AnimationData not exist! ");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCArmature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(animationData, "CCAnimationData not exist! ");'), (5, 1, u'+            CCAssert(animationData, "AnimationData not exist! ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(animationData, "CCAnimationData not exist! ");'), (5, 1, u'+            CCAssert(animationData, "AnimationData not exist! ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (3, 1, u'+        CCAssert(m_pArmarureDatas, "create ArmatureDataManager::m_pArmarureDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (3, 1, u'+        CCAssert(m_pArmarureDatas, "create ArmatureDataManager::m_pArmarureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (3, 1, u'+        CCAssert(m_pArmarureDatas, "create ArmatureDataManager::m_pArmarureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (3, 1, u'+        CCAssert(m_pAnimationDatas, "create ArmatureDataManager::m_pAnimationDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (3, 1, u'+        CCAssert(m_pAnimationDatas, "create ArmatureDataManager::m_pAnimationDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (3, 1, u'+        CCAssert(m_pAnimationDatas, "create ArmatureDataManager::m_pAnimationDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");'), (3, 1, u'+        CCAssert(m_pTextureDatas, "create ArmatureDataManager::m_pTextureDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");'), (3, 1, u'+        CCAssert(m_pTextureDatas, "create ArmatureDataManager::m_pTextureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");'), (3, 1, u'+        CCAssert(m_pTextureDatas, "create ArmatureDataManager::m_pTextureDatas fail!");')]
===========================================
Class:      class TouchableLayer : public Layer { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                CCASSERT(false, "sort event node error...");'), (55, 1, u'+            CCASSERT(false, "sort event node error...");')]
===========================================
===========================================
Total add: 29
Total del: 30
Header: EventDispatcher::sortAllEventListenerItems
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                CCASSERT(false, "sort event node error...");'), (55, 1, u'+            CCASSERT(false, "sort event node error...");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                CCASSERT(false, "sort event node error...");'), (55, 1, u'+            CCASSERT(false, "sort event node error...");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-            CCASSERT(animationData, "CCAnimationData not exist! ");'), (43, 1, u'+            CCAssert(animationData, "CCAnimationData not exist! ");'), (50, 2, u'-            CCASSERT(armatureData, "");'), (52, 1, u'+            CCAssert(armatureData, "");')]
===========================================
===========================================
Total add: 22
Total del: 20
Header: Armature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-            CCASSERT(animationData, "CCAnimationData not exist! ");'), (43, 1, u'+            CCAssert(animationData, "CCAnimationData not exist! ");'), (50, 2, u'-            CCASSERT(armatureData, "");'), (52, 1, u'+            CCAssert(armatureData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-            CCASSERT(animationData, "CCAnimationData not exist! ");'), (43, 1, u'+            CCAssert(animationData, "CCAnimationData not exist! ");'), (50, 2, u'-            CCASSERT(armatureData, "");'), (52, 1, u'+            CCAssert(armatureData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (6, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (7, 1, u'+    CCAssert( bone != NULL, "Argument must be non-nil");'), (8, 1, u'+    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: *Armature::createBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (6, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (7, 1, u'+    CCAssert( bone != NULL, "Argument must be non-nil");'), (8, 1, u'+    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (6, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (7, 1, u'+    CCAssert( bone != NULL, "Argument must be non-nil");'), (8, 1, u'+    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (6, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Armature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (6, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (6, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (6, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: *Armature::getBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (6, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (6, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (6, 1, u'+    CCAssert(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
Total add: 15
Total del: 12
Header: Bone::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (6, 1, u'+    CCAssert(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (6, 1, u'+    CCAssert(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_animationData, "_animationData can not be null");'), (6, 1, u'+    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (9, 2, u'-    CCASSERT(_movementData, "_movementData can not be null");'), (11, 1, u'+    CCAssert(m_pMovementData, "m_pMovementData can not be null");')]
===========================================
===========================================
Total add: 16
Total del: 14
Header: ArmatureAnimation::setAnimationScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_animationData, "_animationData can not be null");'), (6, 1, u'+    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (9, 2, u'-    CCASSERT(_movementData, "_movementData can not be null");'), (11, 1, u'+    CCAssert(m_pMovementData, "m_pMovementData can not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(_animationData, "_animationData can not be null");'), (6, 1, u'+    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (9, 2, u'-    CCASSERT(_movementData, "_movementData can not be null");'), (11, 1, u'+    CCAssert(m_pMovementData, "m_pMovementData can not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Total add: 9
Total del: 4
Header: DisplayManager::removeDisplay
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");'), (41, 1, u'+    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");')]
===========================================
===========================================
Total add: 15
Total del: 19
Header: *ColliderDetector::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");'), (41, 1, u'+    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");'), (41, 1, u'+    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");')]
===========================================
Class:class Contact class Contact
Class:class ContactListener : public b2ContactListener class ContactListener : public b2ContactListener
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (6, 1, u'+        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (10, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (13, 1, u'+        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (17, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (20, 1, u'+        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (6, 1, u'+        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (10, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (13, 1, u'+        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (17, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (20, 1, u'+        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (6, 1, u'+        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (10, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (13, 1, u'+        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (17, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (20, 1, u'+        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCAssert(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DataReaderHelper::addDataFromCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCAssert(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCAssert(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: *DataReaderHelper::decodeArmature
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCASSERT(name.length() != 0, "");')]
===========================================
Class:class ContactListener : public b2ContactListener { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(listener->_isRegistered, "The listener has been registered.");'), (6, 1, u'+    CCASSERT(!listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: EventDispatcher::registerEventListenerWithItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(listener->_isRegistered, "The listener has been registered.");'), (6, 1, u'+    CCASSERT(!listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(listener->_isRegistered, "The listener has been registered.");'), (6, 1, u'+    CCASSERT(!listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(listener->_isRegistered, "The listener has been registered.");'), (6, 1, u'+    CCASSERT(!listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: EventDispatcher::registerEventListenerWithSceneGraphPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(listener->_isRegistered, "The listener has been registered.");'), (6, 1, u'+    CCASSERT(!listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(listener->_isRegistered, "The listener has been registered.");'), (6, 1, u'+    CCASSERT(!listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: EventDispatcher::registerEventListenerWithSceneGraphPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: EventDispatcher::registerEventListenerWithFixedPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(listener->_isRegistered, "The listener has been registered.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert( pGlyphs != NULL );'), (6, 1, u'+    assert(glyphs != nullptr);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: FontFreeType::getGlyphDefintionsForText
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert( pGlyphs != NULL );'), (6, 1, u'+    assert(glyphs != nullptr);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert( pGlyphs != NULL );'), (6, 1, u'+    assert(glyphs != nullptr);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
Total add: 0
Total del: 7
Header: Layer::setSwallowsTouches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-                CCASSERT(false, "Not supported touch listener type.");'), (113, 2, u'-                                CCASSERT(false, "The eventcode is invalid.");'), (119, 2, u'-                    CCASSERT((*touchesIter)->getID() == (*mutableTouchesIter)->getID(), "");'), (177, 2, u'-                        CCASSERT(false, "The eventcode is invalid.");')]
===========================================
===========================================
Total add: 0
Total del: 181
Header: TouchEventListener::TouchEventListener
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-                CCASSERT(false, "Not supported touch listener type.");'), (113, 2, u'-                                CCASSERT(false, "The eventcode is invalid.");'), (119, 2, u'-                    CCASSERT((*touchesIter)->getID() == (*mutableTouchesIter)->getID(), "");'), (177, 2, u'-                        CCASSERT(false, "The eventcode is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-                CCASSERT(false, "Not supported touch listener type.");'), (113, 2, u'-                                CCASSERT(false, "The eventcode is invalid.");'), (119, 2, u'-                    CCASSERT((*touchesIter)->getID() == (*mutableTouchesIter)->getID(), "");'), (177, 2, u'-                        CCASSERT(false, "The eventcode is invalid.");')]
===========================================
Class:class LensFlareSprite : public ShaderSprite, public ShaderSpriteCreator<LensFlareSprite> { 
Class:class DispatchGuard class DispatchGuard
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
Total add: 1
Total del: 10
Header: Layer::setTouchPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Layer::getTouchPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(false, "Touch priority is based on scene graph in new event dispatcher, so it doesn\'t need to be set.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(139, 2, u'-            CCASSERT(animationData, "CCAnimationData not exist! ");'), (145, 2, u'-            CCASSERT(armatureData, "");'), (248, 2, u'-    CCASSERT( bone != NULL, "Argument must be non-nil");'), (249, 2, u'-    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (283, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (305, 2, u'-    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 2, u'-    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (225, 2, u'-    CCASSERT( NULL != child, "Argument must be non-nil");'), (226, 2, u'-    CCASSERT( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-    CCASSERT(_animationData, "_animationData can not be null");'), (143, 2, u'-    CCASSERT(_movementData, "_movementData can not be null");'), (223, 2, u'-    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(125, 2, u'-    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(384, 2, u'-   assert( collectComments_ );'), (387, 2, u'-      assert( lastValue_ != 0 );'), (578, 2, u'-   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-#define JSON_ASSERT_UNREACHABLE assert( false )'), (26, 2, u'-#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (28, 2, u'-#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (62, 2, u'-   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (125, 2, u'-   JSON_ASSERT( text != 0 );'), (126, 2, u'-   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (277, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (451, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (494, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (578, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (640, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (654, 2, u'-   JSON_ASSERT( type_ == stringValue );'), (677, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (699, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (702, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (705, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (714, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (728, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (729, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (732, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (735, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (744, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (762, 2, u'-      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (765, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (774, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (788, 2, u'-      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (793, 2, u'-      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (802, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (855, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (884, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (909, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (960, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (997, 2, u'-      JSON_ASSERT_UNREACHABLE;'), (1023, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1054, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1069, 2, u'-      assert( size() == newSize );'), (1080, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1101, 2, u'-   JSON_ASSERT( index >= 0 );'), (1109, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1128, 2, u'-   JSON_ASSERT( index >= 0 );'), (1144, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1184, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1262, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1326, 2, u'-   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-   assert( current >= buffer );'), (55, 2, u'-   assert( current >= buffer );'), (399, 2, u'-         assert( childValues_.size() == size );'), (487, 2, u'-   assert( int(indentString_.size()) >= indentSize_ );'), (675, 2, u'-         assert( childValues_.size() == size );'), (767, 2, u'-   assert( indentString_.size() >= indentation_.size() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
Class:class Contact class Contact
Class:class ContactListener : public b2ContactListener class ContactListener : public b2ContactListener
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 2, u'-        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (87, 2, u'-        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (91, 2, u'-        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(220, 2, u'-    CCASSERT(root, "XML error  or  XML is empty.");'), (311, 2, u'-    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(85, 2, u'-    CCASSERT(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(139, 1, u'+            CCASSERT(animationData, "CCAnimationData not exist! ");'), (145, 1, u'+            CCASSERT(armatureData, "");'), (248, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (249, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (283, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");'), (305, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");'), (225, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (226, 1, u'+    CCASSERT( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (143, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");'), (223, 1, u'+    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(125, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
Class:class Contact class Contact
Class:class ContactListener : public b2ContactListener class ContactListener : public b2ContactListener
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (87, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (91, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(220, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");'), (311, 1, u'+    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(85, 1, u'+    CCASSERT(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(384, 1, u'+   assert( collectComments_ );'), (387, 1, u'+      assert( lastValue_ != 0 );'), (578, 1, u'+   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+#define JSON_ASSERT_UNREACHABLE assert( false )'), (26, 1, u'+#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (28, 1, u'+#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (62, 1, u'+   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (125, 1, u'+   JSON_ASSERT( text != 0 );'), (126, 1, u'+   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (277, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (451, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (499, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (583, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (645, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (659, 1, u'+   JSON_ASSERT( type_ == stringValue );'), (682, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (704, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (707, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (710, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (719, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (733, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (734, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (737, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (740, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (749, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (767, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (770, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (779, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (793, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (798, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (807, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (860, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (889, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (914, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (965, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (1002, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (1028, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1064, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1079, 1, u'+      assert( size() == newSize );'), (1090, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1111, 1, u'+   JSON_ASSERT( index >= 0 );'), (1119, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1138, 1, u'+   JSON_ASSERT( index >= 0 );'), (1154, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1194, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1272, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1336, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+   assert( current >= buffer );'), (55, 1, u'+   assert( current >= buffer );'), (399, 1, u'+         assert( childValues_.size() == size );'), (487, 1, u'+   assert( int(indentString_.size()) >= indentSize_ );'), (675, 1, u'+         assert( childValues_.size() == size );'), (767, 1, u'+   assert( indentString_.size() >= indentation_.size() );')]
===========================================
Class: template <class spriteType> class ShaderSpriteCreator { 
Class: class ShaderSprite : public Sprite { 
Class: class NormalSprite : public ShaderSprite, public ShaderSpriteCreator<NormalSprite> { 
Class: class GreyScaleSprite : public ShaderSprite, public ShaderSpriteCreator<GreyScaleSprite> { 
Class: class BlurSprite : public ShaderSprite, public ShaderSpriteCreator<BlurSprite> { 
Class: class NoiseSprite : public ShaderSprite, public ShaderSpriteCreator<NoiseSprite> { 
Class: class EdgeDetectionSprite : public ShaderSprite, public ShaderSpriteCreator<EdgeDetectionSprite> { 
Class: class BloomSprite : public ShaderSprite, public ShaderSpriteCreator<BloomSprite> { 
Class: class CelShadingSprite : public ShaderSprite, public ShaderSpriteCreator<CelShadingSprite> { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(oldIndex>=0 && oldIndex < _descendants.size() && newIndex >=0 && newIndex < _descendants.size(), "Invalid index");'), (3, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < (int)_descendants.size() && newIndex >=0 && newIndex < (int)_descendants.size(), "Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::swap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(oldIndex>=0 && oldIndex < _descendants.size() && newIndex >=0 && newIndex < _descendants.size(), "Invalid index");'), (3, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < (int)_descendants.size() && newIndex >=0 && newIndex < (int)_descendants.size(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(oldIndex>=0 && oldIndex < _descendants.size() && newIndex >=0 && newIndex < _descendants.size(), "Invalid index");'), (3, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < (int)_descendants.size() && newIndex >=0 && newIndex < (int)_descendants.size(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: TextureCache::addImageAsyncCallBack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: FileUtils::getPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(filename != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (9, 1, u'+    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: FileUtils::purgeCachedEntries
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (9, 1, u'+    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(filename != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (9, 1, u'+    CCASSERT(filename != NULL && size != NULL && mode != NULL, "Invalid parameters.");')]
===========================================
Class:class JSStringWrapper class JSStringWrapper
Class: class Pluginx_PurchaseResult : public cocos2d::plugin::PayResultListener { 
Class: class Pluginx_AdsListener : public cocos2d::plugin::AdsListener { 
Class: class Pluginx_ShareResult : public cocos2d::plugin::ShareResultListener { 
Class: class Pluginx_SocialResult : public cocos2d::plugin::SocialListener { 
Class: class Pluginx_UserActionListener : public cocos2d::plugin::UserActionListener { 
Class: class LUA_TableViewDataSource:public Object,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(oldIndex>=0 && oldIndex < _descendants->count() && newIndex >=0 && newIndex < _descendants->count(), "Invalid index");'), (3, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < _descendants.size() && newIndex >=0 && newIndex < _descendants.size(), "Invalid index");')]
===========================================
===========================================
Total add: 9
Total del: 4
Header: SpriteBatchNode::swap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(oldIndex>=0 && oldIndex < _descendants->count() && newIndex >=0 && newIndex < _descendants->count(), "Invalid index");'), (3, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < _descendants.size() && newIndex >=0 && newIndex < _descendants.size(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(oldIndex>=0 && oldIndex < _descendants->count() && newIndex >=0 && newIndex < _descendants->count(), "Invalid index");'), (3, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < _descendants.size() && newIndex >=0 && newIndex < _descendants.size(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Array::createWithCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Array::initWithCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Array::createWithCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(capacity>=0, "Invalid capacity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!data, "Array cannot be re-initialized");'), (3, 1, u'+    CCASSERT(capacity>=0 && !data, "Array cannot be re-initialized");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Array::initWithCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!data, "Array cannot be re-initialized");'), (3, 1, u'+    CCASSERT(capacity>=0 && !data, "Array cannot be re-initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(!data, "Array cannot be re-initialized");'), (3, 1, u'+    CCASSERT(capacity>=0 && !data, "Array cannot be re-initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");'), (3, 1, u'+            CCASSERT(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");'), (3, 1, u'+            CCASSERT(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");'), (3, 1, u'+            CCASSERT(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (6, 1, u'+    CCASSERT(sprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (6, 1, u'+    CCASSERT(sprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (6, 1, u'+    CCASSERT(sprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children->containsObject(sprite), "sprite batch node should contain the child");'), (17, 1, u'+    CCASSERT(index>=0 && index < _children->count(), "Invalid index");')]
===========================================
===========================================
Total add: 7
Total del: 6
Header: SpriteBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children->containsObject(sprite), "sprite batch node should contain the child");'), (17, 1, u'+    CCASSERT(index>=0 && index < _children->count(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_children->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children->containsObject(sprite), "sprite batch node should contain the child");'), (17, 1, u'+    CCASSERT(index>=0 && index < _children->count(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < _descendants->count() && newIndex >=0 && newIndex < _descendants->count(), "Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: SpriteBatchNode::swap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < _descendants->count() && newIndex >=0 && newIndex < _descendants->count(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(oldIndex>=0 && oldIndex < _descendants->count() && newIndex >=0 && newIndex < _descendants->count(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(index>=0 && index < _children->count(), "Invalid index");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: SpriteBatchNode::increaseAtlasCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(index>=0 && index < _children->count(), "Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(index>=0 && index < _children->count(), "Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT((int)tag != kActionTagInvalid, "");'), (6, 1, u'+    CCASSERT(tag != Action::INVALID_TAG, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ActionManager::removeAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT((int)tag != kActionTagInvalid, "");'), (6, 1, u'+    CCASSERT(tag != Action::INVALID_TAG, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT((int)tag != kActionTagInvalid, "");'), (6, 1, u'+    CCASSERT(tag != Action::INVALID_TAG, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT((int)tag != kActionTagInvalid, "");'), (6, 1, u'+    CCASSERT(tag != Action::INVALID_TAG, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT((int)tag != kActionTagInvalid, "");'), (6, 1, u'+    CCASSERT(tag != Action::INVALID_TAG, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT((int)tag != kActionTagInvalid, "");'), (6, 1, u'+    CCASSERT(tag != Action::INVALID_TAG, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aTag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( aTag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aTag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( aTag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( aTag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( aTag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::removeChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Node::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Action::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Action::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Action::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Action::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Action::INVALID_TAG, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != Action::INVALID_TAG, "Invalid tag");')]
===========================================
Class: class EGLViewEventHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCASSERT(nullptr != s_pEglView, "EGL singleton should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: EGLView::getInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCASSERT(nullptr != s_pEglView, "EGL singleton should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCASSERT(nullptr != s_pEglView, "EGL singleton should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCASSERT(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (6, 2, u'-\tCCASSERT(index2 < arr->num, "(2) Invalid index. Out of bounds");'), (7, 1, u'+\tCCASSERT(index1>=0 && index1 < arr->num, "(1) Invalid index. Out of bounds");'), (8, 1, u'+\tCCASSERT(index2>=0 && index2 < arr->num, "(2) Invalid index. Out of bounds");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ccArrayInsertObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCASSERT(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (6, 2, u'-\tCCASSERT(index2 < arr->num, "(2) Invalid index. Out of bounds");'), (7, 1, u'+\tCCASSERT(index1>=0 && index1 < arr->num, "(1) Invalid index. Out of bounds");'), (8, 1, u'+\tCCASSERT(index2>=0 && index2 < arr->num, "(2) Invalid index. Out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCASSERT(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (6, 2, u'-\tCCASSERT(index2 < arr->num, "(2) Invalid index. Out of bounds");'), (7, 1, u'+\tCCASSERT(index1>=0 && index1 < arr->num, "(1) Invalid index. Out of bounds");'), (8, 1, u'+\tCCASSERT(index2>=0 && index2 < arr->num, "(2) Invalid index. Out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");'), (6, 1, u'+    CCASSERT(arr && arr->num > 0 && index>=0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ccArrayRemoveAllObjects
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");'), (6, 1, u'+    CCASSERT(arr && arr->num > 0 && index>=0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");'), (6, 1, u'+    CCASSERT(arr && arr->num > 0 && index>=0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: JSTouchDelegate::ccTouchBegan
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: JSTouchDelegate::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: JSTouchDelegate::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: JSTouchDelegate::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pFrame != NULL, msg);'), (3, 1, u'+    CCASSERT(frame != NULL, msg);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::createWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pFrame != NULL, msg);'), (3, 1, u'+    CCASSERT(frame != NULL, msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(pFrame != NULL, msg);'), (3, 1, u'+    CCASSERT(frame != NULL, msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pSpriteFrame != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrame != NULL, "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pSpriteFrame != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrame != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pSpriteFrame != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrame != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Array::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Array::addObjectsFromArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: Array::insertObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(data, "Array not initialized");')]
===========================================
Class: class LuaScrollViewDelegate:public Object, public ScrollViewDelegate { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: Array::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Total add: 7
Total del: 6
Header: Array::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Total add: 8
Total del: 7
Header: Array::initWithObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Array::initWithCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: Array::initWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCASSERT(!data, "Array cannot be re-initialized");')]
===========================================
Class: class EGLViewEventHandler { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    CCASSERT(nullptr != s_pEglView, "EGL singleton should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 11
Header: EGLView::getInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    CCASSERT(nullptr != s_pEglView, "EGL singleton should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    CCASSERT(nullptr != s_pEglView, "EGL singleton should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-                    CCASSERT(false, "the type isn\'t suppored.");'), (112, 1, u'+            CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 60
Total del: 46
Header: array_to_luaval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-                    CCASSERT(false, "the type isn\'t suppored.");'), (112, 1, u'+            CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-                    CCASSERT(false, "the type isn\'t suppored.");'), (112, 1, u'+            CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 2, u'-                    CCASSERT(false, "the type isn\'t suppored.");'), (116, 1, u'+            CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 53
Total del: 59
Header: dictionary_to_luaval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 2, u'-                    CCASSERT(false, "the type isn\'t suppored.");'), (116, 1, u'+            CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(66, 2, u'-                    CCASSERT(false, "the type isn\'t suppored.");'), (116, 1, u'+            CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(ownerCallbackNames->count() == ownerCallbackNodes->count());'), (3, 1, u'+            CCASSERT(ownerCallbackNames->count() == ownerCallbackNodes->count(), "");')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: NodeLoader::parsePropTypeCCBFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(ownerCallbackNames->count() == ownerCallbackNodes->count());'), (3, 1, u'+            CCASSERT(ownerCallbackNames->count() == ownerCallbackNodes->count(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(ownerCallbackNames->count() == ownerCallbackNodes->count());'), (3, 1, u'+            CCASSERT(ownerCallbackNames->count() == ownerCallbackNodes->count(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(ownerOutletNames->count() == ownerOutletNodes->count());'), (3, 1, u'+            CCASSERT(ownerOutletNames->count() == ownerOutletNodes->count(), "");')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: NodeLoader::parsePropTypeCCBFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(ownerOutletNames->count() == ownerOutletNodes->count());'), (3, 1, u'+            CCASSERT(ownerOutletNames->count() == ownerOutletNodes->count(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(ownerOutletNames->count() == ownerOutletNodes->count());'), (3, 1, u'+            CCASSERT(ownerOutletNames->count() == ownerOutletNodes->count(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCASSERT(pObject->_reference > 1, "reference count should be greater than 1");'), (11, 1, u'+    CCASSERT(object->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: AutoreleasePool::~AutoreleasePool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCASSERT(pObject->_reference > 1, "reference count should be greater than 1");'), (11, 1, u'+    CCASSERT(object->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCASSERT(pObject->_reference > 1, "reference count should be greater than 1");'), (11, 1, u'+    CCASSERT(object->_reference > 1, "reference count should be greater than 1");')]
===========================================
Class:class JSB_ControlButtonTarget : public Object { class JSB_ControlButtonTarget : public Object 
Class:  class JSB_ControlButtonTarget : public Object { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (6, 2, u'-    CCASSERT(_runningScene == NULL, "_runningScene should be null");'), (7, 1, u'+    CCASSERT(scene != nullptr, "This command can only be used to start the Director. There is already a scene present.");'), (8, 1, u'+    CCASSERT(_runningScene == nullptr, "_runningScene should be null");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Director::getVisibleOrigin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (6, 2, u'-    CCASSERT(_runningScene == NULL, "_runningScene should be null");'), (7, 1, u'+    CCASSERT(scene != nullptr, "This command can only be used to start the Director. There is already a scene present.");'), (8, 1, u'+    CCASSERT(_runningScene == nullptr, "_runningScene should be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (6, 2, u'-    CCASSERT(_runningScene == NULL, "_runningScene should be null");'), (7, 1, u'+    CCASSERT(scene != nullptr, "This command can only be used to start the Director. There is already a scene present.");'), (8, 1, u'+    CCASSERT(_runningScene == nullptr, "_runningScene should be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pScene != NULL, "the scene should not be null");'), (7, 1, u'+    CCASSERT(scene != nullptr, "the scene should not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Director::runWithScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pScene != NULL, "the scene should not be null");'), (7, 1, u'+    CCASSERT(scene != nullptr, "the scene should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pScene != NULL, "the scene should not be null");'), (7, 1, u'+    CCASSERT(scene != nullptr, "the scene should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pScene, "the scene should not null");'), (13, 1, u'+    CCASSERT(scene, "the scene should not null");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Director::replaceScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pScene, "the scene should not null");'), (13, 1, u'+    CCASSERT(scene, "the scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pScene, "the scene should not null");'), (13, 1, u'+    CCASSERT(scene, "the scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_runningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCASSERT(_runningScene != nullptr, "running scene should not null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::popScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_runningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCASSERT(_runningScene != nullptr, "running scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_runningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCASSERT(_runningScene != nullptr, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_runningScene != NULL, "A running Scene is needed");'), (4, 1, u'+    CCASSERT(_runningScene != nullptr, "A running Scene is needed");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Director::popToSceneStackLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_runningScene != NULL, "A running Scene is needed");'), (4, 1, u'+    CCASSERT(_runningScene != nullptr, "A running Scene is needed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_runningScene != NULL, "A running Scene is needed");'), (4, 1, u'+    CCASSERT(_runningScene != nullptr, "A running Scene is needed");')]
===========================================
Class:class JSB_ControlButtonTarget : public Object { class JSB_ControlButtonTarget : public Object 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");'), (13, 2, u'-\t\tCCAssert(0, "fail to init the glfw");'), (83, 1, u'+    CCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");'), (90, 1, u'+        CCAssert(0, "fail to init the SDL");'), (94, 2, u'-\t\t\tCCAssert(0, "fail to init the extensions of opengl");'), (113, 1, u'+        CCAssert(0, "Failed to initialize OpenGL context");'), (122, 1, u'+            CCAssert(0, "fail to init OpenGL extension ARB_framebuffer_object");'), (124, 1, u'+            CCAssert(0, "fail to init OpenGL extension ARB_vertex_buffer_object");')]
===========================================
===========================================
Total add: 37
Total del: 84
Header: EGLView::setFrameSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");'), (13, 2, u'-\t\tCCAssert(0, "fail to init the glfw");'), (83, 1, u'+    CCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");'), (90, 1, u'+        CCAssert(0, "fail to init the SDL");'), (94, 2, u'-\t\t\tCCAssert(0, "fail to init the extensions of opengl");'), (113, 1, u'+        CCAssert(0, "Failed to initialize OpenGL context");'), (122, 1, u'+            CCAssert(0, "fail to init OpenGL extension ARB_framebuffer_object");'), (124, 1, u'+            CCAssert(0, "fail to init OpenGL extension ARB_vertex_buffer_object");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");'), (13, 2, u'-\t\tCCAssert(0, "fail to init the glfw");'), (83, 1, u'+    CCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");'), (90, 1, u'+        CCAssert(0, "fail to init the SDL");'), (94, 2, u'-\t\t\tCCAssert(0, "fail to init the extensions of opengl");'), (113, 1, u'+        CCAssert(0, "Failed to initialize OpenGL context");'), (122, 1, u'+            CCAssert(0, "fail to init OpenGL extension ARB_framebuffer_object");'), (124, 1, u'+            CCAssert(0, "fail to init OpenGL extension ARB_vertex_buffer_object");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(ret == 0, "fwrite function returned nonzero value");'), (3, 1, u'+        CCASSERT(ret != 0, "fwrite function returned zero value");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TestSearchPath::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(ret == 0, "fwrite function returned nonzero value");'), (3, 1, u'+        CCASSERT(ret != 0, "fwrite function returned zero value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCASSERT(ret == 0, "fwrite function returned nonzero value");'), (3, 1, u'+        CCASSERT(ret != 0, "fwrite function returned zero value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");'), (4, 1, u'+    CCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getIntValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");'), (4, 1, u'+    CCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");'), (4, 1, u'+    CCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");'), (4, 1, u'+    CCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");'), (4, 1, u'+    CCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");'), (4, 1, u'+    CCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");'), (4, 1, u'+    CCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getBoolValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");'), (4, 1, u'+    CCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");'), (4, 1, u'+    CCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (4, 1, u'+    CCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (4, 1, u'+    CCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (4, 1, u'+    CCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");'), (4, 1, u'+    CCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getArrayValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");'), (4, 1, u'+    CCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");'), (4, 1, u'+    CCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");'), (4, 1, u'+    CCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getStringValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");'), (4, 1, u'+    CCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");'), (4, 1, u'+    CCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_INT, "The type of CCBValue isn\'t integer.");'), (3, 1, u'+\tCCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getIntValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_INT, "The type of CCBValue isn\'t integer.");'), (3, 1, u'+\tCCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_INT, "The type of CCBValue isn\'t integer.");'), (3, 1, u'+\tCCASSERT(_type == Type::INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_FLOAT, "The type of CCBValue isn\'t float.");'), (3, 1, u'+\tCCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_FLOAT, "The type of CCBValue isn\'t float.");'), (3, 1, u'+\tCCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_FLOAT, "The type of CCBValue isn\'t float.");'), (3, 1, u'+\tCCASSERT(_type == Type::FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");'), (3, 1, u'+\tCCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getBoolValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");'), (3, 1, u'+\tCCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");'), (3, 1, u'+\tCCASSERT(_type == Type::BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (3, 1, u'+\tCCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (3, 1, u'+\tCCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (3, 1, u'+\tCCASSERT(_type == Type::UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_ARRAY, "The type of CCBValue isn\'t array.");'), (3, 1, u'+\tCCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getArrayValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_ARRAY, "The type of CCBValue isn\'t array.");'), (3, 1, u'+\tCCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_ARRAY, "The type of CCBValue isn\'t array.");'), (3, 1, u'+\tCCASSERT(_type == Type::ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_STRING, "The type of CCBValue isn\'t string.");'), (3, 1, u'+\tCCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getStringValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_STRING, "The type of CCBValue isn\'t string.");'), (3, 1, u'+\tCCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_type == TYPE_STRING, "The type of CCBValue isn\'t string.");'), (3, 1, u'+\tCCASSERT(_type == Type::STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pCCBRootPath != NULL, "");'), (7, 1, u'+    CCASSERT(ccbRootPath != NULL, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCBReader::~CCBReader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pCCBRootPath != NULL, "");'), (7, 1, u'+    CCASSERT(ccbRootPath != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pCCBRootPath != NULL, "");'), (7, 1, u'+    CCASSERT(ccbRootPath != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_INT, "The type of CCBValue isn\'t integer.");'), (3, 1, u'+    CCASSERT(_type == TYPE_INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getIntValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_INT, "The type of CCBValue isn\'t integer.");'), (3, 1, u'+    CCASSERT(_type == TYPE_INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_INT, "The type of CCBValue isn\'t integer.");'), (3, 1, u'+    CCASSERT(_type == TYPE_INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_FLOAT, "The type of CCBValue isn\'t float.");'), (3, 1, u'+    CCASSERT(_type == TYPE_FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_FLOAT, "The type of CCBValue isn\'t float.");'), (3, 1, u'+    CCASSERT(_type == TYPE_FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_FLOAT, "The type of CCBValue isn\'t float.");'), (3, 1, u'+    CCASSERT(_type == TYPE_FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");'), (3, 1, u'+    CCASSERT(_type == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getBoolValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");'), (3, 1, u'+    CCASSERT(_type == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");'), (3, 1, u'+    CCASSERT(_type == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (3, 1, u'+    CCASSERT(_type == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (3, 1, u'+    CCASSERT(_type == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");'), (3, 1, u'+    CCASSERT(_type == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_ARRAY, "The type of CCBValue isn\'t array.");'), (3, 1, u'+    CCASSERT(_type == TYPE_ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getArrayValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_ARRAY, "The type of CCBValue isn\'t array.");'), (3, 1, u'+    CCASSERT(_type == TYPE_ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_ARRAY, "The type of CCBValue isn\'t array.");'), (3, 1, u'+    CCASSERT(_type == TYPE_ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_STRING, "The type of CCBValue isn\'t string.");'), (3, 1, u'+    CCASSERT(_type == TYPE_STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBValue::getStringValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_STRING, "The type of CCBValue isn\'t string.");'), (3, 1, u'+    CCASSERT(_type == TYPE_STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(mType == TYPE_STRING, "The type of CCBValue isn\'t string.");'), (3, 1, u'+    CCASSERT(_type == TYPE_STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(ccNodeLoadersIterator != this->mNodeLoaders.end());'), (5, 1, u'+    assert(ccNodeLoadersIterator != this->_nodeLoaders.end());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: NodeLoaderLibrary::unregisterNodeLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(ccNodeLoadersIterator != this->mNodeLoaders.end());'), (5, 1, u'+    assert(ccNodeLoadersIterator != this->_nodeLoaders.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(ccNodeLoadersIterator != this->mNodeLoaders.end());'), (5, 1, u'+    assert(ccNodeLoadersIterator != this->_nodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kIntValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getIntValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kIntValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kIntValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_INT, "The type of CCBValue isn\'t integer.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kFloatValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getFloatValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kFloatValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kFloatValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_FLOAT, "The type of CCBValue isn\'t float.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kBoolValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getBoolValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kBoolValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kBoolValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_BOOL, "The type of CCBValue isn\'t boolean.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kUnsignedCharValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kUnsignedCharValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kUnsignedCharValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_UNSIGNED_CHAR, "The type of CCBValue isn\'t unsigned char.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(mType == kArrayValue);'), (6, 1, u'+    CCASSERT(mType == TYPE_ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(mType == kArrayValue);'), (6, 1, u'+    CCASSERT(mType == TYPE_ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(mType == kArrayValue);'), (6, 1, u'+    CCASSERT(mType == TYPE_ARRAY, "The type of CCBValue isn\'t array.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kStringValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getStringValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kStringValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType == kStringValue);'), (3, 1, u'+    CCASSERT(mType == TYPE_STRING, "The type of CCBValue isn\'t string.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");'), (3, 1, u'+    CCASSERT(resolutionPolicy != ResolutionPolicy::UNKNOWN, "should set resolutionPolicy");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: EGLViewProtocol::setDesignResolutionSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");'), (3, 1, u'+    CCASSERT(resolutionPolicy != ResolutionPolicy::UNKNOWN, "should set resolutionPolicy");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");'), (3, 1, u'+    CCASSERT(resolutionPolicy != ResolutionPolicy::UNKNOWN, "should set resolutionPolicy");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == Mode::RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(binaryMsg != NULL && len > 0, "parameter invalid.");'), (3, 1, u'+    CCASSERT(binaryMsg != nullptr && len > 0, "parameter invalid.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: WebSocket::send
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(binaryMsg != NULL && len > 0, "parameter invalid.");'), (3, 1, u'+    CCASSERT(binaryMsg != nullptr && len > 0, "parameter invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(binaryMsg != NULL && len > 0, "parameter invalid.");'), (3, 1, u'+    CCASSERT(binaryMsg != nullptr && len > 0, "parameter invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (3, 2, u'-    CCASSERT(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");'), (4, 1, u'+    CCASSERT(_wsContext == nullptr || ctx == _wsContext, "Invalid context.");'), (5, 1, u'+    CCASSERT(_wsInstance == nullptr || wsi == nullptr || wsi == _wsInstance, "Invaild websocket instance.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: WebSocket::onSocketCallback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (3, 2, u'-    CCASSERT(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");'), (4, 1, u'+    CCASSERT(_wsContext == nullptr || ctx == _wsContext, "Invalid context.");'), (5, 1, u'+    CCASSERT(_wsInstance == nullptr || wsi == nullptr || wsi == _wsInstance, "Invaild websocket instance.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (3, 2, u'-    CCASSERT(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");'), (4, 1, u'+    CCASSERT(_wsContext == nullptr || ctx == _wsContext, "Invalid context.");'), (5, 1, u'+    CCASSERT(_wsInstance == nullptr || wsi == nullptr || wsi == _wsInstance, "Invaild websocket instance.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::State::TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( child != NULL, "Argument must be non-NULL");'), (6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (8, 2, u'-    CCASSERT( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (9, 1, u'+    CCASSERT( aChild != NULL, "Argument must be non-NULL");'), (10, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (12, 1, u'+    CCASSERT( child->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: ParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( child != NULL, "Argument must be non-NULL");'), (6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (8, 2, u'-    CCASSERT( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (9, 1, u'+    CCASSERT( aChild != NULL, "Argument must be non-NULL");'), (10, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (12, 1, u'+    CCASSERT( child->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( child != NULL, "Argument must be non-NULL");'), (6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (8, 2, u'-    CCASSERT( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (9, 1, u'+    CCASSERT( aChild != NULL, "Argument must be non-NULL");'), (10, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (12, 1, u'+    CCASSERT( child->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (7, 1, u'+    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (7, 1, u'+    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (7, 1, u'+    CCASSERT( _blendFunc.src  == child->getBlendFunc().src && _blendFunc.dst  == child->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( child != NULL, "Child must be non-NULL");'), (6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 2, u'-    CCASSERT( _children->containsObject(child), "Child doesn\'t belong to batch" );'), (8, 1, u'+    CCASSERT( aChild != NULL, "Child must be non-NULL");'), (9, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (10, 1, u'+    CCASSERT( _children->containsObject(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: ParticleBatchNode::addChildHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( child != NULL, "Child must be non-NULL");'), (6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 2, u'-    CCASSERT( _children->containsObject(child), "Child doesn\'t belong to batch" );'), (8, 1, u'+    CCASSERT( aChild != NULL, "Child must be non-NULL");'), (9, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (10, 1, u'+    CCASSERT( _children->containsObject(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT( child != NULL, "Child must be non-NULL");'), (6, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 2, u'-    CCASSERT( _children->containsObject(child), "Child doesn\'t belong to batch" );'), (8, 1, u'+    CCASSERT( aChild != NULL, "Child must be non-NULL");'), (9, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (10, 1, u'+    CCASSERT( _children->containsObject(aChild), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (13, 2, u'-    CCASSERT(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (14, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (15, 1, u'+    CCASSERT(_children->containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 9
Total del: 11
Header: ParticleBatchNode::searchNewPositionInChildrenForZ
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (13, 2, u'-    CCASSERT(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (14, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (15, 1, u'+    CCASSERT(_children->containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (13, 2, u'-    CCASSERT(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (14, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(aChild) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (15, 1, u'+    CCASSERT(_children->containsObject(aChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    CCASSERT(pChild != NULL, "Argument must be non-NULL");'), (20, 1, u'+    CCASSERT(child != NULL, "Argument must be non-NULL");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Sprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    CCASSERT(pChild != NULL, "Argument must be non-NULL");'), (20, 1, u'+    CCASSERT(child != NULL, "Argument must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    CCASSERT(pChild != NULL, "Argument must be non-NULL");'), (20, 1, u'+    CCASSERT(child != NULL, "Argument must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (4, 2, u'-        CCASSERT(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");'), (6, 1, u'+        CCASSERT( childSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (7, 1, u'+        CCASSERT(childSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Sprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (4, 2, u'-        CCASSERT(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");'), (6, 1, u'+        CCASSERT( childSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (7, 1, u'+        CCASSERT(childSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCASSERT( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (4, 2, u'-        CCASSERT(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");'), (6, 1, u'+        CCASSERT( childSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (7, 1, u'+        CCASSERT(childSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pChild != NULL, "");'), (6, 2, u'-    CCASSERT(_children->containsObject(pChild), "");'), (7, 1, u'+    CCASSERT(child != NULL, "");'), (8, 1, u'+    CCASSERT(_children->containsObject(child), "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Sprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pChild != NULL, "");'), (6, 2, u'-    CCASSERT(_children->containsObject(pChild), "");'), (7, 1, u'+    CCASSERT(child != NULL, "");'), (8, 1, u'+    CCASSERT(_children->containsObject(child), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pChild != NULL, "");'), (6, 2, u'-    CCASSERT(_children->containsObject(pChild), "");'), (7, 1, u'+    CCASSERT(child != NULL, "");'), (8, 1, u'+    CCASSERT(_children->containsObject(child), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (7, 1, u'+    CCASSERT(filename != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: FileUtils::purgeCachedEntries
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (7, 1, u'+    CCASSERT(filename != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (7, 1, u'+    CCASSERT(filename != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszFileName != NULL, "CCFileUtils: Invalid path");'), (6, 1, u'+    CCASSERT(filename != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: FileUtils::getPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszFileName != NULL, "CCFileUtils: Invalid path");'), (6, 1, u'+    CCASSERT(filename != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszFileName != NULL, "CCFileUtils: Invalid path");'), (6, 1, u'+    CCASSERT(filename != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pTexture != NULL, "Invalid texture for sprite");'), (13, 1, u'+    CCASSERT(texture != NULL, "Invalid texture for sprite");'), (26, 2, u'-    CCASSERT(pszFilename != NULL, "Invalid filename for sprite");'), (27, 1, u'+    CCASSERT(filename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: Sprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pTexture != NULL, "Invalid texture for sprite");'), (13, 1, u'+    CCASSERT(texture != NULL, "Invalid texture for sprite");'), (26, 2, u'-    CCASSERT(pszFilename != NULL, "Invalid filename for sprite");'), (27, 1, u'+    CCASSERT(filename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCASSERT(pTexture != NULL, "Invalid texture for sprite");'), (13, 1, u'+    CCASSERT(texture != NULL, "Invalid texture for sprite");'), (26, 2, u'-    CCASSERT(pszFilename != NULL, "Invalid filename for sprite");'), (27, 1, u'+    CCASSERT(filename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszFilename != NULL, "");'), (6, 1, u'+    CCASSERT(filename != NULL, "");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszFilename != NULL, "");'), (6, 1, u'+    CCASSERT(filename != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszFilename != NULL, "");'), (6, 1, u'+    CCASSERT(filename != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszSpriteFrameName != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrameName != NULL, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszSpriteFrameName != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrameName != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(pszSpriteFrameName != NULL, "");'), (6, 1, u'+    CCASSERT(spriteFrameName != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(format == Image::FORMAT_JPG || format == Image::FORMAT_PNG,'), (3, 1, u'+    CCASSERT(format == Image::Format::JPG || format == Image::Format::PNG,')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: RenderTexture::saveToFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(format == Image::FORMAT_JPG || format == Image::FORMAT_PNG,'), (3, 1, u'+    CCASSERT(format == Image::Format::JPG || format == Image::Format::PNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(format == Image::FORMAT_JPG || format == Image::FORMAT_PNG,'), (3, 1, u'+    CCASSERT(format == Image::Format::JPG || format == Image::Format::PNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(eFormat != Texture2D::PIXEL_FORMAT_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCASSERT(eFormat != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(eFormat != Texture2D::PIXEL_FORMAT_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCASSERT(eFormat != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(eFormat != Texture2D::PIXEL_FORMAT_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCASSERT(eFormat != Texture2D::PixelFormat::A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_pixelFormat == Texture2D::PIXEL_FORMAT_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == Texture2D::PixelFormat::RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::newImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_pixelFormat == Texture2D::PIXEL_FORMAT_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == Texture2D::PixelFormat::RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_pixelFormat == Texture2D::PIXEL_FORMAT_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == Texture2D::PixelFormat::RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(out, "");'), (6, 2, u'-    CCAssert(&*out, "");')]
===========================================
===========================================
Total add: 52
Total del: 10
Header: ZipUtils::ccInflateGZipFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(out, "");'), (6, 2, u'-    CCAssert(&*out, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(out, "");'), (6, 2, u'-    CCAssert(&*out, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Total add: 33
Total del: 29
Header: Texture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-    CCAssert(false, "wrong chanel! It\'s out of range(1 to 4).");')]
===========================================
===========================================
Total add: 15
Total del: 16
Header: rgba
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-    CCAssert(false, "wrong chanel! It\'s out of range(1 to 4).");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-    CCAssert(false, "wrong chanel! It\'s out of range(1 to 4).");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
Total add: 6
Total del: 41
Header: Texture2D::bitsPerPixelForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(format == kImageFormatJPEG || format == kImageFormatPNG,'), (7, 1, u'+    CCASSERT(format == Image::FORMAT_JPG || format == Image::FORMAT_PNG,')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: RenderTexture::saveToFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(format == kImageFormatJPEG || format == kImageFormatPNG,'), (7, 1, u'+    CCASSERT(format == Image::FORMAT_JPG || format == Image::FORMAT_PNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCASSERT(format == kImageFormatJPEG || format == kImageFormatPNG,'), (7, 1, u'+    CCASSERT(format == Image::FORMAT_JPG || format == Image::FORMAT_PNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == Menu::STATE_TRACKING_TOUCH, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCASSERT(eFormat != Texture2D::PIXEL_FORMAT_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: RenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCASSERT(eFormat != Texture2D::PIXEL_FORMAT_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCASSERT(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCASSERT(eFormat != Texture2D::PIXEL_FORMAT_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == Texture2D::PIXEL_FORMAT_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::newImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == Texture2D::PIXEL_FORMAT_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == Texture2D::PIXEL_FORMAT_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
Class: class Pluginx_SocialResult : public cocos2d::plugin::SocialListener { 
Class: class Pluginx_UserActionListener : public cocos2d::plugin::UserActionListener { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_GRAVITY, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT(_emitterMode == MODE_RADIUS, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+  assert(width > 0 && height > 0 && stride >= width);'), (55, 1, u'+  assert(data != NULL && output != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 1, u'+  assert(dec->thread_ctx_.filter_row_);'), (219, 1, u'+      assert(!(delta_y & 1));'), (268, 1, u'+    assert(worker->status_ == OK);'), (474, 1, u'+  assert((yuv_size & ALIGN_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+      assert(last_part >= 0);'), (138, 1, u'+  assert(mem->mode_ == MEM_MODE_APPEND);'), (162, 1, u'+  assert(mem->end_ <= mem->buf_size_);'), (172, 1, u'+  assert(mem->mode_ == MEM_MODE_MAP);'), (192, 1, u'+  assert(mem);'), (205, 1, u'+  assert(mem->mode_ == expected);   // mode is ok'), (258, 1, u'+  assert(mem->start_ <= mem->end_);'), (336, 1, u'+  assert(!idec->is_lossless_);'), (337, 1, u'+  assert(mem->part0_buf_ == NULL);'), (338, 1, u'+  assert(psize > 0);'), (339, 1, u'+  assert(psize <= mem->part0_size_);  // Format limit: no need for runtime check'), (409, 1, u'+  assert(dec->ready_);'), (435, 1, u'+        assert(idec->mem_.start_ <= idec->mem_.end_);'), (466, 1, u'+  assert(idec->is_lossless_);'), (489, 1, u'+  assert(idec->is_lossless_);'), (646, 1, u'+  assert(idec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(369, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (370, 1, u'+    assert(p->scaler_u.y_accum == p->scaler_v.y_accum);'), (398, 1, u'+    assert(u_lines_in == v_lines_in);'), (420, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (449, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (598, 1, u'+  assert(!(io->mb_y & 1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+  assert(dec);'), (25, 1, u'+  assert(dec->layer_data_size_ > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+  assert(hdr != NULL);'), (151, 1, u'+  assert(br != NULL);'), (152, 1, u'+  assert(hdr != NULL);'), (288, 1, u'+    assert(dec->alpha_data_size_ == 0);'), (300, 1, u"+  assert(headers.data_size >= headers.offset);  // WebPParseHeaders' guarantee"), (743, 1, u'+  assert(dec->ready_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 1, u'+  assert(node != NULL);'), (169, 1, u'+    assert(node != NULL);'), (340, 1, u'+  assert(num_htree_groups <= 0x10000);'), (393, 1, u'+  assert(dec->rescaler_memory == NULL);'), (577, 1, u'+  assert(y_start < y_end);'), (578, 1, u'+  assert(io->crop_left < io->crop_right);'), (609, 1, u'+  assert(meta_index < hdr->num_htree_groups_);'), (670, 1, u'+      assert(dec->last_out_row_ <= output->height);'), (676, 1, u'+  assert(dec->last_row_ <= dec->height_);'), (696, 1, u'+  assert(htree_group != NULL);'), (766, 1, u'+      assert(color_cache != NULL);'), (847, 1, u'+  assert(dec->next_transform_ <= NUM_TRANSFORMS);'), (874, 1, u"+      assert(0);    // can't happen"), (885, 1, u'+  assert(hdr);'), (890, 1, u'+  assert(hdr);'), (1031, 1, u'+      assert(data == NULL);'), (1032, 1, u'+      assert(is_level0);'), (1052, 1, u'+  assert(dec->width_ <= final_width);'), (1150, 1, u'+   assert(dec->status_ != VP8_STATUS_OK);'), (1162, 1, u'+  assert(io != NULL);'), (1164, 1, u'+  assert(params != NULL);'), (1166, 1, u'+  assert(dec->output_ != NULL);'), (1192, 1, u'+  assert(dec->status_ != VP8_STATUS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+  assert(data != NULL);'), (66, 1, u'+  assert(data_size != NULL);'), (67, 1, u'+  assert(riff_size != NULL);'), (104, 1, u'+  assert(data != NULL);'), (105, 1, u'+  assert(data_size != NULL);'), (106, 1, u'+  assert(found_vp8x != NULL);'), (161, 1, u'+  assert(data != NULL);'), (162, 1, u'+  assert(data_size != NULL);'), (166, 1, u'+  assert(alpha_data != NULL);'), (167, 1, u'+  assert(alpha_size != NULL);'), (232, 1, u'+  assert(data != NULL);'), (233, 1, u'+  assert(data_size != NULL);'), (234, 1, u'+  assert(chunk_size != NULL);'), (235, 1, u'+  assert(is_lossless != NULL);'), (366, 1, u'+    assert((uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD);'), (367, 1, u'+    assert(headers->offset == headers->data_size - data_size);'), (373, 1, u'+  assert(headers != NULL);'), (405, 1, u'+  assert(params != NULL);'), (610, 1, u'+    assert(buf->u_stride == buf->v_stride);'), (616, 1, u'+  assert(features != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(961, 1, u'+  assert(row_start < row_end);'), (962, 1, u'+  assert(row_end <= transform->ysize_);'), (1132, 1, u'+      assert(0);          // Code flow should not reach here.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 1, u'+  assert(len > 0);                                                             \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (115, 1, u'+  assert(filter >= 0 && filter < WEBP_FILTER_LAST);'), (116, 1, u'+  assert(method >= ALPHA_NO_COMPRESSION);'), (117, 1, u'+  assert(method <= ALPHA_LOSSLESS_COMPRESSION);'), (118, 1, u'+  assert(sizeof(header) == ALPHA_HEADER_LEN);'), (175, 1, u'+  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (176, 1, u'+  assert(enc != NULL && pic != NULL && pic->a != NULL);'), (177, 1, u'+  assert(output != NULL && output_size != NULL);'), (178, 1, u'+  assert(width > 0 && height > 0);'), (179, 1, u'+  assert(pic->a_stride >= width);'), (180, 1, u'+  assert(filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert((uint64_t)(w * h) == (uint64_t)w * h);   // no overflow, as per spec'), (135, 1, u'+  assert(mid <= max && mid >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 1, u'+  assert(refs != NULL);'), (161, 1, u'+  assert(xsize > 0);'), (583, 1, u'+    assert(k >= 1);'), (596, 1, u'+    assert(k >= 1);'), (635, 1, u'+      assert(len == maxlen);'), (664, 1, u'+  assert(size <= refs->max_size);'), (836, 1, u'+  assert(pixel_index == xsize * ysize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 1, u'+  assert(nb <= total);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(230, 1, u'+  assert(histo_bits > 0);'), (266, 1, u'+  assert(in->size <= out->size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 1, u'+  assert(src != NULL && dst != NULL);'), (657, 1, u'+    assert(step >= 4);'), (704, 1, u'+    assert(step >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(251, 1, u'+    assert(expn > 0.);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+  assert(riff_size == (uint32_t)riff_size);'), (71, 1, u'+  assert(IsVP8XNeeded(enc));'), (72, 1, u'+  assert(pic->width >= 1 && pic->height >= 1);'), (73, 1, u'+  assert(pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE);'), (95, 1, u'+  assert(enc->has_alpha_);'), (120, 1, u'+  assert(vp8_size == (uint32_t)vp8_size);'), (292, 1, u'+    assert(enc->use_layer_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(145, 1, u'+  assert(pic != NULL && pic->argb != NULL);'), (358, 1, u'+      assert(trimmed_length >= 2);'), (483, 1, u'+  assert(histogram_image->size == 1);'), (530, 1, u'+  assert(histogram_bits >= MIN_HUFFMAN_BITS);'), (531, 1, u'+  assert(histogram_bits <= MAX_HUFFMAN_BITS);'), (682, 1, u'+  assert(pred_bits >= 2);'), (703, 1, u'+  assert(ccolor_transform_bits >= 2);'), (739, 1, u'+  assert(width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION);'), (873, 1, u'+  assert(palette_size >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(314, 1, u'+  assert((int)error < VP8_ENC_ERROR_LAST);'), (315, 1, u'+  assert((int)error >= VP8_ENC_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  assert(mux != NULL);'), (79, 1, u'+  assert(!IsWPI(kChunks[idx].id));'), (103, 1, u'+  assert(mux != NULL);'), (104, 1, u'+  assert(size <= MAX_CHUNK_PAYLOAD);'), (105, 1, u'+  assert(idx != IDX_NIL);'), (125, 1, u'+  assert(width > 0 && height > 0 && duration > 0);'), (162, 1, u'+    assert(wpi != NULL && wpi->img_ != NULL);'), (175, 1, u'+  assert(chunk_list);'), (444, 1, u'+  assert(idx == IDX_FRAME || idx == IDX_TILE);'), (467, 1, u'+  assert(frame_tile_chunk != NULL);'), (468, 1, u'+  assert(tag == kChunks[IDX_FRAME].tag || tag ==  kChunks[IDX_TILE].tag);'), (483, 1, u'+  assert(image_chunk != NULL);'), (484, 1, u'+  assert(tag == kChunks[IDX_VP8].tag || tag ==  kChunks[IDX_VP8L].tag);'), (517, 1, u'+  assert(mux != NULL);'), (518, 1, u'+  assert(width != NULL && height != NULL);'), (521, 1, u'+  assert(wpi != NULL);'), (522, 1, u'+  assert(wpi->img_ != NULL);'), (536, 1, u'+      assert(x_offset < MAX_POSITION_OFFSET);'), (537, 1, u'+      assert(y_offset < MAX_POSITION_OFFSET);'), (580, 1, u'+  assert(mux != NULL);'), (691, 1, u'+  assert(dst == data + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+  assert(chunk);'), (106, 1, u'+  assert(chunk_list);'), (193, 1, u'+  assert(chunk);'), (194, 1, u'+  assert(chunk->tag_ != NIL_TAG);'), (197, 1, u'+  assert(chunk_size == (uint32_t)chunk_size);'), (245, 1, u'+  assert(wpi);'), (284, 1, u'+  assert(wpi_list);'), (288, 1, u'+  assert(id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE ||'), (290, 1, u'+  assert(id != WEBP_CHUNK_IMAGE || nth == 1);'), (356, 1, u'+  assert(wpi_list);'), (369, 1, u'+  assert(wpi_list);'), (370, 1, u'+  assert(wpi);'), (405, 1, u'+  assert(wpi);'), (425, 1, u'+    assert(images->img_ != NULL);'), (437, 1, u'+  assert(size == (uint32_t)size);'), (443, 1, u'+  assert(mux != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+  assert(mux != NULL);'), (39, 1, u'+  assert(!IsWPI(kChunks[idx].id));'), (149, 1, u'+      assert(wpi_chunk_ptr != NULL);'), (221, 1, u'+  assert(width >= 1 && height >= 1);'), (222, 1, u'+  assert(width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE);'), (223, 1, u'+  assert(width * (uint64_t)height < MAX_IMAGE_AREA);'), (253, 1, u'+    assert(wpi->img_ != NULL);'), (265, 1, u'+  assert(dst == data + size);'), (287, 1, u'+  assert(err == WEBP_MUX_OK);  // Already tested above.'), (339, 1, u'+  assert(wpi->header_ != NULL);  // As MuxImageGetNth() already checked header_.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert(br != NULL);'), (26, 1, u'+  assert(start != NULL);'), (27, 1, u'+  assert(start <= end);'), (71, 1, u'+  assert(br != NULL && br->buf_ != NULL);'), (111, 1, u'+  assert(br != NULL);'), (112, 1, u'+  assert(start != NULL);'), (113, 1, u"+  assert(length < 0xfffffff8u);   // can't happen with a RIFF chunk."), (130, 1, u'+  assert(br != NULL);'), (131, 1, u'+  assert(buf != NULL);'), (132, 1, u"+  assert(len < 0xfffffff8u);   // can't happen with a RIFF chunk."), (191, 1, u'+  assert(n_bits >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+  assert(bw->nb_bits_ >= 0);'), (178, 1, u'+  assert(data);'), (265, 1, u'+    assert(n_bits <= 25);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+  assert(cc != NULL);'), (27, 1, u'+  assert(hash_bits > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert(in != NULL);                                       \\'), (26, 1, u'+  assert(out != NULL);                                      \\'), (27, 1, u'+  assert(width > 0);                                        \\'), (28, 1, u'+  assert(height > 0);                                       \\'), (29, 1, u'+  assert(bpp > 0);                                          \\'), (30, 1, u'+  assert(stride >= width * bpp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert(children - node == (int)(children - node));'), (47, 1, u'+  assert(tree != NULL);'), (79, 1, u'+  assert(code_lengths != NULL);'), (80, 1, u'+  assert(code_lengths_size > 0);'), (81, 1, u'+  assert(huff_codes != NULL);'), (150, 1, u'+  assert(tree != NULL);'), (151, 1, u'+  assert(code_lengths != NULL);'), (210, 1, u'+  assert(tree != NULL);'), (211, 1, u'+  assert(code_lengths != NULL);'), (212, 1, u'+  assert(codes != NULL);'), (213, 1, u'+  assert(symbols != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 1, u'+  assert(tree_size_orig <= (1 << (tree_depth_limit - 1)));'), (284, 1, u'+  assert(value <= MAX_ALLOWED_CODE_LENGTH);'), (353, 1, u'+  assert(tokens != NULL);'), (367, 1, u'+    assert(tokens <= ending_token);'), (401, 1, u'+  assert(tree != NULL);'), (405, 1, u'+    assert(code_length <= MAX_ALLOWED_CODE_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+  assert(inv_q_level[0] == min_s);'), (74, 1, u'+  assert(inv_q_level[num_levels - 1] == max_s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 1, u'+  assert(worker->status_ <= OK);'), (216, 1, u'+  assert(!ok || (worker->status_ == OK));'), (240, 1, u'+  assert(worker->status_ == NOT_OK);')]
===========================================
Class: class CocosQt5AudioBackend { class CocosQt5AudioBackend 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (3, 1, u'+    CCASSERT(_emitter->isOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PremultipliedAlphaTest::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (3, 1, u'+    CCASSERT(_emitter->isOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCASSERT(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (3, 1, u'+    CCASSERT(_emitter->isOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *Configuration::getCString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Configuration::getBool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Configuration::getNumber
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, but from different type");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict, "cannot create dictionary");'), (3, 1, u'+\tCCASSERT(dict, "cannot create dictionary");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Configuration::loadConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict, "cannot create dictionary");'), (3, 1, u'+\tCCASSERT(dict, "cannot create dictionary");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict, "cannot create dictionary");'), (3, 1, u'+\tCCASSERT(dict, "cannot create dictionary");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Invalid projection value");'), (3, 1, u'+\t\tCCASSERT(false, "Invalid projection value");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::setDefaultValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Invalid projection value");'), (3, 1, u'+\t\tCCASSERT(false, "Invalid projection value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Invalid projection value");'), (3, 1, u'+\t\tCCASSERT(false, "Invalid projection value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_openGLView, "opengl view should not be null");'), (3, 1, u'+    CCASSERT(_openGLView, "opengl view should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::setGLDefaultValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_openGLView, "opengl view should not be null");'), (3, 1, u'+    CCASSERT(_openGLView, "opengl view should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_openGLView, "opengl view should not be null");'), (3, 1, u'+    CCASSERT(_openGLView, "opengl view should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pobOpenGLView, "opengl view should not be null");'), (3, 1, u'+    CCASSERT(pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::setOpenGLView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pobOpenGLView, "opengl view should not be null");'), (3, 1, u'+    CCASSERT(pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pobOpenGLView, "opengl view should not be null");'), (3, 1, u'+    CCASSERT(pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (3, 2, u'-    CCAssert(_runningScene == NULL, "_runningScene should be null");'), (4, 1, u'+    CCASSERT(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (5, 1, u'+    CCASSERT(_runningScene == NULL, "_runningScene should be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Director::runWithScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (3, 2, u'-    CCAssert(_runningScene == NULL, "_runningScene should be null");'), (4, 1, u'+    CCASSERT(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (5, 1, u'+    CCASSERT(_runningScene == NULL, "_runningScene should be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (3, 2, u'-    CCAssert(_runningScene == NULL, "_runningScene should be null");'), (4, 1, u'+    CCASSERT(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");'), (5, 1, u'+    CCASSERT(_runningScene == NULL, "_runningScene should be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene, "Use runWithScene: instead to start the director");'), (3, 2, u'-    CCAssert(pScene != NULL, "the scene should not be null");'), (4, 1, u'+    CCASSERT(_runningScene, "Use runWithScene: instead to start the director");'), (5, 1, u'+    CCASSERT(pScene != NULL, "the scene should not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Director::replaceScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene, "Use runWithScene: instead to start the director");'), (3, 2, u'-    CCAssert(pScene != NULL, "the scene should not be null");'), (4, 1, u'+    CCASSERT(_runningScene, "Use runWithScene: instead to start the director");'), (5, 1, u'+    CCASSERT(pScene != NULL, "the scene should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene, "Use runWithScene: instead to start the director");'), (3, 2, u'-    CCAssert(pScene != NULL, "the scene should not be null");'), (4, 1, u'+    CCASSERT(_runningScene, "Use runWithScene: instead to start the director");'), (5, 1, u'+    CCASSERT(pScene != NULL, "the scene should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene, "the scene should not null");'), (3, 1, u'+    CCASSERT(pScene, "the scene should not null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::pushScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene, "the scene should not null");'), (3, 1, u'+    CCASSERT(pScene, "the scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene, "the scene should not null");'), (3, 1, u'+    CCASSERT(pScene, "the scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCASSERT(_runningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::popScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCASSERT(_runningScene != NULL, "running scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCASSERT(_runningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene != NULL, "A running Scene is needed");'), (3, 1, u'+    CCASSERT(_runningScene != NULL, "A running Scene is needed");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Director::popToSceneStackLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene != NULL, "A running Scene is needed");'), (3, 1, u'+    CCASSERT(_runningScene != NULL, "A running Scene is needed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_runningScene != NULL, "A running Scene is needed");'), (3, 1, u'+    CCASSERT(_runningScene != NULL, "A running Scene is needed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCAssert(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCAssert(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCAssert(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(element->paused == paused, "");'), (3, 1, u'+        CCASSERT(element->paused == paused, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(element->paused == paused, "");'), (3, 1, u'+        CCASSERT(element->paused == paused, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(element->paused == paused, "");'), (3, 1, u'+        CCASSERT(element->paused == paused, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pHashElement->entry->markedForDeletion,"");'), (3, 1, u'+        CCASSERT(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pHashElement->entry->markedForDeletion,"");'), (3, 1, u'+        CCASSERT(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pHashElement->entry->markedForDeletion,"");'), (3, 1, u'+        CCASSERT(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCAssert(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scheduler::isScheduledForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCAssert(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(selector, "Argument selector must be non-NULL");'), (3, 2, u'-    CCAssert(target, "Argument target must be non-NULL");'), (4, 1, u'+    CCASSERT(selector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCASSERT(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(target != NULL, "");'), (3, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(elementUpdate->entry != NULL, "");'), (3, 1, u'+        CCASSERT(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( target != NULL, "target must be non nil" );'), (3, 1, u'+    CCASSERT( target != NULL, "target must be non nil" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scheduler::isTargetPaused
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( target != NULL, "target must be non nil" );'), (3, 1, u'+    CCASSERT( target != NULL, "target must be non nil" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( target != NULL, "target must be non nil" );'), (3, 1, u'+    CCASSERT( target != NULL, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Speed::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pFollowedNode != NULL, "");'), (3, 1, u'+    CCASSERT(pFollowedNode != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Follow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pFollowedNode != NULL, "");'), (3, 1, u'+    CCASSERT(pFollowedNode != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pFollowedNode != NULL, "");'), (3, 1, u'+    CCASSERT(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(controlPoints != NULL, "control points should not be NULL");'), (3, 1, u'+    CCASSERT(controlPoints != NULL, "control points should not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PointArray::setControlPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(controlPoints != NULL, "control points should not be NULL");'), (3, 1, u'+    CCASSERT(controlPoints != NULL, "control points should not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(controlPoints != NULL, "control points should not be NULL");'), (3, 1, u'+    CCASSERT(controlPoints != NULL, "control points should not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(points->count() > 0, "Invalid configuration. It must at least have one control point");'), (3, 1, u'+    CCASSERT(points->count() > 0, "Invalid configuration. It must at least have one control point");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CardinalSplineTo::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(points->count() > 0, "Invalid configuration. It must at least have one control point");'), (3, 1, u'+    CCASSERT(points->count() > 0, "Invalid configuration. It must at least have one control point");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(points->count() > 0, "Invalid configuration. It must at least have one control point");'), (3, 1, u'+    CCASSERT(points->count() > 0, "Invalid configuration. It must at least have one control point");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ActionEase::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(0, "");'), (3, 1, u'+            CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GridAction::startWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(0, "");'), (3, 1, u'+            CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(0, "");'), (3, 1, u'+            CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GridAction::getGrid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Grid size must be (1,1)");'), (3, 1, u'+        CCASSERT(0, "Grid size must be (1,1)");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FlipX3D::initWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Grid size must be (1,1)");'), (3, 1, u'+        CCASSERT(0, "Grid size must be (1,1)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Grid size must be (1,1)");'), (3, 1, u'+        CCASSERT(0, "Grid size must be (1,1)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ActionInterval::setAmplitudeRate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ActionInterval::getAmplitudeRate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pActionOne != NULL, "");'), (3, 2, u'-    CCAssert(pActionTwo != NULL, "");'), (4, 1, u'+    CCASSERT(pActionOne != NULL, "");'), (5, 1, u'+    CCASSERT(pActionTwo != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sequence::initWithTwoActions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pActionOne != NULL, "");'), (3, 2, u'-    CCAssert(pActionTwo != NULL, "");'), (4, 1, u'+    CCASSERT(pActionOne != NULL, "");'), (5, 1, u'+    CCASSERT(pActionTwo != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pActionOne != NULL, "");'), (3, 2, u'-    CCAssert(pActionTwo != NULL, "");'), (4, 1, u'+    CCASSERT(pActionOne != NULL, "");'), (5, 1, u'+    CCASSERT(pActionTwo != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RepeatForever::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 1, u'+    CCASSERT(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction1 != NULL, "");'), (3, 2, u'-    CCAssert(pAction2 != NULL, "");'), (4, 1, u'+    CCASSERT(pAction1 != NULL, "");'), (5, 1, u'+    CCASSERT(pAction2 != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: initWithTwoActions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction1 != NULL, "");'), (3, 2, u'-    CCAssert(pAction2 != NULL, "");'), (4, 1, u'+    CCASSERT(pAction1 != NULL, "");'), (5, 1, u'+    CCASSERT(pAction2 != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction1 != NULL, "");'), (3, 2, u'-    CCAssert(pAction2 != NULL, "");'), (4, 1, u'+    CCASSERT(pAction1 != NULL, "");'), (5, 1, u'+    CCASSERT(pAction2 != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "RotateTo doesn\'t support the \'reverse\' method");'), (3, 1, u'+\tCCASSERT(false, "RotateTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *RotateTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "RotateTo doesn\'t support the \'reverse\' method");'), (3, 1, u'+\tCCASSERT(false, "RotateTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "RotateTo doesn\'t support the \'reverse\' method");'), (3, 1, u'+\tCCASSERT(false, "RotateTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in SkewTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in SkewTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SkewTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in SkewTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in SkewTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in SkewTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in SkewTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(jumps>=0, "Number of jumps must be >= 0");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: JumpBy::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(jumps>=0, "Number of jumps must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(jumps>=0, "Number of jumps must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in JumpTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in JumpTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JumpTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in JumpTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in JumpTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in JumpTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in JumpTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCBezierTo doesn\'t support the \'reverse\' method");'), (3, 1, u'+\tCCASSERT(false, "CCBezierTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: BezierTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCBezierTo doesn\'t support the \'reverse\' method");'), (3, 1, u'+\tCCASSERT(false, "CCBezierTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCBezierTo doesn\'t support the \'reverse\' method");'), (3, 1, u'+\tCCASSERT(false, "CCBezierTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in ScaleTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in ScaleTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ScaleTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in ScaleTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in ScaleTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in ScaleTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in ScaleTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(blinks>=0, "blinks should be >= 0");')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: Blink::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(blinks>=0, "blinks should be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(blinks>=0, "blinks should be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in FadeTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in FadeTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FadeTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in FadeTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in FadeTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in FadeTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in FadeTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in TintTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in TintTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TintTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in TintTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in TintTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in TintTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in TintTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 2, u'-    CCAssert(pAction != _other, "");'), (4, 1, u'+    CCASSERT(pAction != NULL, "");'), (5, 1, u'+    CCASSERT(pAction != _other, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ReverseTime::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 2, u'-    CCAssert(pAction != _other, "");'), (4, 1, u'+    CCASSERT(pAction != NULL, "");'), (5, 1, u'+    CCASSERT(pAction != _other, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 2, u'-    CCAssert(pAction != _other, "");'), (4, 1, u'+    CCASSERT(pAction != NULL, "");'), (5, 1, u'+    CCASSERT(pAction != _other, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");'), (3, 1, u'+    CCASSERT( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Animate::initWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");'), (3, 1, u'+    CCASSERT( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");'), (3, 1, u'+    CCASSERT( pAnimation!=NULL, "Animate: argument Animation must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 2, u'-    CCAssert(target != NULL, "");'), (4, 1, u'+    CCASSERT(pAction != NULL, "");'), (5, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 2, u'-    CCAssert(target != NULL, "");'), (4, 1, u'+    CCASSERT(pAction != NULL, "");'), (5, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != NULL, "");'), (3, 2, u'-    CCAssert(target != NULL, "");'), (4, 1, u'+    CCASSERT(pAction != NULL, "");'), (5, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-     CCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (3, 1, u'+     CCASSERT(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-     CCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (3, 1, u'+     CCASSERT(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-     CCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (3, 1, u'+     CCASSERT(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((int)tag != kActionTagInvalid, "");'), (3, 2, u'-    CCAssert(target != NULL, "");'), (4, 1, u'+    CCASSERT((int)tag != kActionTagInvalid, "");'), (5, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((int)tag != kActionTagInvalid, "");'), (3, 2, u'-    CCAssert(target != NULL, "");'), (4, 1, u'+    CCASSERT((int)tag != kActionTagInvalid, "");'), (5, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((int)tag != kActionTagInvalid, "");'), (3, 2, u'-    CCAssert(target != NULL, "");'), (4, 1, u'+    CCASSERT((int)tag != kActionTagInvalid, "");'), (5, 1, u'+    CCASSERT(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((int)tag != kActionTagInvalid, "");'), (3, 1, u'+    CCASSERT((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ActionManager::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((int)tag != kActionTagInvalid, "");'), (3, 1, u'+    CCASSERT((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((int)tag != kActionTagInvalid, "");'), (3, 1, u'+    CCASSERT((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in ProgressTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in ProgressTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ProgressTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in ProgressTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in ProgressTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() not supported in ProgressTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() not supported in ProgressTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");'), (3, 1, u'+    CCASSERT(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ActionTween::startWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");'), (3, 1, u'+    CCASSERT(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");'), (3, 1, u'+    CCASSERT(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(tile != NULL, "title should not be null");'), (3, 1, u'+    CCASSERT(tile != NULL, "title should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AtlasNode::initWithTileFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(tile != NULL, "title should not be null");'), (3, 1, u'+    CCASSERT(tile != NULL, "title should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(tile != NULL, "title should not be null");'), (3, 1, u'+    CCASSERT(tile != NULL, "title should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");'), (3, 1, u'+    CCASSERT(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AtlasNode::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");'), (3, 1, u'+    CCASSERT(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");'), (3, 1, u'+    CCASSERT(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");'), (3, 1, u'+    CCASSERT(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::getRotation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");'), (3, 1, u'+    CCASSERT(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");'), (3, 1, u'+    CCASSERT(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (3, 1, u'+    CCASSERT( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::getScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (3, 1, u'+    CCASSERT( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (3, 1, u'+    CCASSERT( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(orderOfArrival >=0, "Invalid orderOfArrival");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: Node::getOrderOfArrival
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(orderOfArrival >=0, "Invalid orderOfArrival");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(orderOfArrival >=0, "Invalid orderOfArrival");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( aTag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( aTag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( aTag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( aTag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( aTag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( aTag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( child->_parent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->_parent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Node::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( child->_parent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->_parent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( child->_parent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->_parent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::removeChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Child must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Child must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Child must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( action != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::runAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( action != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( action != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Node::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( tag != kActionTagInvalid, "Invalid tag");'), (3, 1, u'+    CCASSERT( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCASSERT( selector, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Node::schedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCASSERT( selector, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( interval >=0, "Argument must be positive");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCASSERT( selector, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index < data->num, "index out of range in objectAtIndex()");'), (3, 1, u'+    CCASSERT(index < data->num, "index out of range in objectAtIndex()");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Array::objectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index < data->num, "index out of range in objectAtIndex()");'), (3, 1, u'+    CCASSERT(index < data->num, "index out of range in objectAtIndex()");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index < data->num, "index out of range in objectAtIndex()");'), (3, 1, u'+    CCASSERT(index < data->num, "index out of range in objectAtIndex()");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(data->num, "no objects added");'), (3, 1, u'+    CCASSERT(data->num, "no objects added");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Array::removeLastObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(data->num, "no objects added");'), (3, 1, u'+    CCASSERT(data->num, "no objects added");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(data->num, "no objects added");'), (3, 1, u'+    CCASSERT(data->num, "no objects added");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject->_reference > 1, "reference count should be greater than 1");'), (3, 1, u'+    CCASSERT(pObject->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: AutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject->_reference > 1, "reference count should be greater than 1");'), (3, 1, u'+    CCASSERT(pObject->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject->_reference > 1, "reference count should be greater than 1");'), (3, 1, u'+    CCASSERT(pObject->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_curReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCASSERT(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PoolManager::removeObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_curReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCASSERT(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_curReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCASSERT(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_curReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCASSERT(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PoolManager::getCurReleasePool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_curReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCASSERT(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_curReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCASSERT(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszKey && strlen(pszKey) > 0, "Invalid key value.");'), (3, 1, u'+    CCASSERT(pszKey && strlen(pszKey) > 0, "Invalid key value.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DictElement::DictElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszKey && strlen(pszKey) > 0, "Invalid key value.");'), (3, 1, u'+    CCASSERT(pszKey && strlen(pszKey) > 0, "Invalid key value.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszKey && strlen(pszKey) > 0, "Invalid key value.");'), (3, 1, u'+    CCASSERT(pszKey && strlen(pszKey) > 0, "Invalid key value.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary does not use string as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::objectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary does not use string as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary does not use string as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary does not use integer as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::objectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary does not use integer as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary does not use integer as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key.length() > 0 && pObject != NULL, "Invalid Argument!");'), (3, 1, u'+    CCASSERT(key.length() > 0 && pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key.length() > 0 && pObject != NULL, "Invalid Argument!");'), (3, 1, u'+    CCASSERT(key.length() > 0 && pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key.length() > 0 && pObject != NULL, "Invalid Argument!");'), (3, 1, u'+    CCASSERT(key.length() > 0 && pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject != NULL, "Invalid Argument!");'), (3, 1, u'+    CCASSERT(pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject != NULL, "Invalid Argument!");'), (3, 1, u'+    CCASSERT(pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject != NULL, "Invalid Argument!");'), (3, 1, u'+    CCASSERT(pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");'), (3, 2, u'-    CCAssert(key.length() > 0, "Invalid Argument!");'), (4, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");'), (5, 1, u'+    CCASSERT(key.length() > 0, "Invalid Argument!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Dictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");'), (3, 2, u'-    CCAssert(key.length() > 0, "Invalid Argument!");'), (4, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");'), (5, 1, u'+    CCASSERT(key.length() > 0, "Invalid Argument!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");'), (3, 2, u'-    CCAssert(key.length() > 0, "Invalid Argument!");'), (4, 1, u'+    CCASSERT(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");'), (5, 1, u'+    CCASSERT(key.length() > 0, "Invalid Argument!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Dictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");'), (3, 1, u'+    CCASSERT(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "CCPoint division by 0.");'), (3, 1, u'+\tCCASSERT(a!=0, "CCPoint division by 0.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Point::operator/
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "CCPoint division by 0.");'), (3, 1, u'+\tCCASSERT(a!=0, "CCPoint division by 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "CCPoint division by 0.");'), (3, 1, u'+\tCCASSERT(a!=0, "CCPoint division by 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "CCSize division by 0.");'), (3, 1, u'+\tCCASSERT(a!=0, "CCSize division by 0.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Size::operator/
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "CCSize division by 0.");'), (3, 1, u'+\tCCASSERT(a!=0, "CCSize division by 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "CCSize division by 0.");'), (3, 1, u'+\tCCASSERT(a!=0, "CCSize division by 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_reference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCASSERT(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: Object::release
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_reference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCASSERT(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_reference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCASSERT(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_reference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCASSERT(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Object::retain
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_reference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCASSERT(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_reference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCASSERT(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(count>=0, "capacity must be >= 0");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: DrawNode::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(count>=0, "capacity must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(count>=0, "capacity must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Frame Grabber: could not attach texture to framebuffer");'), (3, 1, u'+        CCASSERT(0, "Frame Grabber: could not attach texture to framebuffer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Grabber::grab
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Frame Grabber: could not attach texture to framebuffer");'), (3, 1, u'+        CCASSERT(0, "Frame Grabber: could not attach texture to framebuffer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Frame Grabber: could not attach texture to framebuffer");'), (3, 1, u'+        CCASSERT(0, "Frame Grabber: could not attach texture to framebuffer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GridBase::blit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GridBase::reuse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GridBase::calculateVertexPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Grid3D::getVertex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Grid3D::getOriginalVertex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Grid3D::setVertex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TiledGrid3D::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TiledGrid3D::getOriginalTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TiledGrid3D::getTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");'), (3, 1, u'+    CCASSERT( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: KeypadHandler::initWithDelegate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(string != NULL, "");'), (3, 1, u'+    CCASSERT(string != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(string != NULL, "");'), (3, 1, u'+    CCASSERT(string != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(string != NULL, "");'), (3, 1, u'+    CCASSERT(string != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  CCAssert(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (3, 1, u'+  CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  CCAssert(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (3, 1, u'+  CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  CCAssert(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (3, 1, u'+  CCASSERT(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LabelAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (3, 1, u'+    CCASSERT( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+    CCASSERT(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+    CCASSERT(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+    CCASSERT(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseImageFileName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (3, 1, u'+    CCASSERT(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_configuration, "re-init is no longer supported");'), (3, 2, u'-    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");'), (4, 1, u'+    CCASSERT(!_configuration, "re-init is no longer supported");'), (5, 1, u'+    CCASSERT( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: LabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_configuration, "re-init is no longer supported");'), (3, 2, u'-    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");'), (4, 1, u'+    CCASSERT(!_configuration, "re-init is no longer supported");'), (5, 1, u'+    CCASSERT( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_configuration, "re-init is no longer supported");'), (3, 2, u'-    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");'), (4, 1, u'+    CCASSERT(!_configuration, "re-init is no longer supported");'), (5, 1, u'+    CCASSERT( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( newConf, "CCLabelBMFont: Impossible to create font. Please check file");'), (3, 1, u'+        CCASSERT( newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LabelBMFont::setFntFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( newConf, "CCLabelBMFont: Impossible to create font. Please check file");'), (3, 1, u'+        CCASSERT( newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( newConf, "CCLabelBMFont: Impossible to create font. Please check file");'), (3, 1, u'+        CCASSERT( newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(string != NULL, "Invalid string");'), (3, 1, u'+    CCASSERT(string != NULL, "Invalid string");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LabelTTF::setString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(string != NULL, "Invalid string");'), (3, 1, u'+    CCASSERT(string != NULL, "Invalid string");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(string != NULL, "Invalid string");'), (3, 1, u'+    CCASSERT(string != NULL, "Invalid string");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Layer#ccTouchBegan override me");'), (3, 1, u'+    CCASSERT(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Layer::ccTouchBegan
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Layer#ccTouchBegan override me");'), (3, 1, u'+    CCASSERT(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Layer#ccTouchBegan override me");'), (3, 1, u'+    CCASSERT(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_layers, "");'), (3, 1, u'+    CCASSERT(_layers, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LayerMultiplex::addLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_layers, "");'), (3, 1, u'+    CCASSERT(_layers, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_layers, "");'), (3, 1, u'+    CCASSERT(_layers, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LayerMultiplex::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: LayerMultiplex::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCASSERT( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCASSERT( scene != NULL, "Argument scene must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCASSERT( scene != NULL, "Argument scene must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCASSERT( scene != NULL, "Argument scene must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );'), (3, 1, u'+        CCASSERT( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );'), (3, 1, u'+        CCASSERT( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );'), (3, 1, u'+        CCASSERT( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "override me - abstract class");'), (3, 1, u'+    CCASSERT(false, "override me - abstract class");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TransitionProgress::progressTimerNodeWithRenderTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "override me - abstract class");'), (3, 1, u'+    CCASSERT(false, "override me - abstract class");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "override me - abstract class");'), (3, 1, u'+    CCASSERT(false, "override me - abstract class");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pMenuItem != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT(pMenuItem != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pMenuItem != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT(pMenuItem != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pMenuItem != NULL, "Menu only supports MenuItem objects as children");'), (3, 1, u'+    CCASSERT(pMenuItem != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCASSERT(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(columns >= 0, "Columns must be >= 0");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: Menu::alignItemsInColumns
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(columns >= 0, "Columns must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(columns >= 0, "Columns must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(row < rows.size(), "");'), (3, 1, u'+                CCASSERT(row < rows.size(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::alignItemsInColumnsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(row < rows.size(), "");'), (3, 1, u'+                CCASSERT(row < rows.size(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(row < rows.size(), "");'), (3, 1, u'+                CCASSERT(row < rows.size(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(rowColumns, "");'), (3, 1, u'+                CCASSERT(rowColumns, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::alignItemsInColumnsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(rowColumns, "");'), (3, 1, u'+                CCASSERT(rowColumns, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(rowColumns, "");'), (3, 1, u'+                CCASSERT(rowColumns, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! columnsOccupied, "");'), (3, 1, u'+    CCASSERT(! columnsOccupied, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::alignItemsInColumnsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! columnsOccupied, "");'), (3, 1, u'+    CCASSERT(! columnsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! columnsOccupied, "");'), (3, 1, u'+    CCASSERT(! columnsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(column < columns.size(), "");'), (3, 1, u'+                CCASSERT(column < columns.size(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::alignItemsInRowsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(column < columns.size(), "");'), (3, 1, u'+                CCASSERT(column < columns.size(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(column < columns.size(), "");'), (3, 1, u'+                CCASSERT(column < columns.size(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(columnRows, "");'), (3, 1, u'+                CCASSERT(columnRows, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::alignItemsInRowsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(columnRows, "");'), (3, 1, u'+                CCASSERT(columnRows, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(columnRows, "");'), (3, 1, u'+                CCASSERT(columnRows, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! rowsOccupied, "");'), (3, 1, u'+    CCASSERT(! rowsOccupied, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Menu::alignItemsInRowsWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! rowsOccupied, "");'), (3, 1, u'+    CCASSERT(! rowsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! rowsOccupied, "");'), (3, 1, u'+    CCASSERT(! rowsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MenuItemAtlasFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MenuItemAtlasFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MenuItemFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MenuItemFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+    CCASSERT( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "Invalid filename");'), (3, 1, u'+    CCASSERT(path != NULL, "Invalid filename");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MotionStreak::initWithFade
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "Invalid filename");'), (3, 1, u'+    CCASSERT(path != NULL, "Invalid filename");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "Invalid filename");'), (3, 1, u'+    CCASSERT(path != NULL, "Invalid filename");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Set opacity no supported");'), (3, 1, u'+    CCASSERT(false, "Set opacity no supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MotionStreak::setOpacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Set opacity no supported");'), (3, 1, u'+    CCASSERT(false, "Set opacity no supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Set opacity no supported");'), (3, 1, u'+    CCASSERT(false, "Set opacity no supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Opacity no supported");'), (3, 1, u'+    CCASSERT(false, "Opacity no supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: MotionStreak::getOpacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Opacity no supported");'), (3, 1, u'+    CCASSERT(false, "Opacity no supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Opacity no supported");'), (3, 1, u'+    CCASSERT(false, "Opacity no supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+        CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ProgressTimer::updateRadial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+        CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+        CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+            CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ProgressTimer::updateBar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+            CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+            CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+            CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ProgressTimer::updateBar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+            CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (3, 1, u'+            CCASSERT( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCASSERT(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCASSERT(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCASSERT(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");'), (3, 1, u'+        CCASSERT(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");'), (3, 1, u'+        CCASSERT(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");'), (3, 1, u'+        CCASSERT(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format == kImageFormatJPEG || format == kImageFormatPNG,'), (3, 1, u'+    CCASSERT(format == kImageFormatJPEG || format == kImageFormatPNG,')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::saveToFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format == kImageFormatJPEG || format == kImageFormatPNG,'), (3, 1, u'+    CCASSERT(format == kImageFormatJPEG || format == kImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format == kImageFormatJPEG || format == kImageFormatPNG,'), (3, 1, u'+    CCASSERT(format == kImageFormatJPEG || format == kImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: RenderTexture::newImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCASSERT(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 2, u'-    CCAssert( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (8, 1, u'+    CCASSERT( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 2, u'-    CCAssert( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (8, 1, u'+    CCASSERT( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 2, u'-    CCAssert( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (8, 1, u'+    CCASSERT( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCASSERT( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCASSERT( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCASSERT( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->getParent() == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleBatchNode::addChildHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->getParent() == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( child->getParent() == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Child must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 2, u'-    CCAssert( _children->containsObject(child), "Child doesn\'t belong to batch" );'), (5, 1, u'+    CCASSERT( child != NULL, "Child must be non-NULL");'), (6, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 1, u'+    CCASSERT( _children->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Child must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 2, u'-    CCAssert( _children->containsObject(child), "Child doesn\'t belong to batch" );'), (5, 1, u'+    CCASSERT( child != NULL, "Child must be non-NULL");'), (6, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 1, u'+    CCASSERT( _children->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Child must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (4, 2, u'-    CCAssert( _children->containsObject(child), "Child doesn\'t belong to batch" );'), (5, 1, u'+    CCASSERT( child != NULL, "Child must be non-NULL");'), (6, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (7, 1, u'+    CCASSERT( _children->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (3, 2, u'-    CCAssert(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (4, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (5, 1, u'+    CCASSERT(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (3, 2, u'-    CCAssert(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (4, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (5, 1, u'+    CCASSERT(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (3, 2, u'-    CCAssert(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (4, 1, u'+    CCASSERT( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");'), (5, 1, u'+    CCASSERT(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (3, 1, u'+        CCASSERT(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleBatchNode::increaseAtlasCapacityTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (3, 1, u'+        CCASSERT(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (3, 1, u'+        CCASSERT(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dict != NULL, "Particles: file not found");'), (3, 1, u'+    CCASSERT( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dict != NULL, "Particles: file not found");'), (3, 1, u'+    CCASSERT( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dict != NULL, "Particles: file not found");'), (3, 1, u'+    CCASSERT( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( false, "Invalid emitterType in config file");'), (3, 1, u'+                CCASSERT( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( false, "Invalid emitterType in config file");'), (3, 1, u'+                CCASSERT( false, "Invalid emitterType in config file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( false, "Invalid emitterType in config file");'), (3, 1, u'+                CCASSERT( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(textureData, "");'), (3, 1, u'+                    CCASSERT(textureData, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(textureData, "");'), (3, 1, u'+                    CCASSERT(textureData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(textureData, "");'), (3, 1, u'+                    CCASSERT(textureData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (3, 1, u'+                        CCASSERT( buffer != NULL, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (3, 1, u'+                        CCASSERT( buffer != NULL, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (3, 1, u'+                        CCASSERT( buffer != NULL, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (3, 1, u'+                        CCASSERT( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (3, 1, u'+                        CCASSERT( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (3, 1, u'+                        CCASSERT( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (3, 1, u'+                        CCASSERT(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (3, 1, u'+                        CCASSERT(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (3, 1, u'+                        CCASSERT(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( this->_texture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCASSERT( this->_texture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( this->_texture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCASSERT( this->_texture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( this->_texture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCASSERT( this->_texture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode, "Can\'t change blending functions when the particle is being batched");'), (3, 1, u'+    CCASSERT(! _batchNode, "Can\'t change blending functions when the particle is being batched");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode, "Can\'t change blending functions when the particle is being batched");'), (3, 1, u'+    CCASSERT(! _batchNode, "Can\'t change blending functions when the particle is being batched");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode, "Can\'t change blending functions when the particle is being batched");'), (3, 1, u'+    CCASSERT(! _batchNode, "Can\'t change blending functions when the particle is being batched");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCASSERT( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");'), (3, 1, u'+    CCASSERT( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystem::setTotalParticles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");'), (3, 1, u'+    CCASSERT( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");'), (3, 1, u'+    CCASSERT( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(Point::ZERO),'), (3, 1, u'+    CCASSERT(spriteFrame->getOffsetInPixels().equals(Point::ZERO),')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(Point::ZERO),'), (3, 1, u'+    CCASSERT(spriteFrame->getOffsetInPixels().equals(Point::ZERO),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(Point::ZERO),'), (3, 1, u'+    CCASSERT(spriteFrame->getOffsetInPixels().equals(Point::ZERO),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_batchNode,"draw should not be called when added to a particleBatchNode");'), (3, 1, u'+    CCASSERT(!_batchNode,"draw should not be called when added to a particleBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_batchNode,"draw should not be called when added to a particleBatchNode");'), (3, 1, u'+    CCASSERT(!_batchNode,"draw should not be called when added to a particleBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_batchNode,"draw should not be called when added to a particleBatchNode");'), (3, 1, u'+    CCASSERT(!_batchNode,"draw should not be called when added to a particleBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _particleIdx == _particleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCASSERT( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _particleIdx == _particleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCASSERT( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _particleIdx == _particleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCASSERT( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( ( !_quads && !_indices), "Memory already alloced");'), (3, 2, u'-    CCAssert( !_batchNode, "Memory should not be alloced when not using batchNode");'), (4, 1, u'+    CCASSERT( ( !_quads && !_indices), "Memory already alloced");'), (5, 1, u'+    CCASSERT( !_batchNode, "Memory should not be alloced when not using batchNode");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ParticleSystemQuad::allocMemory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( ( !_quads && !_indices), "Memory already alloced");'), (3, 2, u'-    CCAssert( !_batchNode, "Memory should not be alloced when not using batchNode");'), (4, 1, u'+    CCASSERT( ( !_quads && !_indices), "Memory already alloced");'), (5, 1, u'+    CCASSERT( !_batchNode, "Memory should not be alloced when not using batchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( ( !_quads && !_indices), "Memory already alloced");'), (3, 2, u'-    CCAssert( !_batchNode, "Memory should not be alloced when not using batchNode");'), (4, 1, u'+    CCASSERT( ( !_quads && !_indices), "Memory already alloced");'), (5, 1, u'+    CCASSERT( !_batchNode, "Memory should not be alloced when not using batchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");'), (3, 1, u'+    CCASSERT(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: EGLViewProtocol::setDesignResolutionSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");'), (3, 1, u'+    CCASSERT(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");'), (3, 1, u'+    CCASSERT(resolutionPolicy != kResolutionUnKnown, "should set resolutionPolicy");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! _dictStack.empty(), "The state is wrong!");'), (3, 1, u'+                CCASSERT(! _dictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! _dictStack.empty(), "The state is wrong!");'), (3, 1, u'+                CCASSERT(! _dictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! _dictStack.empty(), "The state is wrong!");'), (3, 1, u'+                CCASSERT(! _dictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! _arrayStack.empty(), "The state is wrong!");'), (3, 1, u'+                CCASSERT(! _arrayStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! _arrayStack.empty(), "The state is wrong!");'), (3, 1, u'+                CCASSERT(! _arrayStack.empty(), "The state is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! _arrayStack.empty(), "The state is wrong!");'), (3, 1, u'+                CCASSERT(! _arrayStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(!_curKey.empty(), "key not found : <integer/real>");'), (3, 1, u'+                    CCASSERT(!_curKey.empty(), "key not found : <integer/real>");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(!_curKey.empty(), "key not found : <integer/real>");'), (3, 1, u'+                    CCASSERT(!_curKey.empty(), "key not found : <integer/real>");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(!_curKey.empty(), "key not found : <integer/real>");'), (3, 1, u'+                    CCASSERT(!_curKey.empty(), "key not found : <integer/real>");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (3, 1, u'+    CCASSERT(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (3, 1, u'+    CCASSERT(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");'), (3, 1, u'+    CCASSERT(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invalid parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCASSERT(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FileUtils::getFileDataFromZip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCASSERT(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCASSERT(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");'), (3, 1, u'+    CCASSERT(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FileUtils::fullPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");'), (3, 1, u'+    CCASSERT(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");'), (3, 1, u'+    CCASSERT(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert(_fragShader == 0, "Fragment Shaders should have been already deleted");'), (4, 1, u'+    CCASSERT(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCASSERT(_fragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: GLProgram::~GLProgram
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert(_fragShader == 0, "Fragment Shaders should have been already deleted");'), (4, 1, u'+    CCASSERT(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCASSERT(_fragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert(_fragShader == 0, "Fragment Shaders should have been already deleted");'), (4, 1, u'+    CCASSERT(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCASSERT(_fragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_program != 0, "Cannot link invalid program");'), (3, 1, u'+    CCASSERT(_program != 0, "Cannot link invalid program");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: GLProgram::link
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_program != 0, "Cannot link invalid program");'), (3, 1, u'+    CCASSERT(_program != 0, "Cannot link invalid program");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_program != 0, "Cannot link invalid program");'), (3, 1, u'+    CCASSERT(_program != 0, "Cannot link invalid program");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name != NULL, "Invalid uniform name" );'), (3, 2, u'-    CCAssert(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");'), (4, 1, u'+    CCASSERT(name != NULL, "Invalid uniform name" );'), (5, 1, u'+    CCASSERT(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: GLProgram::getUniformLocationForName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name != NULL, "Invalid uniform name" );'), (3, 2, u'-    CCAssert(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");'), (4, 1, u'+    CCASSERT(name != NULL, "Invalid uniform name" );'), (5, 1, u'+    CCASSERT(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name != NULL, "Invalid uniform name" );'), (3, 2, u'-    CCAssert(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");'), (4, 1, u'+    CCASSERT(name != NULL, "Invalid uniform name" );'), (5, 1, u'+    CCASSERT(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureUnit < kMaxActiveTexture, "textureUnit is too big");'), (3, 1, u'+    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccGLBindTexture2DN
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureUnit < kMaxActiveTexture, "textureUnit is too big");'), (3, 1, u'+    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureUnit < kMaxActiveTexture, "textureUnit is too big");'), (3, 1, u'+    CCASSERT(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "Invalid animation format");'), (3, 1, u'+            CCASSERT(false, "Invalid animation format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AnimationCache::addAnimationsWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "Invalid animation format");'), (3, 1, u'+            CCASSERT(false, "Invalid animation format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "Invalid animation format");'), (3, 1, u'+            CCASSERT(false, "Invalid animation format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( plist, "Invalid texture file name");'), (3, 1, u'+    CCASSERT( plist, "Invalid texture file name");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AnimationCache::addAnimationsWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( plist, "Invalid texture file name");'), (3, 1, u'+    CCASSERT( plist, "Invalid texture file name");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( plist, "Invalid texture file name");'), (3, 1, u'+    CCASSERT( plist, "Invalid texture file name");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dict, "CCAnimationCache: File could not be found");'), (3, 1, u'+    CCASSERT( dict, "CCAnimationCache: File could not be found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: AnimationCache::addAnimationsWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dict, "CCAnimationCache: File could not be found");'), (3, 1, u'+    CCASSERT( dict, "CCAnimationCache: File could not be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dict, "CCAnimationCache: File could not be found");'), (3, 1, u'+    CCASSERT( dict, "CCAnimationCache: File could not be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pFrame != NULL, msg);'), (3, 1, u'+    CCASSERT(pFrame != NULL, msg);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::createWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pFrame != NULL, msg);'), (3, 1, u'+    CCASSERT(pFrame != NULL, msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pFrame != NULL, msg);'), (3, 1, u'+    CCASSERT(pFrame != NULL, msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pTexture != NULL, "Invalid texture for sprite");'), (3, 1, u'+    CCASSERT(pTexture != NULL, "Invalid texture for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pTexture != NULL, "Invalid texture for sprite");'), (3, 1, u'+    CCASSERT(pTexture != NULL, "Invalid texture for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pTexture != NULL, "Invalid texture for sprite");'), (3, 1, u'+    CCASSERT(pTexture != NULL, "Invalid texture for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFilename != NULL, "Invalid filename for sprite");'), (3, 1, u'+    CCASSERT(pszFilename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFilename != NULL, "Invalid filename for sprite");'), (3, 1, u'+    CCASSERT(pszFilename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFilename != NULL, "Invalid filename for sprite");'), (3, 1, u'+    CCASSERT(pszFilename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFilename != NULL, "");'), (3, 1, u'+    CCASSERT(pszFilename != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFilename != NULL, "");'), (3, 1, u'+    CCASSERT(pszFilename != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszFilename != NULL, "");'), (3, 1, u'+    CCASSERT(pszFilename != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pSpriteFrame != NULL, "");'), (3, 1, u'+    CCASSERT(pSpriteFrame != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pSpriteFrame != NULL, "");'), (3, 1, u'+    CCASSERT(pSpriteFrame != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pSpriteFrame != NULL, "");'), (3, 1, u'+    CCASSERT(pSpriteFrame != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszSpriteFrameName != NULL, "");'), (3, 1, u'+    CCASSERT(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszSpriteFrameName != NULL, "");'), (3, 1, u'+    CCASSERT(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszSpriteFrameName != NULL, "");'), (3, 1, u'+    CCASSERT(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pImage != NULL);'), (3, 1, u'+    CCASSERT(pImage != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::initWithCGImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pImage != NULL);'), (3, 1, u'+    CCASSERT(pImage != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pImage != NULL);'), (3, 1, u'+    CCASSERT(pImage != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");'), (3, 1, u'+    CCASSERT(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");'), (3, 1, u'+    CCASSERT(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");'), (3, 1, u'+    CCASSERT(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");'), (3, 1, u'+                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");'), (3, 1, u'+                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");'), (3, 1, u'+                CCASSERT( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");'), (3, 1, u'+    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");'), (3, 1, u'+    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");'), (3, 1, u'+    CCASSERT(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pChild != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT(pChild != NULL, "Argument must be non-NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pChild != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT(pChild != NULL, "Argument must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pChild != NULL, "Argument must be non-NULL");'), (3, 1, u'+    CCASSERT(pChild != NULL, "Argument must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (3, 2, u'-        CCAssert(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");'), (4, 1, u'+        CCASSERT( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (5, 1, u'+        CCASSERT(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (3, 2, u'-        CCAssert(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");'), (4, 1, u'+        CCASSERT( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (5, 1, u'+        CCASSERT(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (3, 2, u'-        CCAssert(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");'), (4, 1, u'+        CCASSERT( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");'), (5, 1, u'+        CCASSERT(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pChild != NULL, "");'), (3, 2, u'-    CCAssert(_children->containsObject(pChild), "");'), (4, 1, u'+    CCASSERT(pChild != NULL, "");'), (5, 1, u'+    CCASSERT(_children->containsObject(pChild), "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pChild != NULL, "");'), (3, 2, u'-    CCAssert(_children->containsObject(pChild), "");'), (4, 1, u'+    CCASSERT(pChild != NULL, "");'), (5, 1, u'+    CCASSERT(_children->containsObject(pChild), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pChild != NULL, "");'), (3, 2, u'-    CCAssert(_children->containsObject(pChild), "");'), (4, 1, u'+    CCASSERT(pChild != NULL, "");'), (5, 1, u'+    CCASSERT(_children->containsObject(pChild), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");'), (3, 1, u'+    CCASSERT(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::ignoreAnchorPointForPosition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");'), (3, 1, u'+    CCASSERT(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");'), (3, 1, u'+    CCASSERT(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (3, 1, u'+    CCASSERT(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (3, 1, u'+    CCASSERT(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");'), (3, 1, u'+    CCASSERT(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");'), (3, 1, u'+    CCASSERT(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");'), (8, 2, u'-    CCAssert(frame, "CCSprite#setDisplayFrame. Invalid frame");'), (9, 1, u'+    CCASSERT(frame, "CCSprite#setDisplayFrame. Invalid frame");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Sprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");'), (3, 1, u'+    CCASSERT(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");'), (8, 2, u'-    CCAssert(frame, "CCSprite#setDisplayFrame. Invalid frame");'), (9, 1, u'+    CCASSERT(frame, "CCSprite#setDisplayFrame. Invalid frame");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");'), (3, 1, u'+    CCASSERT(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");'), (8, 2, u'-    CCAssert(frame, "CCSprite#setDisplayFrame. Invalid frame");'), (9, 1, u'+    CCASSERT(frame, "CCSprite#setDisplayFrame. Invalid frame");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");'), (3, 1, u'+    CCASSERT(! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");'), (3, 1, u'+    CCASSERT(! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");'), (3, 1, u'+    CCASSERT(! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCASSERT(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (5, 2, u'-    CCAssert( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");'), (6, 1, u'+    CCASSERT( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Sprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCASSERT(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (5, 2, u'-    CCAssert( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");'), (6, 1, u'+    CCASSERT( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCASSERT(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (5, 2, u'-    CCAssert( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");'), (6, 1, u'+    CCASSERT( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");'), (3, 1, u'+            CCASSERT(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Sprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");'), (3, 1, u'+            CCASSERT(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");'), (3, 1, u'+            CCASSERT(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(capacity>=0, "Capacity must be >= 0");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: SpriteBatchNode::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(capacity>=0, "Capacity must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(capacity>=0, "Capacity must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(child != NULL, "child should not be null");'), (3, 2, u'-    CCAssert(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(child != NULL, "child should not be null");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (8, 2, u'-    CCAssert(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (9, 1, u'+    CCASSERT(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: SpriteBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(child != NULL, "child should not be null");'), (3, 2, u'-    CCAssert(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(child != NULL, "child should not be null");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (8, 2, u'-    CCAssert(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (9, 1, u'+    CCASSERT(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(child != NULL, "child should not be null");'), (3, 2, u'-    CCAssert(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(child != NULL, "child should not be null");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (8, 2, u'-    CCAssert(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (9, 1, u'+    CCASSERT(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(child != NULL, "the child should not be null");'), (3, 2, u'-    CCAssert(_children->containsObject(child), "Child doesn\'t belong to Sprite");'), (4, 1, u'+    CCASSERT(child != NULL, "the child should not be null");'), (5, 1, u'+    CCASSERT(_children->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(child != NULL, "the child should not be null");'), (3, 2, u'-    CCAssert(_children->containsObject(child), "Child doesn\'t belong to Sprite");'), (4, 1, u'+    CCASSERT(child != NULL, "the child should not be null");'), (5, 1, u'+    CCASSERT(_children->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(child != NULL, "the child should not be null");'), (3, 2, u'-    CCAssert(_children->containsObject(child), "Child doesn\'t belong to Sprite");'), (4, 1, u'+    CCASSERT(child != NULL, "the child should not be null");'), (5, 1, u'+    CCASSERT(_children->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_children->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_children->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_children->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCASSERT(_children->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not enough memory to resize the atlas");'), (3, 1, u'+        CCASSERT(false, "Not enough memory to resize the atlas");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::increaseAtlasCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not enough memory to resize the atlas");'), (3, 1, u'+        CCASSERT(false, "Not enough memory to resize the atlas");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not enough memory to resize the atlas");'), (3, 1, u'+        CCASSERT(false, "Not enough memory to resize the atlas");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "should not run here");'), (3, 1, u'+    CCASSERT(0, "should not run here");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNode::atlasIndexForChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "should not run here");'), (3, 1, u'+    CCASSERT(0, "should not run here");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "should not run here");'), (3, 1, u'+    CCASSERT(0, "should not run here");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( sprite != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT( sprite != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::insertQuadFromSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( sprite != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT( sprite != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( sprite != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT( sprite != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sprite != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(sprite != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::updateQuadFromSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sprite != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(sprite != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sprite != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT(sprite != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: SpriteBatchNode::addSpriteWithoutQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-    CCAssert( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");'), (4, 1, u'+    CCASSERT( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCASSERT( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCASSERT(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCASSERT(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCASSERT(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureFileName, "texture name should not be null");'), (3, 1, u'+    CCASSERT(textureFileName, "texture name should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureFileName, "texture name should not be null");'), (3, 1, u'+    CCASSERT(textureFileName, "texture name should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureFileName, "texture name should not be null");'), (3, 1, u'+    CCASSERT(textureFileName, "texture name should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszPlist, "plist filename should not be NULL");'), (3, 1, u'+    CCASSERT(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszPlist, "plist filename should not be NULL");'), (3, 1, u'+    CCASSERT(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pszPlist, "plist filename should not be NULL");'), (3, 1, u'+    CCASSERT(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(timer, "CCProfilingTimer  not found");'), (3, 1, u'+    CCASSERT(timer, "CCProfilingTimer  not found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ProfilingEndTimingBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(timer, "CCProfilingTimer  not found");'), (3, 1, u'+    CCASSERT(timer, "CCProfilingTimer  not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(timer, "CCProfilingTimer  not found");'), (3, 1, u'+    CCASSERT(timer, "CCProfilingTimer  not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(timer, "CCProfilingTimer not found");'), (3, 1, u'+    CCASSERT(timer, "CCProfilingTimer not found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ProfilingResetTimingBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(timer, "CCProfilingTimer not found");'), (3, 1, u'+    CCASSERT(timer, "CCProfilingTimer not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(timer, "CCProfilingTimer not found");'), (3, 1, u'+    CCASSERT(timer, "CCProfilingTimer not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComponentContainer::get
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pCom != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT(pCom != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ComponentContainer::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pCom != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT(pCom != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pCom != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT(pCom != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(pCom->getOwner() == NULL, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pComponent == NULL, "Component already added. It can\'t be added again");'), (3, 1, u'+        CCASSERT(pComponent == NULL, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComponentContainer::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pComponent == NULL, "Component already added. It can\'t be added again");'), (3, 1, u'+        CCASSERT(pComponent == NULL, "Component already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pComponent == NULL, "Component already added. It can\'t be added again");'), (3, 1, u'+        CCASSERT(pComponent == NULL, "Component already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComponentContainer::remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pName != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(pName != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");'), (3, 1, u'+    CCASSERT(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayDoubleCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");'), (3, 1, u'+    CCASSERT(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");'), (3, 1, u'+    CCASSERT(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(arr->arr!=NULL,"could not reallocate the memory");'), (3, 1, u'+\t\tCCASSERT(arr->arr!=NULL,"could not reallocate the memory");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayShrink
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(arr->arr!=NULL,"could not reallocate the memory");'), (3, 1, u'+\t\tCCASSERT(arr->arr!=NULL,"could not reallocate the memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(arr->arr!=NULL,"could not reallocate the memory");'), (3, 1, u'+\t\tCCASSERT(arr->arr!=NULL,"could not reallocate the memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(object != NULL, "Invalid parameter!");'), (3, 1, u'+    CCASSERT(object != NULL, "Invalid parameter!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayAppendObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(object != NULL, "Invalid parameter!");'), (3, 1, u'+    CCASSERT(object != NULL, "Invalid parameter!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(object != NULL, "Invalid parameter!");'), (3, 1, u'+    CCASSERT(object != NULL, "Invalid parameter!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index<=arr->num, "Invalid index. Out of bounds");'), (3, 2, u'-\tCCAssert(object != NULL, "Invalid parameter!");'), (4, 1, u'+\tCCASSERT(index<=arr->num, "Invalid index. Out of bounds");'), (5, 1, u'+\tCCASSERT(object != NULL, "Invalid parameter!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ccArrayInsertObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index<=arr->num, "Invalid index. Out of bounds");'), (3, 2, u'-\tCCAssert(object != NULL, "Invalid parameter!");'), (4, 1, u'+\tCCASSERT(index<=arr->num, "Invalid index. Out of bounds");'), (5, 1, u'+\tCCASSERT(object != NULL, "Invalid parameter!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index<=arr->num, "Invalid index. Out of bounds");'), (3, 2, u'-\tCCAssert(object != NULL, "Invalid parameter!");'), (4, 1, u'+\tCCASSERT(index<=arr->num, "Invalid index. Out of bounds");'), (5, 1, u'+\tCCASSERT(object != NULL, "Invalid parameter!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (3, 2, u'-\tCCAssert(index2 < arr->num, "(2) Invalid index. Out of bounds");'), (4, 1, u'+\tCCASSERT(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (5, 1, u'+\tCCASSERT(index2 < arr->num, "(2) Invalid index. Out of bounds");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ccArraySwapObjectsAtIndexes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (3, 2, u'-\tCCAssert(index2 < arr->num, "(2) Invalid index. Out of bounds");'), (4, 1, u'+\tCCASSERT(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (5, 1, u'+\tCCASSERT(index2 < arr->num, "(2) Invalid index. Out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (3, 2, u'-\tCCAssert(index2 < arr->num, "(2) Invalid index. Out of bounds");'), (4, 1, u'+\tCCASSERT(index1 < arr->num, "(1) Invalid index. Out of bounds");'), (5, 1, u'+\tCCASSERT(index2 < arr->num, "(2) Invalid index. Out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");'), (3, 1, u'+    CCASSERT(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccArrayRemoveObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");'), (3, 1, u'+    CCASSERT(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");'), (3, 1, u'+    CCASSERT(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < arr->max, "ccCArrayInsertValueAtIndex: invalid index");'), (3, 1, u'+\tCCASSERT( index < arr->max, "ccCArrayInsertValueAtIndex: invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccCArrayInsertValueAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < arr->max, "ccCArrayInsertValueAtIndex: invalid index");'), (3, 1, u'+\tCCASSERT( index < arr->max, "ccCArrayInsertValueAtIndex: invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < arr->max, "ccCArrayInsertValueAtIndex: invalid index");'), (3, 1, u'+\tCCASSERT( index < arr->max, "ccCArrayInsertValueAtIndex: invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (3, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (4, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (5, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (6, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: ZipUtils::ccDecodeEncodedPvr
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (3, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (4, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (5, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (6, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (3, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (4, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (5, 2, u'-    CCAssert(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (6, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCASSERT(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "");'), (5, 1, u'+    CCASSERT(&*out, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ZipUtils::ccInflateGZipFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "");'), (5, 1, u'+    CCASSERT(&*out, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "");'), (5, 1, u'+    CCASSERT(&*out, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "");'), (5, 1, u'+    CCASSERT(&*out, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ZipUtils::ccInflateCCZFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "");'), (5, 1, u'+    CCASSERT(&*out, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(out, "");'), (3, 2, u'-    CCAssert(&*out, "");'), (4, 1, u'+    CCASSERT(out, "");'), (5, 1, u'+    CCASSERT(&*out, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index >= 0, "Cocos2d: key part index cannot be less than 0");'), (3, 2, u'-    CCAssert(index <= 3, "Cocos2d: key part index cannot be greater than 3");'), (4, 1, u'+    CCASSERT(index >= 0, "Cocos2d: key part index cannot be less than 0");'), (5, 1, u'+    CCASSERT(index <= 3, "Cocos2d: key part index cannot be greater than 3");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ZipUtils::ccSetPvrEncryptionKeyPart
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index >= 0, "Cocos2d: key part index cannot be less than 0");'), (3, 2, u'-    CCAssert(index <= 3, "Cocos2d: key part index cannot be greater than 3");'), (4, 1, u'+    CCASSERT(index >= 0, "Cocos2d: key part index cannot be less than 0");'), (5, 1, u'+    CCASSERT(index <= 3, "Cocos2d: key part index cannot be greater than 3");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index >= 0, "Cocos2d: key part index cannot be less than 0");'), (3, 2, u'-    CCAssert(index <= 3, "Cocos2d: key part index cannot be greater than 3");'), (4, 1, u'+    CCASSERT(index >= 0, "Cocos2d: key part index cannot be less than 0");'), (5, 1, u'+    CCASSERT(index <= 3, "Cocos2d: key part index cannot be greater than 3");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCASSERT(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *ZipFile::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCASSERT(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCASSERT(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "NSInternalInconsistencyException");'), (3, 1, u'+        CCASSERT(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "NSInternalInconsistencyException");'), (3, 1, u'+        CCASSERT(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "NSInternalInconsistencyException");'), (3, 1, u'+        CCASSERT(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not supported alignment format!");'), (3, 1, u'+        CCASSERT(false, "Not supported alignment format!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not supported alignment format!");'), (3, 1, u'+        CCASSERT(false, "Not supported alignment format!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not supported alignment format!");'), (3, 1, u'+        CCASSERT(false, "Not supported alignment format!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");'), (3, 1, u'+    CCASSERT(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");'), (3, 1, u'+    CCASSERT(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");'), (3, 1, u'+    CCASSERT(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");'), (3, 1, u'+    CCASSERT( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (3, 1, u'+    CCASSERT( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (3, 1, u'+    CCASSERT( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&'), (3, 1, u'+    CCASSERT( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");'), (3, 1, u'+\t\t\tCCASSERT(false , "unrecognized pixel format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::getStringForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");'), (3, 1, u'+\t\t\tCCASSERT(false , "unrecognized pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");'), (3, 1, u'+\t\t\tCCASSERT(false , "unrecognized pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");'), (3, 1, u'+\t\t\tCCASSERT(false , "unrecognized pixel format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2D::getBitsPerPixelForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");'), (3, 1, u'+\t\t\tCCASSERT(false , "unrecognized pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognized pixel format");'), (3, 1, u'+\t\t\tCCASSERT(false , "unrecognized pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(capacity>=0, "Capacity must be >= 0");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: TextureAtlas::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(capacity>=0, "Capacity must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(capacity>=0, "Capacity must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_quads == NULL && _indices == NULL, "");'), (3, 1, u'+    CCASSERT(_quads == NULL && _indices == NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_quads == NULL && _indices == NULL, "");'), (3, 1, u'+    CCASSERT(_quads == NULL && _indices == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_quads == NULL && _indices == NULL, "");'), (3, 1, u'+    CCASSERT(_quads == NULL && _indices == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");'), (6, 1, u'+    CCASSERT( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TextureAtlas::mapBuffers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");'), (6, 1, u'+    CCASSERT( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");'), (6, 1, u'+    CCASSERT( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( index < _capacity, "insertQuadWithTexture: Invalid index");'), (6, 1, u'+    CCASSERT( index>=0 && index<_capacity, "insertQuadWithTexture: Invalid index");'), (9, 2, u'-    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");'), (10, 1, u'+    CCASSERT( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: TextureAtlas::updateQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( index < _capacity, "insertQuadWithTexture: Invalid index");'), (6, 1, u'+    CCASSERT( index>=0 && index<_capacity, "insertQuadWithTexture: Invalid index");'), (9, 2, u'-    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");'), (10, 1, u'+    CCASSERT( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( index < _capacity, "insertQuadWithTexture: Invalid index");'), (6, 1, u'+    CCASSERT( index>=0 && index<_capacity, "insertQuadWithTexture: Invalid index");'), (9, 2, u'-    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");'), (10, 1, u'+    CCASSERT( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(index + amount <= _capacity, "insertQuadWithTexture: Invalid index + amount");'), (6, 1, u'+    CCASSERT(index>=0 && amount>=0 && index+amount<=_capacity, "insertQuadWithTexture: Invalid index + amount");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TextureAtlas::insertQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(index + amount <= _capacity, "insertQuadWithTexture: Invalid index + amount");'), (6, 1, u'+    CCASSERT(index>=0 && amount>=0 && index+amount<=_capacity, "insertQuadWithTexture: Invalid index + amount");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(index + amount <= _capacity, "insertQuadWithTexture: Invalid index + amount");'), (6, 1, u'+    CCASSERT(index>=0 && amount>=0 && index+amount<=_capacity, "insertQuadWithTexture: Invalid index + amount");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");'), (3, 1, u'+    CCASSERT( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureAtlas::insertQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");'), (3, 1, u'+    CCASSERT( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");'), (3, 1, u'+    CCASSERT( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (6, 2, u'-    CCAssert( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (7, 1, u'+    CCASSERT( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (8, 1, u'+    CCASSERT( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: TextureAtlas::insertQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (6, 2, u'-    CCAssert( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (7, 1, u'+    CCASSERT( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (8, 1, u'+    CCASSERT( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (6, 2, u'-    CCAssert( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (7, 1, u'+    CCASSERT( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (8, 1, u'+    CCASSERT( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert( index < _totalQuads, "removeQuadAtIndex: Invalid index");'), (11, 1, u'+    CCASSERT( index>=0 && index<_totalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Total add: 3
Total del: 5
Header: TextureAtlas::insertQuadFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert( index < _totalQuads, "removeQuadAtIndex: Invalid index");'), (11, 1, u'+    CCASSERT( index>=0 && index<_totalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert( index < _totalQuads, "removeQuadAtIndex: Invalid index");'), (11, 1, u'+    CCASSERT( index>=0 && index<_totalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(index + amount <= _totalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (9, 1, u'+    CCASSERT(index>=0 && amount>=0 && index+amount<=_totalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: TextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(index + amount <= _totalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (9, 1, u'+    CCASSERT(index>=0 && amount>=0 && index+amount<=_totalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(index + amount <= _totalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (9, 1, u'+    CCASSERT(index>=0 && amount>=0 && index+amount<=_totalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(newCapacity>=0, "capacity >= 0");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: TextureAtlas::removeAllQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(newCapacity>=0, "capacity >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(newCapacity>=0, "capacity >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(amount>=0, "amount >= 0");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: TextureAtlas::resizeCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(amount>=0, "amount >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(amount>=0, "amount >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (6, 2, u'-    CCAssert(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (7, 1, u'+    CCASSERT(oldIndex>=0 && amount>=0 && newIndex>=0, "values must be >= 0");'), (8, 1, u'+    CCASSERT(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (9, 1, u'+    CCASSERT(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: TextureAtlas::increaseTotalQuadsWith
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (6, 2, u'-    CCAssert(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (7, 1, u'+    CCASSERT(oldIndex>=0 && amount>=0 && newIndex>=0, "values must be >= 0");'), (8, 1, u'+    CCASSERT(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (9, 1, u'+    CCASSERT(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (6, 2, u'-    CCAssert(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (7, 1, u'+    CCASSERT(oldIndex>=0 && amount>=0 && newIndex>=0, "values must be >= 0");'), (8, 1, u'+    CCASSERT(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (9, 1, u'+    CCASSERT(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");'), (6, 1, u'+    CCASSERT(index>=0 && newIndex>=0, "values must be >= 0");'), (7, 1, u'+    CCASSERT(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: TextureAtlas::moveQuadsFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");'), (6, 1, u'+    CCASSERT(index>=0 && newIndex>=0, "values must be >= 0");'), (7, 1, u'+    CCASSERT(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");'), (6, 1, u'+    CCASSERT(index>=0 && newIndex>=0, "values must be >= 0");'), (7, 1, u'+    CCASSERT(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(index>=0 && amount>=0, "values must be >= 0");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: TextureAtlas::moveQuadsFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(index>=0 && amount>=0, "values must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCASSERT(index>=0 && amount>=0, "values must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(numberOfQuads>=0, "numberOfQuads must be >= 0");')]
===========================================
===========================================
Total add: 9
Total del: 7
Header: TextureAtlas::drawQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(numberOfQuads>=0, "numberOfQuads must be >= 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCASSERT(numberOfQuads>=0, "numberOfQuads must be >= 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+    CCASSERT(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::TextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+    CCASSERT(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+    CCASSERT(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::addImageAsync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::addPVRImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::addETCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");'), (3, 1, u'+    CCASSERT(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(image != NULL, "TextureCache: image MUST not be nil");'), (3, 1, u'+    CCASSERT(image != NULL, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::addUIImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(image != NULL, "TextureCache: image MUST not be nil");'), (3, 1, u'+    CCASSERT(image != NULL, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(image != NULL, "TextureCache: image MUST not be nil");'), (3, 1, u'+    CCASSERT(image != NULL, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX,'), (3, 1, u'+                CCASSERT(_numberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TexturePVR::unpackPVRv2Data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX,'), (3, 1, u'+                CCASSERT(_numberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX,'), (3, 1, u'+                CCASSERT(_numberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (3, 1, u'+\tCCASSERT(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TexturePVR::unpackPVRv3Data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (3, 1, u'+\tCCASSERT(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (3, 1, u'+\tCCASSERT(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(dataOffset <= dataLength, "CCTexurePVR: Invalid lenght");'), (3, 1, u'+\t\tCCASSERT(dataOffset <= dataLength, "CCTexurePVR: Invalid lenght");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TexturePVR::unpackPVRv3Data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(dataOffset <= dataLength, "CCTexurePVR: Invalid lenght");'), (3, 1, u'+\t\tCCASSERT(dataOffset <= dataLength, "CCTexurePVR: Invalid lenght");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(dataOffset <= dataLength, "CCTexurePVR: Invalid lenght");'), (3, 1, u'+\t\tCCASSERT(dataOffset <= dataLength, "CCTexurePVR: Invalid lenght");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+    CCASSERT(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParallaxNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+    CCASSERT(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+    CCASSERT(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParallaxNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _maxGID >= _tileSet->_firstGid &&'), (3, 1, u'+    CCASSERT( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::setupTiles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _maxGID >= _tileSet->_firstGid &&'), (3, 1, u'+    CCASSERT( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _maxGID >= _tileSet->_firstGid &&'), (3, 1, u'+    CCASSERT( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXLayer::getTileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXLayer::getTileGIDAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+    CCASSERT(item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::atlasIndexForExistantZ
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+    CCASSERT(item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+    CCASSERT(item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCASSERT(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: TMXLayer::setTileGID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCASSERT(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCASSERT(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+    CCASSERT(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+    CCASSERT(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+    CCASSERT(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_children->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_children->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_children->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCASSERT(_children->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXLayer::removeTileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCASSERT(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCASSERT(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCASSERT(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::calculateLayerOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCASSERT(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCASSERT(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(0, "TMX Hexa zOrder not supported");'), (3, 1, u'+            CCASSERT(0, "TMX Hexa zOrder not supported");'), (6, 2, u'-            CCAssert(0, "TMX invalid value");'), (7, 1, u'+            CCASSERT(0, "TMX invalid value");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXLayer::getVertexZForPos
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(0, "TMX Hexa zOrder not supported");'), (3, 1, u'+            CCASSERT(0, "TMX Hexa zOrder not supported");'), (6, 2, u'-            CCAssert(0, "TMX invalid value");'), (7, 1, u'+            CCASSERT(0, "TMX invalid value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(0, "TMX Hexa zOrder not supported");'), (3, 1, u'+            CCASSERT(0, "TMX Hexa zOrder not supported");'), (6, 2, u'-            CCAssert(0, "TMX invalid value");'), (7, 1, u'+            CCASSERT(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");'), (3, 1, u'+    CCASSERT(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::initWithTMXFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");'), (3, 1, u'+    CCASSERT(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");'), (3, 1, u'+    CCASSERT(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::initWithTMXFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::initWithXML
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+    CCASSERT( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");'), (3, 1, u'+    CCASSERT(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::layerNamed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");'), (3, 1, u'+    CCASSERT(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");'), (3, 1, u'+    CCASSERT(layerName != NULL && strlen(layerName) > 0, "Invalid layer name!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");'), (3, 1, u'+    CCASSERT(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXTiledMap::objectGroupNamed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");'), (3, 1, u'+    CCASSERT(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");'), (3, 1, u'+    CCASSERT(groupName != NULL && strlen(groupName) > 0, "Invalid group name!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (3, 1, u'+            CCASSERT( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (5, 2, u'-        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (6, 1, u'+        CCASSERT( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: TMXMapInfo::startElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (3, 1, u'+            CCASSERT( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (5, 2, u'-        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (6, 1, u'+        CCASSERT( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (3, 1, u'+            CCASSERT( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (5, 2, u'-        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (6, 1, u'+        CCASSERT( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(inflatedLen == sizeHint, "");'), (3, 1, u'+            CCASSERT(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXMapInfo::endElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(inflatedLen == sizeHint, "");'), (3, 1, u'+            CCASSERT(inflatedLen == sizeHint, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(inflatedLen == sizeHint, "");'), (3, 1, u'+            CCASSERT(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::calculateItemsToRender
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+    CCASSERT( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::loadTGAfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+    CCASSERT( file != NULL, "file must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+    CCASSERT( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");'), (3, 1, u'+        CCASSERT(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::loadTGAfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");'), (3, 1, u'+        CCASSERT(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");'), (3, 1, u'+        CCASSERT(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert(position.x < _TGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert(position.y < _TGAInfo->height, "Invalid position.x");'), (6, 2, u'-    CCAssert(tile.r != 0, "R component must be non 0");'), (7, 1, u'+    CCASSERT(_TGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+    CCASSERT(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+    CCASSERT(position.x < _TGAInfo->width, "Invalid position.x");'), (10, 1, u'+    CCASSERT(position.y < _TGAInfo->height, "Invalid position.x");'), (11, 1, u'+    CCASSERT(tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: TileMapAtlas::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert(position.x < _TGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert(position.y < _TGAInfo->height, "Invalid position.x");'), (6, 2, u'-    CCAssert(tile.r != 0, "R component must be non 0");'), (7, 1, u'+    CCASSERT(_TGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+    CCASSERT(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+    CCASSERT(position.x < _TGAInfo->width, "Invalid position.x");'), (10, 1, u'+    CCASSERT(position.y < _TGAInfo->height, "Invalid position.x");'), (11, 1, u'+    CCASSERT(tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert(position.x < _TGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert(position.y < _TGAInfo->height, "Invalid position.x");'), (6, 2, u'-    CCAssert(tile.r != 0, "R component must be non 0");'), (7, 1, u'+    CCASSERT(_TGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+    CCASSERT(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+    CCASSERT(position.x < _TGAInfo->width, "Invalid position.x");'), (10, 1, u'+    CCASSERT(position.y < _TGAInfo->height, "Invalid position.x");'), (11, 1, u'+    CCASSERT(tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( position.x < _TGAInfo->width, "Invalid position.x");'), (4, 2, u'-    CCAssert( position.y < _TGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCASSERT( position.x < _TGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCASSERT( position.y < _TGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: TileMapAtlas::getTileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( position.x < _TGAInfo->width, "Invalid position.x");'), (4, 2, u'-    CCAssert( position.y < _TGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCASSERT( position.x < _TGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCASSERT( position.y < _TGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( position.x < _TGAInfo->width, "Invalid position.x");'), (4, 2, u'-    CCAssert( position.y < _TGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCASSERT( position.x < _TGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCASSERT( position.y < _TGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");'), (3, 1, u'+    CCASSERT( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::updateAtlasValueAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");'), (3, 1, u'+    CCASSERT( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");'), (3, 1, u'+    CCASSERT( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TileMapAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCASSERT( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+        CCASSERT(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchDispatcher::setDispatchEvents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+        CCASSERT(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+        CCASSERT(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                 CCAssert(0, "");'), (3, 1, u'+                 CCASSERT(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchDispatcher::forceAddHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                 CCAssert(0, "");'), (3, 1, u'+                 CCASSERT(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                 CCAssert(0, "");'), (3, 1, u'+                 CCASSERT(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pArray != NULL && pDelegate != NULL, "");'), (3, 1, u'+    CCASSERT(pArray != NULL && pDelegate != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchDispatcher::findHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pArray != NULL && pDelegate != NULL, "");'), (3, 1, u'+    CCASSERT(pArray != NULL && pDelegate != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pArray != NULL && pDelegate != NULL, "");'), (3, 1, u'+    CCASSERT(pArray != NULL && pDelegate != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(handler != NULL, "");'), (3, 1, u'+    CCASSERT(handler != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(handler != NULL, "");'), (3, 1, u'+    CCASSERT(handler != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(handler != NULL, "");'), (3, 1, u'+    CCASSERT(handler != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(uIndex >= 0 && uIndex < 4, "");'), (3, 1, u'+    CCASSERT(uIndex >= 0 && uIndex < 4, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchDispatcher::touches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(uIndex >= 0 && uIndex < 4, "");'), (3, 1, u'+    CCASSERT(uIndex >= 0 && uIndex < 4, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(uIndex >= 0 && uIndex < 4, "");'), (3, 1, u'+    CCASSERT(uIndex >= 0 && uIndex < 4, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "touch delegate should not be null");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TouchHandler::initWithDelegate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "touch delegate should not be null");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pDelegate != NULL, "touch delegate should not be null");'), (3, 1, u'+    CCASSERT(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(animationData, "CCAnimationData not exist! ");'), (3, 1, u'+            CCASSERT(animationData, "CCAnimationData not exist! ");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(animationData, "CCAnimationData not exist! ");'), (3, 1, u'+            CCASSERT(animationData, "CCAnimationData not exist! ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(animationData, "CCAnimationData not exist! ");'), (3, 1, u'+            CCASSERT(animationData, "CCAnimationData not exist! ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(armatureData, "");'), (3, 1, u'+            CCASSERT(armatureData, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(armatureData, "");'), (3, 1, u'+            CCASSERT(armatureData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(armatureData, "");'), (3, 1, u'+            CCASSERT(armatureData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Armature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( bone != NULL, "Argument must be non-nil");'), (3, 2, u'-    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( bone != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::removeBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Armature::changeBoneParent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCASSERT(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Bone::setBoneData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(NULL != boneData, "_boneData must not be NULL");'), (3, 1, u'+    CCASSERT(NULL != boneData, "_boneData must not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( NULL == child->_parent, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Bone::addChildBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( NULL == child->_parent, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL != child, "Argument must be non-nil");'), (3, 2, u'-    CCAssert( NULL == child->_parent, "child already added. It can\'t be added again");'), (4, 1, u'+    CCASSERT( NULL != child, "Argument must be non-nil");'), (5, 1, u'+    CCASSERT( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_animationData, "_animationData can not be null");'), (3, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(_movementData, "_movementData can not be null");'), (7, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ArmatureAnimation::play
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_animationData, "_animationData can not be null");'), (3, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(_movementData, "_movementData can not be null");'), (7, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_animationData, "_animationData can not be null");'), (3, 1, u'+    CCASSERT(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(_movementData, "_movementData can not be null");'), (7, 1, u'+    CCASSERT(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DisplayManager::changeDisplayByIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCASSERT( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Exception:  MutableTexture.restore was disabled by the user.");'), (3, 1, u'+    CCASSERT(false, "Exception:  MutableTexture.restore was disabled by the user.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2DMutable::restore
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Exception:  MutableTexture.restore was disabled by the user.");'), (3, 1, u'+    CCASSERT(false, "Exception:  MutableTexture.restore was disabled by the user.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Exception:  MutableTexture.restore was disabled by the user.");'), (3, 1, u'+    CCASSERT(false, "Exception:  MutableTexture.restore was disabled by the user.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "NSInternalInconsistencyException");'), (3, 1, u'+            CCASSERT(false, "NSInternalInconsistencyException");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Texture2DMutable::apply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "NSInternalInconsistencyException");'), (3, 1, u'+            CCASSERT(false, "NSInternalInconsistencyException");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "NSInternalInconsistencyException");'), (3, 1, u'+            CCASSERT(false, "NSInternalInconsistencyException");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");'), (3, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ColliderDetector::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");'), (3, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");'), (3, 1, u'+    CCASSERT(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (3, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (3, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (3, 1, u'+        CCASSERT(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (3, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (3, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (3, 1, u'+        CCASSERT(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (3, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (3, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");'), (3, 1, u'+        CCASSERT(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DataReaderHelper::addDataFromCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(root, "XML error  or  XML is empty.");'), (3, 1, u'+    CCASSERT(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name.length() != 0, "");'), (3, 1, u'+    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *DataReaderHelper::decodeBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name.length() != 0, "");'), (3, 1, u'+    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name.length() != 0, "");'), (3, 1, u'+    CCASSERT(name.length() != 0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCASSERT(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteFrameCacheHelper::addSpriteFrameFromDict
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCASSERT(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCASSERT(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "unsupported property now");'), (3, 1, u'+                CCASSERT(false, "unsupported property now");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBAnimationManager::setAnimatedProperty
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "unsupported property now");'), (3, 1, u'+                CCASSERT(false, "unsupported property now");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "unsupported property now");'), (3, 1, u'+                CCASSERT(false, "unsupported property now");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(baseValue, "No baseValue found for property");'), (3, 1, u'+        CCASSERT(baseValue, "No baseValue found for property");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBAnimationManager::setFirstFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(baseValue, "No baseValue found for property");'), (3, 1, u'+        CCASSERT(baseValue, "No baseValue found for property");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(baseValue, "No baseValue found for property");'), (3, 1, u'+        CCASSERT(baseValue, "No baseValue found for property");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(nSeqId != -1, "Sequence id couldn\'t be found");'), (3, 1, u'+    CCASSERT(nSeqId != -1, "Sequence id couldn\'t be found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBAnimationManager::runAnimationsForSequenceIdTweenDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(nSeqId != -1, "Sequence id couldn\'t be found");'), (3, 1, u'+    CCASSERT(nSeqId != -1, "Sequence id couldn\'t be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(nSeqId != -1, "Sequence id couldn\'t be found");'), (3, 1, u'+    CCASSERT(nSeqId != -1, "Sequence id couldn\'t be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBRotateTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBRotateXTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBRotateYTo::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");'), (3, 1, u'+\tCCASSERT(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pCCBRootPath != NULL, "");'), (3, 1, u'+    CCASSERT(pCCBRootPath != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBReader::setCCBRootPath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pCCBRootPath != NULL, "");'), (3, 1, u'+    CCASSERT(pCCBRootPath != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pCCBRootPath != NULL, "");'), (3, 1, u'+    CCASSERT(pCCBRootPath != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pNode, "pNode should not be null");'), (3, 1, u'+    CCASSERT(pNode, "pNode should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: setRelativeScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pNode, "pNode should not be null");'), (3, 1, u'+    CCASSERT(pNode, "pNode should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pNode, "pNode should not be null");'), (3, 1, u'+    CCASSERT(pNode, "pNode should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::setInt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::setDouble
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::setFloat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::setBool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::setCString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(key != NULL, "Argument must be non-nil");'), (3, 1, u'+    CCASSERT(key != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not integer");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not integer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::getInt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not integer");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not integer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not integer");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not integer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not double");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not double");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::getDouble
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not double");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not double");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not double");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not double");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not float");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not float");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::getFloat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not float");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not float");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not float");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not float");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not Bool");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not Bool");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::getBool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not Bool");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not Bool");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not Bool");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not Bool");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not CString");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not CString");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComAttribute::getCString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not CString");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not CString");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(false, "Key found, type is not CString");'), (3, 1, u'+\t\tCCASSERT(false, "Key found, type is not CString");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(node != NULL, "Label must not be nil.");'), (3, 1, u'+        CCASSERT(node != NULL, "Label must not be nil.");'), (6, 2, u'-        CCAssert(backgroundSprite != NULL, "Background sprite must not be nil.");'), (7, 2, u'-        CCAssert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (8, 1, u'+        CCASSERT(backgroundSprite != NULL, "Background sprite must not be nil.");'), (9, 1, u'+        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ControlButton::initWithLabelAndBackgroundSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(node != NULL, "Label must not be nil.");'), (3, 1, u'+        CCASSERT(node != NULL, "Label must not be nil.");'), (6, 2, u'-        CCAssert(backgroundSprite != NULL, "Background sprite must not be nil.");'), (7, 2, u'-        CCAssert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (8, 1, u'+        CCASSERT(backgroundSprite != NULL, "Background sprite must not be nil.");'), (9, 1, u'+        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(node != NULL, "Label must not be nil.");'), (3, 1, u'+        CCASSERT(node != NULL, "Label must not be nil.");'), (6, 2, u'-        CCAssert(backgroundSprite != NULL, "Background sprite must not be nil.");'), (7, 2, u'-        CCAssert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");'), (8, 1, u'+        CCASSERT(backgroundSprite != NULL, "Background sprite must not be nil.");'), (9, 1, u'+        CCASSERT(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 2, u'-        CCAssert(thumbSprite,       "Thumb sprite must be not nil");'), (5, 1, u'+        CCASSERT(backgroundSprite,  "Background sprite must be not nil");'), (6, 1, u'+        CCASSERT(progressSprite,    "Progress sprite must be not nil");'), (7, 1, u'+        CCASSERT(thumbSprite,       "Thumb sprite must be not nil");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ControlSlider::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 2, u'-        CCAssert(thumbSprite,       "Thumb sprite must be not nil");'), (5, 1, u'+        CCASSERT(backgroundSprite,  "Background sprite must be not nil");'), (6, 1, u'+        CCASSERT(progressSprite,    "Progress sprite must be not nil");'), (7, 1, u'+        CCASSERT(thumbSprite,       "Thumb sprite must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 2, u'-        CCAssert(thumbSprite,       "Thumb sprite must be not nil");'), (5, 1, u'+        CCASSERT(backgroundSprite,  "Background sprite must be not nil");'), (6, 1, u'+        CCASSERT(progressSprite,    "Progress sprite must be not nil");'), (7, 1, u'+        CCASSERT(thumbSprite,       "Thumb sprite must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(minusSprite,   "Minus sprite must be not nil");'), (3, 2, u'-        CCAssert(plusSprite,    "Plus sprite must be not nil");'), (4, 1, u'+        CCASSERT(minusSprite,   "Minus sprite must be not nil");'), (5, 1, u'+        CCASSERT(plusSprite,    "Plus sprite must be not nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ControlStepper::initWithMinusSpriteAndPlusSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(minusSprite,   "Minus sprite must be not nil");'), (3, 2, u'-        CCAssert(plusSprite,    "Plus sprite must be not nil");'), (4, 1, u'+        CCASSERT(minusSprite,   "Minus sprite must be not nil");'), (5, 1, u'+        CCASSERT(plusSprite,    "Plus sprite must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(minusSprite,   "Minus sprite must be not nil");'), (3, 2, u'-        CCAssert(plusSprite,    "Plus sprite must be not nil");'), (4, 1, u'+        CCASSERT(minusSprite,   "Minus sprite must be not nil");'), (5, 1, u'+        CCASSERT(plusSprite,    "Plus sprite must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Must be numerically less than maximumValue.");'), (3, 1, u'+        CCASSERT(0, "Must be numerically less than maximumValue.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ControlStepper::setMinimumValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Must be numerically less than maximumValue.");'), (3, 1, u'+        CCASSERT(0, "Must be numerically less than maximumValue.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Must be numerically less than maximumValue.");'), (3, 1, u'+        CCASSERT(0, "Must be numerically less than maximumValue.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Must be numerically greater than minimumValue.");'), (3, 1, u'+        CCASSERT(0, "Must be numerically greater than minimumValue.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ControlStepper::setMaximumValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Must be numerically greater than minimumValue.");'), (3, 1, u'+        CCASSERT(0, "Must be numerically greater than minimumValue.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Must be numerically greater than minimumValue.");'), (3, 1, u'+        CCASSERT(0, "Must be numerically greater than minimumValue.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0,"Must be numerically greater than 0.");'), (3, 1, u'+        CCASSERT(0,"Must be numerically greater than 0.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ControlStepper::setStepValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0,"Must be numerically greater than 0.");'), (3, 1, u'+        CCASSERT(0,"Must be numerically greater than 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0,"Must be numerically greater than 0.");'), (3, 1, u'+        CCASSERT(0,"Must be numerically greater than 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(maskSprite,    "Mask must not be nil.");'), (3, 2, u'-        CCAssert(onSprite,      "onSprite must not be nil.");'), (4, 2, u'-        CCAssert(offSprite,     "offSprite must not be nil.");'), (5, 2, u'-        CCAssert(thumbSprite,   "thumbSprite must not be nil.");'), (6, 1, u'+        CCASSERT(maskSprite,    "Mask must not be nil.");'), (7, 1, u'+        CCASSERT(onSprite,      "onSprite must not be nil.");'), (8, 1, u'+        CCASSERT(offSprite,     "offSprite must not be nil.");'), (9, 1, u'+        CCASSERT(thumbSprite,   "thumbSprite must not be nil.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: ControlSwitch::initWithMaskSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(maskSprite,    "Mask must not be nil.");'), (3, 2, u'-        CCAssert(onSprite,      "onSprite must not be nil.");'), (4, 2, u'-        CCAssert(offSprite,     "offSprite must not be nil.");'), (5, 2, u'-        CCAssert(thumbSprite,   "thumbSprite must not be nil.");'), (6, 1, u'+        CCASSERT(maskSprite,    "Mask must not be nil.");'), (7, 1, u'+        CCASSERT(onSprite,      "onSprite must not be nil.");'), (8, 1, u'+        CCASSERT(offSprite,     "offSprite must not be nil.");'), (9, 1, u'+        CCASSERT(thumbSprite,   "thumbSprite must not be nil.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(maskSprite,    "Mask must not be nil.");'), (3, 2, u'-        CCAssert(onSprite,      "onSprite must not be nil.");'), (4, 2, u'-        CCAssert(offSprite,     "offSprite must not be nil.");'), (5, 2, u'-        CCAssert(thumbSprite,   "thumbSprite must not be nil.");'), (6, 1, u'+        CCASSERT(maskSprite,    "Mask must not be nil.");'), (7, 1, u'+        CCASSERT(onSprite,      "onSprite must not be nil.");'), (8, 1, u'+        CCASSERT(offSprite,     "offSprite must not be nil.");'), (9, 1, u'+        CCASSERT(thumbSprite,   "thumbSprite must not be nil.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCASSERT(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scale9Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCASSERT(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCASSERT(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCASSERT(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scale9Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCASSERT(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCASSERT(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(texture != NULL, "CCTexture must be not nil");'), (3, 1, u'+    CCASSERT(texture != NULL, "CCTexture must be not nil");'), (6, 2, u'-    CCAssert(batchnode != NULL, "CCSpriteBatchNode must be not nil");'), (7, 1, u'+    CCASSERT(batchnode != NULL, "CCSpriteBatchNode must be not nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scale9Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(texture != NULL, "CCTexture must be not nil");'), (3, 1, u'+    CCASSERT(texture != NULL, "CCTexture must be not nil");'), (6, 2, u'-    CCAssert(batchnode != NULL, "CCSpriteBatchNode must be not nil");'), (7, 1, u'+    CCASSERT(batchnode != NULL, "CCSpriteBatchNode must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(texture != NULL, "CCTexture must be not nil");'), (3, 1, u'+    CCASSERT(texture != NULL, "CCTexture must be not nil");'), (6, 2, u'-    CCAssert(batchnode != NULL, "CCSpriteBatchNode must be not nil");'), (7, 1, u'+    CCASSERT(batchnode != NULL, "CCSpriteBatchNode must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame != NULL, "Invalid spriteFrame for sprite");'), (3, 1, u'+    CCASSERT(spriteFrame != NULL, "Invalid spriteFrame for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scale9Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame != NULL, "Invalid spriteFrame for sprite");'), (3, 1, u'+    CCASSERT(spriteFrame != NULL, "Invalid spriteFrame for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame != NULL, "Invalid spriteFrame for sprite");'), (3, 1, u'+    CCASSERT(spriteFrame != NULL, "Invalid spriteFrame for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");'), (3, 1, u'+    CCASSERT((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");'), (6, 2, u'-    CCAssert(frame != NULL, "CCSpriteFrame must be non-NULL");'), (7, 1, u'+    CCASSERT(frame != NULL, "CCSpriteFrame must be non-NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scale9Sprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");'), (3, 1, u'+    CCASSERT((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");'), (6, 2, u'-    CCAssert(frame != NULL, "CCSpriteFrame must be non-NULL");'), (7, 1, u'+    CCASSERT(frame != NULL, "CCSpriteFrame must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");'), (3, 1, u'+    CCASSERT((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");'), (6, 2, u'-    CCAssert(frame != NULL, "CCSpriteFrame must be non-NULL");'), (7, 1, u'+    CCASSERT(frame != NULL, "CCSpriteFrame must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrameName != NULL, "spriteFrameName must be non-NULL");'), (3, 1, u'+    CCASSERT(spriteFrameName != NULL, "spriteFrameName must be non-NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scale9Sprite::createWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrameName != NULL, "spriteFrameName must be non-NULL");'), (3, 1, u'+    CCASSERT(spriteFrameName != NULL, "spriteFrameName must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrameName != NULL, "spriteFrameName must be non-NULL");'), (3, 1, u'+    CCASSERT(spriteFrameName != NULL, "spriteFrameName must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObj, "Invalid parameter.");'), (3, 1, u'+    CCASSERT(pObj, "Invalid parameter.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ArrayForObjectSorting::insertSortedObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObj, "Invalid parameter.");'), (3, 1, u'+    CCASSERT(pObj, "Invalid parameter.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObj, "Invalid parameter.");'), (3, 1, u'+    CCASSERT(pObj, "Invalid parameter.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(true, "CCHttpClient: unkown request type, only GET and POSt are supported");'), (3, 1, u'+                CCASSERT(true, "CCHttpClient: unkown request type, only GET and POSt are supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: networkThread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(true, "CCHttpClient: unkown request type, only GET and POSt are supported");'), (3, 1, u'+                CCASSERT(true, "CCHttpClient: unkown request type, only GET and POSt are supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(true, "CCHttpClient: unkown request type, only GET and POSt are supported");'), (3, 1, u'+                CCASSERT(true, "CCHttpClient: unkown request type, only GET and POSt are supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(s_pHttpClient, "");'), (3, 1, u'+    CCASSERT(s_pHttpClient, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: HttpClient::destroyInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(s_pHttpClient, "");'), (3, 1, u'+    CCASSERT(s_pHttpClient, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(s_pHttpClient, "");'), (3, 1, u'+    CCASSERT(s_pHttpClient, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(binaryMsg != NULL && len > 0, "parameter invalid.");'), (3, 1, u'+    CCASSERT(binaryMsg != NULL && len > 0, "parameter invalid.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WebSocket::send
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(binaryMsg != NULL && len > 0, "parameter invalid.");'), (3, 1, u'+    CCASSERT(binaryMsg != NULL && len > 0, "parameter invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(binaryMsg != NULL && len > 0, "parameter invalid.");'), (3, 1, u'+    CCASSERT(binaryMsg != NULL && len > 0, "parameter invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (3, 2, u'-    CCAssert(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");'), (4, 1, u'+    CCASSERT(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (5, 1, u'+    CCASSERT(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: WebSocket::onSocketCallback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (3, 2, u'-    CCAssert(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");'), (4, 1, u'+    CCASSERT(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (5, 1, u'+    CCASSERT(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (3, 2, u'-    CCAssert(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");'), (4, 1, u'+    CCASSERT(_wsContext == NULL || ctx == _wsContext, "Invalid context.");'), (5, 1, u'+    CCASSERT(_wsInstance == NULL || wsi == NULL || wsi == _wsInstance, "Invaild websocket instance.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsSprite::getB2Body
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsSprite::setB2Body
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsSprite::getPTMRatio
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsSprite::setPTMRatio
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call box2d methods when Chipmunk is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call box2d methods when Chipmunk is enabled");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call Chipmunk methods when Box2d is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call Chipmunk methods when Box2d is enabled");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsSprite::getCPBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call Chipmunk methods when Box2d is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call Chipmunk methods when Box2d is enabled");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call Chipmunk methods when Box2d is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call Chipmunk methods when Box2d is enabled");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call Chipmunk methods when Box2d is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call Chipmunk methods when Box2d is enabled");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PhysicsSprite::setCPBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call Chipmunk methods when Box2d is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call Chipmunk methods when Box2d is enabled");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "Can\'t call Chipmunk methods when Box2d is enabled");'), (3, 1, u'+    CCASSERT(false, "Can\'t call Chipmunk methods when Box2d is enabled");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (3, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeleton::CCSkeleton
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (3, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (3, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(atlas, "Error reading atlas file.");'), (3, 1, u'+\tCCASSERT(atlas, "Error reading atlas file.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeleton::CCSkeleton
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(atlas, "Error reading atlas file.");'), (3, 1, u'+\tCCASSERT(atlas, "Error reading atlas file.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(atlas, "Error reading atlas file.");'), (3, 1, u'+\tCCASSERT(atlas, "Error reading atlas file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (3, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeleton::CCSkeleton
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (3, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");'), (3, 1, u'+\tCCASSERT(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 2, u'-\tCCAssert(stateData, "stateData cannot be null.");'), (4, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (5, 1, u'+\tCCASSERT(stateData, "stateData cannot be null.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSkeletonAnimation::addAnimationState
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 2, u'-\tCCAssert(stateData, "stateData cannot be null.");'), (4, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (5, 1, u'+\tCCASSERT(stateData, "stateData cannot be null.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 2, u'-\tCCAssert(stateData, "stateData cannot be null.");'), (4, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (5, 1, u'+\tCCASSERT(stateData, "stateData cannot be null.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeletonAnimation::setAnimationStateData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeletonAnimation::setMix
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeletonAnimation::setAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSkeletonAnimation::addAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (3, 1, u'+\tCCASSERT(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "error test will never go here.");'), (3, 1, u'+        CCASSERT(0, "error test will never go here.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: WebSocketTestLayer::onOpen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "error test will never go here.");'), (3, 1, u'+        CCASSERT(0, "error test will never go here.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "error test will never go here.");'), (3, 1, u'+        CCASSERT(0, "error test will never go here.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(numObserversRemoved >= 3, "All observers were not removed!");'), (3, 1, u'+    CCASSERT(numObserversRemoved >= 3, "All observers were not removed!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: NotificationCenterTest::toExtensionsMainLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(numObserversRemoved >= 3, "All observers were not removed!");'), (3, 1, u'+    CCASSERT(numObserversRemoved >= 3, "All observers were not removed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(numObserversRemoved >= 3, "All observers were not removed!");'), (3, 1, u'+    CCASSERT(numObserversRemoved >= 3, "All observers were not removed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(ret == 0, "fwrite function returned nonzero value");'), (3, 1, u'+        CCASSERT(ret == 0, "fwrite function returned nonzero value");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TestSearchPath::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(ret == 0, "fwrite function returned nonzero value");'), (3, 1, u'+        CCASSERT(ret == 0, "fwrite function returned nonzero value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(ret == 0, "fwrite function returned nonzero value");'), (3, 1, u'+        CCASSERT(ret == 0, "fwrite function returned nonzero value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (3, 1, u'+    CCASSERT(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: PremultipliedAlphaTest::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (3, 1, u'+    CCASSERT(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (3, 1, u'+    CCASSERT(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCASSERT( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNodeReorder::SpriteBatchNodeReorder
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCASSERT( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCASSERT( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCASSERT( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNodeReorder::SpriteBatchNodeReorder
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCASSERT( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCASSERT( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(str != NULL, "Unable to open file");'), (3, 1, u'+    CCASSERT(str != NULL, "Unable to open file");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXOrthoFromXMLTest::TMXOrthoFromXMLTest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(str != NULL, "Unable to open file");'), (3, 1, u'+    CCASSERT(str != NULL, "Unable to open file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(str != NULL, "Unable to open file");'), (3, 1, u'+    CCASSERT(str != NULL, "Unable to open file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCASSERT(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Paddle::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCASSERT(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCASSERT(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCASSERT(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Paddle::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCASSERT(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCASSERT(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "not supported type");'), (3, 1, u'+                CCASSERT(false, "not supported type");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: jsval_to_ccarray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "not supported type");'), (3, 1, u'+                CCASSERT(false, "not supported type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "not supported type");'), (3, 1, u'+                CCASSERT(false, "not supported type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (3, 1, u'+                CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccarray_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (3, 1, u'+                CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (3, 1, u'+                CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (3, 1, u'+                CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccdictionary_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (3, 1, u'+                CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (3, 1, u'+                CCASSERT(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "not supported type");'), (3, 1, u'+            CCASSERT(false, "not supported type");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: jsval_to_ccdictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "not supported type");'), (3, 1, u'+            CCASSERT(false, "not supported type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(false, "not supported type");'), (3, 1, u'+            CCASSERT(false, "not supported type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sTouchDelegateMap.find(pJSObj) == sTouchDelegateMap.end(), "");'), (3, 1, u'+    CCASSERT(sTouchDelegateMap.find(pJSObj) == sTouchDelegateMap.end(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSTouchDelegate::setDelegateForJSObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sTouchDelegateMap.find(pJSObj) == sTouchDelegateMap.end(), "");'), (3, 1, u'+    CCASSERT(sTouchDelegateMap.find(pJSObj) == sTouchDelegateMap.end(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sTouchDelegateMap.find(pJSObj) == sTouchDelegateMap.end(), "");'), (3, 1, u'+    CCASSERT(sTouchDelegateMap.find(pJSObj) == sTouchDelegateMap.end(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(iter != sTouchDelegateMap.end(), "");'), (3, 1, u'+    CCASSERT(iter != sTouchDelegateMap.end(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSTouchDelegate::removeDelegateForJSObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(iter != sTouchDelegateMap.end(), "");'), (3, 1, u'+    CCASSERT(iter != sTouchDelegateMap.end(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(iter != sTouchDelegateMap.end(), "");'), (3, 1, u'+    CCASSERT(iter != sTouchDelegateMap.end(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSTouchDelegate::ccTouchBegan
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSTouchDelegate::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSTouchDelegate::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSTouchDelegate::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(p, "js object has been unrooted.");'), (3, 1, u'+    CCASSERT(p, "js object has been unrooted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (3, 1, u'+        CCASSERT(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSScheduleWrapper::setTargetForSchedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (3, 1, u'+        CCASSERT(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (3, 1, u'+        CCASSERT(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (3, 1, u'+    CCASSERT(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSScheduleWrapper::setTargetForJSObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (3, 1, u'+    CCASSERT(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (3, 1, u'+    CCASSERT(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(nativeTargetsCount == jsfuncTargetCount, "");'), (3, 1, u'+    CCASSERT(nativeTargetsCount == jsfuncTargetCount, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSScheduleWrapper::dump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(nativeTargetsCount == jsfuncTargetCount, "");'), (3, 1, u'+    CCASSERT(nativeTargetsCount == jsfuncTargetCount, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(nativeTargetsCount == jsfuncTargetCount, "");'), (3, 1, u'+    CCASSERT(nativeTargetsCount == jsfuncTargetCount, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_pPureJSTarget == NULL, "The pure js target has been set");'), (3, 1, u'+    CCASSERT(_pPureJSTarget == NULL, "The pure js target has been set");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSScheduleWrapper::setPureJSTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_pPureJSTarget == NULL, "The pure js target has been set");'), (3, 1, u'+    CCASSERT(_pPureJSTarget == NULL, "The pure js target has been set");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_pPureJSTarget == NULL, "The pure js target has been set");'), (3, 1, u'+    CCASSERT(_pPureJSTarget == NULL, "The pure js target has been set");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(OBJECT_TO_JSVAL(tmpObj) == wrapper->getJSCallbackThis(), "Wrong target object.");'), (3, 1, u'+                    CCASSERT(OBJECT_TO_JSVAL(tmpObj) == wrapper->getJSCallbackThis(), "Wrong target object.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: js_cocos2dx_CCNode_unscheduleUpdate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(OBJECT_TO_JSVAL(tmpObj) == wrapper->getJSCallbackThis(), "Wrong target object.");'), (3, 1, u'+                    CCASSERT(OBJECT_TO_JSVAL(tmpObj) == wrapper->getJSCallbackThis(), "Wrong target object.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(OBJECT_TO_JSVAL(tmpObj) == wrapper->getJSCallbackThis(), "Wrong target object.");'), (3, 1, u'+                    CCASSERT(OBJECT_TO_JSVAL(tmpObj) == wrapper->getJSCallbackThis(), "Wrong target object.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(argv[0] == wrapper->getJSCallbackThis(), "Wrong target object.");'), (3, 1, u'+                    CCASSERT(argv[0] == wrapper->getJSCallbackThis(), "Wrong target object.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: js_CCScheduler_unscheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(argv[0] == wrapper->getJSCallbackThis(), "Wrong target object.");'), (3, 1, u'+                    CCASSERT(argv[0] == wrapper->getJSCallbackThis(), "Wrong target object.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(argv[0] == wrapper->getJSCallbackThis(), "Wrong target object.");'), (3, 1, u'+                    CCASSERT(argv[0] == wrapper->getJSCallbackThis(), "Wrong target object.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "NOT IMPLEMENTED");'), (3, 1, u'+\tCCASSERT(false, "NOT IMPLEMENTED");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: JSB_cpRecenterPoly
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "NOT IMPLEMENTED");'), (3, 1, u'+\tCCASSERT(false, "NOT IMPLEMENTED");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "NOT IMPLEMENTED");'), (3, 1, u'+\tCCASSERT(false, "NOT IMPLEMENTED");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( !jsb_get_proxy_for_jsobject(obj), "Already added. abort");'), (3, 1, u'+\tCCASSERT( !jsb_get_proxy_for_jsobject(obj), "Already added. abort");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: jsb_set_proxy_for_jsobject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( !jsb_get_proxy_for_jsobject(obj), "Already added. abort");'), (3, 1, u'+\tCCASSERT( !jsb_get_proxy_for_jsobject(obj), "Already added. abort");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( !jsb_get_proxy_for_jsobject(obj), "Already added. abort");'), (3, 1, u'+\tCCASSERT( !jsb_get_proxy_for_jsobject(obj), "Already added. abort");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( !jsb_get_jsobject_for_proxy(proxy), "Already added. abort");'), (3, 1, u'+\tCCASSERT( !jsb_get_jsobject_for_proxy(proxy), "Already added. abort");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: jsb_set_jsobject_for_proxy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( !jsb_get_jsobject_for_proxy(proxy), "Already added. abort");'), (3, 1, u'+\tCCASSERT( !jsb_get_jsobject_for_proxy(proxy), "Already added. abort");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( !jsb_get_jsobject_for_proxy(proxy), "Already added. abort");'), (3, 1, u'+\tCCASSERT( !jsb_get_jsobject_for_proxy(proxy), "Already added. abort");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(proxy, "Invalid proxy for JSObject");'), (3, 1, u'+\tCCASSERT(proxy, "Invalid proxy for JSObject");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: jsb_del_c_proxy_for_jsobject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(proxy, "Invalid proxy for JSObject");'), (3, 1, u'+\tCCASSERT(proxy, "Invalid proxy for JSObject");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(proxy, "Invalid proxy for JSObject");'), (3, 1, u'+\tCCASSERT(proxy, "Invalid proxy for JSObject");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(proxy, "No memory for proxy");'), (3, 1, u'+\tCCASSERT(proxy, "No memory for proxy");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: jsb_set_c_proxy_for_jsobject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(proxy, "No memory for proxy");'), (3, 1, u'+\tCCASSERT(proxy, "No memory for proxy");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(proxy, "No memory for proxy");'), (3, 1, u'+\tCCASSERT(proxy, "No memory for proxy");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(jsobj, "Invalid object");'), (3, 1, u'+\t\tCCASSERT(jsobj, "Invalid object");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: c_class_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(jsobj, "Invalid object");'), (3, 1, u'+\t\tCCASSERT(jsobj, "Invalid object");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(jsobj, "Invalid object");'), (3, 1, u'+\t\tCCASSERT(jsobj, "Invalid object");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( sizeof(int)==4, "Error!");'), (3, 1, u'+\tCCASSERT( sizeof(int)==4, "Error!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: long_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( sizeof(int)==4, "Error!");'), (3, 1, u'+\tCCASSERT( sizeof(int)==4, "Error!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( sizeof(int)==4, "Error!");'), (3, 1, u'+\tCCASSERT( sizeof(int)==4, "Error!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( sizeof(long long)==8, "Error!");'), (3, 1, u'+\tCCASSERT( sizeof(long long)==8, "Error!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: longlong_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( sizeof(long long)==8, "Error!");'), (3, 1, u'+\tCCASSERT( sizeof(long long)==8, "Error!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( sizeof(long long)==8, "Error!");'), (3, 1, u'+\tCCASSERT( sizeof(long long)==8, "Error!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pixelFormat != Texture2DPixelFormat(-1) && pixelFormat != kTexture2DPixelFormat_Automatic, "the \\"pixelFormat\\" param must be a certain value!");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: Texture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pixelFormat != Texture2DPixelFormat(-1) && pixelFormat != kTexture2DPixelFormat_Automatic, "the \\"pixelFormat\\" param must be a certain value!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pixelFormat != Texture2DPixelFormat(-1) && pixelFormat != kTexture2DPixelFormat_Automatic, "the \\"pixelFormat\\" param must be a certain value!");')]
===========================================
Class:	class SoundFx { 	class SoundFx 
Class: class CC_DLL ImageHelper { 
Class:  class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-  assert(width > 0 && height > 0 && stride >= width);'), (55, 2, u'-  assert(data != NULL && output != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 2, u'-  assert(dec->thread_ctx_.filter_row_);'), (219, 2, u'-      assert(!(delta_y & 1));'), (268, 2, u'-    assert(worker->status_ == OK);'), (474, 2, u'-  assert((yuv_size & ALIGN_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-      assert(last_part >= 0);'), (138, 2, u'-  assert(mem->mode_ == MEM_MODE_APPEND);'), (162, 2, u'-  assert(mem->end_ <= mem->buf_size_);'), (172, 2, u'-  assert(mem->mode_ == MEM_MODE_MAP);'), (192, 2, u'-  assert(mem);'), (205, 2, u'-  assert(mem->mode_ == expected);   // mode is ok'), (258, 2, u'-  assert(mem->start_ <= mem->end_);'), (336, 2, u'-  assert(!idec->is_lossless_);'), (337, 2, u'-  assert(mem->part0_buf_ == NULL);'), (338, 2, u'-  assert(psize > 0);'), (339, 2, u'-  assert(psize <= mem->part0_size_);  // Format limit: no need for runtime check'), (409, 2, u'-  assert(dec->ready_);'), (435, 2, u'-        assert(idec->mem_.start_ <= idec->mem_.end_);'), (466, 2, u'-  assert(idec->is_lossless_);'), (489, 2, u'-  assert(idec->is_lossless_);'), (646, 2, u'-  assert(idec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(369, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (370, 2, u'-    assert(p->scaler_u.y_accum == p->scaler_v.y_accum);'), (398, 2, u'-    assert(u_lines_in == v_lines_in);'), (420, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (449, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (598, 2, u'-  assert(!(io->mb_y & 1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-  assert(dec);'), (25, 2, u'-  assert(dec->layer_data_size_ > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-  assert(hdr != NULL);'), (151, 2, u'-  assert(br != NULL);'), (152, 2, u'-  assert(hdr != NULL);'), (288, 2, u'-    assert(dec->alpha_data_size_ == 0);'), (300, 2, u"-  assert(headers.data_size >= headers.offset);  // WebPParseHeaders' guarantee"), (743, 2, u'-  assert(dec->ready_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 2, u'-  assert(node != NULL);'), (169, 2, u'-    assert(node != NULL);'), (340, 2, u'-  assert(num_htree_groups <= 0x10000);'), (393, 2, u'-  assert(dec->rescaler_memory == NULL);'), (577, 2, u'-  assert(y_start < y_end);'), (578, 2, u'-  assert(io->crop_left < io->crop_right);'), (609, 2, u'-  assert(meta_index < hdr->num_htree_groups_);'), (670, 2, u'-      assert(dec->last_out_row_ <= output->height);'), (676, 2, u'-  assert(dec->last_row_ <= dec->height_);'), (696, 2, u'-  assert(htree_group != NULL);'), (766, 2, u'-      assert(color_cache != NULL);'), (847, 2, u'-  assert(dec->next_transform_ <= NUM_TRANSFORMS);'), (874, 2, u"-      assert(0);    // can't happen"), (885, 2, u'-  assert(hdr);'), (890, 2, u'-  assert(hdr);'), (1031, 2, u'-      assert(data == NULL);'), (1032, 2, u'-      assert(is_level0);'), (1052, 2, u'-  assert(dec->width_ <= final_width);'), (1150, 2, u'-   assert(dec->status_ != VP8_STATUS_OK);'), (1162, 2, u'-  assert(io != NULL);'), (1164, 2, u'-  assert(params != NULL);'), (1166, 2, u'-  assert(dec->output_ != NULL);'), (1192, 2, u'-  assert(dec->status_ != VP8_STATUS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-  assert(data != NULL);'), (66, 2, u'-  assert(data_size != NULL);'), (67, 2, u'-  assert(riff_size != NULL);'), (104, 2, u'-  assert(data != NULL);'), (105, 2, u'-  assert(data_size != NULL);'), (106, 2, u'-  assert(found_vp8x != NULL);'), (161, 2, u'-  assert(data != NULL);'), (162, 2, u'-  assert(data_size != NULL);'), (166, 2, u'-  assert(alpha_data != NULL);'), (167, 2, u'-  assert(alpha_size != NULL);'), (232, 2, u'-  assert(data != NULL);'), (233, 2, u'-  assert(data_size != NULL);'), (234, 2, u'-  assert(chunk_size != NULL);'), (235, 2, u'-  assert(is_lossless != NULL);'), (366, 2, u'-    assert((uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD);'), (367, 2, u'-    assert(headers->offset == headers->data_size - data_size);'), (373, 2, u'-  assert(headers != NULL);'), (405, 2, u'-  assert(params != NULL);'), (610, 2, u'-    assert(buf->u_stride == buf->v_stride);'), (616, 2, u'-  assert(features != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(961, 2, u'-  assert(row_start < row_end);'), (962, 2, u'-  assert(row_end <= transform->ysize_);'), (1132, 2, u'-      assert(0);          // Code flow should not reach here.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 2, u'-  assert(len > 0);                                                             \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 2, u'-  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (115, 2, u'-  assert(filter >= 0 && filter < WEBP_FILTER_LAST);'), (116, 2, u'-  assert(method >= ALPHA_NO_COMPRESSION);'), (117, 2, u'-  assert(method <= ALPHA_LOSSLESS_COMPRESSION);'), (118, 2, u'-  assert(sizeof(header) == ALPHA_HEADER_LEN);'), (175, 2, u'-  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (176, 2, u'-  assert(enc != NULL && pic != NULL && pic->a != NULL);'), (177, 2, u'-  assert(output != NULL && output_size != NULL);'), (178, 2, u'-  assert(width > 0 && height > 0);'), (179, 2, u'-  assert(pic->a_stride >= width);'), (180, 2, u'-  assert(filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert((uint64_t)(w * h) == (uint64_t)w * h);   // no overflow, as per spec'), (135, 2, u'-  assert(mid <= max && mid >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 2, u'-  assert(refs != NULL);'), (161, 2, u'-  assert(xsize > 0);'), (583, 2, u'-    assert(k >= 1);'), (596, 2, u'-    assert(k >= 1);'), (635, 2, u'-      assert(len == maxlen);'), (664, 2, u'-  assert(size <= refs->max_size);'), (836, 2, u'-  assert(pixel_index == xsize * ysize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 2, u'-  assert(nb <= total);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(230, 2, u'-  assert(histo_bits > 0);'), (266, 2, u'-  assert(in->size <= out->size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 2, u'-  assert(src != NULL && dst != NULL);'), (657, 2, u'-    assert(step >= 4);'), (704, 2, u'-    assert(step >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(251, 2, u'-    assert(expn > 0.);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-  assert(riff_size == (uint32_t)riff_size);'), (71, 2, u'-  assert(IsVP8XNeeded(enc));'), (72, 2, u'-  assert(pic->width >= 1 && pic->height >= 1);'), (73, 2, u'-  assert(pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE);'), (95, 2, u'-  assert(enc->has_alpha_);'), (120, 2, u'-  assert(vp8_size == (uint32_t)vp8_size);'), (292, 2, u'-    assert(enc->use_layer_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(145, 2, u'-  assert(pic != NULL && pic->argb != NULL);'), (358, 2, u'-      assert(trimmed_length >= 2);'), (483, 2, u'-  assert(histogram_image->size == 1);'), (530, 2, u'-  assert(histogram_bits >= MIN_HUFFMAN_BITS);'), (531, 2, u'-  assert(histogram_bits <= MAX_HUFFMAN_BITS);'), (682, 2, u'-  assert(pred_bits >= 2);'), (703, 2, u'-  assert(ccolor_transform_bits >= 2);'), (739, 2, u'-  assert(width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION);'), (873, 2, u'-  assert(palette_size >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(314, 2, u'-  assert((int)error < VP8_ENC_ERROR_LAST);'), (315, 2, u'-  assert((int)error >= VP8_ENC_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  assert(mux != NULL);'), (79, 2, u'-  assert(!IsWPI(kChunks[idx].id));'), (103, 2, u'-  assert(mux != NULL);'), (104, 2, u'-  assert(size <= MAX_CHUNK_PAYLOAD);'), (105, 2, u'-  assert(idx != IDX_NIL);'), (125, 2, u'-  assert(width > 0 && height > 0 && duration > 0);'), (162, 2, u'-    assert(wpi != NULL && wpi->img_ != NULL);'), (175, 2, u'-  assert(chunk_list);'), (444, 2, u'-  assert(idx == IDX_FRAME || idx == IDX_TILE);'), (467, 2, u'-  assert(frame_tile_chunk != NULL);'), (468, 2, u'-  assert(tag == kChunks[IDX_FRAME].tag || tag ==  kChunks[IDX_TILE].tag);'), (483, 2, u'-  assert(image_chunk != NULL);'), (484, 2, u'-  assert(tag == kChunks[IDX_VP8].tag || tag ==  kChunks[IDX_VP8L].tag);'), (517, 2, u'-  assert(mux != NULL);'), (518, 2, u'-  assert(width != NULL && height != NULL);'), (521, 2, u'-  assert(wpi != NULL);'), (522, 2, u'-  assert(wpi->img_ != NULL);'), (536, 2, u'-      assert(x_offset < MAX_POSITION_OFFSET);'), (537, 2, u'-      assert(y_offset < MAX_POSITION_OFFSET);'), (580, 2, u'-  assert(mux != NULL);'), (691, 2, u'-  assert(dst == data + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-  assert(chunk);'), (106, 2, u'-  assert(chunk_list);'), (193, 2, u'-  assert(chunk);'), (194, 2, u'-  assert(chunk->tag_ != NIL_TAG);'), (197, 2, u'-  assert(chunk_size == (uint32_t)chunk_size);'), (245, 2, u'-  assert(wpi);'), (284, 2, u'-  assert(wpi_list);'), (288, 2, u'-  assert(id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE ||'), (290, 2, u'-  assert(id != WEBP_CHUNK_IMAGE || nth == 1);'), (356, 2, u'-  assert(wpi_list);'), (369, 2, u'-  assert(wpi_list);'), (370, 2, u'-  assert(wpi);'), (405, 2, u'-  assert(wpi);'), (425, 2, u'-    assert(images->img_ != NULL);'), (437, 2, u'-  assert(size == (uint32_t)size);'), (443, 2, u'-  assert(mux != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-  assert(mux != NULL);'), (39, 2, u'-  assert(!IsWPI(kChunks[idx].id));'), (149, 2, u'-      assert(wpi_chunk_ptr != NULL);'), (221, 2, u'-  assert(width >= 1 && height >= 1);'), (222, 2, u'-  assert(width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE);'), (223, 2, u'-  assert(width * (uint64_t)height < MAX_IMAGE_AREA);'), (253, 2, u'-    assert(wpi->img_ != NULL);'), (265, 2, u'-  assert(dst == data + size);'), (287, 2, u'-  assert(err == WEBP_MUX_OK);  // Already tested above.'), (339, 2, u'-  assert(wpi->header_ != NULL);  // As MuxImageGetNth() already checked header_.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-  assert(br != NULL);'), (26, 2, u'-  assert(start != NULL);'), (27, 2, u'-  assert(start <= end);'), (71, 2, u'-  assert(br != NULL && br->buf_ != NULL);'), (111, 2, u'-  assert(br != NULL);'), (112, 2, u'-  assert(start != NULL);'), (113, 2, u"-  assert(length < 0xfffffff8u);   // can't happen with a RIFF chunk."), (130, 2, u'-  assert(br != NULL);'), (131, 2, u'-  assert(buf != NULL);'), (132, 2, u"-  assert(len < 0xfffffff8u);   // can't happen with a RIFF chunk."), (191, 2, u'-  assert(n_bits >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-  assert(bw->nb_bits_ >= 0);'), (178, 2, u'-  assert(data);'), (265, 2, u'-    assert(n_bits <= 25);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-  assert(cc != NULL);'), (27, 2, u'-  assert(hash_bits > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-  assert(in != NULL);                                       \\'), (26, 2, u'-  assert(out != NULL);                                      \\'), (27, 2, u'-  assert(width > 0);                                        \\'), (28, 2, u'-  assert(height > 0);                                       \\'), (29, 2, u'-  assert(bpp > 0);                                          \\'), (30, 2, u'-  assert(stride >= width * bpp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert(children - node == (int)(children - node));'), (47, 2, u'-  assert(tree != NULL);'), (79, 2, u'-  assert(code_lengths != NULL);'), (80, 2, u'-  assert(code_lengths_size > 0);'), (81, 2, u'-  assert(huff_codes != NULL);'), (150, 2, u'-  assert(tree != NULL);'), (151, 2, u'-  assert(code_lengths != NULL);'), (210, 2, u'-  assert(tree != NULL);'), (211, 2, u'-  assert(code_lengths != NULL);'), (212, 2, u'-  assert(codes != NULL);'), (213, 2, u'-  assert(symbols != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 2, u'-  assert(tree_size_orig <= (1 << (tree_depth_limit - 1)));'), (284, 2, u'-  assert(value <= MAX_ALLOWED_CODE_LENGTH);'), (353, 2, u'-  assert(tokens != NULL);'), (367, 2, u'-    assert(tokens <= ending_token);'), (401, 2, u'-  assert(tree != NULL);'), (405, 2, u'-    assert(code_length <= MAX_ALLOWED_CODE_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-  assert(inv_q_level[0] == min_s);'), (74, 2, u'-  assert(inv_q_level[num_levels - 1] == max_s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 2, u'-  assert(worker->status_ <= OK);'), (216, 2, u'-  assert(!ok || (worker->status_ == OK));'), (240, 2, u'-  assert(worker->status_ == NOT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (13, 2, u'-    CCAssert(pTarget, "Argument target must be non-NULL");'), (14, 1, u'+    CCAssert(selector, "Argument selector must be non-NULL");'), (15, 1, u'+    CCAssert(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: Scheduler::removeHashElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (13, 2, u'-    CCAssert(pTarget, "Argument target must be non-NULL");'), (14, 1, u'+    CCAssert(selector, "Argument selector must be non-NULL");'), (15, 1, u'+    CCAssert(target, "Argument target must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (13, 2, u'-    CCAssert(pTarget, "Argument target must be non-NULL");'), (14, 1, u'+    CCAssert(selector, "Argument selector must be non-NULL");'), (15, 1, u'+    CCAssert(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pElement->paused == bPaused, "");'), (3, 1, u'+        CCAssert(element->paused == paused, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Scheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pElement->paused == bPaused, "");'), (3, 1, u'+        CCAssert(element->paused == paused, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pElement->paused == bPaused, "");'), (3, 1, u'+        CCAssert(element->paused == paused, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (6, 2, u'-    CCAssert(pTarget, "Argument target must be non-NULL");'), (7, 1, u'+    CCAssert(selector, "Argument selector must be non-NULL");'), (8, 1, u'+    CCAssert(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Scheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (6, 2, u'-    CCAssert(pTarget, "Argument target must be non-NULL");'), (7, 1, u'+    CCAssert(selector, "Argument selector must be non-NULL");'), (8, 1, u'+    CCAssert(target, "Argument target must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (6, 2, u'-    CCAssert(pTarget, "Argument target must be non-NULL");'), (7, 1, u'+    CCAssert(selector, "Argument selector must be non-NULL");'), (8, 1, u'+    CCAssert(target, "Argument target must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pTarget != NULL, "");'), (6, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Scheduler::unscheduleScriptEntry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pTarget != NULL, "");'), (6, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pTarget != NULL, "");'), (6, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(pElementUpdate->entry != NULL, "");'), (11, 1, u'+        CCAssert(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Scheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(pElementUpdate->entry != NULL, "");'), (11, 1, u'+        CCAssert(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(pElementUpdate->entry != NULL, "");'), (11, 1, u'+        CCAssert(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pTarget != NULL, "");'), (6, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Scheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pTarget != NULL, "");'), (6, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pTarget != NULL, "");'), (6, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(pElementUpdate->entry != NULL, "");'), (11, 1, u'+        CCAssert(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: Scheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(pElementUpdate->entry != NULL, "");'), (11, 1, u'+        CCAssert(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(pElementUpdate->entry != NULL, "");'), (11, 1, u'+        CCAssert(elementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( pTarget != NULL, "target must be non nil" );'), (6, 1, u'+    CCAssert( target != NULL, "target must be non nil" );')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: Scheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( pTarget != NULL, "target must be non nil" );'), (6, 1, u'+    CCAssert( target != NULL, "target must be non nil" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( pTarget != NULL, "target must be non nil" );'), (6, 1, u'+    CCAssert( target != NULL, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pTarget != NULL, "");'), (7, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ActionManager::resumeTargets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pTarget != NULL, "");'), (7, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pTarget != NULL, "");'), (7, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pTarget != NULL, "");'), (7, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ActionManager::removeAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pTarget != NULL, "");'), (7, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(pTarget != NULL, "");'), (7, 1, u'+    CCAssert(target != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(dynamic_cast<ActionTweenDelegate*>(pTarget), "target must implement ActionTweenDelegate");'), (7, 1, u'+    CCAssert(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: *ActionTween::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(dynamic_cast<ActionTweenDelegate*>(pTarget), "target must implement ActionTweenDelegate");'), (7, 1, u'+    CCAssert(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(dynamic_cast<ActionTweenDelegate*>(pTarget), "target must implement ActionTweenDelegate");'), (7, 1, u'+    CCAssert(dynamic_cast<ActionTweenDelegate*>(target), "target must implement ActionTweenDelegate");')]
===========================================
Class:class GLNode:public Node { 
Class:class LuaScrollView:public ScrollView,public ScrollViewDelegate  LuaScrollView::~LuaScrollView() public:     virtual ~LuaScrollView()     {     
Class:class LuaWebSocket: public WebSocket,public WebSocket::Delegate   LuaWebSocket::~LuaWebSocket() public:     virtual ~LuaWebSocket()     {     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(135, 2, u'-        CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");'), (152, 1, u'+    CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 79
Total del: 80
Header: Texture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(135, 2, u'-        CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");'), (152, 1, u'+    CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(135, 2, u'-        CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");'), (152, 1, u'+    CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
Class: class ContactListener : public b2ContactListener { 
Class: class ContactListener : public b2ContactListener { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
Total add: 3
Total del: 4
Header: Sprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            CCAssert(isOK, "The 2x2 empty texture was created unsuccessfully.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(PointZero),'), (3, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(Point::ZERO),')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(PointZero),'), (3, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(Point::ZERO),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(PointZero),'), (3, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(Point::ZERO),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pos.equals(PointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCAssert(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TMXLayer::calculateLayerOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pos.equals(PointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCAssert(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pos.equals(PointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCAssert(pos.equals(Point::ZERO), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::getInstance()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (3, 1, u'+    CCAssert((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Scale9Sprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::getInstance()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (3, 1, u'+    CCAssert((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::getInstance()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (3, 1, u'+    CCAssert((SpriteFrameCache::getInstance()) != NULL, "SpriteFrameCache::getInstance() must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::getInstance()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (3, 1, u'+    CCAssert((SpriteFrameCache::getInstance()) != NULL, "sharedSpriteFrameCache must be non-NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Scale9Sprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (3, 1, u'+    CCAssert((SpriteFrameCache::getInstance()) != NULL, "sharedSpriteFrameCache must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert((SpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (3, 1, u'+    CCAssert((SpriteFrameCache::getInstance()) != NULL, "sharedSpriteFrameCache must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-            CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Total add: 12
Total del: 64
Header: Texture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-            CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-            CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            CCAssert(false, "Not supported alignment format!");'), (55, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Total add: 28
Total del: 28
Header: Texture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            CCAssert(false, "Not supported alignment format!");'), (55, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            CCAssert(false, "Not supported alignment format!");'), (55, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");'), (6, 1, u'+        CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 14
Total del: 2
Header: Texture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");'), (6, 1, u'+        CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");'), (6, 1, u'+        CCAssert(requestUnsupported == false, "Currently shadow and stroke only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: createAudioPlayerBySource
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pZone == NULL, "CCArray should not be inherited.");')]
===========================================
===========================================
Total add: 22
Total del: 11
Header: Array::~Array
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pZone == NULL, "CCArray should not be inherited.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pZone == NULL, "CCArray should not be inherited.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (7, 1, u'+    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Texture2D::hasMipmaps
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (7, 1, u'+    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (7, 1, u'+    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams.wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: createAudioPlayerBySource
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: OpenSLEngine::setEffectLooping
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: OpenSLEngine::setEffectsVolume
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
Class:class AlutDecoder : public OpenALDecoder class AlutDecoder : public OpenALDecoder
Class: class DataRaii { 
Class:    class MpgOpenRaii     class MpgOpenRaii
Class:    class OggRaii     class OggRaii
Class: class AudioSlider : public Node     std::string testItems[] = {     std::string testItems[] = 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-    assert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (39, 2, u'-    assert(pthread_mutex_init(&g_qMutex, NULL) == 0);')]
===========================================
===========================================
Total add: 12
Total del: 19
Header: JSBDebug_UnlockExecution
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-    assert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (39, 2, u'-    assert(pthread_mutex_init(&g_qMutex, NULL) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-    assert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (39, 2, u'-    assert(pthread_mutex_init(&g_qMutex, NULL) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSCAssert( sizeof(long)==8, @"Error!");'), (4, 1, u'+\tassert( sizeof(long)==8);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: long_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSCAssert( sizeof(long)==8, @"Error!");'), (4, 1, u'+\tassert( sizeof(long)==8);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSCAssert( sizeof(long)==8, @"Error!");'), (4, 1, u'+\tassert( sizeof(long)==8);')]
===========================================
Class: class WsThreadEntry { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->m_pParentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBone::addChildBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->m_pParentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->m_pParentBone, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+    CCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: TextureCache::TextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+    CCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+    CCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (11, 1, u'+\tCCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: TextureCache::sharedTextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (11, 1, u'+\tCCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (11, 1, u'+\tCCAssert(_sharedTextureCache == nullptr, "Attempted to allocate a second instance of a singleton.");')]
===========================================
Class: class LuaTabTableViewDelegate:public Node,public TableViewDelegate { 
Class: class LuaTableViewDataSource:public Node,public TableViewDataSource { 
Class: class LuaScrollViewDelegate:public Node,public ScrollViewDelegate { 
Class: class LuaTabTableViewDelegate:public Node,public TableViewDelegate { 
Class: class LuaTableViewDataSource:public Node,public TableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaEngine::handleAssert(const char *msg)'), (3, 1, u'+bool LuaEngine::handleAssert(const char *msg)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLuaEngine::executeEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaEngine::handleAssert(const char *msg)'), (3, 1, u'+bool LuaEngine::handleAssert(const char *msg)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaEngine::handleAssert(const char *msg)'), (3, 1, u'+bool LuaEngine::handleAssert(const char *msg)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaStack::handleAssert(const char *msg)'), (3, 1, u'+bool LuaStack::handleAssert(const char *msg)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLuaStack::executeFunctionByHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaStack::handleAssert(const char *msg)'), (3, 1, u'+bool LuaStack::handleAssert(const char *msg)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaStack::handleAssert(const char *msg)'), (3, 1, u'+bool LuaStack::handleAssert(const char *msg)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(false, "Exception:  CCMutableTexture.restore was disabled by the user.");'), (5, 1, u'+    CCAssert(false, "Exception:  MutableTexture.restore was disabled by the user.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTexture2DMutable::restore
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(false, "Exception:  CCMutableTexture.restore was disabled by the user.");'), (5, 1, u'+    CCAssert(false, "Exception:  MutableTexture.restore was disabled by the user.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(false, "Exception:  CCMutableTexture.restore was disabled by the user.");'), (5, 1, u'+    CCAssert(false, "Exception:  MutableTexture.restore was disabled by the user.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(_armarureDatas, "create CCArmatureDataManager::_armarureDatas fail!");'), (5, 1, u'+        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (9, 2, u'-        CCAssert(_animationDatas, "create CCArmatureDataManager::_animationDatas fail!");'), (11, 1, u'+        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (15, 2, u'-        CCAssert(_textureDatas, "create CCArmatureDataManager::_textureDatas fail!");'), (17, 1, u'+        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(_armarureDatas, "create CCArmatureDataManager::_armarureDatas fail!");'), (5, 1, u'+        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (9, 2, u'-        CCAssert(_animationDatas, "create CCArmatureDataManager::_animationDatas fail!");'), (11, 1, u'+        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (15, 2, u'-        CCAssert(_textureDatas, "create CCArmatureDataManager::_textureDatas fail!");'), (17, 1, u'+        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(_armarureDatas, "create CCArmatureDataManager::_armarureDatas fail!");'), (5, 1, u'+        CCAssert(_armarureDatas, "create ArmatureDataManager::_armarureDatas fail!");'), (9, 2, u'-        CCAssert(_animationDatas, "create CCArmatureDataManager::_animationDatas fail!");'), (11, 1, u'+        CCAssert(_animationDatas, "create ArmatureDataManager::_animationDatas fail!");'), (15, 2, u'-        CCAssert(_textureDatas, "create CCArmatureDataManager::_textureDatas fail!");'), (17, 1, u'+        CCAssert(_textureDatas, "create ArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >= 0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCAssert(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSpriteFrameCacheHelper::addSpriteFrameFromDict
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >= 0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCAssert(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >= 0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCAssert(format >= 0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (7, 1, u'+    assert(ccNodeLoadersIterator != this->mNodeLoaders.end());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNodeLoaderLibrary::unregisterCCNodeLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (7, 1, u'+    assert(ccNodeLoadersIterator != this->mNodeLoaders.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (7, 1, u'+    assert(ccNodeLoadersIterator != this->mNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((CCSpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (6, 1, u'+    CCAssert((SpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCScale9Sprite::createWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((CCSpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (6, 1, u'+    CCAssert((SpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((CCSpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (6, 1, u'+    CCAssert((SpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");')]
===========================================
Class:class CCSortedObject : public CCObject, public CCSortableObject class SortedObject : public Object, public SortableObject     CCSortedObject() : objectID(0) {}     CCSortedObject() : objectID(0) 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pScene != NULL, "This command can only be used to start the CCDirector. There is already a scene present.");'), (6, 1, u'+    CCAssert(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDirector::getVisibleOrigin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pScene != NULL, "This command can only be used to start the CCDirector. There is already a scene present.");'), (6, 1, u'+    CCAssert(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pScene != NULL, "This command can only be used to start the CCDirector. There is already a scene present.");'), (6, 1, u'+    CCAssert(pScene != NULL, "This command can only be used to start the Director. There is already a scene present.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCSkewTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in SkewTo");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSkewTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCSkewTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in SkewTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCSkewTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in SkewTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCJumpTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in JumpTo");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCJumpTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCJumpTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in JumpTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCJumpTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in JumpTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCScaleTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in ScaleTo");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCScaleTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCScaleTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in ScaleTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCScaleTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in ScaleTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCFadeTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in FadeTo");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCFadeTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCFadeTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in FadeTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCFadeTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in FadeTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCTintTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in TintTo");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTintTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCTintTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in TintTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCTintTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in TintTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (6, 1, u'+    CCAssert((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCActionManager::removeAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (6, 1, u'+    CCAssert((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (6, 1, u'+    CCAssert((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (6, 1, u'+    CCAssert((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (6, 1, u'+    CCAssert((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (6, 1, u'+    CCAssert((int)tag != kActionTagInvalid, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCProgressTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in ProgressTo");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCProgressTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCProgressTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in ProgressTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(false, "reverse() not supported in CCProgressTo");'), (6, 1, u'+\tCCAssert(false, "reverse() not supported in ProgressTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(dynamic_cast<CCActionTweenDelegate*>(pTarget), "target must implement CCActionTweenDelegate");'), (7, 1, u'+    CCAssert(dynamic_cast<ActionTweenDelegate*>(pTarget), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: *CCActionTween::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(dynamic_cast<CCActionTweenDelegate*>(pTarget), "target must implement CCActionTweenDelegate");'), (7, 1, u'+    CCAssert(dynamic_cast<ActionTweenDelegate*>(pTarget), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(dynamic_cast<CCActionTweenDelegate*>(pTarget), "target must implement CCActionTweenDelegate");'), (7, 1, u'+    CCAssert(dynamic_cast<ActionTweenDelegate*>(pTarget), "target must implement ActionTweenDelegate");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( aTag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::childrenAlloc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( aTag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( aTag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::removeChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::stopAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (6, 1, u'+    CCAssert( tag != kActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary does not use string as key.");'), (13, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCDictionary::allKeysForObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary does not use string as key.");'), (13, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary does not use string as key.");'), (13, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary does not use integer as key.");'), (13, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCDictionary::objectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary does not use integer as key.");'), (13, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary does not use integer as key.");'), (13, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as key.");'), (14, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCDictionary::valueForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as key.");'), (14, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as key.");'), (14, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");'), (14, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCDictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");'), (14, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");'), (14, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as its key");'), (3, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as its key");'), (3, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as its key");'), (3, 1, u'+    CCAssert(_dictType == kDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");'), (4, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");'), (4, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");'), (4, 1, u'+    CCAssert(_dictType == kDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (12, 1, u'+  CCAssert(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCLabelAtlas::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (12, 1, u'+  CCAssert(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (12, 1, u'+  CCAssert(((String*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+    CCAssert(atoi(value.c_str()) <= Configuration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for CCLabelBMFont");'), (14, 1, u'+    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: *CCLabelBMFont::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for CCLabelBMFont");'), (14, 1, u'+    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for CCLabelBMFont");'), (14, 1, u'+    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    CCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (21, 1, u'+    CCAssert( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCMenu::initWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    CCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (21, 1, u'+    CCAssert( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    CCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (21, 1, u'+    CCAssert( dynamic_cast<MenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCMenu::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCMenu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (12, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCMenu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (12, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (12, 1, u'+    CCAssert(_state == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(eFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCAssert(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCRenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(eFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCAssert(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(eFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (6, 1, u'+    CCAssert(eFormat != kTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,'), (7, 1, u'+    CCAssert(format == kImageFormatJPEG || format == kImageFormatPNG,')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCRenderTexture::saveToFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,'), (7, 1, u'+    CCAssert(format == kImageFormatJPEG || format == kImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,'), (7, 1, u'+    CCAssert(format == kImageFormatJPEG || format == kImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert(_pixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (8, 1, u'+    CCAssert(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCRenderTexture::saveToFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert(_pixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (8, 1, u'+    CCAssert(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert(_pixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (8, 1, u'+    CCAssert(_pixelFormat == kTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (22, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCParticleBatchNode::visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (22, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (22, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (7, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCParticleBatchNode::addChildHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (7, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (7, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (3, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (3, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (3, 1, u'+    CCAssert( dynamic_cast<ParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports QuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (3, 1, u'+        CCAssert(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleBatchNode::increaseAtlasCapacityTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (3, 1, u'+        CCAssert(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (3, 1, u'+        CCAssert(false,"XXX: ParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::isBlendAdditive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (6, 1, u'+    CCAssert( _emitterMode == kParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(CCPointZero),'), (13, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(PointZero),')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCParticleSystemQuad::setTextureWithRect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(CCPointZero),'), (13, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(PointZero),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    CCAssert(spriteFrame->getOffsetInPixels().equals(CCPointZero),'), (13, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(PointZero),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!CCEGLView::g_instance);'), (4, 1, u'+    assert(!EGLView::g_instance);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CocosPepperInstance::DidChangeView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!CCEGLView::g_instance);'), (4, 1, u'+    assert(!EGLView::g_instance);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!CCEGLView::g_instance);'), (4, 1, u'+    assert(!EGLView::g_instance);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(! sm_pSharedCCOspApplication, "");'), (15, 1, u'+    CCAssert(! sm_pSharedOspApplication, "");'), (22, 2, u'-    CCAssert(this == sm_pSharedCCOspApplication, "");'), (24, 1, u'+    CCAssert(this == sm_pSharedOspApplication, "");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: using namespace Tizen::Base::Runtime;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(! sm_pSharedCCOspApplication, "");'), (15, 1, u'+    CCAssert(! sm_pSharedOspApplication, "");'), (22, 2, u'-    CCAssert(this == sm_pSharedCCOspApplication, "");'), (24, 1, u'+    CCAssert(this == sm_pSharedOspApplication, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(! sm_pSharedCCOspApplication, "");'), (15, 1, u'+    CCAssert(! sm_pSharedOspApplication, "");'), (22, 2, u'-    CCAssert(this == sm_pSharedCCOspApplication, "");'), (24, 1, u'+    CCAssert(this == sm_pSharedOspApplication, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert(sm_pSharedCCOspApplication, "");'), (9, 1, u'+    CCAssert(sm_pSharedOspApplication, "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCOspApplication::SetScreenOrientation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert(sm_pSharedCCOspApplication, "");'), (9, 1, u'+    CCAssert(sm_pSharedOspApplication, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert(sm_pSharedCCOspApplication, "");'), (9, 1, u'+    CCAssert(sm_pSharedOspApplication, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureUnit < kCCMaxActiveTexture, "textureUnit is too big");'), (3, 1, u'+    CCAssert(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ccGLBindTexture2DN
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureUnit < kCCMaxActiveTexture, "textureUnit is too big");'), (3, 1, u'+    CCAssert(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(textureUnit < kCCMaxActiveTexture, "textureUnit is too big");'), (3, 1, u'+    CCAssert(textureUnit < kMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(_batchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");'), (6, 1, u'+    CCAssert(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::setTextureCoords
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(_batchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");'), (6, 1, u'+    CCAssert(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(_batchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");'), (6, 1, u'+    CCAssert(_batchNode, "updateTransform is only valid when Sprite is being rendered using an SpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<CCSprite*>(_parent), "Logic error in CCSprite. Parent must be a CCSprite");'), (4, 1, u'+                CCAssert( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<CCSprite*>(_parent), "Logic error in CCSprite. Parent must be a CCSprite");'), (4, 1, u'+                CCAssert( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<CCSprite*>(_parent), "Logic error in CCSprite. Parent must be a CCSprite");'), (4, 1, u'+                CCAssert( dynamic_cast<Sprite*>(_parent), "Logic error in Sprite. Parent must be a Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(!_batchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");'), (9, 1, u'+    CCAssert(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(!_batchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");'), (9, 1, u'+    CCAssert(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert(!_batchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");'), (9, 1, u'+    CCAssert(!_batchNode, "If Sprite is being rendered by SpriteBatchNode, Sprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert( pChildSprite, "CCSprite only supports CCSprites as children when using CCSpriteBatchNode");'), (5, 1, u'+        CCAssert( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert( pChildSprite, "CCSprite only supports CCSprites as children when using CCSpriteBatchNode");'), (5, 1, u'+        CCAssert( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert( pChildSprite, "CCSprite only supports CCSprites as children when using CCSpriteBatchNode");'), (5, 1, u'+        CCAssert( pChildSprite, "CCSprite only supports Sprites as children when using SpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCSprite::setAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (6, 1, u'+    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::setBatchNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (6, 1, u'+    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (6, 1, u'+    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a SpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( !texture || dynamic_cast<CCTexture2D*>(texture), "setTexture expects a CCTexture2D. Invalid argument");'), (3, 1, u'+    CCAssert( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( !texture || dynamic_cast<CCTexture2D*>(texture), "setTexture expects a CCTexture2D. Invalid argument");'), (3, 1, u'+    CCAssert( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( !texture || dynamic_cast<CCTexture2D*>(texture), "setTexture expects a CCTexture2D. Invalid argument");'), (3, 1, u'+    CCAssert( !texture || dynamic_cast<Texture2D*>(texture), "setTexture expects a Texture2D. Invalid argument");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(dynamic_cast<CCSprite*>(child) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (9, 1, u'+    CCAssert(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCSpriteBatchNode::visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(dynamic_cast<CCSprite*>(child) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (9, 1, u'+    CCAssert(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(dynamic_cast<CCSprite*>(child) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (9, 1, u'+    CCAssert(dynamic_cast<Sprite*>(child) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    CCAssert( dynamic_cast<CCSprite*>(sprite), "CCSpriteBatchNode only supports CCSprites as children");'), (12, 1, u'+    CCAssert( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCSpriteBatchNode::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    CCAssert( dynamic_cast<CCSprite*>(sprite), "CCSpriteBatchNode only supports CCSprites as children");'), (12, 1, u'+    CCAssert( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    CCAssert( dynamic_cast<CCSprite*>(sprite), "CCSpriteBatchNode only supports CCSprites as children");'), (12, 1, u'+    CCAssert( dynamic_cast<Sprite*>(sprite), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(dynamic_cast<CCSprite*>(sprite) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (7, 1, u'+    CCAssert(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSpriteBatchNode::insertQuadFromSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(dynamic_cast<CCSprite*>(sprite) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (7, 1, u'+    CCAssert(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(dynamic_cast<CCSprite*>(sprite) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (7, 1, u'+    CCAssert(dynamic_cast<Sprite*>(sprite) != NULL, "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( dynamic_cast<CCSprite*>(child), "CCSpriteBatchNode only supports CCSprites as children");'), (7, 1, u'+    CCAssert( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSpriteBatchNode::updateQuadFromSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( dynamic_cast<CCSprite*>(child), "CCSpriteBatchNode only supports CCSprites as children");'), (7, 1, u'+    CCAssert( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( dynamic_cast<CCSprite*>(child), "CCSpriteBatchNode only supports CCSprites as children");'), (7, 1, u'+    CCAssert( dynamic_cast<Sprite*>(child), "CCSpriteBatchNode only supports Sprites as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for SpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+    CCAssert(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTMXLayer::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+    CCAssert(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+    CCAssert(0, "addChild: is not supported on TMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(pos.equals(CCPointZero), "offset for hexagonal map not implemented yet");'), (5, 1, u'+        CCAssert(pos.equals(PointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::calculateLayerOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(pos.equals(CCPointZero), "offset for hexagonal map not implemented yet");'), (5, 1, u'+        CCAssert(pos.equals(PointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(pos.equals(CCPointZero), "offset for hexagonal map not implemented yet");'), (5, 1, u'+        CCAssert(pos.equals(PointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCSkewTo");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: CCSkewTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCSkewTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCSkewTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCJumpTo");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: CCJumpTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCJumpTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCJumpTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCScaleTo");')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: CCScaleTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCScaleTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCScaleTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCFadeTo");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: CCFadeTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCFadeTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCFadeTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCTintTo");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: CCTintTo::clone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCTintTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "reverse() not supported in CCTintTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() not supported in CCProgressTo");')]
===========================================
===========================================
Total add: 15
Total del: 0
Header: CCProgressTo::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() not supported in CCProgressTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() not supported in CCProgressTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateTo");')]
===========================================
===========================================
Total add: 15
Total del: 0
Header: CCBRotateTo::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Total add: 15
Total del: 0
Header: CCBRotateXTo::startWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
Total add: 15
Total del: 0
Header: CCBRotateYTo::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\tCCAssert(false, "reverse() is not supported in CCBRotateXTo");')]
===========================================
Class: class GLNode:public CCNode { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "RotateTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: CCRotateTo::update
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "RotateTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "RotateTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "CCBezierTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: CCBezierTo::startWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "CCBezierTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(false, "CCBezierTo doesn\'t support the \'reverse\' method");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobOpenGLView, "opengl view should not be null");'), (3, 1, u'+    CCAssert(_openGLView, "opengl view should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::setGLDefaultValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobOpenGLView, "opengl view should not be null");'), (3, 1, u'+    CCAssert(_openGLView, "opengl view should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobOpenGLView, "opengl view should not be null");'), (3, 1, u'+    CCAssert(_openGLView, "opengl view should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (3, 1, u'+    CCAssert(_runningScene == NULL, "_runningScene should be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::runWithScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (3, 1, u'+    CCAssert(_runningScene == NULL, "_runningScene should be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (3, 1, u'+    CCAssert(_runningScene == NULL, "_runningScene should be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene, "Use runWithScene: instead to start the director");'), (3, 1, u'+    CCAssert(_runningScene, "Use runWithScene: instead to start the director");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCDirector::replaceScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene, "Use runWithScene: instead to start the director");'), (3, 1, u'+    CCAssert(_runningScene, "Use runWithScene: instead to start the director");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene, "Use runWithScene: instead to start the director");'), (3, 1, u'+    CCAssert(_runningScene, "Use runWithScene: instead to start the director");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCAssert(_runningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCDirector::popScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCAssert(_runningScene != NULL, "running scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene != NULL, "running scene should not null");'), (3, 1, u'+    CCAssert(_runningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene != NULL, "A running Scene is needed");'), (4, 1, u'+    CCAssert(_runningScene != NULL, "A running Scene is needed");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDirector::popToSceneStackLevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene != NULL, "A running Scene is needed");'), (4, 1, u'+    CCAssert(_runningScene != NULL, "A running Scene is needed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pRunningScene != NULL, "A running Scene is needed");'), (4, 1, u'+    CCAssert(_runningScene != NULL, "A running Scene is needed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != m_pOther, "");'), (3, 1, u'+    CCAssert(pAction != _other, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCReverseTime::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != m_pOther, "");'), (3, 1, u'+    CCAssert(pAction != _other, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pAction != m_pOther, "");'), (3, 1, u'+    CCAssert(pAction != _other, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_fRotationX == m_fRotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::getRotation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_fRotationX == m_fRotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_fRotationX == m_fRotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert(_rotationX == _rotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::getScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( _scaleX == _scaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( child->_parent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( child->_parent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( child->_parent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pObject->m_uReference > 1, "reference count should be greater than 1");'), (7, 1, u'+    CCAssert(pObject->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCAutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pObject->m_uReference > 1, "reference count should be greater than 1");'), (7, 1, u'+    CCAssert(pObject->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pObject->m_uReference > 1, "reference count should be greater than 1");'), (7, 1, u'+    CCAssert(pObject->_reference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCAssert(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCPoolManager::removeObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCAssert(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCAssert(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCAssert(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCPoolManager::getCurReleasePool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCAssert(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (3, 1, u'+    CCAssert(_curReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uReference > 0, "reference count should greater than 0");'), (4, 1, u'+    CCAssert(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCObject::release
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uReference > 0, "reference count should greater than 0");'), (4, 1, u'+    CCAssert(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uReference > 0, "reference count should greater than 0");'), (4, 1, u'+    CCAssert(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uReference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCAssert(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCObject::retain
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uReference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCAssert(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uReference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCAssert(_reference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    CCAssert( n <= m_pTextureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (27, 1, u'+    CCAssert( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: CCLabelAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    CCAssert( n <= m_pTextureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (27, 1, u'+    CCAssert( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-    CCAssert( n <= m_pTextureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");'), (27, 1, u'+    CCAssert( n <= _textureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pConfiguration, "re-init is no longer supported");'), (3, 1, u'+    CCAssert(!_configuration, "re-init is no longer supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pConfiguration, "re-init is no longer supported");'), (3, 1, u'+    CCAssert(!_configuration, "re-init is no longer supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pConfiguration, "re-init is no longer supported");'), (3, 1, u'+    CCAssert(!_configuration, "re-init is no longer supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pLayers, "");'), (4, 1, u'+    CCAssert(_layers, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLayerMultiplex::addLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pLayers, "");'), (4, 1, u'+    CCAssert(_layers, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pLayers, "");'), (4, 1, u'+    CCAssert(_layers, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCLayerMultiplex::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCLayerMultiplex::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < _layers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (24, 1, u'+        CCAssert( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCTransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (24, 1, u'+        CCAssert( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (24, 1, u'+        CCAssert( _inScene != _outScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (4, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCMenu::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (4, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (4, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (4, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCMenu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (4, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (4, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCMenu::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+    CCAssert(_state == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (9, 1, u'+        CCAssert( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCProgressTimer::updateRadial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (9, 1, u'+        CCAssert( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (9, 1, u'+        CCAssert( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (11, 1, u'+            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (40, 2, u'-            CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (44, 1, u'+            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 25
Total del: 25
Header: CCProgressTimer::updateBar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (11, 1, u'+            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (40, 2, u'-            CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (44, 1, u'+            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (11, 1, u'+            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");'), (40, 2, u'-            CCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (44, 1, u'+            CCAssert( _vertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCAssert(_pixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCRenderTexture::newCCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCAssert(_pixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (3, 1, u'+    CCAssert(_pixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (3, 1, u'+    CCAssert( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (3, 1, u'+    CCAssert( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (3, 1, u'+    CCAssert( pChild->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCAssert( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCAssert( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");'), (3, 1, u'+    CCAssert( _blendFunc.src  == pChild->getBlendFunc().src && _blendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCAssert( _children->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCAssert( _children->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );'), (3, 1, u'+    CCAssert( _children->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCAssert(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCAssert(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (3, 1, u'+    CCAssert(_children->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCAssert( this->_texture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCAssert( this->_texture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+                CCAssert( this->_texture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pBatchNode, "Can\'t change blending functions when the particle is being batched");'), (3, 1, u'+    CCAssert(! _batchNode, "Can\'t change blending functions when the particle is being batched");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCParticleSystem::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pBatchNode, "Can\'t change blending functions when the particle is being batched");'), (3, 1, u'+    CCAssert(! _batchNode, "Can\'t change blending functions when the particle is being batched");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pBatchNode, "Can\'t change blending functions when the particle is being batched");'), (3, 1, u'+    CCAssert(! _batchNode, "Can\'t change blending functions when the particle is being batched");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRotationIsDir
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+    CCAssert( _emitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");'), (4, 1, u'+    CCAssert( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTotalParticles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");'), (4, 1, u'+    CCAssert( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");'), (4, 1, u'+    CCAssert( var <= _allocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (3, 1, u'+    CCAssert(!_batchNode,"draw should not be called when added to a particleBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (3, 1, u'+    CCAssert(!_batchNode,"draw should not be called when added to a particleBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (3, 1, u'+    CCAssert(!_batchNode,"draw should not be called when added to a particleBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (8, 1, u'+    CCAssert( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (8, 1, u'+    CCAssert( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (8, 1, u'+    CCAssert( _particleIdx == _particleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( ( !m_pQuads && !m_pIndices), "Memory already alloced");'), (3, 2, u'-    CCAssert( !m_pBatchNode, "Memory should not be alloced when not using batchNode");'), (4, 1, u'+    CCAssert( ( !_quads && !_indices), "Memory already alloced");'), (5, 1, u'+    CCAssert( !_batchNode, "Memory should not be alloced when not using batchNode");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCParticleSystemQuad::allocMemory
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( ( !m_pQuads && !m_pIndices), "Memory already alloced");'), (3, 2, u'-    CCAssert( !m_pBatchNode, "Memory should not be alloced when not using batchNode");'), (4, 1, u'+    CCAssert( ( !_quads && !_indices), "Memory already alloced");'), (5, 1, u'+    CCAssert( !_batchNode, "Memory should not be alloced when not using batchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( ( !m_pQuads && !m_pIndices), "Memory already alloced");'), (3, 2, u'-    CCAssert( !m_pBatchNode, "Memory should not be alloced when not using batchNode");'), (4, 1, u'+    CCAssert( ( !_quads && !_indices), "Memory already alloced");'), (5, 1, u'+    CCAssert( !_batchNode, "Memory should not be alloced when not using batchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! m_tDictStack.empty(), "The state is wrong!");'), (5, 1, u'+                CCAssert(! _dictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! m_tDictStack.empty(), "The state is wrong!");'), (5, 1, u'+                CCAssert(! _dictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! m_tDictStack.empty(), "The state is wrong!");'), (5, 1, u'+                CCAssert(! _dictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! m_tArrayStack.empty(), "The state is wrong!");'), (5, 1, u'+                CCAssert(! _arrayStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! m_tArrayStack.empty(), "The state is wrong!");'), (5, 1, u'+                CCAssert(! _arrayStack.empty(), "The state is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(! m_tArrayStack.empty(), "The state is wrong!");'), (5, 1, u'+                CCAssert(! _arrayStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(!m_sCurKey.empty(), "key not found : <integer/real>");'), (3, 1, u'+                    CCAssert(!_curKey.empty(), "key not found : <integer/real>");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(!m_sCurKey.empty(), "key not found : <integer/real>");'), (3, 1, u'+                    CCAssert(!_curKey.empty(), "key not found : <integer/real>");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    CCAssert(!m_sCurKey.empty(), "key not found : <integer/real>");'), (3, 1, u'+                    CCAssert(!_curKey.empty(), "key not found : <integer/real>");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(m_gles2_interface);'), (6, 1, u'+    assert(_gles2_interface);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: OpenGLContext::OpenGLContext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(m_gles2_interface);'), (6, 1, u'+    assert(_gles2_interface);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(m_gles2_interface);'), (6, 1, u'+    assert(_gles2_interface);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_context);'), (3, 1, u'+    assert(!_context);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCEGLView::initGL
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_context);'), (3, 1, u'+    assert(!_context);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(!m_context);'), (3, 1, u'+    assert(!_context);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(data_offset < m_DataSize);'), (4, 1, u'+                    assert(data_offset < _dataSize);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(data_offset < m_DataSize);'), (4, 1, u'+                    assert(data_offset < _dataSize);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(data_offset < m_DataSize);'), (4, 1, u'+                    assert(data_offset < _dataSize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert(m_uFragShader == 0, "Fragment Shaders should have been already deleted");'), (4, 1, u'+    CCAssert(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCAssert(_fragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCGLProgram::~CCGLProgram
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert(m_uFragShader == 0, "Fragment Shaders should have been already deleted");'), (4, 1, u'+    CCAssert(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCAssert(_fragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert(m_uFragShader == 0, "Fragment Shaders should have been already deleted");'), (4, 1, u'+    CCAssert(_vertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCAssert(_fragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uProgram != 0, "Cannot link invalid program");'), (3, 1, u'+    CCAssert(_program != 0, "Cannot link invalid program");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCGLProgram::link
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uProgram != 0, "Cannot link invalid program");'), (3, 1, u'+    CCAssert(_program != 0, "Cannot link invalid program");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uProgram != 0, "Cannot link invalid program");'), (3, 1, u'+    CCAssert(_program != 0, "Cannot link invalid program");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uProgram != 0, "Invalid operation. Cannot get uniform location when program is not initialized");'), (3, 1, u'+    CCAssert(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCGLProgram::getUniformLocationForName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uProgram != 0, "Invalid operation. Cannot get uniform location when program is not initialized");'), (3, 1, u'+    CCAssert(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_uProgram != 0, "Invalid operation. Cannot get uniform location when program is not initialized");'), (3, 1, u'+    CCAssert(_program != 0, "Invalid operation. Cannot get uniform location when program is not initialized");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");'), (3, 1, u'+    CCAssert(_batchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");'), (3, 1, u'+    CCAssert(_batchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");'), (3, 1, u'+    CCAssert(_batchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<CCSprite*>(m_pParent), "Logic error in CCSprite. Parent must be a CCSprite");'), (4, 1, u'+                CCAssert( dynamic_cast<CCSprite*>(_parent), "Logic error in CCSprite. Parent must be a CCSprite");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<CCSprite*>(m_pParent), "Logic error in CCSprite. Parent must be a CCSprite");'), (4, 1, u'+                CCAssert( dynamic_cast<CCSprite*>(_parent), "Logic error in CCSprite. Parent must be a CCSprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert( dynamic_cast<CCSprite*>(m_pParent), "Logic error in CCSprite. Parent must be a CCSprite");'), (4, 1, u'+                CCAssert( dynamic_cast<CCSprite*>(_parent), "Logic error in CCSprite. Parent must be a CCSprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pobBatchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");'), (3, 1, u'+    CCAssert(!_batchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pobBatchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");'), (3, 1, u'+    CCAssert(!_batchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(!m_pobBatchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");'), (3, 1, u'+    CCAssert(!_batchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pChildSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (3, 1, u'+        CCAssert(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pChildSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (3, 1, u'+        CCAssert(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(pChildSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (3, 1, u'+        CCAssert(pChildSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(pChild), "");'), (3, 1, u'+    CCAssert(_children->containsObject(pChild), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(pChild), "");'), (3, 1, u'+    CCAssert(_children->containsObject(pChild), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(pChild), "");'), (3, 1, u'+    CCAssert(_children->containsObject(pChild), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");'), (3, 1, u'+    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::ignoreAnchorPointForPosition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");'), (3, 1, u'+    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");'), (3, 1, u'+    CCAssert(! _batchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (3, 1, u'+    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCSprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (3, 1, u'+    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (3, 1, u'+    CCAssert (! _batchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCAssert(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCAssert(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCAssert(! _batchNode || texture->getName() == _batchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (3, 1, u'+    CCAssert(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (3, 1, u'+    CCAssert(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");'), (3, 1, u'+    CCAssert(pSprite->getTexture()->getName() == _textureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCAssert(_children->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCAssert(_children->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(child), "Child doesn\'t belong to Sprite");'), (3, 1, u'+    CCAssert(_children->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCAssert(_children->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCAssert(_children->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");'), (3, 1, u'+    CCAssert(_children->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mipmap texture only works in POT textures");'), (4, 1, u'+    CCAssert( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mipmap texture only works in POT textures");'), (4, 1, u'+    CCAssert( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mipmap texture only works in POT textures");'), (4, 1, u'+    CCAssert( _pixelsWide == ccNextPOT(_pixelsWide) && _pixelsHigh == ccNextPOT(_pixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCAssert( (_pixelsWide == ccNextPOT(_pixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    CCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (15, 1, u'+    CCAssert(_quads == NULL && _indices == NULL, "");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    CCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (15, 1, u'+    CCAssert(_quads == NULL && _indices == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    CCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (15, 1, u'+    CCAssert(_quads == NULL && _indices == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTextureAtlas::updateQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < _capacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < _capacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTextureAtlas::insertQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < _capacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < _capacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (3, 1, u'+    CCAssert(index + amount <= _capacity, "insertQuadWithTexture: Invalid index + amount");'), (8, 2, u'-    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (9, 1, u'+    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTextureAtlas::insertQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (3, 1, u'+    CCAssert(index + amount <= _capacity, "insertQuadWithTexture: Invalid index + amount");'), (8, 2, u'-    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (9, 1, u'+    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (3, 1, u'+    CCAssert(index + amount <= _capacity, "insertQuadWithTexture: Invalid index + amount");'), (8, 2, u'-    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (9, 1, u'+    CCAssert( _totalQuads <= _capacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::insertQuadFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert( newIndex >= 0 && newIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < _totalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < _totalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < _totalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (3, 1, u'+    CCAssert(index + amount <= _totalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTextureAtlas::removeQuadsAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (3, 1, u'+    CCAssert(index + amount <= _totalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (3, 1, u'+    CCAssert(index + amount <= _totalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-    CCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::moveQuadsFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-    CCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-    CCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert(newIndex + amount <= _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert(oldIndex < _totalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");'), (3, 1, u'+    CCAssert(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::moveQuadsFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");'), (3, 1, u'+    CCAssert(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");'), (3, 1, u'+    CCAssert(newIndex + (_totalQuads - index) <= _capacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (11, 1, u'+                CCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTexturePVR::unpackPVRv2Data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (11, 1, u'+                CCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (11, 1, u'+                CCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (5, 1, u'+\tCCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexturePVR::unpackPVRv3Data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (5, 1, u'+\tCCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (5, 1, u'+\tCCAssert(_numberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (4, 1, u'+    CCAssert( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::setupTiles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (4, 1, u'+    CCAssert( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (4, 1, u'+    CCAssert( _maxGID >= _tileSet->_firstGid &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::tileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTMXLayer::tileGIDAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert(gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCAssert(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTMXLayer::setTileGID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert(gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCAssert(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert(gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCAssert(gid == 0 || gid >= _tileSet->_firstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCAssert(_children->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTMXLayer::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCAssert(_children->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+    CCAssert(_children->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::removeTileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < _layerSize.width && pos.y < _layerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(_tiles && _atlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCTileMapAtlas::calculateItemsToRender
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert(m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert(position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert(position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 1, u'+    CCAssert(_TGAInfo != NULL, "tgaInfo must not be nil");'), (7, 1, u'+    CCAssert(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (8, 1, u'+    CCAssert(position.x < _TGAInfo->width, "Invalid position.x");'), (9, 1, u'+    CCAssert(position.y < _TGAInfo->height, "Invalid position.x");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCTileMapAtlas::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert(m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert(position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert(position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 1, u'+    CCAssert(_TGAInfo != NULL, "tgaInfo must not be nil");'), (7, 1, u'+    CCAssert(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (8, 1, u'+    CCAssert(position.x < _TGAInfo->width, "Invalid position.x");'), (9, 1, u'+    CCAssert(position.y < _TGAInfo->height, "Invalid position.x");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert(m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert(position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert(position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 1, u'+    CCAssert(_TGAInfo != NULL, "tgaInfo must not be nil");'), (7, 1, u'+    CCAssert(_posToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (8, 1, u'+    CCAssert(position.x < _TGAInfo->width, "Invalid position.x");'), (9, 1, u'+    CCAssert(position.y < _TGAInfo->height, "Invalid position.x");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCAssert( position.x < _TGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCAssert( position.y < _TGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCTileMapAtlas::tileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCAssert( position.x < _TGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCAssert( position.y < _TGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCAssert( position.x < _TGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCAssert( position.y < _TGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < m_pTextureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTileMapAtlas::updateAtlasValueAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < m_pTextureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( index >= 0 && index < m_pTextureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < _textureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTileMapAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+    CCAssert( _TGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCArmature::addBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pBoneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");'), (3, 1, u'+    CCAssert(_boneDic->objectForKey(bone->getName()) == NULL, "bone already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBone::addChildBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");'), (3, 1, u'+    CCAssert( NULL == child->_parent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (3, 1, u'+    CCAssert(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(m_pMovementData, "m_pMovementData can not be null");'), (8, 1, u'+    CCAssert(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCArmatureAnimation::play
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (3, 1, u'+    CCAssert(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(m_pMovementData, "m_pMovementData can not be null");'), (8, 1, u'+    CCAssert(_movementData, "_movementData can not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pAnimationData, "m_pAnimationData can not be null");'), (3, 1, u'+    CCAssert(_animationData, "_animationData can not be null");'), (6, 2, u'-    CCAssert(m_pMovementData, "m_pMovementData can not be null");'), (8, 1, u'+    CCAssert(_movementData, "_movementData can not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCDisplayManager::changeDisplayByIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (3, 1, u'+    CCAssert( (_decoDisplayList ? index < (int)_decoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");'), (6, 1, u'+    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCColliderDetector::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");'), (6, 1, u'+    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(m_pColliderBodyList, "create m_pColliderBodyList failed!");'), (6, 1, u'+    CCAssert(_colliderBodyList, "create _colliderBodyList failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (6, 1, u'+        CCAssert(_armarureDatas, "create CCArmatureDataManager::_armarureDatas fail!");'), (10, 2, u'-        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (13, 1, u'+        CCAssert(_animationDatas, "create CCArmatureDataManager::_animationDatas fail!");'), (17, 2, u'-        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");'), (20, 1, u'+        CCAssert(_textureDatas, "create CCArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCArmatureDataManager::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (6, 1, u'+        CCAssert(_armarureDatas, "create CCArmatureDataManager::_armarureDatas fail!");'), (10, 2, u'-        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (13, 1, u'+        CCAssert(_animationDatas, "create CCArmatureDataManager::_animationDatas fail!");'), (17, 2, u'-        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");'), (20, 1, u'+        CCAssert(_textureDatas, "create CCArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(m_pArmarureDatas, "create CCArmatureDataManager::m_pArmarureDatas fail!");'), (6, 1, u'+        CCAssert(_armarureDatas, "create CCArmatureDataManager::_armarureDatas fail!");'), (10, 2, u'-        CCAssert(m_pAnimationDatas, "create CCArmatureDataManager::m_pAnimationDatas fail!");'), (13, 1, u'+        CCAssert(_animationDatas, "create CCArmatureDataManager::_animationDatas fail!");'), (17, 2, u'-        CCAssert(m_pTextureDatas, "create CCArmatureDataManager::m_pTextureDatas fail!");'), (20, 1, u'+        CCAssert(_textureDatas, "create CCArmatureDataManager::_textureDatas fail!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(m_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (6, 1, u'+    CCAssert(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: PremultipliedAlphaTest::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(m_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (6, 1, u'+    CCAssert(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(m_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");'), (6, 1, u'+    CCAssert(_emitter->getOpacityModifyRGB(), "Particle texture does not have premultiplied alpha, test is useless");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Paddle::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: Paddle::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    bool ret = m_stack->handleAssert(msg);'), (4, 1, u'+    bool ret = _stack->handleAssert(msg);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLuaEngine::handleAssert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    bool ret = m_stack->handleAssert(msg);'), (4, 1, u'+    bool ret = _stack->handleAssert(msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    bool ret = m_stack->handleAssert(msg);'), (4, 1, u'+    bool ret = _stack->handleAssert(msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);'), (10, 1, u'+    CC_ASSERT(_callFromLua >= 0);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCLuaStack::executeScriptFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);'), (10, 1, u'+    CC_ASSERT(_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);'), (10, 1, u'+    CC_ASSERT(_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary does not use string as key.");'), (7, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::objectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary does not use string as key.");'), (7, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary does not use string as key.");'), (7, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary does not use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary does not use integer as key.");'), (7, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::objectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary does not use integer as key.");'), (7, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary does not use integer as key.");'), (7, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary does not use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as key.");'), (10, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCDictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as key.");'), (10, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as key.");'), (10, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");'), (10, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCDictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");'), (10, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");'), (10, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as its key");'), (3, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as its key");'), (3, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as its key");'), (3, 1, u'+    CCAssert(_dictType == kCCDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");'), (3, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");'), (3, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");'), (3, 1, u'+    CCAssert(_dictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(shape->space != space, "You have already added this shape to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!shape->space, "You have already added this shape to another space. You cannot add it to a second.");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: cpSpaceAddShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(shape->space != space, "You have already added this shape to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!shape->space, "You have already added this shape to another space. You cannot add it to a second.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(shape->space != space, "You have already added this shape to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!shape->space, "You have already added this shape to another space. You cannot add it to a second.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(shape->space != space, "You have already added this shape to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!shape->space, "You have already added this shape to another space. You cannot add it to a second.");'), (5, 1, u'+\tcpAssertHard(cpBodyIsRogue(shape->body), "You are adding a static shape to a dynamic body. Did you mean to attach it to a static or rogue body? See the documentation for more information.");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: cpSpaceAddStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(shape->space != space, "You have already added this shape to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!shape->space, "You have already added this shape to another space. You cannot add it to a second.");'), (5, 1, u'+\tcpAssertHard(cpBodyIsRogue(shape->body), "You are adding a static shape to a dynamic body. Did you mean to attach it to a static or rogue body? See the documentation for more information.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(shape->space != space, "You have already added this shape to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!shape->space, "You have already added this shape to another space. You cannot add it to a second.");'), (5, 1, u'+\tcpAssertHard(cpBodyIsRogue(shape->body), "You are adding a static shape to a dynamic body. Did you mean to attach it to a static or rogue body? See the documentation for more information.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Do not add static bodies to a space. Static bodies do not move and should not be simulated.");'), (5, 1, u'+\tcpAssertHard(body->space != space, "You have already added this body to this space. You must not add it a second time.");'), (6, 1, u'+\tcpAssertHard(!body->space, "You have already added this body to another space. You cannot add it to a second.");')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: cpSpaceAddBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Do not add static bodies to a space. Static bodies do not move and should not be simulated.");'), (5, 1, u'+\tcpAssertHard(body->space != space, "You have already added this body to this space. You must not add it a second time.");'), (6, 1, u'+\tcpAssertHard(!body->space, "You have already added this body to another space. You cannot add it to a second.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Do not add static bodies to a space. Static bodies do not move and should not be simulated.");'), (5, 1, u'+\tcpAssertHard(body->space != space, "You have already added this body to this space. You must not add it a second time.");'), (6, 1, u'+\tcpAssertHard(!body->space, "You have already added this body to another space. You cannot add it to a second.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(constraint->space != space, "You have already added this constraint to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!constraint->space, "You have already added this constraint to another space. You cannot add it to a second.");'), (5, 1, u'+\tcpAssertHard(constraint->a && constraint->b, "Constraint is attached to a NULL body.");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: cpSpaceAddConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(constraint->space != space, "You have already added this constraint to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!constraint->space, "You have already added this constraint to another space. You cannot add it to a second.");'), (5, 1, u'+\tcpAssertHard(constraint->a && constraint->b, "Constraint is attached to a NULL body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 1, u'+\tcpAssertHard(constraint->space != space, "You have already added this constraint to this space. You must not add it a second time.");'), (4, 1, u'+\tcpAssertHard(!constraint->space, "You have already added this constraint to another space. You cannot add it to a second.");'), (5, 1, u'+\tcpAssertHard(constraint->a && constraint->b, "Constraint is attached to a NULL body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (4, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rogue body.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpSpaceActivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (4, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rogue body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (4, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rogue body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tcpAssertSoft(body->node.root == NULL && body->node.next == NULL, "Internal error: Activating body non-NULL node pointers.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: cpSpaceActivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tcpAssertSoft(body->node.root == NULL && body->node.next == NULL, "Internal error: Activating body non-NULL node pointers.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tcpAssertSoft(body->node.root == NULL && body->node.next == NULL, "Internal error: Activating body non-NULL node pointers.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (3, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Rogue (and static) bodies cannot be put to sleep.");'), (6, 2, u'-\tcpAssertHard(space, "Cannot put a rogue body to sleep.");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (3, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Rogue (and static) bodies cannot be put to sleep.");'), (6, 2, u'-\tcpAssertHard(space, "Cannot put a rogue body to sleep.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (3, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Rogue (and static) bodies cannot be put to sleep.");'), (6, 2, u'-\tcpAssertHard(space, "Cannot put a rogue body to sleep.");')]
===========================================
Class: class Contact { 
Class: class ContactListener : public b2ContactListener { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT((animationIndex > -1) && (animationIndex < movName.size()));'), (3, 1, u'+    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAnimation::playByIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT((animationIndex > -1) && (animationIndex < movName.size()));'), (3, 1, u'+    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT((animationIndex > -1) && (animationIndex < movName.size()));'), (3, 1, u'+    CC_ASSERT((animationIndex > -1) && ((unsigned int)animationIndex < movName.size()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name.compare("") != 0, "");'), (3, 1, u'+    CCAssert(name.length() != 0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *CCDataReaderHelper::decodeBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name.compare("") != 0, "");'), (3, 1, u'+    CCAssert(name.length() != 0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(name.compare("") != 0, "");'), (3, 1, u'+    CCAssert(name.length() != 0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: CCArmature::changeBoneParent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(bone != NULL, "bone must be added to the bone dictionary!");'), (3, 1, u'+    CCAssert(bone != NULL, "bone must be added to the bone dictionary!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert( NULL != _child, "Argument must be non-nil");'), (6, 2, u'-\tCCAssert( NULL == _child->m_pParent, "child already added. It can\'t be added again");'), (14, 1, u'+    CCAssert( NULL != child, "Argument must be non-nil");'), (15, 1, u'+    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCBone::updateColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert( NULL != _child, "Argument must be non-nil");'), (6, 2, u'-\tCCAssert( NULL == _child->m_pParent, "child already added. It can\'t be added again");'), (14, 1, u'+    CCAssert( NULL != child, "Argument must be non-nil");'), (15, 1, u'+    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert( NULL != _child, "Argument must be non-nil");'), (6, 2, u'-\tCCAssert( NULL == _child->m_pParent, "child already added. It can\'t be added again");'), (14, 1, u'+    CCAssert( NULL != child, "Argument must be non-nil");'), (15, 1, u'+    CCAssert( NULL == child->m_pParent, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( (m_pDecoDisplayList ? index<(int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (8, 1, u'+    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: CCDisplayManager::removeDisplay
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( (m_pDecoDisplayList ? index<(int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (8, 1, u'+    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert( (m_pDecoDisplayList ? index<(int)m_pDecoDisplayList->count() : true), "the _index value is out of range");'), (8, 1, u'+    CCAssert( (m_pDecoDisplayList ? index < (int)m_pDecoDisplayList->count() : true), "the _index value is out of range");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\tCCAssert(root, "XML error  or  XML is empty.");'), (77, 1, u'+    CCAssert(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Total add: 57
Total del: 57
Header: CCDataReaderHelper::addDataFromXMLPak
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\tCCAssert(root, "XML error  or  XML is empty.");'), (77, 1, u'+    CCAssert(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\tCCAssert(root, "XML error  or  XML is empty.");'), (77, 1, u'+    CCAssert(root, "XML error  or  XML is empty.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCCAssert(name.compare("") != 0, "");'), (79, 1, u'+    CCAssert(name.compare("") != 0, "");')]
===========================================
===========================================
Total add: 23
Total del: 75
Header: *CCDataReaderHelper::decodeBone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCCAssert(name.compare("") != 0, "");'), (79, 1, u'+    CCAssert(name.compare("") != 0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCCAssert(name.compare("") != 0, "");'), (79, 1, u'+    CCAssert(name.compare("") != 0, "");')]
===========================================
Class: class CLuaWebSocket: public WebSocket,public WebSocket::Delegate     enum webSocketScriptHandlerType     {     
Class: class LuaWebSocketDelegate : public WebSocket::Delegate { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(animationData, "AnimationData not exist! ");'), (5, 1, u'+            CCAssert(animationData, "CCAnimationData not exist! ");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCArmature::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(animationData, "AnimationData not exist! ");'), (5, 1, u'+            CCAssert(animationData, "CCAnimationData not exist! ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(animationData, "AnimationData not exist! ");'), (5, 1, u'+            CCAssert(animationData, "CCAnimationData not exist! ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::enableShadow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::disableShadow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::enableStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::disableStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::setFontFillColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::enableShadow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::disableShadow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::enableStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::disableStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLabelTTF::setFontFillColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(382, 1, u'+   assert( collectComments_ );'), (385, 1, u'+      assert( lastValue_ != 0 );'), (576, 1, u'+   assert( lastDigitThreshold >=0  &&  lastDigitThreshold <= 9 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+#define JSON_ASSERT_UNREACHABLE assert( false )'), (24, 1, u'+#define JSON_ASSERT( condition ) assert( condition );  // @todo <= change this into an exception throw'), (26, 1, u'+#define JSON_ASSERT_MESSAGE( condition, message ) if (!( condition )) JSON_FAIL_MESSAGE( message )'), (60, 1, u'+   JSON_ASSERT_MESSAGE( newString != 0, "Failed to allocate string value buffer" );'), (123, 1, u'+   JSON_ASSERT( text != 0 );'), (124, 1, u'+   JSON_ASSERT_MESSAGE( text[0]==\'\\0\' || text[0]==\'/\', "Comments must start with /");'), (275, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (449, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (492, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (576, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (638, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (652, 1, u'+   JSON_ASSERT( type_ == stringValue );'), (675, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (697, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= minInt  &&  value_.int_ <= maxInt, "unsigned integer out of signed int range" );'), (700, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt(maxInt), "unsigned integer out of signed int range" );'), (703, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= minInt  &&  value_.real_ <= maxInt, "Real out of signed integer range" );'), (712, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (726, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to unsigned integer" );'), (727, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ <= maxUInt, "signed integer out of UInt range" );'), (730, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= maxUInt, "unsigned integer out of UInt range" );'), (733, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt,  "Real out of unsigned integer range" );'), (742, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (760, 1, u'+      JSON_ASSERT_MESSAGE( value_.uint_ <= UInt64(maxInt64), "unsigned integer out of Int64 range" );'), (763, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= minInt64  &&  value_.real_ <= maxInt64, "Real out of Int64 range" );'), (772, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (786, 1, u'+      JSON_ASSERT_MESSAGE( value_.int_ >= 0, "Negative integer can not be converted to UInt64" );'), (791, 1, u'+      JSON_ASSERT_MESSAGE( value_.real_ >= 0  &&  value_.real_ <= maxUInt64,  "Real out of UInt64 range" );'), (800, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (853, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (882, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (907, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (958, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (995, 1, u'+      JSON_ASSERT_UNREACHABLE;'), (1021, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue  || type_ == objectValue );'), (1052, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1067, 1, u'+      assert( size() == newSize );'), (1078, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1099, 1, u'+   JSON_ASSERT( index >= 0 );'), (1107, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );'), (1126, 1, u'+   JSON_ASSERT( index >= 0 );'), (1142, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1182, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1260, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );'), (1324, 1, u'+   JSON_ASSERT( type_ == nullValue  ||  type_ == objectValue );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+   assert( current >= buffer );'), (55, 1, u'+   assert( current >= buffer );'), (399, 1, u'+         assert( childValues_.size() == size );'), (487, 1, u'+   assert( int(indentString_.size()) >= indentSize_ );'), (675, 1, u'+         assert( childValues_.size() == size );'), (767, 1, u'+   assert( indentString_.size() >= indentation_.size() );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: CCTMXMapInfo::startElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(ownerCallbackNames->count() == ownerCallbackNodes->count());'), (24, 1, u'+            assert(ownerOutletNames->count() == ownerOutletNodes->count());')]
===========================================
===========================================
Total add: 30
Total del: 0
Header: CCNodeLoader::parsePropTypeCCBFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(ownerCallbackNames->count() == ownerCallbackNodes->count());'), (24, 1, u'+            assert(ownerOutletNames->count() == ownerOutletNodes->count());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(ownerCallbackNames->count() == ownerCallbackNodes->count());'), (24, 1, u'+            assert(ownerOutletNames->count() == ownerOutletNodes->count());')]
===========================================
Class:class JSB_ScrollViewDelegate : public CCScrollViewDelegate class JSB_ScrollViewDelegate : public CCNode , public CCScrollViewDelegate     JSB_ScrollViewDelegate()     : m_pJSDelegate(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_TableViewDelegate : public CCTableViewDelegate class JSB_TableViewDelegate : public CCNode , public CCTableViewDelegate     JSB_TableViewDelegate()     : m_pJSDelegate(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_TableViewDataSource : public CCTableViewDataSource class JSB_TableViewDataSource : public CCNode , public CCTableViewDataSource     JSB_TableViewDataSource()     : m_pJSTableViewDataSource(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_EditBoxDelegate : public CCEditBoxDelegate class JSB_EditBoxDelegate : public CCNode , public CCEditBoxDelegate     JSB_EditBoxDelegate()     : m_pJSDelegate(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_ScrollViewDelegate : public CCScrollViewDelegate class JSB_ScrollViewDelegate : public CCNode , public CCScrollViewDelegate     JSB_ScrollViewDelegate()     : m_pJSDelegate(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_TableViewDelegate : public CCTableViewDelegate class JSB_TableViewDelegate : public CCNode , public CCTableViewDelegate     JSB_TableViewDelegate()     : m_pJSDelegate(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_TableViewDataSource : public CCTableViewDataSource class JSB_TableViewDataSource : public CCNode , public CCTableViewDataSource     JSB_TableViewDataSource()     : m_pJSTableViewDataSource(NULL)     , m_bNeedUnroot(false)     {}     
Class:class JSB_EditBoxDelegate : public CCEditBoxDelegate class JSB_EditBoxDelegate : public CCNode , public CCEditBoxDelegate     JSB_EditBoxDelegate()     : m_pJSDelegate(NULL)     , m_bNeedUnroot(false)     {}     
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(89, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (99, 1, u'+\tCCAssert(atlas, "Error reading atlas file.");'), (104, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(99, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (100, 1, u'+\tCCAssert(stateData, "stateData cannot be null.");'), (123, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (128, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (133, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (138, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
Class: class Pluginx_PurchaseResult : public cocos2d::plugin::PayResultListener { 
Class: class Pluginx_AdsListener : public cocos2d::plugin::AdsListener { 
Class: class Pluginx_ShareResult : public cocos2d::plugin::ShareResultListener { 
Class: class Pluginx_PurchaseResult : public cocos2d::plugin::PayResultListener { 
Class: class Pluginx_AdsListener : public cocos2d::plugin::AdsListener { 
Class: class Pluginx_ShareResult : public cocos2d::plugin::ShareResultListener { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert( n <= capacity, "updateAtlasValues: Invalid String length");'), (4, 1, u'+    CCAssert( n <= m_pTextureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCLabelAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert( n <= capacity, "updateAtlasValues: Invalid String length");'), (4, 1, u'+    CCAssert( n <= m_pTextureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert( n <= capacity, "updateAtlasValues: Invalid String length");'), (4, 1, u'+    CCAssert( n <= m_pTextureAtlas->getCapacity(), "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert( index >= 0 && index < capacity, "updateAtlasValueAt: Invalid index");'), (4, 1, u'+    CCAssert( index >= 0 && index < m_pTextureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCTileMapAtlas::updateAtlasValueAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert( index >= 0 && index < capacity, "updateAtlasValueAt: Invalid index");'), (4, 1, u'+    CCAssert( index >= 0 && index < m_pTextureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert( index >= 0 && index < capacity, "updateAtlasValueAt: Invalid index");'), (4, 1, u'+    CCAssert( index >= 0 && index < m_pTextureAtlas->getCapacity(), "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(89, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data.");'), (99, 1, u'+\tCCAssert(atlas, "Error reading atlas file.");'), (104, 1, u'+\tCCAssert(skeletonData, json->error ? json->error : "Error reading skeleton data file.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(99, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (100, 1, u'+\tCCAssert(stateData, "stateData cannot be null.");'), (123, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (128, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (133, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");'), (138, 1, u'+\tCCAssert(stateIndex >= 0 && stateIndex < (int)states.size(), "stateIndex out of range.");')]
===========================================
Class:  class JSB_WebSocketDelegate : public WebSocket::Delegate { 
Class: class WsThreadHelper : public cocos2d::CCObject { 
Class:  class WebSocketCallbackWrapper { class WebSocketCallbackWrapper 
Class:  class WsThreadEntry { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(ret == 0, "fwrite function returned nonzero value");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: TestSearchPath::onEnter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(ret == 0, "fwrite function returned nonzero value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(ret == 0, "fwrite function returned nonzero value");')]
===========================================
Class:  class JSB_WebSocketDelegate : public WebSocket::Delegate { 
Class: class WsThreadHelper : public cocos2d::CCObject { 
Class:  class WebSocketCallbackWrapper { class WebSocketCallbackWrapper 
Class:  class WsThreadEntry { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Total add: 0
Total del: 11
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert(m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert( m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Total add: 5
Total del: 17
Header: CCSprite::updateColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert( m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        CCAssert( m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( m_uAtlasIndex <= capacity, "updateTransform: Invalid m_uAtlasIndex");'), (3, 1, u'+        CCAssert(m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( m_uAtlasIndex <= capacity, "updateTransform: Invalid m_uAtlasIndex");'), (3, 1, u'+        CCAssert(m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( m_uAtlasIndex <= capacity, "updateTransform: Invalid m_uAtlasIndex");'), (3, 1, u'+        CCAssert(m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( m_uAtlasIndex <= capacity, "updateColor: Invalid m_uAtlasIndex");'), (3, 1, u'+        CCAssert( m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( m_uAtlasIndex <= capacity, "updateColor: Invalid m_uAtlasIndex");'), (3, 1, u'+        CCAssert( m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert( m_uAtlasIndex <= capacity, "updateColor: Invalid m_uAtlasIndex");'), (3, 1, u'+        CCAssert( m_uAtlasIndex >= 0 && m_uAtlasIndex < capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( n <= capacity, "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: CCLabelAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( n <= capacity, "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( n <= capacity, "updateAtlasValues: Invalid String length");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert( m_uAtlasIndex <= capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert( m_uAtlasIndex <= capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert( m_uAtlasIndex <= capacity, "updateTransform: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        CCAssert( m_uAtlasIndex <= capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: CCSprite::updateColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        CCAssert( m_uAtlasIndex <= capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        CCAssert( m_uAtlasIndex <= capacity, "updateColor: Invalid m_uAtlasIndex");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( index >= 0 && index < capacity, "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: CCTileMapAtlas::updateAtlasValueAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( index >= 0 && index < capacity, "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( index >= 0 && index < capacity, "updateAtlasValueAt: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: *CCConfiguration::getCString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: CCConfiguration::getBool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCConfiguration::getNumber
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tCCAssert(false, "Key found, but from different type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tCCAssert(dict, "cannot create dictionary");')]
===========================================
===========================================
Total add: 16
Total del: 2
Header: CCConfiguration::getObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tCCAssert(dict, "cannot create dictionary");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tCCAssert(dict, "cannot create dictionary");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-                    CCAssert(false, "the type isn\'t suppored.");'), (76, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 40
Total del: 39
Header: ccarray_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-                    CCAssert(false, "the type isn\'t suppored.");'), (76, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-                    CCAssert(false, "the type isn\'t suppored.");'), (76, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
Class:class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sm_pSharedApplication, "");'), (3, 1, u'+    CCAssert(sm_pSharedCCOspApplication, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCOspApplication::GetInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sm_pSharedApplication, "");'), (3, 1, u'+    CCAssert(sm_pSharedCCOspApplication, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(sm_pSharedApplication, "");'), (3, 1, u'+    CCAssert(sm_pSharedCCOspApplication, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    AppAssert(pApp);')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: CCEGLView::end
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    AppAssert(pApp);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    AppAssert(pApp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(tex);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: CCLabelTTF::updateTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(tex);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(tex);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(tex);')]
===========================================
===========================================
Total add: 8
Total del: 55
Header: CCLabelTTF::updateTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(tex);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(tex);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCLabelTTF::enableShadow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCLabelTTF::disableShadow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCLabelTTF::enableStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCLabelTTF::disableStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCLabelTTF::setFontFillColor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCTexture2D::initWithStringShadowStroke
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        CCAssert(false, "Currently only supported on iOS and Android!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-                                assert( (offset + 3) < bitmapSize ) ;')]
===========================================
===========================================
Total add: 40
Total del: 117
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-                                assert( (offset + 3) < bitmapSize ) ;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-                                assert( (offset + 3) < bitmapSize ) ;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType = kUnsignedCharValue);'), (3, 1, u'+    assert(mType == kUnsignedCharValue);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType = kUnsignedCharValue);'), (3, 1, u'+    assert(mType == kUnsignedCharValue);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(mType = kUnsignedCharValue);'), (3, 1, u'+    assert(mType == kUnsignedCharValue);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(a, "CCPoint division by 0.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCPoint::operator/
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(a, "CCPoint division by 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(a, "CCPoint division by 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(a, "CCSize division by 0.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCSize::operator/
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(a, "CCSize division by 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(a, "CCSize division by 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void CC_DLL cc_assert_script_compatible(bool cond, const char *msg)'), (3, 1, u'+bool CC_DLL cc_assert_script_compatible(const char *msg)'), (6, 2, u'-    if (!cond && pEngine && pEngine->executeAssert(cond, msg))'), (7, 1, u'+    if (pEngine && pEngine->handleAssert(msg))')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaEngine::executeAssert(bool cond, const char *msg/* = NULL */)'), (3, 1, u'+bool CCLuaEngine::handleAssert(const char *msg)'), (5, 2, u'-    bool ret = m_stack->executeAssert(cond, msg);'), (6, 1, u'+    bool ret = m_stack->handleAssert(msg);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLuaEngine::executeEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaEngine::executeAssert(bool cond, const char *msg/* = NULL */)'), (3, 1, u'+bool CCLuaEngine::handleAssert(const char *msg)'), (5, 2, u'-    bool ret = m_stack->executeAssert(cond, msg);'), (6, 1, u'+    bool ret = m_stack->handleAssert(msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaEngine::executeAssert(bool cond, const char *msg/* = NULL */)'), (3, 1, u'+bool CCLuaEngine::handleAssert(const char *msg)'), (5, 2, u'-    bool ret = m_stack->executeAssert(cond, msg);'), (6, 1, u'+    bool ret = m_stack->handleAssert(msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaStack::executeAssert(bool cond, const char *msg)'), (3, 1, u'+bool CCLuaStack::handleAssert(const char *msg)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLuaStack::executeFunctionByHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaStack::executeAssert(bool cond, const char *msg)'), (3, 1, u'+bool CCLuaStack::handleAssert(const char *msg)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-bool CCLuaStack::executeAssert(bool cond, const char *msg)'), (3, 1, u'+bool CCLuaStack::handleAssert(const char *msg)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(caw_key[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call caw_setkey_part(...)?");'), (3, 2, u'-    CCAssert(caw_key[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call caw_setkey_part(...)?");'), (4, 2, u'-    CCAssert(caw_key[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call caw_setkey_part(...)?");'), (5, 2, u'-    CCAssert(caw_key[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call caw_setkey_part(...)?");'), (6, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: caw_encdec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(caw_key[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call caw_setkey_part(...)?");'), (3, 2, u'-    CCAssert(caw_key[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call caw_setkey_part(...)?");'), (4, 2, u'-    CCAssert(caw_key[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call caw_setkey_part(...)?");'), (5, 2, u'-    CCAssert(caw_key[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call caw_setkey_part(...)?");'), (6, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(caw_key[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call caw_setkey_part(...)?");'), (3, 2, u'-    CCAssert(caw_key[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call caw_setkey_part(...)?");'), (4, 2, u'-    CCAssert(caw_key[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call caw_setkey_part(...)?");'), (5, 2, u'-    CCAssert(caw_key[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call caw_setkey_part(...)?");'), (6, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[0] != 0, "Cocos2D: CCZ file is encrypted but key part 0 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (7, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[1] != 0, "Cocos2D: CCZ file is encrypted but key part 1 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (8, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[2] != 0, "Cocos2D: CCZ file is encrypted but key part 2 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");'), (9, 1, u'+    CCAssert(s_uEncryptedPvrKeyParts[3] != 0, "Cocos2D: CCZ file is encrypted but key part 3 is not set. Did you call ZipUtils::ccSetPvrEncryptionKeyPart(...)?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-     CCAssert(out, "");'), (3, 2, u'-     CCAssert(&*out, "");'), (7, 1, u'+    CCAssert(out, "");'), (8, 1, u'+    CCAssert(&*out, "");')]
===========================================
===========================================
Total add: 109
Total del: 67
Header: ZipUtils::ccInflateCCZFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-     CCAssert(out, "");'), (3, 2, u'-     CCAssert(&*out, "");'), (7, 1, u'+    CCAssert(out, "");'), (8, 1, u'+    CCAssert(&*out, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-     CCAssert(out, "");'), (3, 2, u'-     CCAssert(&*out, "");'), (7, 1, u'+    CCAssert(out, "");'), (8, 1, u'+    CCAssert(&*out, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    return m_stack->executeAssert(cond, msg);'), (3, 1, u'+    bool ret = m_stack->executeAssert(cond, msg);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCLuaEngine::executeAssert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    return m_stack->executeAssert(cond, msg);'), (3, 1, u'+    bool ret = m_stack->executeAssert(cond, msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    return m_stack->executeAssert(cond, msg);'), (3, 1, u'+    bool ret = m_stack->executeAssert(cond, msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 2
Total del: 13
Header: CCLuaStack::executeString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 24
Header: CCLuaStack::executeGlobalFunction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(false, "not implemented!");')]
===========================================
===========================================
Total add: 36
Total del: 2
Header: js_cocos2dx_CCFileUtils_getByteArrayFromFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(false, "not implemented!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(false, "not implemented!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6358, 1, u'+static int luaB_assert(lua_State*L){'), (6411, 1, u'+{"assert",luaB_assert},')]
===========================================
Class:class JSStringWrapper class JSStringWrapper
Class: class Pluginx_PurchaseResult : public cocos2d::plugin::PayResultListener { 
Class: class Pluginx_PurchaseLocalResult : public cocos2d::plugin::LocalResultListener { 
Class:class TestNode2 : public CCNode { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(mType == kArrayValue);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(mType == kArrayValue);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(mType == kArrayValue);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: CCNodeLoader::onHandlePropTypeSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (70, 1, u'+                    CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 39
Total del: 37
Header: ccarray_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (70, 1, u'+                    CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (70, 1, u'+                    CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-                    CCAssert(false, "the type isn\'t suppored.");'), (74, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 37
Total del: 38
Header: ccarray_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-                    CCAssert(false, "the type isn\'t suppored.");'), (74, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-                    CCAssert(false, "the type isn\'t suppored.");'), (74, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (70, 1, u'+                    CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 38
Total del: 37
Header: ccarray_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (70, 1, u'+                    CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-                CCAssert(false, "the type isn\'t suppored.");'), (70, 1, u'+                    CCAssert(false, "the type isn\'t suppored.");')]
===========================================
Class:class JSB_EditBoxDelegate : public CCEditBoxDelegate { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+                CCAssert(false, "not supported type");')]
===========================================
===========================================
Total add: 55
Total del: 8
Header: jsval_to_ccarray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+                CCAssert(false, "not supported type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+                CCAssert(false, "not supported type");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 31
Total del: 15
Header: ccarray_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Total add: 32
Total del: 17
Header: ccdictionary_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+                CCAssert(false, "the type isn\'t suppored.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 1, u'+            CCAssert(false, "not supported type");')]
===========================================
===========================================
Total add: 57
Total del: 2
Header: jsval_to_ccdictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 1, u'+            CCAssert(false, "not supported type");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 1, u'+            CCAssert(false, "not supported type");')]
===========================================
Class:class ScrollViewDelegate : public CCScrollViewDelegate { 
Class: class TableViewDelegate : public CCTableViewDelegate { 
Class: class TableViewDataSource : public CCTableViewDataSource { 
Class: class ScrollViewDelegate : public CCScrollViewDelegate { 
Class: class TableViewDelegate : public CCTableViewDelegate { 
Class: class TableViewDataSource : public CCTableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCAssert(numObserversRemoved >= 3, "All observers were not removed!");')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: NotificationCenterTest::toExtensionsMainLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCAssert(numObserversRemoved >= 3, "All observers were not removed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    CCAssert(numObserversRemoved >= 3, "All observers were not removed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCGrid3D::vertex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCGrid3D::originalVertex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCGrid3D::setVertex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCTiledGrid3D::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCTiledGrid3D::originalTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCTiledGrid3D::tile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert( pos.x == (unsigned int)pos.x && pos.y == (unsigned int) pos.y , "Numbers must be integers");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-    CCAssert( tile.r != 0, "R component must be non 0");'), (7, 1, u'+    CCAssert(m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+    CCAssert(m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+    CCAssert(position.x < m_pTGAInfo->width, "Invalid position.x");'), (10, 1, u'+    CCAssert(position.y < m_pTGAInfo->height, "Invalid position.x");'), (11, 1, u'+    CCAssert(tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCTileMapAtlas::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-    CCAssert( tile.r != 0, "R component must be non 0");'), (7, 1, u'+    CCAssert(m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+    CCAssert(m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+    CCAssert(position.x < m_pTGAInfo->width, "Invalid position.x");'), (10, 1, u'+    CCAssert(position.y < m_pTGAInfo->height, "Invalid position.x");'), (11, 1, u'+    CCAssert(tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-    CCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-    CCAssert( tile.r != 0, "R component must be non 0");'), (7, 1, u'+    CCAssert(m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+    CCAssert(m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+    CCAssert(position.x < m_pTGAInfo->width, "Invalid position.x");'), (10, 1, u'+    CCAssert(position.y < m_pTGAInfo->height, "Invalid position.x");'), (11, 1, u'+    CCAssert(tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (4, 2, u'-\tassert(pthread_mutex_init(&g_qMutex, NULL) == 0);'), (64, 1, u'+    assert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (65, 1, u'+    assert(pthread_mutex_init(&g_qMutex, NULL) == 0);')]
===========================================
===========================================
Total add: 61
Total del: 61
Header: serverEntryPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (4, 2, u'-\tassert(pthread_mutex_init(&g_qMutex, NULL) == 0);'), (64, 1, u'+    assert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (65, 1, u'+    assert(pthread_mutex_init(&g_qMutex, NULL) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (4, 2, u'-\tassert(pthread_mutex_init(&g_qMutex, NULL) == 0);'), (64, 1, u'+    assert(pthread_mutex_init(&g_rwMutex, NULL) == 0);'), (65, 1, u'+    assert(pthread_mutex_init(&g_qMutex, NULL) == 0);')]
===========================================
Class:class ScrollViewDelegate : public CCScrollViewDelegate { 
Class: class TableViewDelegate : public CCTableViewDelegate { 
Class: class TableViewDataSource : public CCTableViewDataSource { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+  assert(width > 0 && height > 0 && stride >= width);'), (55, 1, u'+  assert(data != NULL && output != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 1, u'+  assert(dec->thread_ctx_.filter_row_);'), (219, 1, u'+      assert(!(delta_y & 1));'), (268, 1, u'+    assert(worker->status_ == OK);'), (474, 1, u'+  assert((yuv_size & ALIGN_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+      assert(last_part >= 0);'), (138, 1, u'+  assert(mem->mode_ == MEM_MODE_APPEND);'), (162, 1, u'+  assert(mem->end_ <= mem->buf_size_);'), (172, 1, u'+  assert(mem->mode_ == MEM_MODE_MAP);'), (192, 1, u'+  assert(mem);'), (205, 1, u'+  assert(mem->mode_ == expected);   // mode is ok'), (258, 1, u'+  assert(mem->start_ <= mem->end_);'), (336, 1, u'+  assert(!idec->is_lossless_);'), (337, 1, u'+  assert(mem->part0_buf_ == NULL);'), (338, 1, u'+  assert(psize > 0);'), (339, 1, u'+  assert(psize <= mem->part0_size_);  // Format limit: no need for runtime check'), (409, 1, u'+  assert(dec->ready_);'), (435, 1, u'+        assert(idec->mem_.start_ <= idec->mem_.end_);'), (466, 1, u'+  assert(idec->is_lossless_);'), (489, 1, u'+  assert(idec->is_lossless_);'), (646, 1, u'+  assert(idec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(369, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (370, 1, u'+    assert(p->scaler_u.y_accum == p->scaler_v.y_accum);'), (398, 1, u'+    assert(u_lines_in == v_lines_in);'), (420, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (449, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (598, 1, u'+  assert(!(io->mb_y & 1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+  assert(dec);'), (25, 1, u'+  assert(dec->layer_data_size_ > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+  assert(hdr != NULL);'), (151, 1, u'+  assert(br != NULL);'), (152, 1, u'+  assert(hdr != NULL);'), (288, 1, u'+    assert(dec->alpha_data_size_ == 0);'), (300, 1, u"+  assert(headers.data_size >= headers.offset);  // WebPParseHeaders' guarantee"), (743, 1, u'+  assert(dec->ready_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 1, u'+  assert(node != NULL);'), (169, 1, u'+    assert(node != NULL);'), (340, 1, u'+  assert(num_htree_groups <= 0x10000);'), (393, 1, u'+  assert(dec->rescaler_memory == NULL);'), (577, 1, u'+  assert(y_start < y_end);'), (578, 1, u'+  assert(io->crop_left < io->crop_right);'), (609, 1, u'+  assert(meta_index < hdr->num_htree_groups_);'), (670, 1, u'+      assert(dec->last_out_row_ <= output->height);'), (676, 1, u'+  assert(dec->last_row_ <= dec->height_);'), (696, 1, u'+  assert(htree_group != NULL);'), (766, 1, u'+      assert(color_cache != NULL);'), (847, 1, u'+  assert(dec->next_transform_ <= NUM_TRANSFORMS);'), (874, 1, u"+      assert(0);    // can't happen"), (885, 1, u'+  assert(hdr);'), (890, 1, u'+  assert(hdr);'), (1031, 1, u'+      assert(data == NULL);'), (1032, 1, u'+      assert(is_level0);'), (1052, 1, u'+  assert(dec->width_ <= final_width);'), (1150, 1, u'+   assert(dec->status_ != VP8_STATUS_OK);'), (1162, 1, u'+  assert(io != NULL);'), (1164, 1, u'+  assert(params != NULL);'), (1166, 1, u'+  assert(dec->output_ != NULL);'), (1192, 1, u'+  assert(dec->status_ != VP8_STATUS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+  assert(data != NULL);'), (66, 1, u'+  assert(data_size != NULL);'), (67, 1, u'+  assert(riff_size != NULL);'), (104, 1, u'+  assert(data != NULL);'), (105, 1, u'+  assert(data_size != NULL);'), (106, 1, u'+  assert(found_vp8x != NULL);'), (161, 1, u'+  assert(data != NULL);'), (162, 1, u'+  assert(data_size != NULL);'), (166, 1, u'+  assert(alpha_data != NULL);'), (167, 1, u'+  assert(alpha_size != NULL);'), (232, 1, u'+  assert(data != NULL);'), (233, 1, u'+  assert(data_size != NULL);'), (234, 1, u'+  assert(chunk_size != NULL);'), (235, 1, u'+  assert(is_lossless != NULL);'), (366, 1, u'+    assert((uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD);'), (367, 1, u'+    assert(headers->offset == headers->data_size - data_size);'), (373, 1, u'+  assert(headers != NULL);'), (405, 1, u'+  assert(params != NULL);'), (610, 1, u'+    assert(buf->u_stride == buf->v_stride);'), (616, 1, u'+  assert(features != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(959, 1, u'+  assert(row_start < row_end);'), (960, 1, u'+  assert(row_end <= transform->ysize_);'), (1130, 1, u'+      assert(0);          // Code flow should not reach here.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 1, u'+  assert(len > 0);                                                             \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (115, 1, u'+  assert(filter >= 0 && filter < WEBP_FILTER_LAST);'), (116, 1, u'+  assert(method >= ALPHA_NO_COMPRESSION);'), (117, 1, u'+  assert(method <= ALPHA_LOSSLESS_COMPRESSION);'), (118, 1, u'+  assert(sizeof(header) == ALPHA_HEADER_LEN);'), (175, 1, u'+  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (176, 1, u'+  assert(enc != NULL && pic != NULL && pic->a != NULL);'), (177, 1, u'+  assert(output != NULL && output_size != NULL);'), (178, 1, u'+  assert(width > 0 && height > 0);'), (179, 1, u'+  assert(pic->a_stride >= width);'), (180, 1, u'+  assert(filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert((uint64_t)(w * h) == (uint64_t)w * h);   // no overflow, as per spec'), (135, 1, u'+  assert(mid <= max && mid >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 1, u'+  assert(refs != NULL);'), (161, 1, u'+  assert(xsize > 0);'), (583, 1, u'+    assert(k >= 1);'), (596, 1, u'+    assert(k >= 1);'), (635, 1, u'+      assert(len == maxlen);'), (664, 1, u'+  assert(size <= refs->max_size);'), (836, 1, u'+  assert(pixel_index == xsize * ysize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 1, u'+  assert(nb <= total);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(230, 1, u'+  assert(histo_bits > 0);'), (266, 1, u'+  assert(in->size <= out->size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 1, u'+  assert(src != NULL && dst != NULL);'), (657, 1, u'+    assert(step >= 4);'), (704, 1, u'+    assert(step >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(251, 1, u'+    assert(expn > 0.);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+  assert(riff_size == (uint32_t)riff_size);'), (71, 1, u'+  assert(IsVP8XNeeded(enc));'), (72, 1, u'+  assert(pic->width >= 1 && pic->height >= 1);'), (73, 1, u'+  assert(pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE);'), (95, 1, u'+  assert(enc->has_alpha_);'), (120, 1, u'+  assert(vp8_size == (uint32_t)vp8_size);'), (292, 1, u'+    assert(enc->use_layer_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(145, 1, u'+  assert(pic != NULL && pic->argb != NULL);'), (358, 1, u'+      assert(trimmed_length >= 2);'), (483, 1, u'+  assert(histogram_image->size == 1);'), (530, 1, u'+  assert(histogram_bits >= MIN_HUFFMAN_BITS);'), (531, 1, u'+  assert(histogram_bits <= MAX_HUFFMAN_BITS);'), (682, 1, u'+  assert(pred_bits >= 2);'), (703, 1, u'+  assert(ccolor_transform_bits >= 2);'), (739, 1, u'+  assert(width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION);'), (873, 1, u'+  assert(palette_size >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(314, 1, u'+  assert((int)error < VP8_ENC_ERROR_LAST);'), (315, 1, u'+  assert((int)error >= VP8_ENC_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  assert(mux != NULL);'), (79, 1, u'+  assert(!IsWPI(kChunks[idx].id));'), (103, 1, u'+  assert(mux != NULL);'), (104, 1, u'+  assert(size <= MAX_CHUNK_PAYLOAD);'), (105, 1, u'+  assert(idx != IDX_NIL);'), (125, 1, u'+  assert(width > 0 && height > 0 && duration > 0);'), (162, 1, u'+    assert(wpi != NULL && wpi->img_ != NULL);'), (175, 1, u'+  assert(chunk_list);'), (444, 1, u'+  assert(idx == IDX_FRAME || idx == IDX_TILE);'), (467, 1, u'+  assert(frame_tile_chunk != NULL);'), (468, 1, u'+  assert(tag == kChunks[IDX_FRAME].tag || tag ==  kChunks[IDX_TILE].tag);'), (483, 1, u'+  assert(image_chunk != NULL);'), (484, 1, u'+  assert(tag == kChunks[IDX_VP8].tag || tag ==  kChunks[IDX_VP8L].tag);'), (517, 1, u'+  assert(mux != NULL);'), (518, 1, u'+  assert(width != NULL && height != NULL);'), (521, 1, u'+  assert(wpi != NULL);'), (522, 1, u'+  assert(wpi->img_ != NULL);'), (536, 1, u'+      assert(x_offset < MAX_POSITION_OFFSET);'), (537, 1, u'+      assert(y_offset < MAX_POSITION_OFFSET);'), (580, 1, u'+  assert(mux != NULL);'), (691, 1, u'+  assert(dst == data + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+  assert(chunk);'), (106, 1, u'+  assert(chunk_list);'), (193, 1, u'+  assert(chunk);'), (194, 1, u'+  assert(chunk->tag_ != NIL_TAG);'), (197, 1, u'+  assert(chunk_size == (uint32_t)chunk_size);'), (245, 1, u'+  assert(wpi);'), (284, 1, u'+  assert(wpi_list);'), (288, 1, u'+  assert(id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE ||'), (290, 1, u'+  assert(id != WEBP_CHUNK_IMAGE || nth == 1);'), (356, 1, u'+  assert(wpi_list);'), (369, 1, u'+  assert(wpi_list);'), (370, 1, u'+  assert(wpi);'), (405, 1, u'+  assert(wpi);'), (425, 1, u'+    assert(images->img_ != NULL);'), (437, 1, u'+  assert(size == (uint32_t)size);'), (443, 1, u'+  assert(mux != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+  assert(mux != NULL);'), (39, 1, u'+  assert(!IsWPI(kChunks[idx].id));'), (149, 1, u'+      assert(wpi_chunk_ptr != NULL);'), (221, 1, u'+  assert(width >= 1 && height >= 1);'), (222, 1, u'+  assert(width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE);'), (223, 1, u'+  assert(width * (uint64_t)height < MAX_IMAGE_AREA);'), (253, 1, u'+    assert(wpi->img_ != NULL);'), (265, 1, u'+  assert(dst == data + size);'), (287, 1, u'+  assert(err == WEBP_MUX_OK);  // Already tested above.'), (339, 1, u'+  assert(wpi->header_ != NULL);  // As MuxImageGetNth() already checked header_.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert(br != NULL);'), (26, 1, u'+  assert(start != NULL);'), (27, 1, u'+  assert(start <= end);'), (71, 1, u'+  assert(br != NULL && br->buf_ != NULL);'), (111, 1, u'+  assert(br != NULL);'), (112, 1, u'+  assert(start != NULL);'), (113, 1, u"+  assert(length < 0xfffffff8u);   // can't happen with a RIFF chunk."), (130, 1, u'+  assert(br != NULL);'), (131, 1, u'+  assert(buf != NULL);'), (132, 1, u"+  assert(len < 0xfffffff8u);   // can't happen with a RIFF chunk."), (191, 1, u'+  assert(n_bits >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+  assert(bw->nb_bits_ >= 0);'), (178, 1, u'+  assert(data);'), (265, 1, u'+    assert(n_bits <= 25);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+  assert(cc != NULL);'), (27, 1, u'+  assert(hash_bits > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert(in != NULL);                                       \\'), (26, 1, u'+  assert(out != NULL);                                      \\'), (27, 1, u'+  assert(width > 0);                                        \\'), (28, 1, u'+  assert(height > 0);                                       \\'), (29, 1, u'+  assert(bpp > 0);                                          \\'), (30, 1, u'+  assert(stride >= width * bpp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert(children - node == (int)(children - node));'), (47, 1, u'+  assert(tree != NULL);'), (79, 1, u'+  assert(code_lengths != NULL);'), (80, 1, u'+  assert(code_lengths_size > 0);'), (81, 1, u'+  assert(huff_codes != NULL);'), (150, 1, u'+  assert(tree != NULL);'), (151, 1, u'+  assert(code_lengths != NULL);'), (210, 1, u'+  assert(tree != NULL);'), (211, 1, u'+  assert(code_lengths != NULL);'), (212, 1, u'+  assert(codes != NULL);'), (213, 1, u'+  assert(symbols != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 1, u'+  assert(tree_size_orig <= (1 << (tree_depth_limit - 1)));'), (284, 1, u'+  assert(value <= MAX_ALLOWED_CODE_LENGTH);'), (353, 1, u'+  assert(tokens != NULL);'), (367, 1, u'+    assert(tokens <= ending_token);'), (401, 1, u'+  assert(tree != NULL);'), (405, 1, u'+    assert(code_length <= MAX_ALLOWED_CODE_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+  assert(inv_q_level[0] == min_s);'), (74, 1, u'+  assert(inv_q_level[num_levels - 1] == max_s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 1, u'+  assert(worker->status_ <= OK);'), (216, 1, u'+  assert(!ok || (worker->status_ == OK));'), (240, 1, u'+  assert(worker->status_ == NOT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 1, u'+    TIXMLASSERT( endTag && *endTag );'), (228, 1, u'+                        TIXMLASSERT( q <= p );'), (527, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 1, u'+    TIXMLASSERT( child->_parent == this );'), (648, 1, u'+    TIXMLASSERT( node->_parent == this );'), (656, 1, u'+        TIXMLASSERT( _firstChild );'), (657, 1, u'+        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 1, u'+        TIXMLASSERT( _firstChild == 0 );'), (680, 1, u'+        TIXMLASSERT( _lastChild );'), (681, 1, u'+        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 1, u'+        TIXMLASSERT( _lastChild == 0 );'), (704, 1, u'+    TIXMLASSERT( afterThis->_parent == this );'), (1519, 1, u'+\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 1, u'+\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 1, u'+\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 1, u'+\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 1, u'+        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 1, u'+    TIXMLASSERT( _elementJustOpened );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 2, u'-    TIXMLASSERT( endTag && *endTag );'), (228, 2, u'-                        TIXMLASSERT( q <= p );'), (527, 2, u'-    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 2, u'-    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 2, u'-    TIXMLASSERT( child->_parent == this );'), (648, 2, u'-    TIXMLASSERT( node->_parent == this );'), (656, 2, u'-        TIXMLASSERT( _firstChild );'), (657, 2, u'-        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 2, u'-        TIXMLASSERT( _firstChild == 0 );'), (680, 2, u'-        TIXMLASSERT( _lastChild );'), (681, 2, u'-        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 2, u'-        TIXMLASSERT( _lastChild == 0 );'), (704, 2, u'-    TIXMLASSERT( afterThis->_parent == this );'), (1519, 2, u'-\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 2, u'-\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 2, u'-\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 2, u'-\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 2, u'-        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 2, u'-    TIXMLASSERT( _elementJustOpened );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-  assert(width > 0 && height > 0 && stride >= width);'), (55, 2, u'-  assert(data != NULL && output != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 2, u'-  assert(dec->thread_ctx_.filter_row_);'), (219, 2, u'-      assert(!(delta_y & 1));'), (268, 2, u'-    assert(worker->status_ == OK);'), (474, 2, u'-  assert((yuv_size & ALIGN_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-      assert(last_part >= 0);'), (138, 2, u'-  assert(mem->mode_ == MEM_MODE_APPEND);'), (162, 2, u'-  assert(mem->end_ <= mem->buf_size_);'), (172, 2, u'-  assert(mem->mode_ == MEM_MODE_MAP);'), (192, 2, u'-  assert(mem);'), (205, 2, u'-  assert(mem->mode_ == expected);   // mode is ok'), (258, 2, u'-  assert(mem->start_ <= mem->end_);'), (336, 2, u'-  assert(!idec->is_lossless_);'), (337, 2, u'-  assert(mem->part0_buf_ == NULL);'), (338, 2, u'-  assert(psize > 0);'), (339, 2, u'-  assert(psize <= mem->part0_size_);  // Format limit: no need for runtime check'), (409, 2, u'-  assert(dec->ready_);'), (435, 2, u'-        assert(idec->mem_.start_ <= idec->mem_.end_);'), (466, 2, u'-  assert(idec->is_lossless_);'), (489, 2, u'-  assert(idec->is_lossless_);'), (646, 2, u'-  assert(idec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(369, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (370, 2, u'-    assert(p->scaler_u.y_accum == p->scaler_v.y_accum);'), (398, 2, u'-    assert(u_lines_in == v_lines_in);'), (420, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (449, 2, u'-    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (598, 2, u'-  assert(!(io->mb_y & 1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-  assert(dec);'), (25, 2, u'-  assert(dec->layer_data_size_ > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-  assert(hdr != NULL);'), (151, 2, u'-  assert(br != NULL);'), (152, 2, u'-  assert(hdr != NULL);'), (288, 2, u'-    assert(dec->alpha_data_size_ == 0);'), (300, 2, u"-  assert(headers.data_size >= headers.offset);  // WebPParseHeaders' guarantee"), (743, 2, u'-  assert(dec->ready_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 2, u'-  assert(node != NULL);'), (169, 2, u'-    assert(node != NULL);'), (340, 2, u'-  assert(num_htree_groups <= 0x10000);'), (393, 2, u'-  assert(dec->rescaler_memory == NULL);'), (577, 2, u'-  assert(y_start < y_end);'), (578, 2, u'-  assert(io->crop_left < io->crop_right);'), (609, 2, u'-  assert(meta_index < hdr->num_htree_groups_);'), (670, 2, u'-      assert(dec->last_out_row_ <= output->height);'), (676, 2, u'-  assert(dec->last_row_ <= dec->height_);'), (696, 2, u'-  assert(htree_group != NULL);'), (766, 2, u'-      assert(color_cache != NULL);'), (847, 2, u'-  assert(dec->next_transform_ <= NUM_TRANSFORMS);'), (874, 2, u"-      assert(0);    // can't happen"), (885, 2, u'-  assert(hdr);'), (890, 2, u'-  assert(hdr);'), (1031, 2, u'-      assert(data == NULL);'), (1032, 2, u'-      assert(is_level0);'), (1052, 2, u'-  assert(dec->width_ <= final_width);'), (1150, 2, u'-   assert(dec->status_ != VP8_STATUS_OK);'), (1162, 2, u'-  assert(io != NULL);'), (1164, 2, u'-  assert(params != NULL);'), (1166, 2, u'-  assert(dec->output_ != NULL);'), (1192, 2, u'-  assert(dec->status_ != VP8_STATUS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-  assert(data != NULL);'), (66, 2, u'-  assert(data_size != NULL);'), (67, 2, u'-  assert(riff_size != NULL);'), (104, 2, u'-  assert(data != NULL);'), (105, 2, u'-  assert(data_size != NULL);'), (106, 2, u'-  assert(found_vp8x != NULL);'), (161, 2, u'-  assert(data != NULL);'), (162, 2, u'-  assert(data_size != NULL);'), (166, 2, u'-  assert(alpha_data != NULL);'), (167, 2, u'-  assert(alpha_size != NULL);'), (232, 2, u'-  assert(data != NULL);'), (233, 2, u'-  assert(data_size != NULL);'), (234, 2, u'-  assert(chunk_size != NULL);'), (235, 2, u'-  assert(is_lossless != NULL);'), (366, 2, u'-    assert((uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD);'), (367, 2, u'-    assert(headers->offset == headers->data_size - data_size);'), (373, 2, u'-  assert(headers != NULL);'), (405, 2, u'-  assert(params != NULL);'), (610, 2, u'-    assert(buf->u_stride == buf->v_stride);'), (616, 2, u'-  assert(features != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(959, 2, u'-  assert(row_start < row_end);'), (960, 2, u'-  assert(row_end <= transform->ysize_);'), (1130, 2, u'-      assert(0);          // Code flow should not reach here.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 2, u'-  assert(len > 0);                                                             \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 2, u'-  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (115, 2, u'-  assert(filter >= 0 && filter < WEBP_FILTER_LAST);'), (116, 2, u'-  assert(method >= ALPHA_NO_COMPRESSION);'), (117, 2, u'-  assert(method <= ALPHA_LOSSLESS_COMPRESSION);'), (118, 2, u'-  assert(sizeof(header) == ALPHA_HEADER_LEN);'), (175, 2, u'-  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (176, 2, u'-  assert(enc != NULL && pic != NULL && pic->a != NULL);'), (177, 2, u'-  assert(output != NULL && output_size != NULL);'), (178, 2, u'-  assert(width > 0 && height > 0);'), (179, 2, u'-  assert(pic->a_stride >= width);'), (180, 2, u'-  assert(filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert((uint64_t)(w * h) == (uint64_t)w * h);   // no overflow, as per spec'), (135, 2, u'-  assert(mid <= max && mid >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 2, u'-  assert(refs != NULL);'), (161, 2, u'-  assert(xsize > 0);'), (583, 2, u'-    assert(k >= 1);'), (596, 2, u'-    assert(k >= 1);'), (635, 2, u'-      assert(len == maxlen);'), (664, 2, u'-  assert(size <= refs->max_size);'), (836, 2, u'-  assert(pixel_index == xsize * ysize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 2, u'-  assert(nb <= total);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(230, 2, u'-  assert(histo_bits > 0);'), (266, 2, u'-  assert(in->size <= out->size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 2, u'-  assert(src != NULL && dst != NULL);'), (657, 2, u'-    assert(step >= 4);'), (704, 2, u'-    assert(step >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(251, 2, u'-    assert(expn > 0.);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-  assert(riff_size == (uint32_t)riff_size);'), (71, 2, u'-  assert(IsVP8XNeeded(enc));'), (72, 2, u'-  assert(pic->width >= 1 && pic->height >= 1);'), (73, 2, u'-  assert(pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE);'), (95, 2, u'-  assert(enc->has_alpha_);'), (120, 2, u'-  assert(vp8_size == (uint32_t)vp8_size);'), (292, 2, u'-    assert(enc->use_layer_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(145, 2, u'-  assert(pic != NULL && pic->argb != NULL);'), (358, 2, u'-      assert(trimmed_length >= 2);'), (483, 2, u'-  assert(histogram_image->size == 1);'), (530, 2, u'-  assert(histogram_bits >= MIN_HUFFMAN_BITS);'), (531, 2, u'-  assert(histogram_bits <= MAX_HUFFMAN_BITS);'), (682, 2, u'-  assert(pred_bits >= 2);'), (703, 2, u'-  assert(ccolor_transform_bits >= 2);'), (739, 2, u'-  assert(width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION);'), (873, 2, u'-  assert(palette_size >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(314, 2, u'-  assert((int)error < VP8_ENC_ERROR_LAST);'), (315, 2, u'-  assert((int)error >= VP8_ENC_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  assert(mux != NULL);'), (79, 2, u'-  assert(!IsWPI(kChunks[idx].id));'), (103, 2, u'-  assert(mux != NULL);'), (104, 2, u'-  assert(size <= MAX_CHUNK_PAYLOAD);'), (105, 2, u'-  assert(idx != IDX_NIL);'), (125, 2, u'-  assert(width > 0 && height > 0 && duration > 0);'), (162, 2, u'-    assert(wpi != NULL && wpi->img_ != NULL);'), (175, 2, u'-  assert(chunk_list);'), (444, 2, u'-  assert(idx == IDX_FRAME || idx == IDX_TILE);'), (467, 2, u'-  assert(frame_tile_chunk != NULL);'), (468, 2, u'-  assert(tag == kChunks[IDX_FRAME].tag || tag ==  kChunks[IDX_TILE].tag);'), (483, 2, u'-  assert(image_chunk != NULL);'), (484, 2, u'-  assert(tag == kChunks[IDX_VP8].tag || tag ==  kChunks[IDX_VP8L].tag);'), (517, 2, u'-  assert(mux != NULL);'), (518, 2, u'-  assert(width != NULL && height != NULL);'), (521, 2, u'-  assert(wpi != NULL);'), (522, 2, u'-  assert(wpi->img_ != NULL);'), (536, 2, u'-      assert(x_offset < MAX_POSITION_OFFSET);'), (537, 2, u'-      assert(y_offset < MAX_POSITION_OFFSET);'), (580, 2, u'-  assert(mux != NULL);'), (691, 2, u'-  assert(dst == data + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 2, u'-  assert(chunk);'), (106, 2, u'-  assert(chunk_list);'), (193, 2, u'-  assert(chunk);'), (194, 2, u'-  assert(chunk->tag_ != NIL_TAG);'), (197, 2, u'-  assert(chunk_size == (uint32_t)chunk_size);'), (245, 2, u'-  assert(wpi);'), (284, 2, u'-  assert(wpi_list);'), (288, 2, u'-  assert(id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE ||'), (290, 2, u'-  assert(id != WEBP_CHUNK_IMAGE || nth == 1);'), (356, 2, u'-  assert(wpi_list);'), (369, 2, u'-  assert(wpi_list);'), (370, 2, u'-  assert(wpi);'), (405, 2, u'-  assert(wpi);'), (425, 2, u'-    assert(images->img_ != NULL);'), (437, 2, u'-  assert(size == (uint32_t)size);'), (443, 2, u'-  assert(mux != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-  assert(mux != NULL);'), (39, 2, u'-  assert(!IsWPI(kChunks[idx].id));'), (149, 2, u'-      assert(wpi_chunk_ptr != NULL);'), (221, 2, u'-  assert(width >= 1 && height >= 1);'), (222, 2, u'-  assert(width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE);'), (223, 2, u'-  assert(width * (uint64_t)height < MAX_IMAGE_AREA);'), (253, 2, u'-    assert(wpi->img_ != NULL);'), (265, 2, u'-  assert(dst == data + size);'), (287, 2, u'-  assert(err == WEBP_MUX_OK);  // Already tested above.'), (339, 2, u'-  assert(wpi->header_ != NULL);  // As MuxImageGetNth() already checked header_.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-  assert(br != NULL);'), (26, 2, u'-  assert(start != NULL);'), (27, 2, u'-  assert(start <= end);'), (71, 2, u'-  assert(br != NULL && br->buf_ != NULL);'), (111, 2, u'-  assert(br != NULL);'), (112, 2, u'-  assert(start != NULL);'), (113, 2, u"-  assert(length < 0xfffffff8u);   // can't happen with a RIFF chunk."), (130, 2, u'-  assert(br != NULL);'), (131, 2, u'-  assert(buf != NULL);'), (132, 2, u"-  assert(len < 0xfffffff8u);   // can't happen with a RIFF chunk."), (191, 2, u'-  assert(n_bits >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-  assert(bw->nb_bits_ >= 0);'), (178, 2, u'-  assert(data);'), (265, 2, u'-    assert(n_bits <= 25);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-  assert(cc != NULL);'), (27, 2, u'-  assert(hash_bits > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-  assert(in != NULL);                                       \\'), (26, 2, u'-  assert(out != NULL);                                      \\'), (27, 2, u'-  assert(width > 0);                                        \\'), (28, 2, u'-  assert(height > 0);                                       \\'), (29, 2, u'-  assert(bpp > 0);                                          \\'), (30, 2, u'-  assert(stride >= width * bpp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 2, u'-  assert(children - node == (int)(children - node));'), (47, 2, u'-  assert(tree != NULL);'), (79, 2, u'-  assert(code_lengths != NULL);'), (80, 2, u'-  assert(code_lengths_size > 0);'), (81, 2, u'-  assert(huff_codes != NULL);'), (150, 2, u'-  assert(tree != NULL);'), (151, 2, u'-  assert(code_lengths != NULL);'), (210, 2, u'-  assert(tree != NULL);'), (211, 2, u'-  assert(code_lengths != NULL);'), (212, 2, u'-  assert(codes != NULL);'), (213, 2, u'-  assert(symbols != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 2, u'-  assert(tree_size_orig <= (1 << (tree_depth_limit - 1)));'), (284, 2, u'-  assert(value <= MAX_ALLOWED_CODE_LENGTH);'), (353, 2, u'-  assert(tokens != NULL);'), (367, 2, u'-    assert(tokens <= ending_token);'), (401, 2, u'-  assert(tree != NULL);'), (405, 2, u'-    assert(code_length <= MAX_ALLOWED_CODE_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-  assert(inv_q_level[0] == min_s);'), (74, 2, u'-  assert(inv_q_level[num_levels - 1] == max_s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 2, u'-  assert(worker->status_ <= OK);'), (216, 2, u'-  assert(!ok || (worker->status_ == OK));'), (240, 2, u'-  assert(worker->status_ == NOT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCAssert(eFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCRenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCAssert(eFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (3, 1, u'+    CCAssert(eFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 13
Header: CCLuaEngine::executeString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 13
Header: CCLuaEngine::executeScriptFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 31
Header: CCLuaEngine::executeGlobalFunction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
Class: class CCDictMaker : public CCSAXDelegator { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(width >= 0.0f && height >= 0.0f, "width and height of Rect must not less than 0.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCRect::setRect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(width >= 0.0f && height >= 0.0f, "width and height of Rect must not less than 0.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(width >= 0.0f && height >= 0.0f, "width and height of Rect must not less than 0.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (8, 1, u'+\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", fullPath.c_str(), s3eFileGetError()));')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (8, 1, u'+\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", fullPath.c_str(), s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (8, 1, u'+\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", fullPath.c_str(), s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));'), (3, 1, u'+\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", fullPath.c_str(), s3eAudioGetErrorString()));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));'), (3, 1, u'+\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", fullPath.c_str(), s3eAudioGetErrorString()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));'), (3, 1, u'+\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", fullPath.c_str(), s3eAudioGetErrorString()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (7, 1, u'+\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", fullPath.c_str(), s3eSoundGetErrorString()));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (7, 1, u'+\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", fullPath.c_str(), s3eSoundGetErrorString()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (7, 1, u'+\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", fullPath.c_str(), s3eSoundGetErrorString()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (11, 1, u'+\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", fullPath.c_str(), s3eFileGetError()));')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (11, 1, u'+\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", fullPath.c_str(), s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (11, 1, u'+\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", fullPath.c_str(), s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: CCFileUtils::fullPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: CCFileUtils::getPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: CCFileUtils::getPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tCCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
Total add: 20
Total del: 1
Header: CCFileUtils::fullPathForFilename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tCCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tCCAssert(pszFileName != NULL, "CCFileUtils: Invalid path");')]
===========================================
Class:class XmlSaxHander : public tinyxml2::XMLVisitor { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(113, 1, u'+    TIXMLASSERT( endTag && *endTag );'), (228, 1, u'+                        TIXMLASSERT( q <= p );'), (527, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLUnknown ) );\t\t// use same memory pool'), (528, 1, u'+    TIXMLASSERT( sizeof( XMLComment ) == sizeof( XMLDeclaration ) );\t// use same memory pool'), (628, 1, u'+    TIXMLASSERT( child->_parent == this );'), (648, 1, u'+    TIXMLASSERT( node->_parent == this );'), (656, 1, u'+        TIXMLASSERT( _firstChild );'), (657, 1, u'+        TIXMLASSERT( _lastChild->_next == 0 );'), (665, 1, u'+        TIXMLASSERT( _firstChild == 0 );'), (680, 1, u'+        TIXMLASSERT( _lastChild );'), (681, 1, u'+        TIXMLASSERT( _firstChild->_prev == 0 );'), (690, 1, u'+        TIXMLASSERT( _lastChild == 0 );'), (704, 1, u'+    TIXMLASSERT( afterThis->_parent == this );'), (1519, 1, u'+\t\tTIXMLASSERT( _elementPool.CurrentAllocs()   == _elementPool.Untracked() );'), (1520, 1, u'+\t\tTIXMLASSERT( _attributePool.CurrentAllocs() == _attributePool.Untracked() );'), (1521, 1, u'+\t\tTIXMLASSERT( _textPool.CurrentAllocs()      == _textPool.Untracked() );'), (1522, 1, u'+\t\tTIXMLASSERT( _commentPool.CurrentAllocs()   == _commentPool.Untracked() );'), (1748, 1, u'+        TIXMLASSERT( entities[i].value < ENTITY_RANGE );'), (1875, 1, u'+    TIXMLASSERT( _elementJustOpened );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame != NULL, "Sprite frame must be not nil");'), (4, 1, u'+    CCAssert(texture != NULL, "CCTexture must be not nil");'), (7, 1, u'+    CCAssert(batchnode != NULL, "CCSpriteBatchNode must be not nil");')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: CCScale9Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame != NULL, "Sprite frame must be not nil");'), (4, 1, u'+    CCAssert(texture != NULL, "CCTexture must be not nil");'), (7, 1, u'+    CCAssert(batchnode != NULL, "CCSpriteBatchNode must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrame != NULL, "Sprite frame must be not nil");'), (4, 1, u'+    CCAssert(texture != NULL, "CCTexture must be not nil");'), (7, 1, u'+    CCAssert(batchnode != NULL, "CCSpriteBatchNode must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");'), (3, 1, u'+    CCAssert((CCSpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (6, 1, u'+    CCAssert(frame != NULL, "CCSpriteFrame must be non-NULL");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: CCScale9Sprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");'), (3, 1, u'+    CCAssert((CCSpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (6, 1, u'+    CCAssert(frame != NULL, "CCSpriteFrame must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");'), (3, 1, u'+    CCAssert((CCSpriteFrameCache::sharedSpriteFrameCache()) != NULL, "sharedSpriteFrameCache must be non-NULL");'), (6, 1, u'+    CCAssert(frame != NULL, "CCSpriteFrame must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(spriteFrameName != NULL, "spriteFrameName must be non-NULL");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCScale9Sprite::createWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(spriteFrameName != NULL, "spriteFrameName must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(spriteFrameName != NULL, "spriteFrameName must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(controlPoints != NULL, "control ponts should  not be null");'), (3, 1, u'+    CCAssert(controlPoints != NULL, "control points should not be NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCPointArray::setControlPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(controlPoints != NULL, "control ponts should  not be null");'), (3, 1, u'+    CCAssert(controlPoints != NULL, "control points should not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(controlPoints != NULL, "control ponts should  not be null");'), (3, 1, u'+    CCAssert(controlPoints != NULL, "control points should not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(mType == kPointerValue);'), (6, 1, u'+    assert(mType == kStringValue);')]
===========================================
===========================================
Total add: 8
Total del: 3
Header: CCBValue::getByteValue
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(mType == kPointerValue);'), (6, 1, u'+    assert(mType == kStringValue);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(mType == kPointerValue);'), (6, 1, u'+    assert(mType == kStringValue);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCNodeLoader::onHandlePropTypeScaleLock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCNodeLoader::onHandlePropTypeInteger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCNodeLoader::onHandlePropTypeCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCNodeLoader::onHandlePropTypeFntFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCAssert(m_szKey[0] != \'\\0\', "Should not call this function for integer dictionary");'), (10, 2, u'-    CCAssert(m_szKey[0] == \'\\0\', "Should not call this function for string dictionary");')]
===========================================
===========================================
Total add: 0
Total del: 17
Header: CCDictElement::~CCDictElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCAssert(m_szKey[0] != \'\\0\', "Should not call this function for integer dictionary");'), (10, 2, u'-    CCAssert(m_szKey[0] == \'\\0\', "Should not call this function for string dictionary");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCAssert(m_szKey[0] != \'\\0\', "Should not call this function for integer dictionary");'), (10, 2, u'-    CCAssert(m_szKey[0] == \'\\0\', "Should not call this function for string dictionary");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszKey && strlen(pszKey) > 0, "Invalid key value.");'), (39, 1, u'+    CCAssert(m_szKey[0] != \'\\0\', "Should not call this function for integer dictionary");'), (45, 1, u'+    CCAssert(m_szKey[0] == \'\\0\', "Should not call this function for string dictionary");')]
===========================================
===========================================
Total add: 55
Total del: 0
Header: NS_CC_BEGIN
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszKey && strlen(pszKey) > 0, "Invalid key value.");'), (39, 1, u'+    CCAssert(m_szKey[0] != \'\\0\', "Should not call this function for integer dictionary");'), (45, 1, u'+    CCAssert(m_szKey[0] == \'\\0\', "Should not call this function for string dictionary");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszKey && strlen(pszKey) > 0, "Invalid key value.");'), (39, 1, u'+    CCAssert(m_szKey[0] != \'\\0\', "Should not call this function for integer dictionary");'), (45, 1, u'+    CCAssert(m_szKey[0] == \'\\0\', "Should not call this function for string dictionary");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == m_eOldDictType, "this dictionary does not use string as key.");'), (11, 1, u'+    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCDictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == m_eOldDictType, "this dictionary does not use string as key.");'), (11, 1, u'+    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == m_eOldDictType, "this dictionary does not use string as key.");'), (11, 1, u'+    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == m_eOldDictType, "this dictionary does not use integer as key.");'), (11, 1, u'+    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCDictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == m_eOldDictType, "this dictionary does not use integer as key.");'), (11, 1, u'+    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(m_eDictType == m_eOldDictType, "this dictionary does not use integer as key.");'), (11, 1, u'+    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as key.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary does not use string as its key");'), (4, 1, u'+    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCDictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary does not use string as its key");'), (4, 1, u'+    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictStr, "this dictionary does not use string as its key");'), (4, 1, u'+    CCAssert(m_eDictType == kCCDictStr, "this dictionary doesn\'t use string as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary does not use integer as its key");'), (4, 1, u'+    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCDictionary::removeObjectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary does not use integer as its key");'), (4, 1, u'+    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_eDictType == kCCDictInt, "this dictionary does not use integer as its key");'), (4, 1, u'+    CCAssert(m_eDictType == kCCDictInt, "this dictionary doesn\'t use integer as its key");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+    CCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+    CCAssert(controlPoints != NULL, "control ponts should  not be null");')]
===========================================
===========================================
Total add: 22
Total del: 10
Header: CCPointArray::CCPointArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+    CCAssert(controlPoints != NULL, "control ponts should  not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+    CCAssert(controlPoints != NULL, "control ponts should  not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: jsval_to_ccpoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 10
Total del: 4
Header: jsval_to_ccacceleration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: jsval_to_ccrect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: jsval_to_ccsize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: jsval_to_cccolor4b
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: jsval_to_cccolor4f
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: jsval_to_cccolor3b
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CC_ASSERT(cond);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: cc_assert_script_compatible
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CC_ASSERT(cond);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CC_ASSERT(cond);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(! sm_pSharedApplication);'), (3, 1, u'+    CCAssert(! sm_pSharedApplication, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCApplication::CCApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(! sm_pSharedApplication);'), (3, 1, u'+    CCAssert(! sm_pSharedApplication, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(! sm_pSharedApplication);'), (3, 1, u'+    CCAssert(! sm_pSharedApplication, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(this == sm_pSharedApplication);'), (3, 1, u'+    CCAssert(this == sm_pSharedApplication, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCApplication::~CCApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(this == sm_pSharedApplication);'), (3, 1, u'+    CCAssert(this == sm_pSharedApplication, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(this == sm_pSharedApplication);'), (3, 1, u'+    CCAssert(this == sm_pSharedApplication, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(sm_pSharedApplication);'), (3, 1, u'+    CCAssert(sm_pSharedApplication, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCApplication::sharedApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(sm_pSharedApplication);'), (3, 1, u'+    CCAssert(sm_pSharedApplication, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(sm_pSharedApplication);'), (3, 1, u'+    CCAssert(sm_pSharedApplication, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(s_pHttpClient);'), (3, 1, u'+    CCAssert(s_pHttpClient, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCHttpClient::destroyInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(s_pHttpClient);'), (3, 1, u'+    CCAssert(s_pHttpClient, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(s_pHttpClient);'), (3, 1, u'+    CCAssert(s_pHttpClient, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-                CCAssert(false, "kTexture2DPixelFormat_A8/kTexture2DPixelFormat_RGB5A1 not support");')]
===========================================
===========================================
Total add: 1
Total del: 26
Header: CCImage::_initWithWebpData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-                CCAssert(false, "kTexture2DPixelFormat_A8/kTexture2DPixelFormat_RGB5A1 not support");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-                CCAssert(false, "kTexture2DPixelFormat_A8/kTexture2DPixelFormat_RGB5A1 not support");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CCLuaEngine::executeString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CCLuaEngine::executeScriptFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CCLuaEngine::executeGlobalFunction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CC_ASSERT(m_callFromLua >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+                CCAssert(false, "kTexture2DPixelFormat_A8/kTexture2DPixelFormat_RGB5A1 not support");')]
===========================================
===========================================
Total add: 28
Total del: 7
Header: CCImage::_initWithWebpData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+                CCAssert(false, "kTexture2DPixelFormat_A8/kTexture2DPixelFormat_RGB5A1 not support");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 1, u'+                CCAssert(false, "kTexture2DPixelFormat_A8/kTexture2DPixelFormat_RGB5A1 not support");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void cc_assert_script_compatible(bool cond, const char *msg)'), (3, 1, u'+void CC_DLL cc_assert_script_compatible(bool cond, const char *msg)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Paddle::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Paddle::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, "Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+  assert(width > 0 && height > 0 && stride >= width);'), (55, 1, u'+  assert(data != NULL && output != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(93, 1, u'+  assert(dec->thread_ctx_.filter_row_);'), (219, 1, u'+      assert(!(delta_y & 1));'), (268, 1, u'+    assert(worker->status_ == OK);'), (474, 1, u'+  assert((yuv_size & ALIGN_MASK) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+      assert(last_part >= 0);'), (138, 1, u'+  assert(mem->mode_ == MEM_MODE_APPEND);'), (162, 1, u'+  assert(mem->end_ <= mem->buf_size_);'), (172, 1, u'+  assert(mem->mode_ == MEM_MODE_MAP);'), (192, 1, u'+  assert(mem);'), (205, 1, u'+  assert(mem->mode_ == expected);   // mode is ok'), (258, 1, u'+  assert(mem->start_ <= mem->end_);'), (336, 1, u'+  assert(!idec->is_lossless_);'), (337, 1, u'+  assert(mem->part0_buf_ == NULL);'), (338, 1, u'+  assert(psize > 0);'), (339, 1, u'+  assert(psize <= mem->part0_size_);  // Format limit: no need for runtime check'), (409, 1, u'+  assert(dec->ready_);'), (435, 1, u'+        assert(idec->mem_.start_ <= idec->mem_.end_);'), (466, 1, u'+  assert(idec->is_lossless_);'), (489, 1, u'+  assert(idec->is_lossless_);'), (646, 1, u'+  assert(idec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(369, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (370, 1, u'+    assert(p->scaler_u.y_accum == p->scaler_v.y_accum);'), (398, 1, u'+    assert(u_lines_in == v_lines_in);'), (420, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (449, 1, u'+    assert(p->last_y + y_pos + num_lines_out < p->output->height);'), (598, 1, u'+  assert(!(io->mb_y & 1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+  assert(dec);'), (25, 1, u'+  assert(dec->layer_data_size_ > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+  assert(hdr != NULL);'), (151, 1, u'+  assert(br != NULL);'), (152, 1, u'+  assert(hdr != NULL);'), (288, 1, u'+    assert(dec->alpha_data_size_ == 0);'), (300, 1, u"+  assert(headers.data_size >= headers.offset);  // WebPParseHeaders' guarantee"), (743, 1, u'+  assert(dec->ready_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 1, u'+  assert(node != NULL);'), (169, 1, u'+    assert(node != NULL);'), (340, 1, u'+  assert(num_htree_groups <= 0x10000);'), (393, 1, u'+  assert(dec->rescaler_memory == NULL);'), (577, 1, u'+  assert(y_start < y_end);'), (578, 1, u'+  assert(io->crop_left < io->crop_right);'), (609, 1, u'+  assert(meta_index < hdr->num_htree_groups_);'), (670, 1, u'+      assert(dec->last_out_row_ <= output->height);'), (676, 1, u'+  assert(dec->last_row_ <= dec->height_);'), (696, 1, u'+  assert(htree_group != NULL);'), (766, 1, u'+      assert(color_cache != NULL);'), (847, 1, u'+  assert(dec->next_transform_ <= NUM_TRANSFORMS);'), (874, 1, u"+      assert(0);    // can't happen"), (885, 1, u'+  assert(hdr);'), (890, 1, u'+  assert(hdr);'), (1031, 1, u'+      assert(data == NULL);'), (1032, 1, u'+      assert(is_level0);'), (1052, 1, u'+  assert(dec->width_ <= final_width);'), (1150, 1, u'+   assert(dec->status_ != VP8_STATUS_OK);'), (1162, 1, u'+  assert(io != NULL);'), (1164, 1, u'+  assert(params != NULL);'), (1166, 1, u'+  assert(dec->output_ != NULL);'), (1192, 1, u'+  assert(dec->status_ != VP8_STATUS_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+  assert(data != NULL);'), (66, 1, u'+  assert(data_size != NULL);'), (67, 1, u'+  assert(riff_size != NULL);'), (101, 1, u'+  assert(data != NULL);'), (102, 1, u'+  assert(data_size != NULL);'), (103, 1, u'+  assert(found_vp8x != NULL);'), (158, 1, u'+  assert(data != NULL);'), (159, 1, u'+  assert(data_size != NULL);'), (163, 1, u'+  assert(alpha_data != NULL);'), (164, 1, u'+  assert(alpha_size != NULL);'), (226, 1, u'+  assert(data != NULL);'), (227, 1, u'+  assert(data_size != NULL);'), (228, 1, u'+  assert(chunk_size != NULL);'), (229, 1, u'+  assert(is_lossless != NULL);'), (360, 1, u'+    assert((uint64_t)(data - headers->data) < MAX_CHUNK_PAYLOAD);'), (361, 1, u'+    assert(headers->offset == headers->data_size - data_size);'), (367, 1, u'+  assert(headers != NULL);'), (399, 1, u'+  assert(params != NULL);'), (604, 1, u'+    assert(buf->u_stride == buf->v_stride);'), (610, 1, u'+  assert(features != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(959, 1, u'+  assert(row_start < row_end);'), (960, 1, u'+  assert(row_end <= transform->ysize_);'), (1130, 1, u'+      assert(0);          // Code flow should not reach here.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 1, u'+  assert(len > 0);                                                             \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(114, 1, u'+  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (115, 1, u'+  assert(filter >= 0 && filter < WEBP_FILTER_LAST);'), (116, 1, u'+  assert(method >= ALPHA_NO_COMPRESSION);'), (117, 1, u'+  assert(method <= ALPHA_LOSSLESS_COMPRESSION);'), (118, 1, u'+  assert(sizeof(header) == ALPHA_HEADER_LEN);'), (175, 1, u'+  assert((uint64_t)data_size == (uint64_t)width * height);  // as per spec'), (176, 1, u'+  assert(enc != NULL && pic != NULL && pic->a != NULL);'), (177, 1, u'+  assert(output != NULL && output_size != NULL);'), (178, 1, u'+  assert(width > 0 && height > 0);'), (179, 1, u'+  assert(pic->a_stride >= width);'), (180, 1, u'+  assert(filter >= WEBP_FILTER_NONE && filter <= WEBP_FILTER_FAST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert((uint64_t)(w * h) == (uint64_t)w * h);   // no overflow, as per spec'), (135, 1, u'+  assert(mid <= max && mid >= min);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 1, u'+  assert(refs != NULL);'), (161, 1, u'+  assert(xsize > 0);'), (584, 1, u'+    assert(k >= 1);'), (597, 1, u'+    assert(k >= 1);'), (636, 1, u'+      assert(len == maxlen);'), (665, 1, u'+  assert(size <= refs->max_size);'), (837, 1, u'+  assert(pixel_index == xsize * ysize);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 1, u'+  assert(nb <= total);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(230, 1, u'+  assert(histo_bits > 0);'), (266, 1, u'+  assert(in->size <= out->size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 1, u'+  assert(src != NULL && dst != NULL);'), (657, 1, u'+    assert(step >= 4);'), (704, 1, u'+    assert(step >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(251, 1, u'+    assert(expn > 0.);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+  assert(riff_size == (uint32_t)riff_size);'), (71, 1, u'+  assert(IsVP8XNeeded(enc));'), (72, 1, u'+  assert(pic->width >= 1 && pic->height >= 1);'), (73, 1, u'+  assert(pic->width <= MAX_CANVAS_SIZE && pic->height <= MAX_CANVAS_SIZE);'), (95, 1, u'+  assert(enc->has_alpha_);'), (120, 1, u'+  assert(vp8_size == (uint32_t)vp8_size);'), (292, 1, u'+    assert(enc->use_layer_);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(145, 1, u'+  assert(pic != NULL && pic->argb != NULL);'), (358, 1, u'+      assert(trimmed_length >= 2);'), (483, 1, u'+  assert(histogram_image->size == 1);'), (530, 1, u'+  assert(histogram_bits >= MIN_HUFFMAN_BITS);'), (531, 1, u'+  assert(histogram_bits <= MAX_HUFFMAN_BITS);'), (677, 1, u'+  assert(pred_bits >= 2);'), (698, 1, u'+  assert(ccolor_transform_bits >= 2);'), (734, 1, u'+  assert(width < WEBP_MAX_DIMENSION && height < WEBP_MAX_DIMENSION);'), (868, 1, u'+  assert(palette_size >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(314, 1, u'+  assert((int)error < VP8_ENC_ERROR_LAST);'), (315, 1, u'+  assert((int)error >= VP8_ENC_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  assert(mux != NULL);'), (79, 1, u'+  assert(!IsWPI(kChunks[idx].id));'), (103, 1, u'+  assert(mux != NULL);'), (104, 1, u'+  assert(size <= MAX_CHUNK_PAYLOAD);'), (105, 1, u'+  assert(idx != IDX_NIL);'), (125, 1, u'+  assert(width > 0 && height > 0 && duration > 0);'), (162, 1, u'+    assert(wpi != NULL && wpi->img_ != NULL);'), (175, 1, u'+  assert(chunk_list);'), (444, 1, u'+  assert(idx == IDX_FRAME || idx == IDX_TILE);'), (467, 1, u'+  assert(frame_tile_chunk != NULL);'), (468, 1, u'+  assert(tag == kChunks[IDX_FRAME].tag || tag ==  kChunks[IDX_TILE].tag);'), (483, 1, u'+  assert(image_chunk != NULL);'), (484, 1, u'+  assert(tag == kChunks[IDX_VP8].tag || tag ==  kChunks[IDX_VP8L].tag);'), (517, 1, u'+  assert(mux != NULL);'), (518, 1, u'+  assert(width != NULL && height != NULL);'), (521, 1, u'+  assert(wpi != NULL);'), (522, 1, u'+  assert(wpi->img_ != NULL);'), (536, 1, u'+      assert(x_offset < MAX_POSITION_OFFSET);'), (537, 1, u'+      assert(y_offset < MAX_POSITION_OFFSET);'), (580, 1, u'+  assert(mux != NULL);'), (691, 1, u'+  assert(dst == data + size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+  assert(chunk);'), (106, 1, u'+  assert(chunk_list);'), (193, 1, u'+  assert(chunk);'), (194, 1, u'+  assert(chunk->tag_ != NIL_TAG);'), (197, 1, u'+  assert(chunk_size == (uint32_t)chunk_size);'), (245, 1, u'+  assert(wpi);'), (284, 1, u'+  assert(wpi_list);'), (288, 1, u'+  assert(id == WEBP_CHUNK_FRAME || id == WEBP_CHUNK_TILE ||'), (290, 1, u'+  assert(id != WEBP_CHUNK_IMAGE || nth == 1);'), (356, 1, u'+  assert(wpi_list);'), (369, 1, u'+  assert(wpi_list);'), (370, 1, u'+  assert(wpi);'), (405, 1, u'+  assert(wpi);'), (425, 1, u'+    assert(images->img_ != NULL);'), (437, 1, u'+  assert(size == (uint32_t)size);'), (443, 1, u'+  assert(mux != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+  assert(mux != NULL);'), (39, 1, u'+  assert(!IsWPI(kChunks[idx].id));'), (149, 1, u'+      assert(wpi_chunk_ptr != NULL);'), (221, 1, u'+  assert(width >= 1 && height >= 1);'), (222, 1, u'+  assert(width <= MAX_CANVAS_SIZE && height <= MAX_CANVAS_SIZE);'), (223, 1, u'+  assert(width * (uint64_t)height < MAX_IMAGE_AREA);'), (253, 1, u'+    assert(wpi->img_ != NULL);'), (265, 1, u'+  assert(dst == data + size);'), (287, 1, u'+  assert(err == WEBP_MUX_OK);  // Already tested above.'), (339, 1, u'+  assert(wpi->header_ != NULL);  // As MuxImageGetNth() already checked header_.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert(br != NULL);'), (26, 1, u'+  assert(start != NULL);'), (27, 1, u'+  assert(start <= end);'), (71, 1, u'+  assert(br != NULL && br->buf_ != NULL);'), (111, 1, u'+  assert(br != NULL);'), (112, 1, u'+  assert(start != NULL);'), (113, 1, u"+  assert(length < 0xfffffff8u);   // can't happen with a RIFF chunk."), (130, 1, u'+  assert(br != NULL);'), (131, 1, u'+  assert(buf != NULL);'), (132, 1, u"+  assert(len < 0xfffffff8u);   // can't happen with a RIFF chunk."), (191, 1, u'+  assert(n_bits >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+  assert(bw->nb_bits_ >= 0);'), (178, 1, u'+  assert(data);'), (265, 1, u'+    assert(n_bits <= 25);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+  assert(cc != NULL);'), (27, 1, u'+  assert(hash_bits > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+  assert(in != NULL);                                       \\'), (26, 1, u'+  assert(out != NULL);                                      \\'), (27, 1, u'+  assert(width > 0);                                        \\'), (28, 1, u'+  assert(height > 0);                                       \\'), (29, 1, u'+  assert(bpp > 0);                                          \\'), (30, 1, u'+  assert(stride >= width * bpp);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+  assert(children - node == (int)(children - node));'), (47, 1, u'+  assert(tree != NULL);'), (79, 1, u'+  assert(code_lengths != NULL);'), (80, 1, u'+  assert(code_lengths_size > 0);'), (81, 1, u'+  assert(huff_codes != NULL);'), (150, 1, u'+  assert(tree != NULL);'), (151, 1, u'+  assert(code_lengths != NULL);'), (210, 1, u'+  assert(tree != NULL);'), (211, 1, u'+  assert(code_lengths != NULL);'), (212, 1, u'+  assert(codes != NULL);'), (213, 1, u'+  assert(symbols != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(208, 1, u'+  assert(tree_size_orig <= (1 << (tree_depth_limit - 1)));'), (284, 1, u'+  assert(value <= MAX_ALLOWED_CODE_LENGTH);'), (353, 1, u'+  assert(tokens != NULL);'), (367, 1, u'+    assert(tokens <= ending_token);'), (401, 1, u'+  assert(tree != NULL);'), (405, 1, u'+    assert(code_length <= MAX_ALLOWED_CODE_LENGTH);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+  assert(inv_q_level[0] == min_s);'), (74, 1, u'+  assert(inv_q_level[num_levels - 1] == max_s);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(193, 1, u'+  assert(worker->status_ <= OK);'), (216, 1, u'+  assert(!ok || (worker->status_ == OK));'), (240, 1, u'+  assert(worker->status_ == NOT_OK);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 0
Total del: 13
Header: jsval_to_ccsize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, @"TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (3, 1, u'+\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexturePVR::unpackPVRv3Data
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, @"TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (3, 1, u'+\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, @"TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");'), (3, 1, u'+\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX, "TexturePVR: Maximum number of mimpaps reached. Increate the CC_PVRMIPMAP_MAX value");')]
===========================================
Class: class QueryCallback : public b2QueryCallback { 
Class:        class Lens3DTarget : public CCNode { 
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+            assert(false); // OH SHIT!')]
===========================================
Class: class Light : public CCSprite { 
Class: class TouchPoint : public CCNode { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class:   class SpriteBlur : public CCSprite { 
Class: class MySprite1 : public CCSprite { 
Class: class MySprite2 : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
Class: class FlipXLeftOver : public CCTransitionFlipX { 
Class: class FlipXRightOver : public CCTransitionFlipX { 
Class: class FlipYUpOver : public CCTransitionFlipY { 
Class: class FlipYDownOver : public CCTransitionFlipY { 
Class: class FlipAngularLeftOver : public CCTransitionFlipAngular { 
Class: class FlipAngularRightOver : public CCTransitionFlipAngular { 
Class: class ZoomFlipXLeftOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipXRightOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipYUpOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipYDownOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipAngularLeftOver : public CCTransitionZoomFlipAngular { 
Class: class ZoomFlipAngularRightOver : public CCTransitionZoomFlipAngular { 
Class: class PageTransitionForward : public CCTransitionPageTurn { 
Class: class PageTransitionBackward : public CCTransitionPageTurn { 
Class: class QueryCallback : public b2QueryCallback { 
Class:        class Lens3DTarget : public CCNode { 
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-            assert(false); // OH SHIT!')]
===========================================
Class: class Light : public CCSprite { 
Class: class TouchPoint : public CCNode { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class:   class SpriteBlur : public CCSprite { 
Class: class MySprite1 : public CCSprite { 
Class: class MySprite2 : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
Class: class FlipXLeftOver : public CCTransitionFlipX { 
Class: class FlipXRightOver : public CCTransitionFlipX { 
Class: class FlipYUpOver : public CCTransitionFlipY { 
Class: class FlipYDownOver : public CCTransitionFlipY { 
Class: class FlipAngularLeftOver : public CCTransitionFlipAngular { 
Class: class FlipAngularRightOver : public CCTransitionFlipAngular { 
Class: class ZoomFlipXLeftOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipXRightOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipYUpOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipYDownOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipAngularLeftOver : public CCTransitionZoomFlipAngular { 
Class: class ZoomFlipAngularRightOver : public CCTransitionZoomFlipAngular { 
Class: class PageTransitionForward : public CCTransitionPageTurn { 
Class: class PageTransitionBackward : public CCTransitionPageTurn { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(classType);')]
===========================================
===========================================
Total add: 2
Total del: 12
Header: unRootObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(classType);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(classType);')]
===========================================
Class: class ExtraAction : public CCFiniteTimeAction { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tIwAssert(GAME, pFile);')]
===========================================
===========================================
Total add: 65
Total del: 80
Header: CCImage::_initWithJpgData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tIwAssert(GAME, pFile);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tIwAssert(GAME, pFile);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tassert(typeProxy);')]
===========================================
===========================================
Total add: 0
Total del: 41
Header: freeSpaceChildren
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tassert(typeProxy);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tassert(typeProxy);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(p);'), (12, 1, u'+            assert(p);'), (18, 1, u'+        CCAssert(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
Total add: 14
Total del: 5
Header: JSScheduleWrapper::setTargetForSchedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(p);'), (12, 1, u'+            assert(p);'), (18, 1, u'+        CCAssert(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(p);'), (12, 1, u'+            assert(p);'), (18, 1, u'+        CCAssert(!targetArray->containsObject(target), "The target was already added.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+    CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (127, 1, u'+    CCAssert(nativeTargetsCount == jsfuncTargetCount, "");')]
===========================================
===========================================
Total add: 98
Total del: 23
Header: JSScheduleWrapper::getTargetForSchedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+    CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (127, 1, u'+    CCAssert(nativeTargetsCount == jsfuncTargetCount, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+    CCAssert(!targetArray->containsObject(target), "The target was already added.");'), (127, 1, u'+    CCAssert(nativeTargetsCount == jsfuncTargetCount, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Total add: 10
Total del: 8
Header: CCNodeLoaderLibrary::registerCCNodeLoader
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+\t\tassert(typeProxy);'), (49, 1, u'+    assert(p);')]
===========================================
===========================================
Total add: 57
Total del: 0
Header: freeSpaceChildren
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+\t\tassert(typeProxy);'), (49, 1, u'+    assert(p);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 1, u'+\t\tassert(typeProxy);'), (49, 1, u'+    assert(p);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tcpAssertHard(FALSE, "Bad assertion in DrawShape()");'), (3, 1, u'+\t\t\tcpAssertHard(false, "Bad assertion in DrawShape()");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: DrawShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tcpAssertHard(FALSE, "Bad assertion in DrawShape()");'), (3, 1, u'+\t\t\tcpAssertHard(false, "Bad assertion in DrawShape()");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tcpAssertHard(FALSE, "Bad assertion in DrawShape()");'), (3, 1, u'+\t\t\tcpAssertHard(false, "Bad assertion in DrawShape()");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: cpBodySetMass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: cpBodySetMoment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpBodyAssertSane(body);'), (4, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpBodySetPos
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpBodyAssertSane(body);'), (4, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpBodyAssertSane(body);'), (4, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: setAngle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: cpBodySetAngle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (13, 1, u'+\t\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (13, 1, u'+\t\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (13, 1, u'+\t\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( sizeof(long)==8);'), (9, 1, u'+\tNSCAssert( sizeof(long)==8, @"Error!");'), (16, 2, u'-\tassert( sizeof(int)==4);'), (17, 1, u'+\tCCAssert( sizeof(int)==4, "Error!");')]
===========================================
===========================================
Total add: 7
Total del: 8
Header: long_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( sizeof(long)==8);'), (9, 1, u'+\tNSCAssert( sizeof(long)==8, @"Error!");'), (16, 2, u'-\tassert( sizeof(int)==4);'), (17, 1, u'+\tCCAssert( sizeof(int)==4, "Error!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( sizeof(long)==8);'), (9, 1, u'+\tNSCAssert( sizeof(long)==8, @"Error!");'), (16, 2, u'-\tassert( sizeof(int)==4);'), (17, 1, u'+\tCCAssert( sizeof(int)==4, "Error!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tCCAssert( sizeof(long long)==8, "Error!");')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: longlong_to_jsval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tCCAssert( sizeof(long long)==8, "Error!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tCCAssert( sizeof(long long)==8, "Error!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(ok == JS_TRUE);')]
===========================================
===========================================
Total add: 18
Total del: 0
Header: jsval_to_ccpoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(ok == JS_TRUE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(ok == JS_TRUE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: CCLabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: CCLabelBMFont::createFontChars
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(m_fRotationX == m_fRotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCNode::getRotation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(m_fRotationX == m_fRotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(m_fRotationX == m_fRotationY, "CCNode#rotation. RotationX != RotationY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene != NULL, "running scene should not be null");'), (3, 1, u'+    CCAssert(pScene != NULL, "This command can only be used to start the CCDirector. There is already a scene present.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::runWithScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene != NULL, "running scene should not be null");'), (3, 1, u'+    CCAssert(pScene != NULL, "This command can only be used to start the CCDirector. There is already a scene present.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pScene != NULL, "running scene should not be null");'), (3, 1, u'+    CCAssert(pScene != NULL, "This command can only be used to start the CCDirector. There is already a scene present.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(m_pRunningScene, "Use runWithScene: instead to start the director");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCDirector::replaceScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(m_pRunningScene, "Use runWithScene: instead to start the director");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(m_pRunningScene, "Use runWithScene: instead to start the director");')]
===========================================
Class:class ChipmunkSpace : public CCObject { 
Class: class ChipmunkSpace : public CCObject { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (8, 1, u'+        CCAssert(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: *ZipFile::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (8, 1, u'+        CCAssert(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");'), (8, 1, u'+        CCAssert(nSize == 0 || nSize == (int)fileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");'), (4, 1, u'+    CCAssert(m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCAssert(m_uFragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCGLProgram::~CCGLProgram
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");'), (4, 1, u'+    CCAssert(m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCAssert(m_uFragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-    CCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");'), (4, 1, u'+    CCAssert(m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+    CCAssert(m_uFragShader == 0, "Fragment Shaders should have been already deleted");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(m_uProgram != 0, "Cannot link invalid program");')]
===========================================
===========================================
Total add: 23
Total del: 20
Header: CCGLProgram::link
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(m_uProgram != 0, "Cannot link invalid program");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(m_uProgram != 0, "Cannot link invalid program");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    CCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");'), (26, 1, u'+    CCAssert(textureUnit < kCCMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Total add: 14
Total del: 12
Header: ccGLBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    CCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");'), (26, 1, u'+    CCAssert(textureUnit < kCCMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    CCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");'), (26, 1, u'+    CCAssert(textureUnit < kCCMaxActiveTexture, "textureUnit is too big");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(p);')]
===========================================
===========================================
Total add: 33
Total del: 0
Header: JSCallFunc::setExtraDataField
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(p);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(p);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CC_ASSERT(s_pHttpClient);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCHttpClient::destroyInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CC_ASSERT(s_pHttpClient);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CC_ASSERT(s_pHttpClient);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
Class:	class SoundFx { 	class SoundFx 
Class: class CC_DLL CCImageHelper { 
Class:  class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (9, 1, u'+  CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Total add: 14
Total del: 11
Header: CCLabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (9, 1, u'+  CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (9, 1, u'+  CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false == pObject->m_bManaged, "this object is already in autorelese pool");')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: CCAutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false == pObject->m_bManaged, "this object is already in autorelese pool");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false == pObject->m_bManaged, "this object is already in autorelese pool");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false == pObject->m_bManaged, "this object is already in autorelese pool");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCAutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false == pObject->m_bManaged, "this object is already in autorelese pool");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false == pObject->m_bManaged, "this object is already in autorelese pool");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 1, u'+        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (5, 1, u'+        CCAssert(progressSprite,    "Progress sprite must be not nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCControlSlider::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 1, u'+        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (5, 1, u'+        CCAssert(progressSprite,    "Progress sprite must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 2, u'-        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 1, u'+        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (5, 1, u'+        CCAssert(progressSprite,    "Progress sprite must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(node != NULL);'), (3, 1, u'+        CCAssert(node != NULL, "Label must not be nil.");'), (6, 2, u'-        assert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL);'), (7, 1, u'+        CCAssert(backgroundSprite != NULL, "Background sprite must not be nil.");'), (8, 1, u'+        CCAssert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
Total add: 13
Total del: 4
Header: CCControlButton::initWithLabelAndBackgroundSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(node != NULL);'), (3, 1, u'+        CCAssert(node != NULL, "Label must not be nil.");'), (6, 2, u'-        assert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL);'), (7, 1, u'+        CCAssert(backgroundSprite != NULL, "Background sprite must not be nil.");'), (8, 1, u'+        CCAssert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(node != NULL);'), (3, 1, u'+        CCAssert(node != NULL, "Label must not be nil.");'), (6, 2, u'-        assert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL);'), (7, 1, u'+        CCAssert(backgroundSprite != NULL, "Background sprite must not be nil.");'), (8, 1, u'+        CCAssert(label != NULL || rgbaLabel!=NULL || backgroundSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 1, u'+        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 1, u'+        CCAssert(thumbSprite,       "Thumb sprite must be not nil");')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: CCControlSlider::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 1, u'+        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 1, u'+        CCAssert(thumbSprite,       "Thumb sprite must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(backgroundSprite,  "Background sprite must be not nil");'), (3, 1, u'+        CCAssert(progressSprite,    "Progress sprite must be not nil");'), (4, 1, u'+        CCAssert(thumbSprite,       "Thumb sprite must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCScale9Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(spriteFrame != NULL, "Invalid spriteFrame for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCScale9Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(spriteFrame != NULL, "Invalid spriteFrame for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(spriteFrame != NULL, "Invalid spriteFrame for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_bIsRetinaEnabled == false, "can not enable retina while set design resolution size!");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: CCEGLViewProtocol::setDesignResolutionSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_bIsRetinaEnabled == false, "can not enable retina while set design resolution size!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_bIsRetinaEnabled == false, "can not enable retina while set design resolution size!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (3, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAtlasNode::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (3, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (3, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overridden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pZone == NULL, "CCDirctionary should not be inherited.");'), (3, 1, u'+    CCAssert(pZone == NULL, "CCDictionary should not be inherited.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDictionary::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pZone == NULL, "CCDirctionary should not be inherited.");'), (3, 1, u'+    CCAssert(pZone == NULL, "CCDictionary should not be inherited.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pZone == NULL, "CCDirctionary should not be inherited.");'), (3, 1, u'+    CCAssert(pZone == NULL, "CCDictionary should not be inherited.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Frame Grabber: could not attach texture to frmaebuffer");'), (3, 1, u'+        CCAssert(0, "Frame Grabber: could not attach texture to framebuffer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCGrabber::grab
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Frame Grabber: could not attach texture to frmaebuffer");'), (3, 1, u'+        CCAssert(0, "Frame Grabber: could not attach texture to framebuffer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "Frame Grabber: could not attach texture to frmaebuffer");'), (3, 1, u'+        CCAssert(0, "Frame Grabber: could not attach texture to framebuffer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");'), (3, 1, u'+    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");'), (3, 1, u'+    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");'), (3, 1, u'+    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a different blending function");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not enough memory to resize the atla");'), (3, 1, u'+        CCAssert(false, "Not enough memory to resize the atlas");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteBatchNode::increaseAtlasCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not enough memory to resize the atla");'), (3, 1, u'+        CCAssert(false, "Not enough memory to resize the atlas");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(false, "Not enough memory to resize the atla");'), (3, 1, u'+        CCAssert(false, "Not enough memory to resize the atlas");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-   IN assertion: the stream s has been sucessfully opened for reading.'), (3, 1, u'+   IN assertion: the stream s has been successfully opened for reading.')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: typedef struct
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-   IN assertion: the stream s has been sucessfully opened for reading.'), (3, 1, u'+   IN assertion: the stream s has been successfully opened for reading.')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-   IN assertion: the stream s has been sucessfully opened for reading.'), (3, 1, u'+   IN assertion: the stream s has been successfully opened for reading.')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mipmap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognised pixel format");'), (3, 1, u'+\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::stringForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognised pixel format");'), (3, 1, u'+\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognised pixel format");'), (3, 1, u'+\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognised pixel format");'), (3, 1, u'+\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::bitsPerPixelForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognised pixel format");'), (3, 1, u'+\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(false , "unrecognised pixel format");'), (3, 1, u'+\t\t\tCCAssert(false , "unrecognized pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addPVRImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(image != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+    CCAssert(image != NULL, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addUIImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(image != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+    CCAssert(image != NULL, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(image != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+    CCAssert(image != NULL, "TextureCache: image MUST not be nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (3, 1, u'+        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTileMapAtlas::loadTGAfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (3, 1, u'+        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (3, 1, u'+        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtlas cannot load TGA file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+    assert(classType);')]
===========================================
===========================================
Total add: 72
Total del: 0
Header: executeJSFunctionFromReservedSpot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+    assert(classType);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+    assert(classType);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-    assert(classType);')]
===========================================
===========================================
Total add: 30
Total del: 84
Header: ScriptingCore::executeFunctionWithObjectData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-    assert(classType);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-    assert(classType);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) CCLog("Unexpected property: \'%s\'!\\n", PROPERTY->getCString()); assert(false)'), (12, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) CCLog("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 2
Total del: 9
Header: js_cocos2dx_CCAnimation_createWithSpriteFrames
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: js_cocos2dx_CCAnimation_animationWithSpriteFrames
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSpeed_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSpeed_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCFollow_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCFollow_actionWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCTexture2D_setDefaultAlphaPixelFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCTexture2D_PVRImagesHavePremultipliedAlpha
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCAnimation_createWithSpriteFrames
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCAnimation_animationWithSpriteFrames
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCAnimation_animationWithAnimationFrames
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCActionInterval_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCActionInterval_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCSequence_actionWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSequence_actionOneTwo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCRepeat_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCRepeat_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCRepeatForever_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCRepeatForever_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCSpawn_actionWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSpawn_actionOneTwo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCRotateTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCRotateTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCRotateBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCRotateBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCMoveTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCMoveTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCMoveBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCMoveBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCSkewTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCSkewTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCSkewBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCSkewBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCJumpBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCJumpBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCJumpTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCJumpTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCBlink_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCBlink_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFadeIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFadeIn_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFadeOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFadeOut_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCTintTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCTintTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCTintBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCTintBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCDelayTime_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCDelayTime_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCAnimate_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCAnimate_actionWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCTargetedAction_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCTargetedAction_actionWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCActionEase_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCActionEase_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseRateAction_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseRateAction_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseIn_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseInOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseInOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseExponentialIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseExponentialIn_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseExponentialOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseExponentialOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseExponentialInOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseExponentialInOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseSineIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseSineIn_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseSineOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseSineOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseSineInOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseSineInOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseElastic_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseElasticIn_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseElasticOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseElasticInOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounce_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounce_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounceIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounceIn_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounceOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounceOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounceInOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBounceInOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBackIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBackIn_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBackOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBackOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBackInOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCEaseBackInOut_actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipX_actionWithFlipX
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipX_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipY_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipY_actionWithFlipY
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCPlace_actionWithPosition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCPlace_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCGridAction_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCGridAction_actionWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCWaves3D_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCWaves3D_actionWithWaves
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipX3D_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipX3D_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipY3D_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCFlipY3D_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCShaky3D_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCShaky3D_actionWithRange
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCProgressTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCProgressTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCProgressFromTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: js_cocos2dx_CCProgressFromTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutTRTiles_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutTRTiles_actionWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutBLTiles_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutBLTiles_actionWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutUpTiles_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutUpTiles_actionWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutDownTiles_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCFadeOutDownTiles_actionWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCJumpTiles3D_actionWithJumps
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCJumpTiles3D_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCActionTween_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCActionTween_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCPointArray_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCPointArray_arrayWithCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCardinalSplineTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCardinalSplineTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCardinalSplineBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCardinalSplineBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCatmullRomTo_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCatmullRomTo_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCatmullRomBy_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCCatmullRomBy_actionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCAtlasNode_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCAtlasNode_atlasWithTileFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSprite_spriteWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCSprite_spriteWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCSprite_createWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSprite_createWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCSpriteBatchNode_batchNodeWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCSpriteBatchNode_batchNodeWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 5);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: js_cocos2dx_CCLabelBMFont_labelWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 5);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 5);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCLayerMultiplex_layerWithLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCLayerMultiplex_createWithLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionScene_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionScene_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSceneOriented_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSceneOriented_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionRotoZoom_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionRotoZoom_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionJumpZoom_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionJumpZoom_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInL_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInL_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInR_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInR_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInT_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInT_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInB_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionMoveInB_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInL_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInL_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInR_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInR_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInB_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInB_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInT_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSlideInT_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionShrinkGrow_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionShrinkGrow_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFlipX_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFlipY_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFlipAngular_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionZoomFlipX_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionZoomFlipY_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionZoomFlipAngular_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFade_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionCrossFade_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionCrossFade_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionTurnOffTiles_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionTurnOffTiles_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSplitCols_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSplitCols_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSplitRows_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionSplitRows_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeTR_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeTR_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeBL_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeBL_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeUp_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeUp_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeDown_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionFadeDown_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionPageTurn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionPageTurn_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgress_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgress_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressRadialCCW_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressRadialCCW_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressRadialCW_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressRadialCW_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressHorizontal_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressHorizontal_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressVertical_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressVertical_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressInOut_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressInOut_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressOutIn_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: js_cocos2dx_CCTransitionProgressOutIn_transitionWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCMenuItemLabel_itemWithLabel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 5);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: js_cocos2dx_CCMenuItemAtlasFont_itemWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 5);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(argc >= 5);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCMenuItemFont_setFontName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCMenuItemFont_setFontSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCMenuItemFont_itemWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCMenuItemSprite_itemWithNormalSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCMenuItemToggle_itemWithItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCMenu_menuWithArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCMenu_menuWithItem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCProgressTimer_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCProgressTimer_progressWithSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCParticleBatchNode_batchNodeWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCParticleBatchNode_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCParticleBatchNode_createWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCParticleBatchNode_batchNodeWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCParticleSystem_particleWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCParticleSystem_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCParticleSystemQuad_particleWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCTMXMapInfo_formatWithTMXFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCTMXMapInfo_formatWithXML
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCTMXLayer_layerWithTilesetInfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: js_cocos2dx_CCTMXLayer_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert(argc >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCTMXTiledMap_tiledMapWithTMXFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCTMXTiledMap_tiledMapWithXML
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: js_cocos2dx_CCTMXTiledMap_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(argc >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: js_cocos2dx_CCTMXTiledMap_createWithXML
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(argc >= 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCTileMapAtlas_create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: js_cocos2dx_CCTileMapAtlas_tileMapAtlasWithTileFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tassert(argc >= 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszRelativePath != NULL, "Parameter can\'t be NULL!");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: fullPathFromRelativePathThreadSafe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszRelativePath != NULL, "Parameter can\'t be NULL!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszRelativePath != NULL, "Parameter can\'t be NULL!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    lua_assert(0);            /* cannot happen */'), (22, 1, u'+\tlua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: DumpConstants
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    lua_assert(0);            /* cannot happen */'), (22, 1, u'+\tlua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-    lua_assert(0);            /* cannot happen */'), (22, 1, u'+\tlua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(184, 2, u'-    assert(0 && "Not implemented");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszRootPath != NULL, "The resource root path must be set in the main.cpp");')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: CCFileUtils::purgeCachedEntries
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszRootPath != NULL, "The resource root path must be set in the main.cpp");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    CCAssert(pszRootPath != NULL, "The resource root path must be set in the main.cpp");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::tileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::tileGIDAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+    CCAssert(item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTMXLayer::atlasIndexForExistantZ
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+    CCAssert(item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+    CCAssert(item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCAssert(gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTMXLayer::setTileGID
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCAssert(gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 2, u'-    CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (5, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+    CCAssert(gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (9, 1, u'+    CCAssert(m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: CCTMXLayer::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (9, 1, u'+    CCAssert(m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    CCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (9, 1, u'+    CCAssert(m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTMXLayer::removeTileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (3, 2, u'-    CCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (4, 1, u'+    CCAssert(pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (5, 1, u'+    CCAssert(m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pHandle != NULL);')]
===========================================
===========================================
Total add: 13
Total del: 1
Header: OpenSLEngine::createEngine
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pHandle != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pHandle != NULL);')]
===========================================
Class: class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (3, 2, u'-\tCCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (4, 1, u'+\tCCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCEGLView::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (3, 2, u'-\tCCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (4, 1, u'+\tCCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (3, 2, u'-\tCCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (4, 1, u'+\tCCAssert(width!=0&&height!=0, "invalid window\'s size equal 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\tCC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
Total add: 6
Total del: 11
Header: CCEGLView::destroyGL
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\tCC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\tCC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");')]
===========================================
===========================================
Total add: 9
Total del: 36
Header: CCFileUtils::purgeCachedEntries
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: initAudioPlayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(SL_RESULT_SUCCESS == result);'), (9, 1, u'+\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: OpenSLEngine::createEngine
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(SL_RESULT_SUCCESS == result);'), (9, 1, u'+\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(SL_RESULT_SUCCESS == result);'), (9, 1, u'+\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\t\tassert(SL_RESULT_SUCCESS == result);'), (13, 1, u'+\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 3
Total del: 8
Header: OpenSLEngine::preloadBackgroundMusic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\t\tassert(SL_RESULT_SUCCESS == result);'), (13, 1, u'+\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\t\tassert(SL_RESULT_SUCCESS == result);'), (13, 1, u'+\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 20
Total del: 29
Header: OpenSLEngine::getBackgroundVolume
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert(result == SL_RESULT_SUCCESS);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: OpenSLEngine::preloadEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert(result == SL_RESULT_SUCCESS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tassert(result == SL_RESULT_SUCCESS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(player != NULL);'), (5, 1, u'+\tassert(NULL != vec);')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: OpenSLEngine::setEffectLooping
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(player != NULL);'), (5, 1, u'+\tassert(NULL != vec);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(player != NULL);'), (5, 1, u'+\tassert(NULL != vec);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(volume <= 1.0f && volume >= 0.0f);'), (19, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);'), (25, 1, u'+\t\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Total add: 13
Total del: 8
Header: OpenSLEngine::setEffectLooping
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(volume <= 1.0f && volume >= 0.0f);'), (19, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);'), (25, 1, u'+\t\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(volume <= 1.0f && volume >= 0.0f);'), (19, 2, u'-\t\tassert(SL_RESULT_SUCCESS == result);'), (25, 1, u'+\t\t\tassert(SL_RESULT_SUCCESS == result);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: CCEGLViewProtocol::getFrameSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 4
Total del: 17
Header: CCEGLViewProtocol::setViewPortInPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 4
Total del: 17
Header: CCEGLViewProtocol::setScissorInPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(CCPointZero),')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(CCPointZero),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert(spriteFrame->getOffsetInPixels().equals(CCPointZero),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCAssert(pos.equals(CCPointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTMXLayer::calculateLayerOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCAssert(pos.equals(CCPointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+        CCAssert(pos.equals(CCPointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(string != NULL, "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCLabelAtlas::create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(string != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(string != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 2, u'-  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 2, u'-static int luaB_assert (lua_State *L) {'), (448, 2, u'-  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 2, u'-  lua_assert(dest != NO_JUMP);'), (173, 2, u'-    lua_assert(target < fs->pc);'), (218, 2, u'-    lua_assert(reg == fs->freereg);'), (235, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (518, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 2, u'-      lua_assert(0);  /* cannot happen */'), (645, 2, u'-    default: lua_assert(0); r = 0; break;'), (705, 2, u'-    default: lua_assert(0);'), (740, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 2, u'-    default: lua_assert(0);'), (805, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (806, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (822, 2, u'-  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 2, u'-    lua_assert(ttisfunction(ci->func));'), (507, 2, u'-    lua_assert(pc != -1);'), (511, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (583, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (200, 2, u'-    lua_assert(!L->allowhook);'), (218, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (292, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (314, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (387, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (396, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 2, u'-  lua_assert(L->errfunc == 0);'), (434, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    lua_assert(p->v != &p->u.value);'), (77, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-  lua_assert(ttisnil(gval(n)));'), (70, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 2, u'-    default: lua_assert(0);'), (186, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (233, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (279, 2, u'-  lua_assert(isgray(o));'), (318, 2, u'-    default: lua_assert(0); return 0;'), (355, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 2, u'-    default: lua_assert(0);'), (415, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 2, u'-      lua_assert(old >= g->totalbytes);'), (588, 2, u'-      lua_assert(old >= g->totalbytes);'), (605, 2, u'-    default: lua_assert(0); return 0;'), (647, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (678, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (131, 2, u'-  lua_assert(currIsNewline(ls));'), (200, 2, u'-  lua_assert(isdigit(ls->current));'), (218, 2, u"-  lua_assert(s == '[' || s == ']');"), (419, 2, u'-          lua_assert(!currIsNewline(ls));'), (465, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (82, 2, u'-  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 2, u'-      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-      lua_assert(f->upvalues[i] == name);'), (200, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (303, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (374, 2, u'-  lua_assert(luaG_checkcode(f));'), (375, 2, u'-  lua_assert(fs->bl == NULL);'), (394, 2, u'-  lua_assert(funcstate.prev == NULL);'), (395, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (396, 2, u'-  lua_assert(lexstate.fs == NULL);'), (511, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 2, u'-  lua_assert(f->k == VNONRELOC);'), (887, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 2, u'-        lua_assert(nret == fs->freereg - first);'), (1332, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (110, 2, u'-  lua_assert(g->strt.nuse == 0);'), (114, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (129, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (136, 2, u'-  lua_assert(L1->openupval == NULL);'), (210, 2, u'-  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 2, u'-    lua_assert(n != dummynode);'), (427, 2, u'-  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 2, u"-    lua_assert(argv[i][0] == '-');"), (303, 2, u'-        lua_assert(chunk != NULL);'), (311, 2, u'-        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (332, 2, u'-      default: lua_assert(0); break;'), (383, 2, u'-  lua_assert(isLua(L->ci));'), (403, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 2, u'-        lua_assert(ttisstring(rb));'), (447, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (611, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 2, u'-          lua_assert(isLua(L->ci));'), (650, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
Class: class QueryCallback : public b2QueryCallback { 
Class:        class Lens3DTarget : public CCNode { 
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+            assert(false); // OH SHIT!')]
===========================================
Class: class Light : public CCSprite { 
Class: class TouchPoint : public CCNode { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class:   class SpriteBlur : public CCSprite { 
Class: class MySprite1 : public CCSprite { 
Class: class MySprite2 : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
Class: class FlipXLeftOver : public CCTransitionFlipX { 
Class: class FlipXRightOver : public CCTransitionFlipX { 
Class: class FlipYUpOver : public CCTransitionFlipY { 
Class: class FlipYDownOver : public CCTransitionFlipY { 
Class: class FlipAngularLeftOver : public CCTransitionFlipAngular { 
Class: class FlipAngularRightOver : public CCTransitionFlipAngular { 
Class: class ZoomFlipXLeftOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipXRightOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipYUpOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipYDownOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipAngularLeftOver : public CCTransitionZoomFlipAngular { 
Class: class ZoomFlipAngularRightOver : public CCTransitionZoomFlipAngular { 
Class: class PageTransitionForward : public CCTransitionPageTurn { 
Class: class PageTransitionBackward : public CCTransitionPageTurn { 
Class: class QueryCallback : public b2QueryCallback { 
Class:        class Lens3DTarget : public CCNode { 
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-            assert(false); // OH SHIT!')]
===========================================
Class: class Light : public CCSprite { 
Class: class TouchPoint : public CCNode { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class:   class SpriteBlur : public CCSprite { 
Class: class MySprite1 : public CCSprite { 
Class: class MySprite2 : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
Class: class FlipXLeftOver : public CCTransitionFlipX { 
Class: class FlipXRightOver : public CCTransitionFlipX { 
Class: class FlipYUpOver : public CCTransitionFlipY { 
Class: class FlipYDownOver : public CCTransitionFlipY { 
Class: class FlipAngularLeftOver : public CCTransitionFlipAngular { 
Class: class FlipAngularRightOver : public CCTransitionFlipAngular { 
Class: class ZoomFlipXLeftOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipXRightOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipYUpOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipYDownOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipAngularLeftOver : public CCTransitionZoomFlipAngular { 
Class: class ZoomFlipAngularRightOver : public CCTransitionZoomFlipAngular { 
Class: class PageTransitionForward : public CCTransitionPageTurn { 
Class: class PageTransitionBackward : public CCTransitionPageTurn { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 1, u'+      lua_assert(0);  /* cannot happen */'), (645, 1, u'+    default: lua_assert(0); r = 0; break;'), (705, 1, u'+    default: lua_assert(0);'), (740, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 1, u'+    default: lua_assert(0);'), (805, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (806, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (822, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (292, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (314, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (387, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (396, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 1, u'+  lua_assert(L->errfunc == 0);'), (434, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (647, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (678, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (131, 1, u'+  lua_assert(currIsNewline(ls));'), (200, 1, u'+  lua_assert(isdigit(ls->current));'), (218, 1, u"+  lua_assert(s == '[' || s == ']');"), (419, 1, u'+          lua_assert(!currIsNewline(ls));'), (465, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (332, 1, u'+      default: lua_assert(0); break;'), (383, 1, u'+  lua_assert(isLua(L->ci));'), (403, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 1, u'+        lua_assert(ttisstring(rb));'), (447, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (611, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 1, u'+          lua_assert(isLua(L->ci));'), (650, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) CCLog("Unexpected property: \'%s\'!\\n", PROPERTY->getCString()); assert(false)'), (15, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) CCLog("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (248, 2, u'-                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);'), (672, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (680, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (685, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (692, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (701, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (706, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (713, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (718, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (725, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (730, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (734, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (743, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (748, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (752, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (756, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (760, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (764, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (768, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (772, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (776, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (780, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (784, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (788, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (792, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (796, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (800, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (804, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (69, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) CCLog("Unexpected property: \'%s\'!\\n", PROPERTY->getCString()); assert(false)'), (15, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) CCLog("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (249, 1, u'+                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);'), (673, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (681, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (686, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (693, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (702, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (707, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (714, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (719, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (726, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (731, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (735, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (744, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (749, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (753, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (757, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (761, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (765, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (769, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (773, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (777, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (781, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (785, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (789, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (793, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (797, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (801, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (805, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (70, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 1, u'+      lua_assert(0);  /* cannot happen */'), (645, 1, u'+    default: lua_assert(0); r = 0; break;'), (705, 1, u'+    default: lua_assert(0);'), (740, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 1, u'+    default: lua_assert(0);'), (805, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (806, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (822, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (292, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (314, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (387, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (396, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 1, u'+  lua_assert(L->errfunc == 0);'), (434, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (647, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (678, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (131, 1, u'+  lua_assert(currIsNewline(ls));'), (200, 1, u'+  lua_assert(isdigit(ls->current));'), (218, 1, u"+  lua_assert(s == '[' || s == ']');"), (419, 1, u'+          lua_assert(!currIsNewline(ls));'), (465, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (332, 1, u'+      default: lua_assert(0); break;'), (383, 1, u'+  lua_assert(isLua(L->ci));'), (403, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 1, u'+        lua_assert(ttisstring(rb));'), (447, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (611, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 1, u'+          lua_assert(isLua(L->ci));'), (650, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 2, u'-  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 2, u'-static int luaB_assert (lua_State *L) {'), (448, 2, u'-  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 2, u'-  lua_assert(dest != NO_JUMP);'), (173, 2, u'-    lua_assert(target < fs->pc);'), (218, 2, u'-    lua_assert(reg == fs->freereg);'), (235, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (518, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (610, 2, u'-      lua_assert(0);  /* cannot happen */'), (645, 2, u'-    default: lua_assert(0); r = 0; break;'), (705, 2, u'-    default: lua_assert(0);'), (740, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (747, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (756, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (779, 2, u'-    default: lua_assert(0);'), (805, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (806, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (807, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (813, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (814, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (822, 2, u'-  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(219, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 2, u'-    lua_assert(ttisfunction(ci->func));'), (507, 2, u'-    lua_assert(pc != -1);'), (511, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (583, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (200, 2, u'-    lua_assert(!L->allowhook);'), (218, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (292, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (314, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (387, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (396, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 2, u'-  lua_assert(L->errfunc == 0);'), (434, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    lua_assert(p->v != &p->u.value);'), (77, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-  lua_assert(ttisnil(gval(n)));'), (70, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 2, u'-    default: lua_assert(0);'), (186, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (233, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (279, 2, u'-  lua_assert(isgray(o));'), (318, 2, u'-    default: lua_assert(0); return 0;'), (355, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 2, u'-    default: lua_assert(0);'), (415, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 2, u'-      lua_assert(old >= g->totalbytes);'), (588, 2, u'-      lua_assert(old >= g->totalbytes);'), (605, 2, u'-    default: lua_assert(0); return 0;'), (647, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (650, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (663, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (664, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (665, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (677, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (678, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (706, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (131, 2, u'-  lua_assert(currIsNewline(ls));'), (200, 2, u'-  lua_assert(isdigit(ls->current));'), (218, 2, u"-  lua_assert(s == '[' || s == ']');"), (419, 2, u'-          lua_assert(!currIsNewline(ls));'), (465, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (82, 2, u'-  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 2, u'-      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-      lua_assert(f->upvalues[i] == name);'), (200, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (303, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (374, 2, u'-  lua_assert(luaG_checkcode(f));'), (375, 2, u'-  lua_assert(fs->bl == NULL);'), (394, 2, u'-  lua_assert(funcstate.prev == NULL);'), (395, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (396, 2, u'-  lua_assert(lexstate.fs == NULL);'), (511, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 2, u'-  lua_assert(f->k == VNONRELOC);'), (887, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 2, u'-        lua_assert(nret == fs->freereg - first);'), (1332, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (110, 2, u'-  lua_assert(g->strt.nuse == 0);'), (114, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (129, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (136, 2, u'-  lua_assert(L1->openupval == NULL);'), (210, 2, u'-  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 2, u'-    lua_assert(n != dummynode);'), (427, 2, u'-  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 2, u"-    lua_assert(argv[i][0] == '-');"), (303, 2, u'-        lua_assert(chunk != NULL);'), (311, 2, u'-        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(257, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (332, 2, u'-      default: lua_assert(0); break;'), (383, 2, u'-  lua_assert(isLua(L->ci));'), (403, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (404, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (405, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (436, 2, u'-        lua_assert(ttisstring(rb));'), (447, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (611, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (624, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (649, 2, u'-          lua_assert(isLua(L->ci));'), (650, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (735, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
Class: class QueryCallback : public b2QueryCallback { 
Class:        class Lens3DTarget : public CCNode { 
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+            assert(false); // OH SHIT!')]
===========================================
Class: class Light : public CCSprite { 
Class: class TouchPoint : public CCNode { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class:   class SpriteBlur : public CCSprite { 
Class: class MySprite1 : public CCSprite { 
Class: class MySprite2 : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
Class: class FlipXLeftOver : public CCTransitionFlipX { 
Class: class FlipXRightOver : public CCTransitionFlipX { 
Class: class FlipYUpOver : public CCTransitionFlipY { 
Class: class FlipYDownOver : public CCTransitionFlipY { 
Class: class FlipAngularLeftOver : public CCTransitionFlipAngular { 
Class: class FlipAngularRightOver : public CCTransitionFlipAngular { 
Class: class ZoomFlipXLeftOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipXRightOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipYUpOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipYDownOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipAngularLeftOver : public CCTransitionZoomFlipAngular { 
Class: class ZoomFlipAngularRightOver : public CCTransitionZoomFlipAngular { 
Class: class PageTransitionForward : public CCTransitionPageTurn { 
Class: class PageTransitionBackward : public CCTransitionPageTurn { 
Class: class QueryCallback : public b2QueryCallback { 
Class:        class Lens3DTarget : public CCNode { 
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-            assert(false); // OH SHIT!')]
===========================================
Class: class Light : public CCSprite { 
Class: class TouchPoint : public CCNode { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class:   class SpriteBlur : public CCSprite { 
Class: class MySprite1 : public CCSprite { 
Class: class MySprite2 : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
Class: class FlipXLeftOver : public CCTransitionFlipX { 
Class: class FlipXRightOver : public CCTransitionFlipX { 
Class: class FlipYUpOver : public CCTransitionFlipY { 
Class: class FlipYDownOver : public CCTransitionFlipY { 
Class: class FlipAngularLeftOver : public CCTransitionFlipAngular { 
Class: class FlipAngularRightOver : public CCTransitionFlipAngular { 
Class: class ZoomFlipXLeftOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipXRightOver : public CCTransitionZoomFlipX { 
Class: class ZoomFlipYUpOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipYDownOver : public CCTransitionZoomFlipY { 
Class: class ZoomFlipAngularLeftOver : public CCTransitionZoomFlipAngular { 
Class: class ZoomFlipAngularRightOver : public CCTransitionZoomFlipAngular { 
Class: class PageTransitionForward : public CCTransitionPageTurn { 
Class: class PageTransitionBackward : public CCTransitionPageTurn { 
Class: class Lens3DTarget : public CCNode { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invaild parameters.");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: *CCFileUtils::fullPathFromRelativeFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invaild parameters.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    CCAssert(pszFileName != NULL && pSize != NULL && pszMode != NULL, "Invaild parameters.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CC_ASSERT(this->mCCControlEventLabel);')]
===========================================
===========================================
Total add: 2
Total del: 8
Header: ButtonTestLayer::onResolveCCBCCControlSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CC_ASSERT(this->mCCControlEventLabel);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CC_ASSERT(this->mCCControlEventLabel);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            CC_ASSERT(this->mBurstSprite);'), (12, 2, u'-            CC_ASSERT(this->mTestTitleLabelTTF);')]
===========================================
===========================================
Total add: 3
Total del: 14
Header: HelloCocosBuilderLayer::onResolveCCBCCControlSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            CC_ASSERT(this->mBurstSprite);'), (12, 2, u'-            CC_ASSERT(this->mTestTitleLabelTTF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            CC_ASSERT(this->mBurstSprite);'), (12, 2, u'-            CC_ASSERT(this->mTestTitleLabelTTF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+            CC_ASSERT(this->mCCControlEventLabel);'), (73, 1, u'+            assert(false); // OH SHIT!')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 2, u'-            CC_ASSERT(this->mCCControlEventLabel);'), (73, 2, u'-            assert(false); // OH SHIT!')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(94, 1, u'+            CC_ASSERT(this->mBurstSprite);'), (99, 1, u'+            CC_ASSERT(this->mTestTitleLabelTTF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 2, u'-            CC_ASSERT(this->mBurstSprite);'), (100, 2, u'-            CC_ASSERT(this->mTestTitleLabelTTF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            CC_ASSERT(this->mCCControlEventLabel);'), (45, 1, u'+            assert(false); // OH SHIT!')]
===========================================
===========================================
Total add: 43
Total del: 1
Header: ButtonTestLayer::onResolveCCBCCControlSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            CC_ASSERT(this->mCCControlEventLabel);'), (45, 1, u'+            assert(false); // OH SHIT!')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            CC_ASSERT(this->mCCControlEventLabel);'), (45, 1, u'+            assert(false); // OH SHIT!')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) CCLOG("Unexpected property: \'%s\'!\\n", PROPERTY->getCString()); assert(false)'), (3, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) CCLOG("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (4, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) CCLog("Unexpected property: \'%s\'!\\n", PROPERTY->getCString()); assert(false)'), (5, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) CCLog("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property: \'%s\'!\\n", PROPERTY); assert(false)'), (3, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) printf("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (4, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) CCLOG("Unexpected property: \'%s\'!\\n", PROPERTY->getCString()); assert(false)'), (5, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) CCLOG("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property: \'%s\'!\\n", PROPERTY); assert(false)'), (14, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) printf("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (251, 2, u'-                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);'), (645, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (653, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (658, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (665, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (674, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (679, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (686, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (691, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (698, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (703, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (707, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (716, 2, u'-        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (721, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (725, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (729, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (733, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (737, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (741, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (745, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (749, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (753, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (757, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (761, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (765, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (769, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (773, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (777, 2, u'-    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (57, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property: \'%s\'!\\n", PROPERTY); assert(false)'), (15, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) printf("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (252, 1, u'+                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);'), (672, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (680, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (685, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (692, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (701, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (706, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (713, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (718, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (725, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (730, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (734, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (743, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (748, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (752, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (756, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (760, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (764, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (768, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (772, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (776, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (780, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (784, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (788, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (792, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (796, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (800, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);'), (804, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (57, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-            assert(false); // OH SHIT!')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 1, u'+            CC_ASSERT(this->mBurstSprite);'), (100, 1, u'+            CC_ASSERT(this->mTestTitleLabelTTF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&'), (4, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(((CCInteger*)dict->objectForKey("version"))->getValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (3, 1, u'+    CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCLabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(((CCInteger*)dict->objectForKey("version"))->getValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (3, 1, u'+    CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(((CCInteger*)dict->objectForKey("version"))->getValue() == 1, "Unsupported version. Upgrade cocos2d version");'), (3, 1, u'+    CCAssert(((CCString*)dict->objectForKey("version"))->intValue() == 1, "Unsupported version. Upgrade cocos2d version");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcpAssertWarn(cpFalse, "cpInitChipmunk is deprecated and no longer required. It will be removed in the future.");')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: cpInitChipmunk
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcpAssertWarn(cpFalse, "cpInitChipmunk is deprecated and no longer required. It will be removed in the future.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcpAssertWarn(cpFalse, "cpInitChipmunk is deprecated and no longer required. It will be removed in the future.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    cpAssertSoft(moment != 0.0, "Unsolvable spring.");'), (12, 1, u'+\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: preStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    cpAssertSoft(moment != 0.0, "Unsolvable spring.");'), (12, 1, u'+\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    cpAssertSoft(moment != 0.0, "Unsolvable spring.");'), (12, 1, u'+\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    cpAssertSoft(k != 0.0, "Unsolvable spring.");'), (29, 1, u'+\tcpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: preStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    cpAssertSoft(k != 0.0, "Unsolvable spring.");'), (29, 1, u'+\tcpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    cpAssertSoft(k != 0.0, "Unsolvable spring.");'), (29, 1, u'+\tcpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    cpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");'), (23, 1, u'+\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: cpPinJointInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    cpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");'), (23, 1, u'+\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    cpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");'), (23, 1, u'+\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (6, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpArbiterGetNormal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (6, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (6, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpArbiterGetPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpArbiterGetDepth
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+\tcpAssertHard(0 <= i && i < cpArbiterGetCount(arb), "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: PairFromPool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: NodeFromPool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (3, 2, u'-    cpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");'), (16, 1, u'+\tcpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (17, 1, u'+\tcpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: NodeReplaceChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (3, 2, u'-    cpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");'), (16, 1, u'+\tcpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (17, 1, u'+\tcpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (3, 2, u'-    cpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");'), (16, 1, u'+\tcpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (17, 1, u'+\tcpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");'), (9, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: cpBBTreeSetVelocityFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");'), (9, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");'), (9, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");'), (21, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: cpBBTreeOptimize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");'), (21, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");'), (21, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");'), (10, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");'), (10, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");'), (10, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (3, 2, u'-    cpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (5, 2, u'-    cpv_assert_sane(body->p, "Body\'s position is invalid.");'), (6, 2, u'-    cpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (7, 2, u'-    cpv_assert_sane(body->f, "Body\'s force is invalid.");'), (9, 2, u'-    cpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (10, 2, u'-    cpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (11, 2, u'-    cpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (13, 2, u'-    cpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (15, 2, u'-    cpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (16, 2, u'-    cpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");'), (17, 1, u'+\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (18, 1, u'+\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (20, 1, u'+\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (21, 1, u'+\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (22, 1, u'+\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (24, 1, u'+\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (25, 1, u'+\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (26, 1, u'+\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (28, 1, u'+\tcpv_assert_sane(body->rot, "Body\'s rotation vector is invalid.");'), (30, 1, u'+\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (31, 1, u'+\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: cpBodySanityCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (3, 2, u'-    cpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (5, 2, u'-    cpv_assert_sane(body->p, "Body\'s position is invalid.");'), (6, 2, u'-    cpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (7, 2, u'-    cpv_assert_sane(body->f, "Body\'s force is invalid.");'), (9, 2, u'-    cpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (10, 2, u'-    cpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (11, 2, u'-    cpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (13, 2, u'-    cpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (15, 2, u'-    cpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (16, 2, u'-    cpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");'), (17, 1, u'+\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (18, 1, u'+\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (20, 1, u'+\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (21, 1, u'+\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (22, 1, u'+\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (24, 1, u'+\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (25, 1, u'+\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (26, 1, u'+\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (28, 1, u'+\tcpv_assert_sane(body->rot, "Body\'s rotation vector is invalid.");'), (30, 1, u'+\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (31, 1, u'+\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (3, 2, u'-    cpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (5, 2, u'-    cpv_assert_sane(body->p, "Body\'s position is invalid.");'), (6, 2, u'-    cpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (7, 2, u'-    cpv_assert_sane(body->f, "Body\'s force is invalid.");'), (9, 2, u'-    cpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (10, 2, u'-    cpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (11, 2, u'-    cpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (13, 2, u'-    cpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (15, 2, u'-    cpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (16, 2, u'-    cpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");'), (17, 1, u'+\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (18, 1, u'+\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (20, 1, u'+\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (21, 1, u'+\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (22, 1, u'+\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (24, 1, u'+\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (25, 1, u'+\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (26, 1, u'+\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (28, 1, u'+\tcpv_assert_sane(body->rot, "Body\'s rotation vector is invalid.");'), (30, 1, u'+\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (31, 1, u'+\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");'), (7, 1, u'+\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpBodySetMass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");'), (7, 1, u'+\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");'), (7, 1, u'+\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");'), (7, 1, u'+\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpBodySetMoment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");'), (7, 1, u'+\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");'), (7, 1, u'+\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpBodyAssertSane(body);'), (6, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpBodySetPos
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpBodyAssertSane(body);'), (6, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpBodyAssertSane(body);'), (6, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpBodyAssertSane(body);'), (6, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpBodySetAngle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpBodyAssertSane(body);'), (6, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpBodyAssertSane(body);'), (6, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (8, 1, u'+\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpCollideShapes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (8, 1, u'+\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (8, 1, u'+\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: getUnusedBin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpPolyShapeGetNumVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-    cpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (7, 1, u'+\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpPolyShapeGetVert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-    cpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (7, 1, u'+\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-    cpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (7, 1, u'+\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding. Consider using cpConvexHull() or CP_CONVEX_HULL().");')]
===========================================
===========================================
Total add: 18
Total del: 15
Header: setUpVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding. Consider using cpConvexHull() or CP_CONVEX_HULL().");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding. Consider using cpConvexHull() or CP_CONVEX_HULL().");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: cpPolyShapeInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpPolyShapeSetVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &struct##Class, "shape is not a "#struct); \\'), (4, 1, u'+\tcpAssertHard(shape->klass == &struct##Class, "shape is not a "#struct); \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");'), (4, 1, u'+\tcpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape from the space before changing the body.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpShapeSetBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");'), (4, 1, u'+\tcpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape from the space before changing the body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");'), (4, 1, u'+\tcpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape from the space before changing the body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (7, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpSegmentShapeSetNeighbors
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (7, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (7, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpCircleShapeSetRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpCircleShapeSetOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (8, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: cpSegmentShapeSetEndpoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (8, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (8, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpSegmentShapeSetRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (6, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, \\'), (6, 1, u'+\tcpAssertHard(!space->locked, \\')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpSpaceFree
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, \\'), (6, 1, u'+\tcpAssertHard(!space->locked, \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, \\'), (6, 1, u'+\tcpAssertHard(!space->locked, \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    cpAssertSpaceUnlocked(space);'), (32, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    cpAssertSpaceUnlocked(space);'), (32, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    cpAssertSpaceUnlocked(space);'), (32, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSpaceUnlocked(space);'), (7, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpSpaceRemoveCollisionHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSpaceUnlocked(space);'), (7, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSpaceUnlocked(space);'), (7, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    cpAssertSpaceUnlocked(space);'), (28, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    cpAssertSpaceUnlocked(space);'), (28, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    cpAssertSpaceUnlocked(space);'), (28, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (6, 2, u'-    cpAssertSpaceUnlocked(space);'), (19, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (20, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: cpSpaceAddShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (6, 2, u'-    cpAssertSpaceUnlocked(space);'), (19, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (20, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (6, 2, u'-    cpAssertSpaceUnlocked(space);'), (19, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (20, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (12, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (13, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpaceAddStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (12, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (13, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (12, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (13, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-    cpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 2, u'-    cpAssertSpaceUnlocked(space);'), (10, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (11, 1, u'+\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (12, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: cpSpaceAddBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-    cpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 2, u'-    cpAssertSpaceUnlocked(space);'), (10, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (11, 1, u'+\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (12, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-    cpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 2, u'-    cpAssertSpaceUnlocked(space);'), (10, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (11, 1, u'+\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (12, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (16, 1, u'+\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (17, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: cpSpaceAddConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (16, 1, u'+\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (17, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (16, 1, u'+\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (17, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (7, 2, u'-        cpAssertSpaceUnlocked(space);'), (19, 1, u'+\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (20, 1, u'+\t\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: cpSpaceRemoveShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (7, 2, u'-        cpAssertSpaceUnlocked(space);'), (19, 1, u'+\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (20, 1, u'+\t\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (7, 2, u'-        cpAssertSpaceUnlocked(space);'), (19, 1, u'+\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (20, 1, u'+\t\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (11, 1, u'+\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (12, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpSpaceRemoveStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (11, 1, u'+\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (12, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (11, 1, u'+\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (12, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (9, 1, u'+\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (10, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: cpSpaceRemoveBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (9, 1, u'+\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (10, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (9, 1, u'+\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (10, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (12, 1, u'+\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (13, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpaceRemoveConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (12, 1, u'+\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (13, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-    cpAssertSpaceUnlocked(space);'), (12, 1, u'+\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (13, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (6, 1, u'+\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpSpaceReindexStatic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (6, 1, u'+\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (6, 1, u'+\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (10, 1, u'+\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: cpSpaceReindexShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (10, 1, u'+\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (10, 1, u'+\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (9, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
Total add: 43
Total del: 43
Header: cpSpaceActivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (9, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (9, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");'), (28, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: cpSpaceDeactivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");'), (28, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");'), (28, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (20, 1, u'+\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: ComponentActivate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (20, 1, u'+\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (20, 1, u'+\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (11, 1, u'+\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpBodyActivateStatic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (11, 1, u'+\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (11, 1, u'+\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (3, 2, u'-    cpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (6, 2, u'-    cpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");'), (11, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (12, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (15, 1, u'+\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpBodyPushArbiter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (3, 2, u'-    cpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (6, 2, u'-    cpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");'), (11, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (12, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (15, 1, u'+\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (3, 2, u'-    cpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (6, 2, u'-    cpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");'), (11, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (12, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (15, 1, u'+\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-            cpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");'), (23, 1, u'+\t\t\tcpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: FloodFillComponent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-            cpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");'), (23, 1, u'+\t\t\tcpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-            cpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");'), (23, 1, u'+\t\t\tcpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        cpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (15, 2, u'-        cpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");'), (74, 1, u'+\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (75, 1, u'+\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
Total add: 80
Total del: 65
Header: cpSpaceProcessComponents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        cpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (15, 2, u'-        cpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");'), (74, 1, u'+\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (75, 1, u'+\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        cpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (15, 2, u'-        cpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");'), (74, 1, u'+\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (75, 1, u'+\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (5, 2, u'-    cpAssertHard(space, "Cannot put a rogue body to sleep.");'), (6, 2, u'-    cpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (7, 2, u'-    cpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (10, 2, u'-        cpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");'), (32, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (35, 1, u'+\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (36, 1, u'+\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (37, 1, u'+\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (40, 1, u'+\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
Total add: 30
Total del: 30
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (5, 2, u'-    cpAssertHard(space, "Cannot put a rogue body to sleep.");'), (6, 2, u'-    cpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (7, 2, u'-    cpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (10, 2, u'-        cpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");'), (32, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (35, 1, u'+\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (36, 1, u'+\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (37, 1, u'+\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (40, 1, u'+\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (5, 2, u'-    cpAssertHard(space, "Cannot put a rogue body to sleep.");'), (6, 2, u'-    cpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (7, 2, u'-    cpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (10, 2, u'-        cpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");'), (32, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (35, 1, u'+\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (36, 1, u'+\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (37, 1, u'+\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (40, 1, u'+\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (20, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: handleSetTrans
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (20, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (20, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: getEmptyBin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");'), (12, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpSpaceHashResize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");'), (12, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");'), (12, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");'), (32, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");')]
===========================================
===========================================
Total add: 29
Total del: 29
Header: cpSpaceHashRenderDebug
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");'), (32, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");'), (32, 1, u'+\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");'), (16, 1, u'+\tcpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");')]
===========================================
===========================================
Total add: 29
Total del: 13
Header: cpSpaceUnlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");'), (16, 1, u'+\tcpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    cpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");'), (16, 1, u'+\tcpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");'), (4, 1, u'+\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpSpacePushContacts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");'), (4, 1, u'+\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    cpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");'), (4, 1, u'+\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size too small.");'), (17, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: cpSpaceArbiterSetTrans
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size too small.");'), (17, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        cpAssertHard(count, "Internal Error: Buffer size too small.");'), (17, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        cpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");'), (17, 1, u'+\t\tcpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpatialIndexInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        cpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");'), (17, 1, u'+\t\tcpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        cpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");'), (17, 1, u'+\t\tcpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+            assert(false); // OH SHIT!')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pfnSelector, "");'), (6, 2, u'-    CCAssert(pTarget, "");'), (7, 1, u'+    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (8, 1, u'+    CCAssert(pTarget, "Argument target must be non-NULL");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pfnSelector, "");'), (6, 2, u'-    CCAssert(pTarget, "");'), (7, 1, u'+    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (8, 1, u'+    CCAssert(pTarget, "Argument target must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(pfnSelector, "");'), (6, 2, u'-    CCAssert(pTarget, "");'), (7, 1, u'+    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (8, 1, u'+    CCAssert(pTarget, "Argument target must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: CCBMFontConfiguration::initWithFNTfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (14, 1, u'+    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 7
Total del: 9
Header: CCBMFontConfiguration::purgeFontDefDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (14, 1, u'+    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (14, 1, u'+    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");'), (24, 2, u'-        CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Total add: 14
Total del: 12
Header: CCLabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");'), (24, 2, u'-        CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");'), (24, 2, u'-        CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCEGLViewProtocol::getSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCEGLViewProtocol::setViewPortInPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCEGLViewProtocol::setScissorInPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSprite::setAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (4, 1, u'+    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (4, 1, u'+    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (4, 1, u'+    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
Total add: 41
Total del: 34
Header: CCSpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Total add: 23
Total del: 3
Header: CCTexture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        CCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
Total add: 46
Total del: 21
Header: CCTMXLayer::setupTileSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        CCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        CCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "not implement!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCTMXMapInfo::parseXMLData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "not implement!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "");'), (3, 1, u'+        CCAssert(0, "Grid size must be (1,1)");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFlipX3D::initWithSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "");'), (3, 1, u'+        CCAssert(0, "Grid size must be (1,1)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(0, "");'), (3, 1, u'+        CCAssert(0, "Grid size must be (1,1)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newArr != NULL, "ccArrayDoubleCapacity failed. Not enough memory");'), (6, 1, u'+    CCAssert(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: ccArrayDoubleCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newArr != NULL, "ccArrayDoubleCapacity failed. Not enough memory");'), (6, 1, u'+    CCAssert(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newArr != NULL, "ccArrayDoubleCapacity failed. Not enough memory");'), (6, 1, u'+    CCAssert(newArr != 0, "ccArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: ccArrayRemoveObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(arr && arr->num > 0 && index < arr->num, "Invalid index. Out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newArr != NULL, "ccCArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: ccCArrayDoubleCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newArr != NULL, "ccCArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(newArr != NULL, "ccCArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode || texture.name == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode || texture.name == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode || texture.name == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");'), (3, 1, u'+    CCAssert(! m_pobBatchNode || texture->getName() == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(newArr != NULL, "ccCArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: ccCArrayDoubleCapacity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(newArr != NULL, "ccCArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(newArr != NULL, "ccCArrayDoubleCapacity failed. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: CCBMFontConfiguration::initWithFNTfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (12, 1, u'+    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 6
Total del: 7
Header: CCBMFontConfiguration::purgeFontDefDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (12, 1, u'+    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (12, 1, u'+    CCAssert(contents, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(theString != NULL, "");'), (6, 2, u'-    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (7, 1, u'+    CCAssert(!m_pConfiguration, "re-init is no longer supported");'), (8, 1, u'+    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for CCLabelBMFont");'), (15, 1, u'+        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
Total add: 24
Total del: 6
Header: CCLabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(theString != NULL, "");'), (6, 2, u'-    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (7, 1, u'+    CCAssert(!m_pConfiguration, "re-init is no longer supported");'), (8, 1, u'+    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for CCLabelBMFont");'), (15, 1, u'+        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(theString != NULL, "");'), (6, 2, u'-    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (7, 1, u'+    CCAssert(!m_pConfiguration, "re-init is no longer supported");'), (8, 1, u'+    CCAssert( (theString && fntFile) || (theString==NULL && fntFile==NULL), "Invalid params for CCLabelBMFont");'), (15, 1, u'+        CCAssert(newConf, "CCLabelBMFont: Impossible to create font. Please check file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pfnSelector, "");'), (3, 2, u'-    CCAssert(pTarget, "");'), (4, 1, u'+    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCAssert(pTarget, "Argument target must be non-NULL");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pfnSelector, "");'), (3, 2, u'-    CCAssert(pTarget, "");'), (4, 1, u'+    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCAssert(pTarget, "Argument target must be non-NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pfnSelector, "");'), (3, 2, u'-    CCAssert(pTarget, "");'), (4, 1, u'+    CCAssert(pfnSelector, "Argument selector must be non-NULL");'), (5, 1, u'+    CCAssert(pTarget, "Argument target must be non-NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSprite::setAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    CCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");'), (7, 1, u'+    CCAssert(! m_pobBatchNode, "ignoreAnchorPointForPosition is invalid in CCSprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (4, 1, u'+    CCAssert(! m_pobBatchNode || texture.name == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (4, 1, u'+    CCAssert(! m_pobBatchNode || texture.name == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (4, 1, u'+    CCAssert(! m_pobBatchNode || texture.name == m_pobBatchNode->getTexture()->getName(), "CCSprite: Batched sprites should use the same texture as the batchnode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(format >=0 && format <= 3, "");'), (3, 1, u'+    CCAssert(format >=0 && format <= 3, "format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:textureFilename:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
Total add: 41
Total del: 34
Header: CCSpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    CCAssert(pszPlist, "plist filename should not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Total add: 23
Total del: 3
Header: CCTexture2D::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+        CCAssert(false, "Not supported alignment format!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) || texParams->wrapS == GL_CLAMP_TO_EDGE) &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        CCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
Total add: 46
Total del: 21
Header: CCTMXLayer::setupTileSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        CCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        CCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "not implement!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCTMXMapInfo::parseXMLData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "not implement!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCEGLViewProtocol::getSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCEGLViewProtocol::setViewPortInPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCEGLViewProtocol::setScissorInPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        CCAssert(CC_CONTENT_SCALE_FACTOR() == 1.0f, "retina and scale mode can\'t be opened at the same time!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Total add: 0
Total del: 6
Header: CCBReader::getResolutionScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());'), (57, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (3, 1, u'+    CCAssert(pObject->m_uReference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (3, 1, u'+    CCAssert(pObject->m_uReference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (3, 1, u'+    CCAssert(pObject->m_uReference > 1, "reference count should be greater than 1");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property: \'%s\'!\\n", PROPERTY.c_str()); assert(false)'), (3, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property: \'%s\'!\\n", PROPERTY); assert(false)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property type: \'%s\'!\\n", PROPERTY.c_str()); assert(false)'), (3, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property: \'%s\'!\\n", PROPERTY.c_str()); assert(false)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: CCMenuItemSprite::initWithNormalSprite
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: CCNodeLoader::onHandlePropTypeBlockCCControl
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-#define ASSERT_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property type: \'%s\'!\\n", PROPERTY.c_str()); assert(false)'), (3, 2, u'-#define ASSERT_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) printf("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (4, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property type: \'%s\'!\\n", PROPERTY.c_str()); assert(false)'), (5, 1, u'+#define ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) printf("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT_UNEXPECTED_PROPERTYTYPE(type);'), (3, 1, u'+                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::parseProperties
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT_UNEXPECTED_PROPERTYTYPE(type);'), (3, 1, u'+                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                ASSERT_UNEXPECTED_PROPERTYTYPE(type);'), (3, 1, u'+                ASSERT_FAIL_UNEXPECTED_PROPERTYTYPE(type);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypePosition
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypePoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypePoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCNodeLoader::onHandlePropTypeSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeScaleLock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeScaleLock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeDegrees
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeDegrees
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeInteger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeInteger
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeIntegerLabeled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+        ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeByte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeColor3
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeColor4FVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeFlip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeFntFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeText
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeFontTTF
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNodeLoader::onHandlePropTypeBlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (3, 1, u'+    ASSERT_FAIL_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(theString != NULL, "");'), (6, 2, u'-    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (7, 1, u'+    CCAssert(!this->m_pConfiguration, "re-init is no longer supported");'), (9, 1, u'+    CCAssert((theString != NULL && fntFile != NULL) || (theString == NULL && fntFile == NULL), "Invalid params for CCLabelBMFont");'), (18, 1, u'+        CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Total add: 31
Total del: 11
Header: CCLabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(theString != NULL, "");'), (6, 2, u'-    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (7, 1, u'+    CCAssert(!this->m_pConfiguration, "re-init is no longer supported");'), (9, 1, u'+    CCAssert((theString != NULL && fntFile != NULL) || (theString == NULL && fntFile == NULL), "Invalid params for CCLabelBMFont");'), (18, 1, u'+        CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(theString != NULL, "");'), (6, 2, u'-    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (7, 1, u'+    CCAssert(!this->m_pConfiguration, "re-init is no longer supported");'), (9, 1, u'+    CCAssert((theString != NULL && fntFile != NULL) || (theString == NULL && fntFile == NULL), "Invalid params for CCLabelBMFont");'), (18, 1, u'+        CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+    assert(ccNodeLoadersIterator != this->mCCNodeLoaders.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+#define ASSERT_UNEXPECTED_PROPERTY(PROPERTY) printf("Unexpected property type: \'%s\'!\\n", PROPERTY.c_str()); assert(false)'), (13, 1, u'+#define ASSERT_UNEXPECTED_PROPERTYTYPE(PROPERTYTYPE) printf("Unexpected property type: \'%d\'!\\n", PROPERTYTYPE); assert(false)'), (244, 1, u'+                ASSERT_UNEXPECTED_PROPERTYTYPE(type);'), (656, 1, u'+        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (664, 1, u'+        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (669, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (683, 1, u'+        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (688, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (695, 1, u'+        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (700, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (707, 1, u'+        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (712, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (716, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (725, 1, u'+        ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (730, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (734, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (738, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (742, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (746, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (750, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (754, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (758, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (762, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (766, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (770, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (774, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (778, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);'), (782, 1, u'+    ASSERT_UNEXPECTED_PROPERTY(pPropertyName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict != NULL, "CCBReader: file not found");'), (3, 1, u'+    CCAssert(dict != NULL, "CCBReader: file not found");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBReader::nodeGraphFromFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict != NULL, "CCBReader: file not found");'), (3, 1, u'+    CCAssert(dict != NULL, "CCBReader: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict != NULL, "CCBReader: file not found");'), (3, 1, u'+    CCAssert(dict != NULL, "CCBReader: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict != NULL, "CCBReader: file not found");'), (3, 1, u'+    CCAssert(dict != NULL, "CCBReader: file not found");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCBReader::nodeGraphFromFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict != NULL, "CCBReader: file not found");'), (3, 1, u'+    CCAssert(dict != NULL, "CCBReader: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(dict != NULL, "CCBReader: file not found");'), (3, 1, u'+    CCAssert(dict != NULL, "CCBReader: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 2, u'-\tCCAssert(m_pobOpenGLView, "opengl view should not be null");'), (276, 2, u'-\tCCAssert(pobOpenGLView, "opengl view should not be null");'), (503, 2, u'-\tCCAssert(pScene != NULL, "running scene should not be null");'), (504, 2, u'-\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (512, 2, u'-\tCCAssert(pScene != NULL, "the scene should not be null");'), (524, 2, u'-\tCCAssert(pScene, "the scene should not null");'), (534, 2, u'-\tCCAssert(m_pRunningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(178, 2, u'-\tCCAssert(pSharedScheduler == NULL, "");'), (234, 2, u'-\tCCAssert(pfnSelector, "");'), (235, 2, u'-\tCCAssert(pTarget, "");'), (255, 2, u'-\t\tCCAssert(pElement->paused == bPaused, "");'), (422, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion,"");'), (585, 2, u'-\tCCAssert(pTarget != NULL, "");'), (600, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (607, 2, u'-\tCCAssert(pTarget != NULL, "");'), (622, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (629, 2, u'-    CCAssert( pTarget != NULL, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 2, u'-\tCCAssert(pAction != NULL, "");'), (238, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (252, 2, u'-\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 2, u'-\t\tCCAssert(pAction != NULL, "");'), (743, 2, u'-\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-\t\t\t\tCCAssert(0, "");'), (99, 2, u'-\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(138, 2, u'-\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-\t\tCCAssert(0, "");'), (120, 2, u'-\tCCAssert(0, "");'), (126, 2, u'-\tCCAssert(0, "");'), (215, 2, u'-\tCCAssert(pActionOne != NULL, "");'), (216, 2, u'-\tCCAssert(pActionTwo != NULL, "");'), (476, 2, u'-\tCCAssert(pAction != NULL, "");'), (597, 2, u'-\tCCAssert(pAction1 != NULL, "");'), (598, 2, u'-\tCCAssert(pAction2 != NULL, "");'), (1975, 2, u'-\tCCAssert(pAction != NULL, "");'), (1976, 2, u'-\tCCAssert(pAction != m_pOther, "");'), (2064, 2, u'-\tCCAssert(pAnimation != NULL, "");'), (2080, 2, u'-\tCCAssert(pAnimation, "");'), (2106, 2, u'-\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 2, u'-\tCCAssert(gSharedManager == NULL, "");'), (184, 2, u'-\tCCAssert(pAction != NULL, "");'), (185, 2, u'-\tCCAssert(pTarget != NULL, "");'), (202, 2, u'- \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (281, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");'), (282, 2, u'-\tCCAssert(pTarget != NULL, "");'), (307, 2, u'-    CCAssert((int)tag != kCCActionTagInvalid, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-\tCCAssert(tile != NULL, "title should not be null");'), (115, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(201, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (579, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (600, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (601, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (623, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (629, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (658, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (758, 2, u'-\tCCAssert( child != NULL, "Child must be non-nil");'), (982, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (999, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (1005, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (1038, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (1039, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (166, 2, u'-\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (184, 2, u'-\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tCC_ASSERT(width >= 0 && height >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-    CCAssert(0, "not implement");'), (75, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (86, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(277, 2, u'-\t\tCCAssert(0, "");'), (282, 2, u'-\t\tCCAssert(0, "");'), (287, 2, u'-\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 2, u'-\t\tCCAssert(label != NULL, "");'), (92, 2, u'-\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(279, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (740, 2, u'-\tCCAssert(m_pLayers, "");'), (775, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (786, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (92, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(196, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (209, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (220, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (345, 2, u'-                    CCAssert(row < rows.size(), "");'), (349, 2, u'-\t\t\t\t    CCAssert(rowColumns, "");'), (368, 2, u'-\t\tCCAssert(! columnsOccupied, "");'), (455, 2, u'-\t\t\t\t    CCAssert(column < columns.size(), "");'), (459, 2, u'-\t\t\t\t    CCAssert(columnRows, "");'), (484, 2, u'-\t\tCCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(299, 2, u'-        CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (349, 2, u'-        CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (510, 2, u'-        CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(346, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (435, 2, u'-\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (260, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (323, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(150, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (260, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (296, 2, u'-\t\t\t\tCCAssert(textureData, "");'), (303, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (307, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (312, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (318, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (742, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (747, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (752, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (757, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (762, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (767, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (772, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (777, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (782, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (787, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (792, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (797, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (802, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (807, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (814, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (819, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (824, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (829, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (834, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (839, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (844, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (849, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (854, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (859, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (864, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (869, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(176, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (181, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (186, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (191, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (199, 2, u'-\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (204, 2, u'-\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(175, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (323, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(127, 2, u'-\tCCAssert(0, "");'), (173, 2, u'-    CCAssert(pFrame != NULL, msg);'), (228, 2, u'-\tCCAssert(pTexture != NULL, "");'), (239, 2, u'-\tCCAssert(pTexture != NULL, "");'), (249, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (267, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (283, 2, u'-\tCCAssert(pSpriteFrame != NULL, "");'), (293, 2, u'-\tCCAssert(pszSpriteFrameName != NULL, "");'), (499, 2, u'-\tCCAssert(m_bUsesBatchNode, "");'), (654, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (730, 2, u'-\tCCAssert(pChild != NULL, "");'), (735, 2, u'-\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (745, 2, u'-    CCAssert(pChild != NULL, "");'), (746, 2, u'-\tCCAssert(m_pChildren->containsObject(pChild), "");'), (892, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (1036, 2, u'-\tCCAssert(animationName, "");'), (1040, 2, u'-\tCCAssert(a, "");'), (1044, 2, u'-\tCCAssert(frame, "");'), (1070, 2, u'-\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (1090, 2, u'-\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 2, u'-\t\tCCAssert(child != NULL, "child should not be null");'), (159, 2, u'-\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (180, 2, u'-\t\tCCAssert(child != NULL, "the child should not be null");'), (181, 2, u'-\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (206, 2, u'-\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");'), (310, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (438, 2, u'-\t\tCCAssert(0, "should not run here");'), (573, 2, u'-        CCAssert( sprite != NULL, "Argument must be non-nil");'), (597, 2, u'-        CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(94, 2, u'-\tCCAssert(format >=0 && format <= 3, "");'), (209, 2, u'-\tCCAssert(textureFileName, "texture name should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(121, 2, u'-    CCAssert(index < data->num, "index out of range in objectAtIndex()");'), (163, 2, u'-    CCAssert(data->num, "no objects added");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(146, 2, u'-\t\tCCAssert(out, "");'), (147, 2, u'-\t\tCCAssert(&*out, "");'), (213, 2, u'- \t\tCCAssert(out, "");'), (214, 2, u'- \t\tCCAssert(&*out, "");')]
===========================================
Class:     class CCIMEDispatcher::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (318, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (343, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (365, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (615, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (622, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (698, 2, u'-\t\t\tCCAssert(false, "illegal pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 2, u'-\tCCAssert(texture != NULL, "texture should not be null");'), (153, 2, u'-\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (231, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (244, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (247, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (267, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (268, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (295, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(171, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (199, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (315, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (417, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (418, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (454, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (488, 2, u'-\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(340, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
Class:	class CCPointObject : CCObject 	class CCPointObject : CCObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-\t\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (82, 2, u'-\t\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(191, 2, u'-\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (227, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (228, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (261, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (262, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (398, 2, u'-\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (419, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (420, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (421, 2, u'-        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (464, 2, u'-\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (473, 2, u'-\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (483, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (484, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (544, 2, u'-\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (606, 2, u'-\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (609, 2, u'-\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (58, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (77, 2, u'-                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(401, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (403, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (558, 2, u'-\t\t\t\tCCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (116, 2, u'-\t\tCCAssert( file != NULL, "file must be non-nil");'), (127, 2, u'-\t\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (135, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (136, 2, u'-\t\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (137, 2, u'-\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (138, 2, u'-\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (139, 2, u'-\t\tCCAssert( tile.r != 0, "R component must be non 0");'), (169, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (170, 2, u'-\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (171, 2, u'-\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (228, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(94, 2, u'-\tCCAssert(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pParent != NULL, "CCSpriteBatchNode should NOT be root node");')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: CCSpriteBatchNode::visit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pParent != NULL, "CCSpriteBatchNode should NOT be root node");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(m_pParent != NULL, "CCSpriteBatchNode should NOT be root node");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "Override me");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCEaseElastic::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "Override me");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "Override me");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(0, "");')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: CCActionInterval::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(false, "CCIntervalAction: reverse not implemented.");')]
===========================================
===========================================
Total add: 1
Total del: 7
Header: CCActionInterval::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(false, "CCIntervalAction: reverse not implemented.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(false, "CCIntervalAction: reverse not implemented.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 2, u'-\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (399, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (492, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (544, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (549, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (554, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (639, 1, u'+\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (759, 1, u'+\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (798, 2, u'-\t\tCCAssert(theString != NULL, "");'), (802, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (864, 1, u'+\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (905, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (910, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (915, 1, u'+\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (1246, 1, u'+\tCCAssert(theString != NULL, "");'), (1250, 1, u'+\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1416, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");'), (1427, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Total add: 1203
Total del: 715
Header: http://www.angelcode.com/products/bmfont/
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 2, u'-\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (399, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (492, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (544, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (549, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (554, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (639, 1, u'+\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (759, 1, u'+\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (798, 2, u'-\t\tCCAssert(theString != NULL, "");'), (802, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (864, 1, u'+\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (905, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (910, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (915, 1, u'+\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (1246, 1, u'+\tCCAssert(theString != NULL, "");'), (1250, 1, u'+\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1416, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");'), (1427, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 2, u'-\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (399, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (492, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (544, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (549, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (554, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (639, 1, u'+\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (759, 1, u'+\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (798, 2, u'-\t\tCCAssert(theString != NULL, "");'), (802, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (864, 1, u'+\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (905, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (910, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (915, 1, u'+\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (1246, 1, u'+\tCCAssert(theString != NULL, "");'), (1250, 1, u'+\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1416, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");'), (1427, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: CCEGLView::sharedOpenGLView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CC_ASSERT(s_pMainWindow);')]
===========================================
Class:class MyPlayerEventListener : class MyPlayerEventListener :
Class:    class SoundFx {     class SoundFx 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2136, 2, u'-\tCCAssert(m_nState == NdListViewStateTrackingTouch, "[NdListview ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2136, 1, u'+\tCCAssert(m_nState == NdListViewStateTrackingTouch, "[NdListview ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-            CCAssert(tempData != NULL, "NULL image data.");'), (46, 2, u'-            CCAssert(tempData != NULL, "NULL image data.");'), (68, 2, u'-            CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Total add: 23
Total del: 83
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-            CCAssert(tempData != NULL, "NULL image data.");'), (46, 2, u'-            CCAssert(tempData != NULL, "NULL image data.");'), (68, 2, u'-            CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-            CCAssert(tempData != NULL, "NULL image data.");'), (46, 2, u'-            CCAssert(tempData != NULL, "NULL image data.");'), (68, 2, u'-            CCAssert(0, "Invalid pixel format");')]
===========================================
Class: class TouchPoint : public CCNode { 
Class: class TouchPoint : public CCNode { 
Class:   class CCEGL { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(1412, 2, u'-void __assert_func(const char *file, int line, const char *a, const char *b)'), (1420, 2, u'-void badaAssert(const char* pFunction, int lineNumber, const char* pszContent)')]
===========================================
Class:class RunnableProxy : class RunnableProxy :
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    CCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (80, 2, u'-    CCAssert(0, "Have not implement!");'), (84, 2, u'-    CCAssert(0, "Have not implement!");')]
===========================================
Class:  class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1097, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1138, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1181, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1243, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1255, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 2, u'-        Assert(more >= 2, "more < 2");'), (1481, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1725, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1061, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1102, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1145, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1206, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1218, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 2, u'-        Assert(more >= 2, "more < 2");'), (1409, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1666, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
Class: class CCDictMaker : public CCSAXDelegator { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(!m_sCurKey.empty(), "not found key : <integet/real>");'), (8, 1, u'+                    CCAssert(!m_sCurKey.empty(), "not found key : <integet/real>");')]
===========================================
===========================================
Total add: 5
Total del: 9
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(!m_sCurKey.empty(), "not found key : <integet/real>");'), (8, 1, u'+                    CCAssert(!m_sCurKey.empty(), "not found key : <integet/real>");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                CCAssert(!m_sCurKey.empty(), "not found key : <integet/real>");'), (8, 1, u'+                    CCAssert(!m_sCurKey.empty(), "not found key : <integet/real>");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-                CCAssert(textureData, "");'), (42, 2, u'-                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (61, 1, u'+                    CCAssert(textureData, "");'), (68, 1, u'+                        CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
Total add: 34
Total del: 34
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-                CCAssert(textureData, "");'), (42, 2, u'-                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (61, 1, u'+                    CCAssert(textureData, "");'), (68, 1, u'+                        CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-                CCAssert(textureData, "");'), (42, 2, u'-                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (61, 1, u'+                    CCAssert(textureData, "");'), (68, 1, u'+                        CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (7, 1, u'+                CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (7, 1, u'+                CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (7, 1, u'+                CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
Class: class TouchPoint : public CCNode { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "error");')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: AppDelegate::initInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "error");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert(false, "error");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "error");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: AppDelegate::initInstance
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "error");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(false, "error");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(0, "Frame Grabber: could not attach texture to frmaebuffer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCGrabber::grab
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(0, "Frame Grabber: could not attach texture to frmaebuffer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        CCAssert(0, "Frame Grabber: could not attach texture to frmaebuffer");')]
===========================================
Class:class MyPlayerEventListener : class MyPlayerEventListener :
Class:class MyPlayerEventListener : class MyPlayerEventListener :
Class:	class SoundFx { 	class SoundFx 
Class:    class SoundFx {     class SoundFx 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");'), (12, 1, u'+    cpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: preStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");'), (12, 1, u'+    cpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");'), (12, 1, u'+    cpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\tcpAssertSoft(k != 0.0, "Unsolvable spring.");'), (29, 1, u'+    cpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: preStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\tcpAssertSoft(k != 0.0, "Unsolvable spring.");'), (29, 1, u'+    cpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\tcpAssertSoft(k != 0.0, "Unsolvable spring.");'), (29, 1, u'+    cpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");'), (23, 1, u'+    cpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: cpPinJointInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");'), (23, 1, u'+    cpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");'), (23, 1, u'+    cpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (6, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpArbiterGetNormal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (6, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (6, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpArbiterGetPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpArbiterGetDepth
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");'), (5, 1, u'+    cpAssertHard(0 <= i && i < arb->numContacts, "Index error: The specified contact index is invalid for this arbiter");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: PairFromPool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: NodeFromPool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (3, 2, u'-\tcpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");'), (16, 1, u'+    cpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (17, 1, u'+    cpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: NodeReplaceChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (3, 2, u'-\tcpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");'), (16, 1, u'+    cpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (17, 1, u'+    cpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (3, 2, u'-\tcpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");'), (16, 1, u'+    cpAssertSoft(!NodeIsLeaf(parent), "Internal Error: Cannot replace child of a leaf.");'), (17, 1, u'+    cpAssertSoft(child == parent->A || child == parent->B, "Internal Error: Node is not a child of parent.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");'), (9, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: cpBBTreeSetVelocityFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");'), (9, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");'), (9, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeSetVelocityFunc() call to non-tree spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");'), (21, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: cpBBTreeOptimize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");'), (21, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");'), (21, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeOptimize() call to non-tree spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");'), (10, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");'), (10, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");'), (10, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpBBTreeRenderDebug() call to non-tree spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (3, 2, u'-\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (5, 2, u'-\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (6, 2, u'-\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (7, 2, u'-\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (9, 2, u'-\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (10, 2, u'-\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (11, 2, u'-\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (13, 2, u'-\tcpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (15, 2, u'-\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (16, 2, u'-\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");'), (17, 1, u'+    cpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (18, 1, u'+    cpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (20, 1, u'+    cpv_assert_sane(body->p, "Body\'s position is invalid.");'), (21, 1, u'+    cpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (22, 1, u'+    cpv_assert_sane(body->f, "Body\'s force is invalid.");'), (24, 1, u'+    cpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (25, 1, u'+    cpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (26, 1, u'+    cpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (28, 1, u'+    cpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (30, 1, u'+    cpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (31, 1, u'+    cpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: cpBodySanityCheck
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (3, 2, u'-\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (5, 2, u'-\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (6, 2, u'-\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (7, 2, u'-\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (9, 2, u'-\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (10, 2, u'-\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (11, 2, u'-\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (13, 2, u'-\tcpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (15, 2, u'-\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (16, 2, u'-\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");'), (17, 1, u'+    cpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (18, 1, u'+    cpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (20, 1, u'+    cpv_assert_sane(body->p, "Body\'s position is invalid.");'), (21, 1, u'+    cpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (22, 1, u'+    cpv_assert_sane(body->f, "Body\'s force is invalid.");'), (24, 1, u'+    cpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (25, 1, u'+    cpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (26, 1, u'+    cpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (28, 1, u'+    cpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (30, 1, u'+    cpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (31, 1, u'+    cpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (3, 2, u'-\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (5, 2, u'-\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (6, 2, u'-\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (7, 2, u'-\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (9, 2, u'-\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (10, 2, u'-\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (11, 2, u'-\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (13, 2, u'-\tcpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (15, 2, u'-\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (16, 2, u'-\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");'), (17, 1, u'+    cpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (18, 1, u'+    cpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (20, 1, u'+    cpv_assert_sane(body->p, "Body\'s position is invalid.");'), (21, 1, u'+    cpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (22, 1, u'+    cpv_assert_sane(body->f, "Body\'s force is invalid.");'), (24, 1, u'+    cpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (25, 1, u'+    cpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (26, 1, u'+    cpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (28, 1, u'+    cpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (30, 1, u'+    cpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (31, 1, u'+    cpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");'), (7, 1, u'+    cpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpBodySetMass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");'), (7, 1, u'+    cpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");'), (7, 1, u'+    cpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");'), (7, 1, u'+    cpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpBodySetMoment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");'), (7, 1, u'+    cpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");'), (7, 1, u'+    cpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpBodyAssertSane(body);'), (6, 1, u'+    cpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpBodySetPos
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpBodyAssertSane(body);'), (6, 1, u'+    cpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpBodyAssertSane(body);'), (6, 1, u'+    cpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpBodyAssertSane(body);'), (6, 1, u'+    cpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpBodySetAngle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpBodyAssertSane(body);'), (6, 1, u'+    cpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpBodyAssertSane(body);'), (6, 1, u'+    cpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (8, 1, u'+    cpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpCollideShapes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (8, 1, u'+    cpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (8, 1, u'+    cpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: getUnusedBin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpPolyShapeGetNumVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (6, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (7, 1, u'+    cpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpPolyShapeGetVert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (6, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (7, 1, u'+    cpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (6, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (7, 1, u'+    cpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");'), (8, 1, u'+    cpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: cpPolyShapeInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");'), (8, 1, u'+    cpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");'), (8, 1, u'+    cpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpPolyShapeSetVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+    cpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &struct##Class, "shape is not a "#struct); \\'), (4, 1, u'+    cpAssertHard(shape->klass == &struct##Class, "shape is not a "#struct); \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");'), (4, 1, u'+    cpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpShapeSetBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");'), (4, 1, u'+    cpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");'), (4, 1, u'+    cpAssertHard(!cpShapeActive(shape), "You cannot change the body on an active shape. You must remove the shape, then ");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (7, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpSegmentShapeSetNeighbors
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (7, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (7, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpCircleShapeSetRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpCircleShapeSetOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (8, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: cpSegmentShapeSetEndpoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (8, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (8, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpSegmentShapeSetRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (6, 1, u'+    cpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, \\'), (6, 1, u'+    cpAssertHard(!space->locked, \\')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpSpaceFree
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, \\'), (6, 1, u'+    cpAssertHard(!space->locked, \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, \\'), (6, 1, u'+    cpAssertHard(!space->locked, \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tcpAssertSpaceUnlocked(space);'), (32, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tcpAssertSpaceUnlocked(space);'), (32, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tcpAssertSpaceUnlocked(space);'), (32, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSpaceUnlocked(space);'), (7, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: cpSpaceRemoveCollisionHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSpaceUnlocked(space);'), (7, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSpaceUnlocked(space);'), (7, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tcpAssertSpaceUnlocked(space);'), (28, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tcpAssertSpaceUnlocked(space);'), (28, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tcpAssertSpaceUnlocked(space);'), (28, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (6, 2, u'-\tcpAssertSpaceUnlocked(space);'), (19, 1, u'+    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (20, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: cpSpaceAddShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (6, 2, u'-\tcpAssertSpaceUnlocked(space);'), (19, 1, u'+    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (20, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (6, 2, u'-\tcpAssertSpaceUnlocked(space);'), (19, 1, u'+    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (20, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (12, 1, u'+    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (13, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpaceAddStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (12, 1, u'+    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (13, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (12, 1, u'+    cpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");'), (13, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 2, u'-\tcpAssertSpaceUnlocked(space);'), (10, 1, u'+    cpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (11, 1, u'+    cpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (12, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: cpSpaceAddBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 2, u'-\tcpAssertSpaceUnlocked(space);'), (10, 1, u'+    cpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (11, 1, u'+    cpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (12, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (4, 2, u'-\tcpAssertSpaceUnlocked(space);'), (10, 1, u'+    cpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (11, 1, u'+    cpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (12, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (16, 1, u'+    cpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (17, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: cpSpaceAddConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (16, 1, u'+    cpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (17, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (16, 1, u'+    cpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (17, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (7, 2, u'-\t\tcpAssertSpaceUnlocked(space);'), (19, 1, u'+        cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (20, 1, u'+        cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: cpSpaceRemoveShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (7, 2, u'-\t\tcpAssertSpaceUnlocked(space);'), (19, 1, u'+        cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (20, 1, u'+        cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (7, 2, u'-\t\tcpAssertSpaceUnlocked(space);'), (19, 1, u'+        cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (20, 1, u'+        cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (11, 1, u'+    cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (12, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpSpaceRemoveStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (11, 1, u'+    cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (12, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (11, 1, u'+    cpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");'), (12, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (9, 1, u'+    cpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (10, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: cpSpaceRemoveBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (9, 1, u'+    cpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (10, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (9, 1, u'+    cpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");'), (10, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (12, 1, u'+    cpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (13, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpaceRemoveConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (12, 1, u'+    cpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (13, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (3, 2, u'-\tcpAssertSpaceUnlocked(space);'), (12, 1, u'+    cpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (13, 1, u'+    cpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (6, 1, u'+    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: cpSpaceReindexStatic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (6, 1, u'+    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (6, 1, u'+    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (10, 1, u'+    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: cpSpaceReindexShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (10, 1, u'+    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");'), (10, 1, u'+    cpAssertHard(!space->locked, "You cannot manually reindex objects while the space is locked. Wait until the current query or step is complete.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (9, 1, u'+    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
Total add: 43
Total del: 43
Header: cpSpaceActivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (9, 1, u'+    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");'), (9, 1, u'+    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");'), (28, 1, u'+    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: cpSpaceDeactivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");'), (28, 1, u'+    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");'), (28, 1, u'+    cpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (20, 1, u'+    cpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: ComponentActivate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (20, 1, u'+    cpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (20, 1, u'+    cpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (11, 1, u'+    cpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpBodyActivateStatic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (11, 1, u'+    cpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (11, 1, u'+    cpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (3, 2, u'-\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (6, 2, u'-\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");'), (11, 1, u'+    cpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (12, 1, u'+    cpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (15, 1, u'+    cpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpBodyPushArbiter
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (3, 2, u'-\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (6, 2, u'-\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");'), (11, 1, u'+    cpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (12, 1, u'+    cpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (15, 1, u'+    cpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (3, 2, u'-\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (6, 2, u'-\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");'), (11, 1, u'+    cpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (12, 1, u'+    cpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (15, 1, u'+    cpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\tcpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");'), (23, 1, u'+            cpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: FloodFillComponent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\tcpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");'), (23, 1, u'+            cpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\tcpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");'), (23, 1, u'+            cpAssertSoft(other_root == root, "Internal Error: Inconsistency dectected in the contact graph.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (15, 2, u'-\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");'), (79, 1, u'+        cpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (80, 1, u'+        cpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
Total add: 65
Total del: 65
Header: cpSpaceProcessComponents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (15, 2, u'-\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");'), (79, 1, u'+        cpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (80, 1, u'+        cpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (15, 2, u'-\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");'), (79, 1, u'+        cpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (80, 1, u'+        cpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (5, 2, u'-\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (6, 2, u'-\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (7, 2, u'-\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (10, 2, u'-\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");'), (32, 1, u'+    cpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (35, 1, u'+    cpAssertHard(space, "Cannot put a rogue body to sleep.");'), (36, 1, u'+    cpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (37, 1, u'+    cpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (40, 1, u'+        cpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
Total add: 30
Total del: 30
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (5, 2, u'-\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (6, 2, u'-\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (7, 2, u'-\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (10, 2, u'-\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");'), (32, 1, u'+    cpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (35, 1, u'+    cpAssertHard(space, "Cannot put a rogue body to sleep.");'), (36, 1, u'+    cpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (37, 1, u'+    cpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (40, 1, u'+        cpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (5, 2, u'-\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (6, 2, u'-\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (7, 2, u'-\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (10, 2, u'-\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");'), (32, 1, u'+    cpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (35, 1, u'+    cpAssertHard(space, "Cannot put a rogue body to sleep.");'), (36, 1, u'+    cpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (37, 1, u'+    cpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (40, 1, u'+        cpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (20, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: handleSetTrans
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (20, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (20, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: getEmptyBin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");'), (27, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");'), (12, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: cpSpaceHashResize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");'), (12, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");'), (12, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashResize() call to non-cpSpaceHash spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");'), (32, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");')]
===========================================
===========================================
Total add: 29
Total del: 29
Header: cpSpaceHashRenderDebug
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");'), (32, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\tcpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");'), (32, 1, u'+        cpAssertWarn(cpFalse, "Ignoring cpSpaceHashRenderDebug() call to non-spatial hash spatial index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(space->locked,'), (12, 1, u'+    cpAssertWarn(space->locked,')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpaceAddPostStepCallback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(space->locked,'), (12, 1, u'+    cpAssertWarn(space->locked,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(space->locked,'), (12, 1, u'+    cpAssertWarn(space->locked,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");'), (16, 1, u'+    cpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: cpSpaceUnlock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");'), (16, 1, u'+    cpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tcpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");'), (16, 1, u'+    cpAssertHard(space->locked >= 0, "Internal Error: Space lock underflow.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");'), (4, 1, u'+    cpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpSpacePushContacts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");'), (4, 1, u'+    cpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");'), (4, 1, u'+    cpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");'), (17, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: cpSpaceArbiterSetTrans
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");'), (17, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");'), (17, 1, u'+        cpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tcpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");'), (17, 1, u'+        cpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: cpSpatialIndexInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tcpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");'), (17, 1, u'+        cpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tcpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");'), (17, 1, u'+        cpAssertHard(!staticIndex->dynamicIndex, "This static index is already associated with a dynamic index.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pfnSelector, "");'), (3, 2, u'-\tCCAssert(pTarget, "");'), (23, 2, u'-\t\tCCAssert(pElement->paused == bPaused, "");'), (50, 1, u'+    CCAssert(pfnSelector, "");'), (51, 1, u'+    CCAssert(pTarget, "");'), (71, 1, u'+        CCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
Total add: 48
Total del: 48
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pfnSelector, "");'), (3, 2, u'-\tCCAssert(pTarget, "");'), (23, 2, u'-\t\tCCAssert(pElement->paused == bPaused, "");'), (50, 1, u'+    CCAssert(pfnSelector, "");'), (51, 1, u'+    CCAssert(pTarget, "");'), (71, 1, u'+        CCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pfnSelector, "");'), (3, 2, u'-\tCCAssert(pTarget, "");'), (23, 2, u'-\t\tCCAssert(pElement->paused == bPaused, "");'), (50, 1, u'+    CCAssert(pfnSelector, "");'), (51, 1, u'+    CCAssert(pTarget, "");'), (71, 1, u'+        CCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion,"");'), (12, 1, u'+        CCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: CCScheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion,"");'), (12, 1, u'+        CCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion,"");'), (12, 1, u'+        CCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (17, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (35, 1, u'+        CCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: CCScheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (17, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (35, 1, u'+        CCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (17, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (35, 1, u'+        CCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (17, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (35, 1, u'+        CCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: CCScheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (17, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (35, 1, u'+        CCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (17, 2, u'-\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (35, 1, u'+        CCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (7, 1, u'+    CCAssert(pAction != NULL, "");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCSpeed::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (7, 1, u'+    CCAssert(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (7, 1, u'+    CCAssert(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (12, 1, u'+    CCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (12, 1, u'+    CCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (12, 1, u'+    CCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (35, 1, u'+    CCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Total add: 33
Total del: 33
Header: CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (35, 1, u'+    CCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pFollowedNode != NULL, "");'), (35, 1, u'+    CCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (3, 1, u'+    CCAssert(pAction != NULL, "");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: CCActionEase::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (3, 1, u'+    CCAssert(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (3, 1, u'+    CCAssert(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCEaseElastic::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (3, 2, u'-\tCCAssert(pTarget != NULL, "");'), (19, 1, u'+    CCAssert(pAction != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (37, 2, u'- \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (39, 1, u'+     CCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (3, 2, u'-\tCCAssert(pTarget != NULL, "");'), (19, 1, u'+    CCAssert(pAction != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (37, 2, u'- \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (39, 1, u'+     CCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pAction != NULL, "");'), (3, 2, u'-\tCCAssert(pTarget != NULL, "");'), (19, 1, u'+    CCAssert(pAction != NULL, "");'), (20, 1, u'+    CCAssert(pTarget != NULL, "");'), (37, 2, u'- \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (39, 1, u'+     CCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (3, 1, u'+    CCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: CCActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (3, 1, u'+    CCAssert(pTarget != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTarget != NULL, "");'), (3, 1, u'+    CCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(tile != NULL, "title should not be null");'), (8, 1, u'+    CCAssert(tile != NULL, "title should not be null");')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: CCAtlasNode::atlasWithTileFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(tile != NULL, "title should not be null");'), (8, 1, u'+    CCAssert(tile != NULL, "title should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(tile != NULL, "title should not be null");'), (8, 1, u'+    CCAssert(tile != NULL, "title should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (4, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCAtlasNode::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (4, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (4, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::getScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (6, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (7, 1, u'+    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 16
Total del: 16
Header: CCNode::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (6, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (7, 1, u'+    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (6, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (7, 1, u'+    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCNode::removeChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Child must be non-nil");'), (6, 1, u'+    CCAssert( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Child must be non-nil");'), (6, 1, u'+    CCAssert( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Child must be non-nil");'), (6, 1, u'+    CCAssert( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::runAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCAssert( selector, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::schedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCAssert( selector, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCAssert( selector, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (4, 1, u'+    CCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCObject::release
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (4, 1, u'+    CCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (4, 1, u'+    CCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCObject::retain
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (3, 1, u'+    CCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCGridBase::blit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCGridBase::reuse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCGridBase::calculateVertexPoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "");'), (3, 1, u'+    CCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t    CCAssert(rowColumns, "");'), (7, 1, u'+                CCAssert(rowColumns, "");'), (37, 2, u'-\tCCAssert(! columnsOccupied, "");'), (39, 1, u'+    CCAssert(! columnsOccupied, "");')]
===========================================
===========================================
Total add: 25
Total del: 25
Header: CCMenuPassive::alignItemsInColumns
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t    CCAssert(rowColumns, "");'), (7, 1, u'+                CCAssert(rowColumns, "");'), (37, 2, u'-\tCCAssert(! columnsOccupied, "");'), (39, 1, u'+    CCAssert(! columnsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t    CCAssert(rowColumns, "");'), (7, 1, u'+                CCAssert(rowColumns, "");'), (37, 2, u'-\tCCAssert(! columnsOccupied, "");'), (39, 1, u'+    CCAssert(! columnsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t    CCAssert(column < columns.size(), "");'), (6, 2, u'-\t\t\t    CCAssert(columnRows, "");'), (26, 1, u'+                CCAssert(column < columns.size(), "");'), (30, 1, u'+                CCAssert(columnRows, "");'), (56, 2, u'-\tCCAssert(! rowsOccupied, "");'), (58, 1, u'+    CCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Total add: 34
Total del: 34
Header: CCMenuPassive::alignItemsInRows
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t    CCAssert(column < columns.size(), "");'), (6, 2, u'-\t\t\t    CCAssert(columnRows, "");'), (26, 1, u'+                CCAssert(column < columns.size(), "");'), (30, 1, u'+                CCAssert(columnRows, "");'), (56, 2, u'-\tCCAssert(! rowsOccupied, "");'), (58, 1, u'+    CCAssert(! rowsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t    CCAssert(column < columns.size(), "");'), (6, 2, u'-\t\t\t    CCAssert(columnRows, "");'), (26, 1, u'+                CCAssert(column < columns.size(), "");'), (30, 1, u'+                CCAssert(columnRows, "");'), (56, 2, u'-\tCCAssert(! rowsOccupied, "");'), (58, 1, u'+    CCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(batchnode != NULL, "The batchnode must be not nil.");'), (118, 1, u'+    CCAssert(batchnode != NULL, "The batchnode must be not nil.");')]
===========================================
===========================================
Total add: 115
Total del: 115
Header: CCScale9Sprite::initWithBatchNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(batchnode != NULL, "The batchnode must be not nil.");'), (118, 1, u'+    CCAssert(batchnode != NULL, "The batchnode must be not nil.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(batchnode != NULL, "The batchnode must be not nil.");'), (118, 1, u'+    CCAssert(batchnode != NULL, "The batchnode must be not nil.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCAssert(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScale9Sprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCAssert(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(file != NULL, "Invalid file for sprite");'), (3, 1, u'+    CCAssert(file != NULL, "Invalid file for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(spriteFrame != NULL, "Sprite frame must be not nil");'), (3, 1, u'+    CCAssert(spriteFrame != NULL, "Sprite frame must be not nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScale9Sprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(spriteFrame != NULL, "Sprite frame must be not nil");'), (3, 1, u'+    CCAssert(spriteFrame != NULL, "Sprite frame must be not nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(spriteFrame != NULL, "Sprite frame must be not nil");'), (3, 1, u'+    CCAssert(spriteFrame != NULL, "Sprite frame must be not nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");'), (3, 1, u'+    CCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScale9Sprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");'), (3, 1, u'+    CCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");'), (3, 1, u'+    CCAssert(spriteFrameName != NULL, "Invalid spriteFrameName for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\t\t\tassert(0 && "Invalid matrix mode specified"); //TODO: Proper error handling'), (33, 1, u'+            assert(0 && "Invalid matrix mode specified"); //TODO: Proper error handling')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: kmGLMatrixMode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\t\t\tassert(0 && "Invalid matrix mode specified"); //TODO: Proper error handling'), (33, 1, u'+            assert(0 && "Invalid matrix mode specified"); //TODO: Proper error handling')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\t\t\tassert(0 && "Invalid matrix mode specified"); //TODO: Proper error handling'), (33, 1, u'+            assert(0 && "Invalid matrix mode specified"); //TODO: Proper error handling')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\t\t\tassert(1 && "Invalid matrix mode specified"); //TODO: Proper error handling'), (33, 1, u'+            assert(1 && "Invalid matrix mode specified"); //TODO: Proper error handling')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: kmGLGetMatrix
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\t\t\tassert(1 && "Invalid matrix mode specified"); //TODO: Proper error handling'), (33, 1, u'+            assert(1 && "Invalid matrix mode specified"); //TODO: Proper error handling')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\t\t\tassert(1 && "Invalid matrix mode specified"); //TODO: Proper error handling'), (33, 1, u'+            assert(1 && "Invalid matrix mode specified"); //TODO: Proper error handling')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0 && "Not implemented");'), (4, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: kmAABBScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0 && "Not implemented");'), (4, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0 && "Not implemented");'), (4, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn); //You have tried to self-assign!!'), (3, 1, u'+    assert(pOut != pIn); //You have tried to self-assign!!')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: kmMat3Assign
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn); //You have tried to self-assign!!'), (3, 1, u'+    assert(pOut != pIn); //You have tried to self-assign!!')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn); //You have tried to self-assign!!'), (3, 1, u'+    assert(pOut != pIn); //You have tried to self-assign!!')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn && "You have tried to self-assign!!");'), (3, 1, u'+    assert(pOut != pIn && "You have tried to self-assign!!");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: kmMat4Assign
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn && "You have tried to self-assign!!");'), (3, 1, u'+    assert(pOut != pIn && "You have tried to self-assign!!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn && "You have tried to self-assign!!");'), (3, 1, u'+    assert(pOut != pIn && "You have tried to self-assign!!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pMat1 != pMat2 && "You are comparing the same thing!");'), (3, 1, u'+    assert(pMat1 != pMat2 && "You are comparing the same thing!");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: kmMat4AreEqual
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pMat1 != pMat2 && "You are comparing the same thing!");'), (3, 1, u'+    assert(pMat1 != pMat2 && "You are comparing the same thing!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pMat1 != pMat2 && "You are comparing the same thing!");'), (3, 1, u'+    assert(pMat1 != pMat2 && "You are comparing the same thing!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0 && "Not implemented");'), (3, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: kmPlaneScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0 && "Not implemented");'), (3, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0 && "Not implemented");'), (3, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+    assert(0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: kmQuaternionExp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(0);'), (17, 1, u'+    assert(0);')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: kmQuaternionLengthSq
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(0);'), (17, 1, u'+    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tassert(0);'), (17, 1, u'+    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(fabs(length) > kmEpsilon);'), (9, 1, u'+    assert(fabs(length) > kmEpsilon);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: kmQuaternionMultiply
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(fabs(length) > kmEpsilon);'), (9, 1, u'+    assert(fabs(length) > kmEpsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(fabs(length) > kmEpsilon);'), (9, 1, u'+    assert(fabs(length) > kmEpsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+    assert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: kmVec2TransformCoord
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn);'), (3, 1, u'+    assert(pOut != pIn);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: kmVec4AreEqual
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn);'), (3, 1, u'+    assert(pOut != pIn);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pOut != pIn);'), (3, 1, u'+    assert(pOut != pIn);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (10, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: CCLabelAtlas::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (10, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (10, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (6, 1, u'+    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCBMFontConfiguration::initWithFNTfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (6, 1, u'+    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (6, 1, u'+    CCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (81, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 72
Total del: 72
Header: CCBMFontConfiguration::purgeFontDefDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (81, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (81, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (27, 1, u'+    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
Total add: 16
Total del: 16
Header: CCBMFontConfiguration::parseImageFileName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (27, 1, u'+    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (27, 1, u'+    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (21, 2, u'-\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (26, 2, u'-\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (43, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (48, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (53, 1, u'+    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: CCBMFontConfiguration::parseCommonArguments
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (21, 2, u'-\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (26, 2, u'-\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (43, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (48, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (53, 1, u'+    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (21, 2, u'-\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (26, 2, u'-\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (43, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (48, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (53, 1, u'+    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(theString != NULL, "");'), (6, 2, u'-\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (13, 1, u'+    CCAssert(theString != NULL, "");'), (17, 1, u'+    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Total add: 21
Total del: 21
Header: CCLabelBMFont::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(theString != NULL, "");'), (6, 2, u'-\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (13, 1, u'+    CCAssert(theString != NULL, "");'), (17, 1, u'+    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(theString != NULL, "");'), (6, 2, u'-\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (13, 1, u'+    CCAssert(theString != NULL, "");'), (17, 1, u'+    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\tCCAssert(element, "FontDefinition could not be found!");'), (12, 1, u'+        CCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Total add: 46
Total del: 46
Header: CCLabelBMFont::createFontChars
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\tCCAssert(element, "FontDefinition could not be found!");'), (12, 1, u'+        CCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\tCCAssert(element, "FontDefinition could not be found!");'), (12, 1, u'+        CCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCLabelTTF::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCLabelTTF::initWithString
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(label != NULL, "");'), (7, 1, u'+    CCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (4, 1, u'+    CCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLayer::ccTouchBegan
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (4, 1, u'+    CCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (4, 1, u'+    CCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pLayers, "");'), (4, 1, u'+    CCAssert(m_pLayers, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLayerMultiplex::addLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pLayers, "");'), (4, 1, u'+    CCAssert(m_pLayers, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pLayers, "");'), (4, 1, u'+    CCAssert(m_pLayers, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCLayerMultiplex::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCLayerMultiplex::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (23, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (24, 1, u'+        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: CCTransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (23, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (24, 1, u'+        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (23, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (24, 1, u'+        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "override me - abstract class");'), (4, 1, u'+    CCAssert(false, "override me - abstract class");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTransitionProgress::progressTimerNodeWithRenderTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "override me - abstract class");'), (4, 1, u'+    CCAssert(false, "override me - abstract class");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "override me - abstract class");'), (4, 1, u'+    CCAssert(false, "override me - abstract class");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (4, 1, u'+    CCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCMenu::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (4, 1, u'+    CCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");'), (4, 1, u'+    CCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (9, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCMenu::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (9, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (9, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (8, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCMenu::ccTouchCancelled
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (8, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (8, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (16, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: CCMenu::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (16, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (16, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t    CCAssert(rowColumns, "");'), (7, 1, u'+                CCAssert(rowColumns, "");'), (37, 2, u'-\tCCAssert(! columnsOccupied, "");'), (39, 1, u'+    CCAssert(! columnsOccupied, "");')]
===========================================
===========================================
Total add: 25
Total del: 25
Header: CCMenu::alignItemsInColumns
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t    CCAssert(rowColumns, "");'), (7, 1, u'+                CCAssert(rowColumns, "");'), (37, 2, u'-\tCCAssert(! columnsOccupied, "");'), (39, 1, u'+    CCAssert(! columnsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\t    CCAssert(rowColumns, "");'), (7, 1, u'+                CCAssert(rowColumns, "");'), (37, 2, u'-\tCCAssert(! columnsOccupied, "");'), (39, 1, u'+    CCAssert(! columnsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t    CCAssert(column < columns.size(), "");'), (6, 2, u'-\t\t\t    CCAssert(columnRows, "");'), (26, 1, u'+                CCAssert(column < columns.size(), "");'), (30, 1, u'+                CCAssert(columnRows, "");'), (56, 2, u'-\tCCAssert(! rowsOccupied, "");'), (58, 1, u'+    CCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Total add: 34
Total del: 34
Header: CCMenu::alignItemsInRows
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t    CCAssert(column < columns.size(), "");'), (6, 2, u'-\t\t\t    CCAssert(columnRows, "");'), (26, 1, u'+                CCAssert(column < columns.size(), "");'), (30, 1, u'+                CCAssert(columnRows, "");'), (56, 2, u'-\tCCAssert(! rowsOccupied, "");'), (58, 1, u'+    CCAssert(! rowsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t    CCAssert(column < columns.size(), "");'), (6, 2, u'-\t\t\t    CCAssert(columnRows, "");'), (26, 1, u'+                CCAssert(column < columns.size(), "");'), (30, 1, u'+                CCAssert(columnRows, "");'), (56, 2, u'-\tCCAssert(! rowsOccupied, "");'), (58, 1, u'+    CCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tCCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (16, 1, u'+    CCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCRenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tCCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (16, 1, u'+    CCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\tCCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");'), (16, 1, u'+    CCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,'), (6, 1, u'+    CCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCRenderTexture::saveToFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,'), (6, 1, u'+    CCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,'), (6, 1, u'+    CCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (54, 1, u'+    CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 52
Total del: 52
Header: CCRenderTexture::newCCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (54, 1, u'+    CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (54, 1, u'+    CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (18, 2, u'-\tCCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");'), (19, 1, u'+    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");')]
===========================================
===========================================
Total add: 21
Total del: 21
Header: CCParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (18, 2, u'-\tCCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");'), (19, 1, u'+    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-NULL");'), (3, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-NULL");'), (5, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (18, 2, u'-\tCCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");'), (19, 1, u'+    CCAssert( m_tBlendFunc.src  == pChild->getBlendFunc().src && m_tBlendFunc.dst  == pChild->getBlendFunc().dst, "Can\'t add a PaticleSystem that uses a differnt blending function");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 16
Total del: 16
Header: CCParticleBatchNode::addChildHelper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( child->getParent() == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Child must be non-NULL");'), (3, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 2, u'-\tCCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );'), (5, 1, u'+    CCAssert( child != NULL, "Child must be non-NULL");'), (6, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (7, 1, u'+    CCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Child must be non-NULL");'), (3, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 2, u'-\tCCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );'), (5, 1, u'+    CCAssert( child != NULL, "Child must be non-NULL");'), (6, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (7, 1, u'+    CCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Child must be non-NULL");'), (3, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 2, u'-\tCCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );'), (5, 1, u'+    CCAssert( child != NULL, "Child must be non-NULL");'), (6, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (7, 1, u'+    CCAssert( m_pChildren->containsObject(child), "Child doesn\'t belong to batch" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (12, 2, u'-\tCCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (14, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (15, 1, u'+    CCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: CCParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (12, 2, u'-\tCCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (14, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (15, 1, u'+    CCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (12, 2, u'-\tCCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (14, 1, u'+    CCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (15, 1, u'+    CCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tCCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (18, 1, u'+        CCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCParticleBatchNode::increaseAtlasCapacityTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tCCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (18, 1, u'+        CCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\tCCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");'), (18, 1, u'+        CCAssert(false,"XXX: CCParticleBatchNode #increaseAtlasCapacity SHALL handle this assert");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (12, 1, u'+    CCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCParticleSystem::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (12, 1, u'+    CCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (12, 1, u'+    CCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(163, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (198, 1, u'+                CCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Total add: 103
Total del: 103
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(163, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (198, 1, u'+                CCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(163, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (198, 1, u'+                CCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tCCAssert(textureData, "");'), (22, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (26, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (31, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (37, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (44, 1, u'+                CCAssert(textureData, "");'), (51, 1, u'+                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (55, 1, u'+                        CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (60, 1, u'+                        CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (66, 1, u'+            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 37
Total del: 37
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tCCAssert(textureData, "");'), (22, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (26, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (31, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (37, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (44, 1, u'+                CCAssert(textureData, "");'), (51, 1, u'+                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (55, 1, u'+                        CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (60, 1, u'+                        CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (66, 1, u'+            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tCCAssert(textureData, "");'), (22, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (26, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (31, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (37, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (44, 1, u'+                CCAssert(textureData, "");'), (51, 1, u'+                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (55, 1, u'+                        CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (60, 1, u'+                        CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (66, 1, u'+            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (5, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (5, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (5, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");'), (4, 1, u'+    CCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTotalParticles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");'), (4, 1, u'+    CCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");'), (4, 1, u'+    CCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (10, 2, u'-\tCCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (59, 1, u'+    CCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (66, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 118
Total del: 118
Header: CCParticleSystemQuad::postStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (10, 2, u'-\tCCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (59, 1, u'+    CCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (66, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (10, 2, u'-\tCCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (59, 1, u'+    CCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (66, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
Class: class CCDictMaker : public CCSAXDelegator { 
Class: class CCDictMaker : public CCSAXDelegator { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");'), (4, 1, u'+    CCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCFileUtils::setResourcePath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");'), (4, 1, u'+    CCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");'), (4, 1, u'+    CCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (3, 1, u'+    CC_ASSERT(pszFileName != NULL && pszMode != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (3, 1, u'+    CC_ASSERT(pszFileName != NULL && pszMode != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (3, 1, u'+    CC_ASSERT(pszFileName != NULL && pszMode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(1412, 2, u'-void __assert_func(const char *file, int line, const char *a, const char *b)'), (1420, 2, u'-void badaAssert(const char* pFunction, int lineNumber, const char* pszContent)'), (2852, 1, u'+void __assert_func(const char *file, int line, const char *a, const char *b)'), (2860, 1, u'+void badaAssert(const char* pFunction, int lineNumber, const char* pszContent)')]
===========================================
Class:class RunnableProxy : class RunnableProxy :
Class:class RunnableProxy : class RunnableProxy :
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(! sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(! sm_pSharedApplication);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCApplication::CCApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(! sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(! sm_pSharedApplication);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(! sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(! sm_pSharedApplication);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(this == sm_pSharedApplication);'), (5, 1, u'+    CC_ASSERT(this == sm_pSharedApplication);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCApplication::~CCApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(this == sm_pSharedApplication);'), (5, 1, u'+    CC_ASSERT(this == sm_pSharedApplication);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(this == sm_pSharedApplication);'), (5, 1, u'+    CC_ASSERT(this == sm_pSharedApplication);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(sm_pSharedApplication);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCApplication::sharedApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(sm_pSharedApplication);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(sm_pSharedApplication);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (8, 2, u'-\tCCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (14, 2, u'-\t\tCCAssert(0, "fail to init the glfw");'), (96, 2, u'-\t\t\tCCAssert(0, "fail to init the extensions of opengl");'), (106, 1, u'+    CCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (107, 1, u'+    CCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (113, 1, u'+        CCAssert(0, "fail to init the glfw");'), (195, 1, u'+            CCAssert(0, "fail to init the extensions of opengl");')]
===========================================
===========================================
Total add: 99
Total del: 99
Header: mousePosEventHandle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (8, 2, u'-\tCCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (14, 2, u'-\t\tCCAssert(0, "fail to init the glfw");'), (96, 2, u'-\t\t\tCCAssert(0, "fail to init the extensions of opengl");'), (106, 1, u'+    CCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (107, 1, u'+    CCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (113, 1, u'+        CCAssert(0, "fail to init the glfw");'), (195, 1, u'+            CCAssert(0, "fail to init the extensions of opengl");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (8, 2, u'-\tCCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (14, 2, u'-\t\tCCAssert(0, "fail to init the glfw");'), (96, 2, u'-\t\t\tCCAssert(0, "fail to init the extensions of opengl");'), (106, 1, u'+    CCAssert(iPixelWidth!=0&&iPixelHeight!=0, "invalid window\'s size equal 0");'), (107, 1, u'+    CCAssert(iWidth!=0&&iHeight!=0, "invalid the size in points equal 0");'), (113, 1, u'+        CCAssert(0, "fail to init the glfw");'), (195, 1, u'+            CCAssert(0, "fail to init the extensions of opengl");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(s_pMainWindow);'), (4, 1, u'+    CC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCEGLView::sharedOpenGLView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(s_pMainWindow);'), (4, 1, u'+    CC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(s_pMainWindow);'), (4, 1, u'+    CC_ASSERT(s_pMainWindow);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (10, 1, u'+    CCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: static string s_strResourcePath = "";
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (10, 1, u'+    CCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (10, 1, u'+    CCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "Have not implement!");'), (3, 1, u'+    CCAssert(0, "Have not implement!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "Have not implement!");'), (3, 1, u'+    CCAssert(0, "Have not implement!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "Have not implement!");'), (3, 1, u'+    CCAssert(0, "Have not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "Have not implement!");'), (4, 1, u'+    CCAssert(0, "Have not implement!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCFileUtils::setResource
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "Have not implement!");'), (4, 1, u'+    CCAssert(0, "Have not implement!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "Have not implement!");'), (4, 1, u'+    CCAssert(0, "Have not implement!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCC_ASSERT(! sm_pSharedApplication);'), (10, 1, u'+    CC_ASSERT(! sm_pSharedApplication);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCApplication::CCApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCC_ASSERT(! sm_pSharedApplication);'), (10, 1, u'+    CC_ASSERT(! sm_pSharedApplication);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCC_ASSERT(! sm_pSharedApplication);'), (10, 1, u'+    CC_ASSERT(! sm_pSharedApplication);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCC_ASSERT(this == sm_pSharedApplication);'), (8, 1, u'+    CC_ASSERT(this == sm_pSharedApplication);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCApplication::~CCApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCC_ASSERT(this == sm_pSharedApplication);'), (8, 1, u'+    CC_ASSERT(this == sm_pSharedApplication);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCC_ASSERT(this == sm_pSharedApplication);'), (8, 1, u'+    CC_ASSERT(this == sm_pSharedApplication);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(sm_pSharedApplication);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCApplication::sharedApplication
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(sm_pSharedApplication);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCC_ASSERT(sm_pSharedApplication);'), (4, 1, u'+    CC_ASSERT(sm_pSharedApplication);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tIwAssert(GAME, pszRelativePath);'), (3, 1, u'+    IwAssert(GAME, pszRelativePath);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCFileUtils::fullPathFromRelativePath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tIwAssert(GAME, pszRelativePath);'), (3, 1, u'+    IwAssert(GAME, pszRelativePath);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tIwAssert(GAME, pszRelativePath);'), (3, 1, u'+    IwAssert(GAME, pszRelativePath);')]
===========================================
Class:  class BitmapDC { 
Class:  class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(rc == BPS_SUCCESS);'), (25, 1, u'+        assert(rc == BPS_SUCCESS);')]
===========================================
===========================================
Total add: 296
Total del: 296
Header: CCEGLView::HandleEvents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(rc == BPS_SUCCESS);'), (25, 1, u'+        assert(rc == BPS_SUCCESS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-\t\tassert(rc == BPS_SUCCESS);'), (25, 1, u'+        assert(rc == BPS_SUCCESS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");'), (4, 1, u'+    CCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCEGLView::sharedOpenGLView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");'), (4, 1, u'+    CCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");'), (4, 1, u'+    CCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\t\ttestptr = xmlSchematronAddTest(ctxt, XML_SCHEMATRON_ASSERT,'), (74, 1, u'+        testptr = xmlSchematronAddTest(ctxt, XML_SCHEMATRON_ASSERT,')]
===========================================
===========================================
Total add: 57
Total del: 57
Header: xmlSchematronParseRule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\t\ttestptr = xmlSchematronAddTest(ctxt, XML_SCHEMATRON_ASSERT,'), (74, 1, u'+        testptr = xmlSchematronAddTest(ctxt, XML_SCHEMATRON_ASSERT,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\t\ttestptr = xmlSchematronAddTest(ctxt, XML_SCHEMATRON_ASSERT,'), (74, 1, u'+        testptr = xmlSchematronAddTest(ctxt, XML_SCHEMATRON_ASSERT,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t    ((test->type == XML_SCHEMATRON_ASSERT) & (success)))'), (16, 1, u'+        ((test->type == XML_SCHEMATRON_ASSERT) & (success)))'), (32, 2, u'-\t    if (test->type == XML_SCHEMATRON_ASSERT) {'), (34, 1, u'+        if (test->type == XML_SCHEMATRON_ASSERT) {')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: xmlSchematronReportSuccess
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t    ((test->type == XML_SCHEMATRON_ASSERT) & (success)))'), (16, 1, u'+        ((test->type == XML_SCHEMATRON_ASSERT) & (success)))'), (32, 2, u'-\t    if (test->type == XML_SCHEMATRON_ASSERT) {'), (34, 1, u'+        if (test->type == XML_SCHEMATRON_ASSERT) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t    ((test->type == XML_SCHEMATRON_ASSERT) & (success)))'), (16, 1, u'+        ((test->type == XML_SCHEMATRON_ASSERT) & (success)))'), (32, 2, u'-\t    if (test->type == XML_SCHEMATRON_ASSERT) {'), (34, 1, u'+        if (test->type == XML_SCHEMATRON_ASSERT) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (7, 2, u'-\tCCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");'), (9, 1, u'+    CCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (10, 1, u'+    CCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: CCGLProgram::~CCGLProgram
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (7, 2, u'-\tCCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");'), (9, 1, u'+    CCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (10, 1, u'+    CCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (7, 2, u'-\tCCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");'), (9, 1, u'+    CCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (10, 1, u'+    CCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");'), (7, 1, u'+    CCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: ccGLActiveTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");'), (7, 1, u'+    CCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");'), (7, 1, u'+    CCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(146, 2, u'-\t\tCCAssert(out, "");'), (147, 2, u'-\t\tCCAssert(&*out, "");'), (213, 2, u'- \t\tCCAssert(out, "");'), (214, 2, u'- \t\tCCAssert(&*out, "");'), (430, 1, u'+        CCAssert(out, "");'), (431, 1, u'+        CCAssert(&*out, "");'), (497, 1, u'+         CCAssert(out, "");'), (498, 1, u'+         CCAssert(&*out, "");')]
===========================================
Class:     class CCIMEDispatcher::Impl { 
Class:     class CCIMEDispatcher::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (89, 1, u'+        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Total add: 52
Total del: 52
Header: CCTexture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (89, 1, u'+        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (89, 1, u'+        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (92, 1, u'+            CCAssert(tempData != NULL, "NULL image data.");'), (117, 1, u'+            CCAssert(tempData != NULL, "NULL image data.");'), (141, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (163, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (265, 1, u'+            CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Total add: 176
Total del: 176
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (92, 1, u'+            CCAssert(tempData != NULL, "NULL image data.");'), (117, 1, u'+            CCAssert(tempData != NULL, "NULL image data.");'), (141, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (163, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (265, 1, u'+            CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (92, 1, u'+            CCAssert(tempData != NULL, "NULL image data.");'), (117, 1, u'+            CCAssert(tempData != NULL, "NULL image data.");'), (141, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (163, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (265, 1, u'+            CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (5, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (5, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (5, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (10, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (10, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (10, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\tCCAssert(false, "illegal pixel format");'), (11, 1, u'+            CCAssert(false, "illegal pixel format");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCTexture2D::bitsPerPixelForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\tCCAssert(false, "illegal pixel format");'), (11, 1, u'+            CCAssert(false, "illegal pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\tCCAssert(false, "illegal pixel format");'), (11, 1, u'+            CCAssert(false, "illegal pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (19, 1, u'+    CCAssert(m_pQuads == NULL && m_pIndices == NULL, "");')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (19, 1, u'+    CCAssert(m_pQuads == NULL && m_pIndices == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (19, 1, u'+    CCAssert(m_pQuads == NULL && m_pIndices == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTextureAtlas::updateQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCTextureAtlas::insertQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (3, 1, u'+    CCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (8, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (9, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCTextureAtlas::insertQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (3, 1, u'+    CCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (8, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (9, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (3, 1, u'+    CCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (8, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (9, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: CCTextureAtlas::insertQuadFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCTextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (3, 1, u'+    CCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCTextureAtlas::removeQuadsAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (3, 1, u'+    CCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (3, 1, u'+    CCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: CCTextureAtlas::moveQuadsFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+    CCAssert(newIndex + amount <= m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+    CCAssert(oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");'), (3, 1, u'+    CCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::moveQuadsFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");'), (3, 1, u'+    CCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");'), (3, 1, u'+    CCAssert(newIndex + (m_uTotalQuads - index) <= m_uCapacity, "moveQuadsFromIndex move is out of bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (5, 1, u'+    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTextureCache::CCTextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (5, 1, u'+    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (5, 1, u'+    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (34, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 51
Total del: 51
Header: CCTextureCache::addImageAsync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (34, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (34, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 29
Total del: 29
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+    CCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+    CCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+    CCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTextureCache::addPVRImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");'), (40, 1, u'+    CCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Total add: 38
Total del: 38
Header: CCTextureCache::addUIImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");'), (40, 1, u'+    CCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");'), (40, 1, u'+    CCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Total add: 98
Total del: 98
Header: CCTexturePVR::unpackPVRData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+    CCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParallaxNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+    CCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+    CCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (6, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCParallaxNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (6, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (6, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (26, 2, u'-\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (179, 1, u'+            CCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (181, 1, u'+        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Total add: 160
Total del: 160
Header: CCTMXMapInfo::startElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (26, 2, u'-\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (179, 1, u'+            CCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (181, 1, u'+        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 2, u'-\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (26, 2, u'-\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (179, 1, u'+            CCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (181, 1, u'+        CCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(inflatedLen == sizeHint, "");'), (53, 1, u'+            CCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Total add: 63
Total del: 63
Header: CCTMXMapInfo::endElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(inflatedLen == sizeHint, "");'), (53, 1, u'+            CCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(inflatedLen == sizeHint, "");'), (53, 1, u'+            CCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (17, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: CCTileMapAtlas::calculateItemsToRender
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (17, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (17, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+    CCAssert( file != NULL, "file must be non-nil");'), (19, 2, u'-\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (23, 1, u'+        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCTileMapAtlas::loadTGAfile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+    CCAssert( file != NULL, "file must be non-nil");'), (19, 2, u'-\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (23, 1, u'+        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+    CCAssert( file != NULL, "file must be non-nil");'), (19, 2, u'-\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (23, 1, u'+        CCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-\tCCAssert( tile.r != 0, "R component must be non 0");'), (33, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (34, 1, u'+    CCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (35, 1, u'+    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (36, 1, u'+    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (37, 1, u'+    CCAssert( tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Total add: 31
Total del: 31
Header: CCTileMapAtlas::setTile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-\tCCAssert( tile.r != 0, "R component must be non 0");'), (33, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (34, 1, u'+    CCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (35, 1, u'+    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (36, 1, u'+    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (37, 1, u'+    CCAssert( tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-\tCCAssert( tile.r != 0, "R component must be non 0");'), (33, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (34, 1, u'+    CCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (35, 1, u'+    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (36, 1, u'+    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (37, 1, u'+    CCAssert( tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCTileMapAtlas::tileAt
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+    CCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (7, 1, u'+    CCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (36, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 34
Total del: 34
Header: CCTileMapAtlas::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (36, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (36, 1, u'+    CCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\tlua_assert(0);\t\t\t/* cannot happen */'), (22, 1, u'+    lua_assert(0);            /* cannot happen */')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: DumpConstants
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\tlua_assert(0);\t\t\t/* cannot happen */'), (22, 1, u'+    lua_assert(0);            /* cannot happen */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-\tlua_assert(0);\t\t\t/* cannot happen */'), (22, 1, u'+    lua_assert(0);            /* cannot happen */')]
===========================================
Class: class QueryCallback : public b2QueryCallback { 
Class: class QueryCallback : public b2QueryCallback { 
Class: class Light : public CCSprite { 
Class: class Light : public CCSprite { 
Class: class DoubleSprite : public CCSprite { 
Class:  class DoubleSprite : public CCSprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (19, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: Paddle::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (19, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (19, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (5, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: Paddle::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (5, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (5, 1, u'+    CCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 2, u'-        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);')]
===========================================
Class:class CCEGL class CCEGL
Class: class CCInputView : public TWindow { 
Class: class BitmapDC { 
Class: class CCLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 2, u'-\t\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 34
Total del: 40
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 2, u'-\t\t\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 2, u'-\t\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-\t\tCCAssert(label != NULL, "");'), (62, 1, u'+\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 114
Total del: 113
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-\t\tCCAssert(label != NULL, "");'), (62, 1, u'+\tCCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-\t\tCCAssert(label != NULL, "");'), (62, 1, u'+\tCCAssert(label != NULL, "");')]
===========================================
Class:	class CCPointObject : CCObject 	class CCPointObject : CCObject
Class:class CCPointObject : CCObject { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (126, 1, u'+\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 66
Total del: 67
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (126, 1, u'+\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(122, 2, u'-\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (126, 1, u'+\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tCCAssert( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Total add: 118
Total del: 118
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tCCAssert( file != NULL, "file must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tCCAssert( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(157, 1, u'+\tCCAssert(m_pobOpenGLView, "opengl view should not be null");'), (276, 1, u'+\tCCAssert(pobOpenGLView, "opengl view should not be null");'), (495, 1, u'+\tCCAssert(pScene != NULL, "running scene should not be null");'), (496, 1, u'+\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (504, 1, u'+\tCCAssert(pScene != NULL, "the scene should not be null");'), (516, 1, u'+\tCCAssert(pScene, "the scene should not null");'), (526, 1, u'+\tCCAssert(m_pRunningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(178, 1, u'+\tCCAssert(pSharedScheduler == NULL, "");'), (234, 1, u'+\tCCAssert(pfnSelector, "");'), (235, 1, u'+\tCCAssert(pTarget, "");'), (255, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");'), (422, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");'), (585, 1, u'+\tCCAssert(pTarget != NULL, "");'), (600, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (607, 1, u'+\tCCAssert(pTarget != NULL, "");'), (622, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");'), (629, 1, u'+    CCAssert( pTarget != NULL, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(140, 1, u'+\tCCAssert(pAction != NULL, "");'), (238, 1, u'+\tCCAssert(pFollowedNode != NULL, "");'), (252, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(65, 1, u'+\t\tCCAssert(pAction != NULL, "");'), (743, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+\t\t\t\tCCAssert(0, "");'), (99, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(138, 1, u'+\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 1, u'+\t\tCCAssert(0, "");'), (120, 1, u'+\tCCAssert(0, "");'), (126, 1, u'+\tCCAssert(0, "");'), (201, 1, u'+\tCCAssert(pActionOne != NULL, "");'), (202, 1, u'+\tCCAssert(pActionTwo != NULL, "");'), (462, 1, u'+\tCCAssert(pAction != NULL, "");'), (566, 1, u'+\tCCAssert(pAction1 != NULL, "");'), (567, 1, u'+\tCCAssert(pAction2 != NULL, "");'), (1944, 1, u'+\tCCAssert(pAction != NULL, "");'), (1945, 1, u'+\tCCAssert(pAction != m_pOther, "");'), (2033, 1, u'+\tCCAssert(pAnimation != NULL, "");'), (2049, 1, u'+\tCCAssert(pAnimation, "");'), (2075, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 1, u'+\tCCAssert(gSharedManager == NULL, "");'), (184, 1, u'+\tCCAssert(pAction != NULL, "");'), (185, 1, u'+\tCCAssert(pTarget != NULL, "");'), (202, 1, u'+ \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");'), (281, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");'), (282, 1, u'+\tCCAssert(pTarget != NULL, "");'), (307, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 1, u'+\tCCAssert(tile != NULL, "title should not be null");'), (115, 1, u'+\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(201, 1, u'+\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (579, 1, u'+\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (600, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (601, 1, u'+\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (623, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (629, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (658, 1, u'+\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (758, 1, u'+\tCCAssert( child != NULL, "Child must be non-nil");'), (982, 1, u'+\tCCAssert( action != NULL, "Argument must be non-nil");'), (999, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (1005, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (1038, 1, u'+\tCCAssert( selector, "Argument must be non-nil");'), (1039, 1, u'+\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (166, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (184, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(85, 1, u'+\tCC_ASSERT(width >= 0 && height >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    CCAssert(0, "not implement");'), (75, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");'), (86, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(277, 1, u'+\t\tCCAssert(0, "");'), (282, 1, u'+\t\tCCAssert(0, "");'), (287, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(105, 1, u'+\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (150, 1, u'+        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (227, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (266, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (271, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (276, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (408, 1, u'+\t\tCCAssert(theString != NULL, "");'), (412, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (685, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+\t\tCCAssert(label != NULL, "");'), (92, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(279, 1, u'+\tCCAssert(false, "Layer#ccTouchBegan override me");'), (740, 1, u'+\tCCAssert(m_pLayers, "");'), (775, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (786, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (92, 1, u'+\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(196, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (209, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (220, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (345, 1, u'+                    CCAssert(row < rows.size(), "");'), (349, 1, u'+\t\t\t\t    CCAssert(rowColumns, "");'), (368, 1, u'+\t\tCCAssert(! columnsOccupied, "");'), (455, 1, u'+\t\t\t\t    CCAssert(column < columns.size(), "");'), (459, 1, u'+\t\t\t\t    CCAssert(columnRows, "");'), (484, 1, u'+\t\tCCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(299, 1, u'+        CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (349, 1, u'+        CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (510, 1, u'+        CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(346, 1, u'+\t\tCCAssert(m_pVertexData, "");'), (435, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (260, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (323, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 1, u'+\tCCAssert( dict != NULL, "Particles: file not found");'), (259, 1, u'+\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (295, 1, u'+\t\t\t\tCCAssert(textureData, "");'), (302, 1, u'+\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (306, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (311, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (317, 1, u'+\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (740, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (745, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (750, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (755, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (760, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (765, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (770, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (775, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (780, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (785, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (790, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (795, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (800, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (805, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (812, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (817, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (822, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (827, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (832, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (837, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (842, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (847, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (852, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (857, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (862, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (867, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(176, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (181, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (186, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (191, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (199, 1, u'+\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (204, 1, u'+\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(175, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (323, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(127, 1, u'+\tCCAssert(0, "");'), (173, 1, u'+    CCAssert(pFrame != NULL, msg);'), (228, 1, u'+\tCCAssert(pTexture != NULL, "");'), (239, 1, u'+\tCCAssert(pTexture != NULL, "");'), (249, 1, u'+\tCCAssert(pszFilename != NULL, "");'), (267, 1, u'+\tCCAssert(pszFilename != NULL, "");'), (283, 1, u'+\tCCAssert(pSpriteFrame != NULL, "");'), (293, 1, u'+\tCCAssert(pszSpriteFrameName != NULL, "");'), (499, 1, u'+\tCCAssert(m_bUsesBatchNode, "");'), (654, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");'), (730, 1, u'+\tCCAssert(pChild != NULL, "");'), (735, 1, u'+\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (745, 1, u'+    CCAssert(pChild != NULL, "");'), (746, 1, u'+\tCCAssert(m_pChildren->containsObject(pChild), "");'), (892, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");'), (1036, 1, u'+\tCCAssert(animationName, "");'), (1040, 1, u'+\tCCAssert(a, "");'), (1044, 1, u'+\tCCAssert(frame, "");'), (1070, 1, u'+\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (1090, 1, u'+\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(155, 1, u'+\t\tCCAssert(child != NULL, "child should not be null");'), (159, 1, u'+\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (180, 1, u'+\t\tCCAssert(child != NULL, "the child should not be null");'), (181, 1, u'+\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (206, 1, u'+\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");'), (310, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (438, 1, u'+\t\tCCAssert(0, "should not run here");'), (573, 1, u'+        CCAssert( sprite != NULL, "Argument must be non-nil");'), (597, 1, u'+        CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(94, 1, u'+\tCCAssert(format >=0 && format <= 3, "");'), (209, 1, u'+\tCCAssert(textureFileName, "texture name should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(121, 1, u'+    CCAssert(index < data->num, "index out of range in objectAtIndex()");'), (163, 1, u'+    CCAssert(data->num, "no objects added");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(146, 1, u'+\t\tCCAssert(out, "");'), (147, 1, u'+\t\tCCAssert(&*out, "");'), (213, 1, u'+ \t\tCCAssert(out, "");'), (214, 1, u'+ \t\tCCAssert(&*out, "");')]
===========================================
Class:     class CCIMEDispatcher::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(194, 1, u'+\t\tCCAssert(0, "NSInternalInconsistencyException");'), (299, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (324, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (346, 1, u'+\t\t\tCCAssert(0, "Invalid pixel format");'), (596, 1, u'+\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (603, 1, u'+\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (679, 1, u'+\t\t\tCCAssert(false, "illegal pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 1, u'+\tCCAssert(texture != NULL, "texture should not be null");'), (153, 1, u'+\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");'), (231, 1, u'+\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (244, 1, u'+\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (247, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (267, 1, u'+\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (268, 1, u'+\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (295, 1, u'+\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(170, 1, u'+\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (198, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (314, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (412, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (413, 1, u'+\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (449, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (483, 1, u'+\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(340, 1, u'+\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
Class:	class CCPointObject : CCObject 	class CCPointObject : CCObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+\t\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (82, 1, u'+\t\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(191, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (227, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (228, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (261, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (262, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (398, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (419, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (420, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (421, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (464, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (473, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (483, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (484, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (544, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (606, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (609, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (58, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (77, 1, u'+                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(401, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (403, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );'), (558, 1, u'+\t\t\t\tCCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (116, 1, u'+\t\tCCAssert( file != NULL, "file must be non-nil");'), (127, 1, u'+\t\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (135, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (136, 1, u'+\t\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (137, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (138, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (139, 1, u'+\t\tCCAssert( tile.r != 0, "R component must be non 0");'), (169, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (170, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (171, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (228, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(94, 1, u'+\tCCAssert(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
Class:  class SpriteBlur : public CCSprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (28, 1, u'+\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (32, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: CCTextureAtlas::insertQuads
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (28, 1, u'+\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (32, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (28, 1, u'+\tCCAssert(index + amount <= m_uCapacity, "insertQuadWithTexture: Invalid index + amount");'), (32, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (13, 1, u'+\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: CCTextureAtlas::removeQuadsAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (13, 1, u'+\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");'), (13, 1, u'+\tCCAssert(index + amount <= m_uTotalQuads, "removeQuadAtIndex: index + amount out of bounds");')]
===========================================
Class: class Light : public CCSprite { 
Class: class Light : public CCSprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(key != NULL && strlen(key) > 0 && pObject != NULL, "Invalid Argument!");'), (6, 1, u'+\tCCAssert(key.length() > 0 && pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDictionary::objectForKey
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(key != NULL && strlen(key) > 0 && pObject != NULL, "Invalid Argument!");'), (6, 1, u'+\tCCAssert(key.length() > 0 && pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(key != NULL && strlen(key) > 0 && pObject != NULL, "Invalid Argument!");'), (6, 1, u'+\tCCAssert(key.length() > 0 && pObject != NULL, "Invalid Argument!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert(key != NULL && strlen(key) > 0, "Invalid Argument!");'), (7, 1, u'+\tCCAssert(key.length() > 0, "Invalid Argument!");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCDictionary::setObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert(key != NULL && strlen(key) > 0, "Invalid Argument!");'), (7, 1, u'+\tCCAssert(key.length() > 0, "Invalid Argument!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert(key != NULL && strlen(key) > 0, "Invalid Argument!");'), (7, 1, u'+\tCCAssert(key.length() > 0, "Invalid Argument!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(0);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCFileUtils::getFileDataFromZip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(0);')]
===========================================
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(str != NULL, "Unable to open file");'), (26, 1, u'+    CCAssert(str != NULL, "Unable to open file");')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: TMXOrthoFromXMLTest::TMXOrthoFromXMLTest
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(str != NULL, "Unable to open file");'), (26, 1, u'+    CCAssert(str != NULL, "Unable to open file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    CCAssert(str != NULL, "Unable to open file");'), (26, 1, u'+    CCAssert(str != NULL, "Unable to open file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(pZone == NULL, "CCDirctionary should not be inherited.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCDictionary::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(pZone == NULL, "CCDirctionary should not be inherited.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(pZone == NULL, "CCDirctionary should not be inherited.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(pZone == NULL, "CCArray should not be inherited.");')]
===========================================
===========================================
Total add: 7
Total del: 4
Header: CCArray::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(pZone == NULL, "CCArray should not be inherited.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(pZone == NULL, "CCArray should not be inherited.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tCCAssert(element, "FontDefinition could not be found!");'), (20, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: CCLabelBMFont::createFontChars
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tCCAssert(element, "FontDefinition could not be found!");'), (20, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\tCCAssert(element, "FontDefinition could not be found!");'), (20, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");')]
===========================================
Class: class RainbowEffect : public CCParticleSystemQuad { 
Class: class RainbowEffect : public CCParticleSystemQuad { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: CCParticleBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (6, 2, u'-\tCCAssert(m_pChildren->containsObject(pChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (9, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (10, 1, u'+\tCCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Total add: 6
Total del: 3
Header: CCParticleBatchNode::removeChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (6, 2, u'-\tCCAssert(m_pChildren->containsObject(pChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (9, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (10, 1, u'+\tCCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (6, 2, u'-\tCCAssert(m_pChildren->containsObject(pChild), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");'), (9, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (10, 1, u'+\tCCAssert(m_pChildren->containsObject(child), "CCParticleBatchNode doesn\'t contain the sprite. Can\'t remove it");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 2, u'-\tCCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (6, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (8, 1, u'+    CCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCParticleBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 2, u'-\tCCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (6, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (8, 1, u'+    CCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert( pChild != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (4, 2, u'-\tCCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");'), (6, 1, u'+\tCCAssert( dynamic_cast<CCParticleSystem*>(child) != NULL, "CCParticleBatchNode only supports CCQuadParticleSystems as children");'), (8, 1, u'+    CCAssert( pChild->getTexture()->getName() == m_pTextureAtlas->getTexture()->getName(), "CCParticleSystem is not using the same texture id");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (3, 1, u'+\tCCAssert(m_pChildren->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteBatchNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (3, 1, u'+\tCCAssert(m_pChildren->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (3, 1, u'+\tCCAssert(m_pChildren->containsObject(child), "Child doesn\'t belong to Sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(texture != NULL, "texture should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(texture != NULL, "texture should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(texture != NULL, "texture should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(dynamic_cast<CCSprite*>(child) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (6, 2, u'-\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (7, 1, u'+\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSpriteBatchNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(dynamic_cast<CCSprite*>(child) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (6, 2, u'-\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (7, 1, u'+\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CCAssert(dynamic_cast<CCSprite*>(child) != NULL, "CCSpriteBatchNode only supports CCSprites as children");'), (6, 2, u'-\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (7, 1, u'+\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "CCSprite is not using the same texture id");')]
===========================================
Class: class DoubleSprite : public CCSprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: CCRenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert(m_ePixelFormat != kCCTexture2DPixelFormat_A8, "only RGB and RGBA formats are valid for a render texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (9, 1, u'+        CCAssert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");')]
===========================================
===========================================
Total add: 1
Total del: 7
Header: CCRenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (9, 1, u'+        CCAssert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (9, 1, u'+        CCAssert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE, "Could not attach texture to framebuffer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (7, 1, u'+\tCCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCRenderTexture::saveBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (7, 1, u'+\tCCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (7, 1, u'+\tCCAssert(format == kCCImageFormatJPEG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: CCRenderTexture::saveBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 6
Total del: 15
Header: CCRenderTexture::getUIImageFromBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(227, 1, u'+\tCCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 149
Total del: 103
Header: using namespace std;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(227, 1, u'+\tCCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(227, 1, u'+\tCCAssert( dynamic_cast<CCMenuItem*>(child) != NULL, "Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (10, 1, u'+\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 64
Total del: 63
Header: CCBMFontConfiguration::parseConfigFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (10, 1, u'+\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (10, 1, u'+\tCCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");'), (15, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Total add: 14
Total del: 8
Header: CCLabelBMFont::createFontChars
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");'), (15, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");'), (15, 1, u'+\t\tCCAssert(element, "FontDefinition could not be found!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: defaultSpringTorque
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\tcpAssertSoft(moment != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: preStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSoft(k != 0.0, "Unsolvable spring.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: cpPinJointInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tcpAssertWarn(joint->dist > 0.0, "You created a 0 length pin joint. A pivot joint will be much more stable.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+static void cpv_assert_nan(cpVect v, char *message){cpAssertSoft(v.x == v.x && v.y == v.y, message);}'), (3, 1, u'+static void cpv_assert_infinite(cpVect v, char *message){cpAssertSoft(cpfabs(v.x) != INFINITY && cpfabs(v.y) != INFINITY, message);}'), (4, 1, u'+static void cpv_assert_sane(cpVect v, char *message){cpv_assert_nan(v, message); cpv_assert_infinite(v, message);}'), (13, 1, u'+\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (14, 1, u'+\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (16, 1, u'+\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (17, 1, u'+\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (18, 1, u'+\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (20, 1, u'+\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (21, 1, u'+\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (22, 1, u'+\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (24, 1, u'+\tcpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (26, 1, u'+\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (27, 1, u'+\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
Total add: 32
Total del: 0
Header: cpBodyFree
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+static void cpv_assert_nan(cpVect v, char *message){cpAssertSoft(v.x == v.x && v.y == v.y, message);}'), (3, 1, u'+static void cpv_assert_infinite(cpVect v, char *message){cpAssertSoft(cpfabs(v.x) != INFINITY && cpfabs(v.y) != INFINITY, message);}'), (4, 1, u'+static void cpv_assert_sane(cpVect v, char *message){cpv_assert_nan(v, message); cpv_assert_infinite(v, message);}'), (13, 1, u'+\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (14, 1, u'+\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (16, 1, u'+\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (17, 1, u'+\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (18, 1, u'+\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (20, 1, u'+\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (21, 1, u'+\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (22, 1, u'+\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (24, 1, u'+\tcpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (26, 1, u'+\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (27, 1, u'+\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+static void cpv_assert_nan(cpVect v, char *message){cpAssertSoft(v.x == v.x && v.y == v.y, message);}'), (3, 1, u'+static void cpv_assert_infinite(cpVect v, char *message){cpAssertSoft(cpfabs(v.x) != INFINITY && cpfabs(v.y) != INFINITY, message);}'), (4, 1, u'+static void cpv_assert_sane(cpVect v, char *message){cpv_assert_nan(v, message); cpv_assert_infinite(v, message);}'), (13, 1, u'+\tcpAssertSoft(body->m == body->m && body->m_inv == body->m_inv, "Body\'s mass is invalid.");'), (14, 1, u'+\tcpAssertSoft(body->i == body->i && body->i_inv == body->i_inv, "Body\'s moment is invalid.");'), (16, 1, u'+\tcpv_assert_sane(body->p, "Body\'s position is invalid.");'), (17, 1, u'+\tcpv_assert_sane(body->v, "Body\'s velocity is invalid.");'), (18, 1, u'+\tcpv_assert_sane(body->f, "Body\'s force is invalid.");'), (20, 1, u'+\tcpAssertSoft(body->a == body->a && cpfabs(body->a) != INFINITY, "Body\'s angle is invalid.");'), (21, 1, u'+\tcpAssertSoft(body->w == body->w && cpfabs(body->w) != INFINITY, "Body\'s angular velocity is invalid.");'), (22, 1, u'+\tcpAssertSoft(body->t == body->t && cpfabs(body->t) != INFINITY, "Body\'s torque is invalid.");'), (24, 1, u'+\tcpv_assert_sane(body->rot, "Internal error: Body\'s rotation vector is invalid.");'), (26, 1, u'+\tcpAssertSoft(body->v_limit == body->v_limit, "Body\'s velocity limit is invalid.");'), (27, 1, u'+\tcpAssertSoft(body->w_limit == body->w_limit, "Body\'s angular velocity limit is invalid.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: cpBodySetMass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertHard(mass > 0.0f, "Mass must be positive and non-zero.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: cpBodySetMoment
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertHard(moment > 0.0f, "Moment of Inertia must be positive and non-zero.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: cpBodySetAngle
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tcpBodyAssertSane(body);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (3, 1, u'+\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpCollideShapes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (3, 1, u'+\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");'), (3, 1, u'+\tcpAssertSoft(a->klass->type <= b->klass->type, "Collision shapes passed to cpCollideShapes() are not sorted.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tcpAssert(count, "Buffer size is too small.");'), (3, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: getUnusedBin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tcpAssert(count, "Buffer size is too small.");'), (3, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tcpAssert(count, "Buffer size is too small.");'), (3, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpPolyShapeGetNumVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-\tcpAssert(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpPolyShapeGetVert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-\tcpAssert(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (3, 2, u'-\tcpAssert(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");'), (5, 1, u'+\tcpAssertHard(0 <= idx && idx < cpPolyShapeGetNumVerts(shape), "Index out of range.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");'), (3, 1, u'+\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpPolyShapeInit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");'), (3, 1, u'+\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");'), (3, 1, u'+\tcpAssertHard(cpPolyValidate(verts, numVerts), "Polygon is concave or has a reversed winding.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: cpPolyShapeSetVerts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &polyClass, "Shape is not a poly shape.");'), (4, 1, u'+\tcpAssertHard(shape->klass == &polyClass, "Shape is not a poly shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &struct##Class, "shape is not a "#struct); \\'), (3, 1, u'+\tcpAssertHard(shape->klass == &struct##Class, "shape is not a "#struct); \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpCircleShapeSetRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpCircleShapeSetOffset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpCircleShapeClass, "Shape is not a circle shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpSegmentShapeSetEndpoints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: cpSegmentShapeSetRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");'), (3, 1, u'+\tcpAssertHard(shape->klass == &cpSegmentShapeClass, "Shape is not a segment shape.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tcpAssert(!cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),'), (7, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: cpSpaceAddShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tcpAssert(!cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),'), (7, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tcpAssert(!cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),'), (7, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpHashSetFind(space->staticShapes->handleSet, shape->hashid, shape),'), (4, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");')]
===========================================
===========================================
Total add: 6
Total del: 7
Header: cpSpaceAddStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpHashSetFind(space->staticShapes->handleSet, shape->hashid, shape),'), (4, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpHashSetFind(space->staticShapes->handleSet, shape->hashid, shape),'), (4, 1, u'+\tcpAssertHard(!shape->space, "This shape is already added to a space and cannot be added to another.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssert(!body->space, "Cannot add a body to a more than one space or to the same space twice.");'), (5, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (6, 1, u'+\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (7, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: cpSpaceAddBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssert(!body->space, "Cannot add a body to a more than one space or to the same space twice.");'), (5, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (6, 1, u'+\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (7, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (3, 2, u'-\tcpAssert(!body->space, "Cannot add a body to a more than one space or to the same space twice.");'), (5, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (6, 1, u'+\tcpAssertHard(!body->space, "This body is already added to a space and cannot be added to another.");'), (7, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpArrayContains(space->constraints, constraint), "Cannot add the same constraint more than once.");'), (7, 1, u'+\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (8, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 2
Total del: 5
Header: cpSpaceAddConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpArrayContains(space->constraints, constraint), "Cannot add the same constraint more than once.");'), (7, 1, u'+\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (8, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpArrayContains(space->constraints, constraint), "Cannot add the same constraint more than once.");'), (7, 1, u'+\tcpAssertHard(!constraint->space, "This shape is already added to a space and cannot be added to another.");'), (8, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (5, 1, u'+\t\tcpAssertSpaceUnlocked(space);'), (16, 2, u'-\tcpAssertSpaceUnlocked(space);'), (17, 2, u'-\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),')]
===========================================
===========================================
Total add: 9
Total del: 13
Header: cpSpaceRemoveShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (5, 1, u'+\t\tcpAssertSpaceUnlocked(space);'), (16, 2, u'-\tcpAssertSpaceUnlocked(space);'), (17, 2, u'-\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a shape that was not added to the space. (Removed twice maybe?)");'), (5, 1, u'+\t\tcpAssertSpaceUnlocked(space);'), (16, 2, u'-\tcpAssertSpaceUnlocked(space);'), (17, 2, u'-\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpHashSetFind(space->staticShapes->handleSet, shape->hashid, shape),'), (4, 1, u'+\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: cpSpaceRemoveStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpHashSetFind(space->staticShapes->handleSet, shape->hashid, shape),'), (4, 1, u'+\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpHashSetFind(space->staticShapes->handleSet, shape->hashid, shape),'), (4, 1, u'+\tcpAssertHard(cpSpaceContainsShape(space, shape), "Cannot remove a static or sleeping shape that was not added to the space. (Removed twice maybe?)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(body->space == space,'), (4, 1, u'+\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: cpSpaceRemoveBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(body->space == space,'), (4, 1, u'+\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(body->space == space,'), (4, 1, u'+\tcpAssertHard(cpSpaceContainsBody(space, body), "Cannot remove a body that was not added to the space. (Removed twice maybe?)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpArrayContains(space->constraints, constraint),'), (5, 1, u'+\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (6, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: cpSpaceRemoveConstraint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpArrayContains(space->constraints, constraint),'), (5, 1, u'+\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (6, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpArrayContains(space->constraints, constraint),'), (5, 1, u'+\tcpAssertHard(cpSpaceContainsConstraint(space, constraint), "Cannot remove a constraint that was not added to the space. (Removed twice maybe?)");'), (6, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to activate a rouge body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
Total add: 27
Total del: 9
Header: componentNodeRoot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\tcpAssertHard(!cpBodyIsRogue(body), "Internal error: Attempting to deactivate a rouge body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (10, 2, u'-\tcpAssert(space, "Trying to activate a body that was never added to a space.");')]
===========================================
===========================================
Total add: 12
Total del: 11
Header: cpSpaceActivateBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (10, 2, u'-\tcpAssert(space, "Trying to activate a body that was never added to a space.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tcpAssertHard(!cpBodyIsRogue(root), "Internal Error: ComponentActivate() called on a rogue body.");'), (10, 2, u'-\tcpAssert(space, "Trying to activate a body that was never added to a space.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (47, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (48, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (52, 1, u'+\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
Total add: 19
Total del: 29
Header: cpBodyActivate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (47, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (48, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (52, 1, u'+\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\tcpAssertHard(cpBodyIsStatic(body), "cpBodyActivateStatic() called on a non-static body.");'), (47, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->next == NULL, "Internal Error: Dangling contact graph pointers detected. (A)");'), (48, 1, u'+\tcpAssertSoft(cpArbiterThreadForBody(arb, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (B)");'), (52, 1, u'+\tcpAssertSoft(next == NULL || cpArbiterThreadForBody(next, body)->prev == NULL, "Internal Error: Dangling contact graph pointers detected. (C)");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (9, 1, u'+\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
Total add: 48
Total del: 40
Header: cpSpaceProcessComponents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (9, 1, u'+\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\t\tcpAssertSoft(body->node.next == NULL, "Internal Error: Dangling next pointer detected in contact graph.");'), (9, 1, u'+\t\tcpAssertSoft(body->node.root == NULL, "Internal Error: Dangling root pointer detected in contact graph.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (3, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (6, 2, u'-\tcpAssert(space, "Cannot put a body to sleep that has not been added to a space.");'), (7, 2, u'-\tcpAssert(!space->locked, "Bodies can not be put to sleep during a query or a call to cpSpaceSte(). Put these calls into a post-step callback.");'), (8, 2, u'-\tcpAssert(!group || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (11, 1, u'+\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (12, 1, u'+\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (13, 1, u'+\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (20, 1, u'+\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
Total add: 14
Total del: 13
Header: void
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (3, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (6, 2, u'-\tcpAssert(space, "Cannot put a body to sleep that has not been added to a space.");'), (7, 2, u'-\tcpAssert(!space->locked, "Bodies can not be put to sleep during a query or a call to cpSpaceSte(). Put these calls into a post-step callback.");'), (8, 2, u'-\tcpAssert(!group || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (11, 1, u'+\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (12, 1, u'+\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (13, 1, u'+\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (20, 1, u'+\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (3, 1, u'+\tcpAssertHard(!cpBodyIsStatic(body) && !cpBodyIsRogue(body), "Rogue and static bodies cannot be put to sleep.");'), (6, 2, u'-\tcpAssert(space, "Cannot put a body to sleep that has not been added to a space.");'), (7, 2, u'-\tcpAssert(!space->locked, "Bodies can not be put to sleep during a query or a call to cpSpaceSte(). Put these calls into a post-step callback.");'), (8, 2, u'-\tcpAssert(!group || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (11, 1, u'+\tcpAssertHard(space, "Cannot put a rogue body to sleep.");'), (12, 1, u'+\tcpAssertHard(!space->locked, "Bodies cannot be put to sleep during a query or a call to cpSpaceStep(). Put these calls into a post-step callback.");'), (13, 1, u'+\tcpAssertHard(group == NULL || cpBodyIsSleeping(group), "Cannot use a non-sleeping body as a group identifier.");'), (20, 1, u'+\t\tcpAssertHard(ComponentRoot(body) == ComponentRoot(group), "The body is already sleeping and it\'s group cannot be reassigned.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tcpAssert(count, "Buffer size is too small.");'), (3, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: handleSetTrans
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tcpAssert(count, "Buffer size is too small.");'), (3, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tcpAssert(count, "Buffer size is too small.");'), (3, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size is too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertWarn(space->locked,')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: cpSpaceAddPostStepCallback
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertWarn(space->locked,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertWarn(space->locked,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tcpAssert(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal error, too many contact point overflow!");'), (8, 1, u'+\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: cpContactBufferGetArray
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tcpAssert(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal error, too many contact point overflow!");'), (8, 1, u'+\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tcpAssert(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal error, too many contact point overflow!");'), (8, 1, u'+\tcpAssertHard(count <= CP_MAX_CONTACTS_PER_ARBITER, "Internal Error: Contact buffer overflow!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
Total add: 15
Total del: 5
Header: cpSpacePopContacts
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+\t\tcpAssertHard(count, "Internal Error: Buffer size too small.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 2, u'-\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (139, 1, u'+\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (194, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (204, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (302, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (341, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (346, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (351, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (509, 1, u'+\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (548, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (553, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (558, 1, u'+\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (700, 2, u'-\t\tCCAssert(theString != NULL, "");'), (704, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (707, 1, u'+\tCCAssert(theString != NULL, "");'), (711, 1, u'+\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1202, 1, u'+        CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");'), (1220, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Total add: 724
Total del: 723
Header: http://www.angelcode.com/products/bmfont/
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 2, u'-\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (139, 1, u'+\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (194, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (204, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (302, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (341, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (346, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (351, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (509, 1, u'+\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (548, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (553, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (558, 1, u'+\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (700, 2, u'-\t\tCCAssert(theString != NULL, "");'), (704, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (707, 1, u'+\tCCAssert(theString != NULL, "");'), (711, 1, u'+\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1202, 1, u'+        CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");'), (1220, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 2, u'-\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (139, 1, u'+\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");'), (194, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (204, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (302, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (341, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (346, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (351, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (509, 1, u'+\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (548, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (553, 1, u'+\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (558, 1, u'+\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (700, 2, u'-\t\tCCAssert(theString != NULL, "");'), (704, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (707, 1, u'+\tCCAssert(theString != NULL, "");'), (711, 1, u'+\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1202, 1, u'+        CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");'), (1220, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to %d!", (textureEnum-GL_TEXTURE0) );'), (5, 1, u'+\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: ccGLActiveTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to %d!", (textureEnum-GL_TEXTURE0) );'), (5, 1, u'+\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to %d!", (textureEnum-GL_TEXTURE0) );'), (5, 1, u'+\tCCAssert( (textureEnum - GL_TEXTURE0) < kCCMaxActiveTexture, "cocos2d ERROR: Increase kCCMaxActiveTexture to kCCMaxActiveTexture!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(205, 1, u'+\tCCAssert(timer, "CCProfilingTimer  not found");'), (225, 1, u'+\tCCAssert(timer, "CCProfilingTimer not found");')]
===========================================
===========================================
Total add: 123
Total del: 83
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(205, 1, u'+\tCCAssert(timer, "CCProfilingTimer  not found");'), (225, 1, u'+\tCCAssert(timer, "CCProfilingTimer not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(205, 1, u'+\tCCAssert(timer, "CCProfilingTimer  not found");'), (225, 1, u'+\tCCAssert(timer, "CCProfilingTimer not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: CCParticleSystem::setTotalParticles
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCCAssert( var <= m_uAllocatedParticles, "Particle: resizing particle array only supported for quads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being renderd using an CCSpriteBatchNode");'), (3, 1, u'+\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being renderd using an CCSpriteBatchNode");'), (3, 1, u'+\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being renderd using an CCSpriteBatchNode");'), (3, 1, u'+\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being rendered using an CCSpriteBatchNode");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (4, 1, u'+\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (6, 2, u'-\tCCAssert((! texture) || dynamic_cast<CCTexture2D*>(texture));'), (7, 1, u'+\tCCAssert( !texture || dynamic_cast<CCTexture2D*>(texture), "setTexture expects a CCTexture2D. Invalid argument");')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (4, 1, u'+\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (6, 2, u'-\tCCAssert((! texture) || dynamic_cast<CCTexture2D*>(texture));'), (7, 1, u'+\tCCAssert( !texture || dynamic_cast<CCTexture2D*>(texture), "setTexture expects a CCTexture2D. Invalid argument");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (4, 1, u'+\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteBatchNode");'), (6, 2, u'-\tCCAssert((! texture) || dynamic_cast<CCTexture2D*>(texture));'), (7, 1, u'+\tCCAssert( !texture || dynamic_cast<CCTexture2D*>(texture), "setTexture expects a CCTexture2D. Invalid argument");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(154, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (160, 1, u'+\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
Total add: 141
Total del: 164
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(154, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (160, 1, u'+\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(154, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (160, 1, u'+\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tCCAssert(0, "should not run here");'), (44, 1, u'+\tCCAssert(0, "should not run here");')]
===========================================
===========================================
Total add: 99
Total del: 110
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tCCAssert(0, "should not run here");'), (44, 1, u'+\tCCAssert(0, "should not run here");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\tCCAssert(0, "should not run here");'), (44, 1, u'+\tCCAssert(0, "should not run here");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( vertShader_ == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-\tCCAssert( fragShader_ == 0, "Vertex Shaders should have been already deleted");'), (4, 1, u'+\tCCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+\tCCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCGLProgram::~CCGLProgram
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( vertShader_ == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-\tCCAssert( fragShader_ == 0, "Vertex Shaders should have been already deleted");'), (4, 1, u'+\tCCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+\tCCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( vertShader_ == 0, "Vertex Shaders should have been already deleted");'), (3, 2, u'-\tCCAssert( fragShader_ == 0, "Vertex Shaders should have been already deleted");'), (4, 1, u'+\tCCAssert( m_uVertShader == 0, "Vertex Shaders should have been already deleted");'), (5, 1, u'+\tCCAssert( m_uFragShader == 0, "Vertex Shaders should have been already deleted");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCCAssert(pSharedScheduler == NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCScheduler::CCScheduler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCCAssert(pSharedScheduler == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tCCAssert(pSharedScheduler == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(gSharedManager == NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionManager::CCActionManager
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(gSharedManager == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(gSharedManager == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tCCAssert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
Total add: 6
Total del: 10
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tCCAssert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\tCCAssert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(_sharedShaderCache == 0, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: CCShaderCache::sharedShaderCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(_sharedShaderCache == 0, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(_sharedShaderCache == 0, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (43, 1, u'+\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 25
Total del: 49
Header: CCProgressTimer::updateRadial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (43, 1, u'+\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (43, 1, u'+\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (97, 1, u'+\t\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (118, 1, u'+\t\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Total add: 79
Total del: 108
Header: CCProgressTimer::updateBar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (97, 1, u'+\t\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (118, 1, u'+\t\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\t\tCCAssert(m_pVertexData, "");'), (97, 1, u'+\t\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");'), (118, 1, u'+\t\t\tCCAssert( m_pVertexData, "CCProgressTimer. Not enough memory");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(176, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (181, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (186, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (191, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (199, 2, u'-\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (204, 2, u'-\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tCCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (42, 1, u'+\tCCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (92, 1, u'+\tCCAssert( ( !m_pQuads && !m_pIndices), "Memory already alloced");'), (93, 1, u'+\tCCAssert( !m_pBatchNode, "Memory should not be alloced when not using batchNode");'), (115, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 99
Total del: 53
Header: CCParticleSystemQuad::postStep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tCCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (42, 1, u'+\tCCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (92, 1, u'+\tCCAssert( ( !m_pQuads && !m_pIndices), "Memory already alloced");'), (93, 1, u'+\tCCAssert( !m_pBatchNode, "Memory should not be alloced when not using batchNode");'), (115, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+\tCCAssert(!m_pBatchNode,"draw should not be called when added to a particleBatchNode");'), (42, 1, u'+\tCCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (92, 1, u'+\tCCAssert( ( !m_pQuads && !m_pIndices), "Memory already alloced");'), (93, 1, u'+\tCCAssert( !m_pBatchNode, "Memory should not be alloced when not using batchNode");'), (115, 2, u'-    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 7
Header: CCSprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTexture != NULL, "");'), (3, 1, u'+\tCCAssert(pTexture != NULL, "Invalid texture for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTexture != NULL, "");'), (3, 1, u'+\tCCAssert(pTexture != NULL, "Invalid texture for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pTexture != NULL, "");'), (3, 1, u'+\tCCAssert(pTexture != NULL, "Invalid texture for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "Invalid filename for sprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_bUsesBatchNode, "");'), (3, 1, u'+\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being renderd using an CCSpriteBatchNode");'), (75, 1, u'+\t\t\t\tCCAssert( dynamic_cast<CCSprite*>(m_pParent), "Logic error in CCSprite. Parent must be a CCSprite");')]
===========================================
===========================================
Total add: 59
Total del: 129
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_bUsesBatchNode, "");'), (3, 1, u'+\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being renderd using an CCSpriteBatchNode");'), (75, 1, u'+\t\t\t\tCCAssert( dynamic_cast<CCSprite*>(m_pParent), "Logic error in CCSprite. Parent must be a CCSprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(m_bUsesBatchNode, "");'), (3, 1, u'+\tCCAssert(m_pobBatchNode, "updateTransform is only valid when CCSprite is being renderd using an CCSpriteBatchNode");'), (75, 1, u'+\t\t\t\tCCAssert( dynamic_cast<CCSprite*>(m_pParent), "Logic error in CCSprite. Parent must be a CCSprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (6, 1, u'+\tCCAssert(!m_pobBatchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Total add: 13
Total del: 19
Header: CCSprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (6, 1, u'+\tCCAssert(!m_pobBatchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (6, 1, u'+\tCCAssert(!m_pobBatchNode, "If CCSprite is being rendered by CCSpriteBatchNode, CCSprite#draw SHOULD NOT be called");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pChild != NULL, "");'), (4, 1, u'+\tCCAssert(pChild != NULL, "Argument must be non-NULL");'), (9, 2, u'-\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (14, 1, u'+\t\tCCAssert( pChildSprite, "CCSprite only supports CCSprites as children when using CCSpriteBatchNode");'), (15, 1, u'+\t\tCCAssert(pChildSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Total add: 14
Total del: 7
Header: CCSprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pChild != NULL, "");'), (4, 1, u'+\tCCAssert(pChild != NULL, "Argument must be non-NULL");'), (9, 2, u'-\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (14, 1, u'+\t\tCCAssert( pChildSprite, "CCSprite only supports CCSprites as children when using CCSpriteBatchNode");'), (15, 1, u'+\t\tCCAssert(pChildSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pChild != NULL, "");'), (4, 1, u'+\tCCAssert(pChild != NULL, "Argument must be non-NULL");'), (9, 2, u'-\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (14, 1, u'+\t\tCCAssert( pChildSprite, "CCSprite only supports CCSprites as children when using CCSpriteBatchNode");'), (15, 1, u'+\t\tCCAssert(pChildSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (3, 1, u'+\tCCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setIsRelativeAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (3, 1, u'+\tCCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (3, 1, u'+\tCCAssert(! m_pobBatchNode, "relativeTransformAnchor is invalid in CCSprite");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(animationName, "");'), (3, 1, u'+\tCCAssert(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(animationName, "");'), (3, 1, u'+\tCCAssert(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(animationName, "");'), (3, 1, u'+\tCCAssert(animationName, "CCSprite#setDisplayFrameWithAnimationName. animationName must not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "");'), (3, 1, u'+\tCCAssert(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "");'), (3, 1, u'+\tCCAssert(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(a, "");'), (3, 1, u'+\tCCAssert(a, "CCSprite#setDisplayFrameWithAnimationName: Frame not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(frame, "");'), (3, 1, u'+\tCCAssert(frame, "CCSprite#setDisplayFrame. Invalid frame");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(frame, "");'), (3, 1, u'+\tCCAssert(frame, "CCSprite#setDisplayFrame. Invalid frame");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(frame, "");'), (3, 1, u'+\tCCAssert(frame, "CCSprite#setDisplayFrame. Invalid frame");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+\tCCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+\tCCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+\tCCAssert (! m_pobBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (3, 1, u'+\tCCAssert(! m_pobBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tCCAssert(m_pParent != NULL, "CCSpriteBatchNode should NOT be root node");')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tCCAssert(m_pParent != NULL, "CCSpriteBatchNode should NOT be root node");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\tCCAssert(m_pParent != NULL, "CCSpriteBatchNode should NOT be root node");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+\t\t\tCCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
Total add: 17
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+\t\t\tCCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 1, u'+\t\t\tCCAssert(false, "Tiled Anti-Diagonally Flip not supported yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(185, 1, u'+    assert(0 && "Not implemented");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1097, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1138, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1181, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1243, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1255, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 1, u'+        Assert(more >= 2, "more < 2");'), (1481, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1725, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1097, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1138, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1181, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1243, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1255, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 2, u'-        Assert(more >= 2, "more < 2");'), (1481, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1725, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (80, 2, u'-\tCCAssert(0, "Have not implement!");'), (84, 2, u'-\tCCAssert(0, "Have not implement!");')]
===========================================
Class:class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (80, 1, u'+\tCCAssert(0, "Have not implement!");'), (84, 1, u'+\tCCAssert(0, "Have not implement!");')]
===========================================
Class:class BitmapDC { 
Class: class Light : public CCSprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(iswhite(obj2gco(cl)));'), (25, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: *lua_pushfstring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(iswhite(obj2gco(cl)));'), (25, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(iswhite(obj2gco(cl)));'), (25, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    {"assert", luaB_assert},'), (27, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Total add: 25
Total del: 25
Header: luaB_newproxy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    {"assert", luaB_assert},'), (27, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    {"assert", luaB_assert},'), (27, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(dest != NO_JUMP);'), (10, 1, u'+  lua_assert(dest != NO_JUMP);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: condjump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(dest != NO_JUMP);'), (10, 1, u'+  lua_assert(dest != NO_JUMP);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(dest != NO_JUMP);'), (10, 1, u'+  lua_assert(dest != NO_JUMP);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(target < fs->pc);'), (11, 1, u'+    lua_assert(target < fs->pc);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: dischargejpc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(target < fs->pc);'), (11, 1, u'+    lua_assert(target < fs->pc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(target < fs->pc);'), (11, 1, u'+    lua_assert(target < fs->pc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        lua_assert(reg == fs->freereg);'), (8, 1, u'+    lua_assert(reg == fs->freereg);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: luaK_reserveregs
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        lua_assert(reg == fs->freereg);'), (8, 1, u'+    lua_assert(reg == fs->freereg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        lua_assert(reg == fs->freereg);'), (8, 1, u'+    lua_assert(reg == fs->freereg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (24, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: freeexp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (24, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (24, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-        lua_assert(e->k == VVOID || e->k == VJMP);'), (51, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);')]
===========================================
===========================================
Total add: 22
Total del: 23
Header: code_label
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-        lua_assert(e->k == VVOID || e->k == VJMP);'), (51, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-        lua_assert(e->k == VVOID || e->k == VJMP);'), (51, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-        lua_assert(0);  /* invalid var kind to store */'), (39, 1, u'+      lua_assert(0);  /* invalid var kind to store */')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: luaK_exp2RK
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-        lua_assert(0);  /* invalid var kind to store */'), (39, 1, u'+      lua_assert(0);  /* invalid var kind to store */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-        lua_assert(0);  /* invalid var kind to store */'), (39, 1, u'+      lua_assert(0);  /* invalid var kind to store */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (7, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: luaK_self
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (7, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (7, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(0);  /* cannot happen */'), (16, 1, u'+      lua_assert(0);  /* cannot happen */')]
===========================================
===========================================
Total add: 12
Total del: 16
Header: codenot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(0);  /* cannot happen */'), (16, 1, u'+      lua_assert(0);  /* cannot happen */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(0);  /* cannot happen */'), (16, 1, u'+      lua_assert(0);  /* cannot happen */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 2, u'-        lua_assert(0);'), (55, 1, u'+    default: lua_assert(0); r = 0; break;')]
===========================================
===========================================
Total add: 20
Total del: 36
Header: luaK_indexed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 2, u'-        lua_assert(0);'), (55, 1, u'+    default: lua_assert(0); r = 0; break;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(43, 2, u'-        lua_assert(0);'), (55, 1, u'+    default: lua_assert(0); r = 0; break;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(0);'), (36, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Total add: 14
Total del: 19
Header: codecomp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(0);'), (36, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(0);'), (36, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (10, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (17, 2, u'-        lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (22, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (31, 2, u'-            lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (80, 2, u'-        lua_assert(0);'), (84, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (107, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Total add: 38
Total del: 64
Header: luaK_infix
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (10, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (17, 2, u'-        lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (22, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (31, 2, u'-            lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (80, 2, u'-        lua_assert(0);'), (84, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (107, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (10, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (17, 2, u'-        lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (22, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (31, 2, u'-            lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (80, 2, u'-        lua_assert(0);'), (84, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (107, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(getOpMode(o) == iABC);'), (3, 2, u'-    lua_assert(getBMode(o) != OpArgN || b == 0);'), (4, 2, u'-    lua_assert(getCMode(o) != OpArgN || c == 0);'), (6, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (7, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (8, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: luaK_code
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(getOpMode(o) == iABC);'), (3, 2, u'-    lua_assert(getBMode(o) != OpArgN || b == 0);'), (4, 2, u'-    lua_assert(getCMode(o) != OpArgN || c == 0);'), (6, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (7, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (8, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(getOpMode(o) == iABC);'), (3, 2, u'-    lua_assert(getBMode(o) != OpArgN || b == 0);'), (4, 2, u'-    lua_assert(getCMode(o) != OpArgN || c == 0);'), (6, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (7, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (8, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (3, 2, u'-    lua_assert(getCMode(o) == OpArgN);'), (5, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (6, 1, u'+  lua_assert(getCMode(o) == OpArgN);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: luaK_codeABC
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (3, 2, u'-    lua_assert(getCMode(o) == OpArgN);'), (5, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (6, 1, u'+  lua_assert(getCMode(o) == OpArgN);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (3, 2, u'-    lua_assert(getCMode(o) == OpArgN);'), (5, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (6, 1, u'+  lua_assert(getCMode(o) == OpArgN);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(tostore != 0);'), (14, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: luaK_codeABx
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(tostore != 0);'), (14, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(tostore != 0);'), (14, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(lua_getinfo(L, "lS", ar));'), (26, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: static const char KEY_HOOK = 'h';
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(lua_getinfo(L, "lS", ar));'), (26, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(lua_getinfo(L, "lS", ar));'), (26, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(ttisfunction(ci->func));'), (41, 1, u'+    lua_assert(ttisfunction(ci->func));')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: auxgetinfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(ttisfunction(ci->func));'), (41, 1, u'+    lua_assert(ttisfunction(ci->func));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(ttisfunction(ci->func));'), (41, 1, u'+    lua_assert(ttisfunction(ci->func));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        lua_assert(pc != -1);'), (14, 2, u'-            lua_assert(ttisstring(&p->k[g]));'), (51, 1, u'+    lua_assert(pc != -1);'), (55, 1, u'+        lua_assert(ttisstring(&p->k[g]));')]
===========================================
===========================================
Total add: 41
Total del: 42
Header: *getobjname
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        lua_assert(pc != -1);'), (14, 2, u'-            lua_assert(ttisstring(&p->k[g]));'), (51, 1, u'+    lua_assert(pc != -1);'), (55, 1, u'+        lua_assert(ttisstring(&p->k[g]));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        lua_assert(pc != -1);'), (14, 2, u'-            lua_assert(ttisstring(&p->k[g]));'), (51, 1, u'+    lua_assert(pc != -1);'), (55, 1, u'+        lua_assert(ttisstring(&p->k[g]));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(!ttisstring(p1) && !ttisnumber(p1));'), (6, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: luaG_typeerror
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(!ttisstring(p1) && !ttisnumber(p1));'), (6, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(!ttisstring(p1) && !ttisnumber(p1));'), (6, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (8, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: luaD_seterrorobj
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (8, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (8, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (11, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: correctstack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (11, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (11, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(L->ci->top <= L->stack_last);'), (20, 2, u'-        lua_assert(!L->allowhook);'), (38, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (43, 1, u'+    lua_assert(!L->allowhook);')]
===========================================
===========================================
Total add: 23
Total del: 23
Header: *growCI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(L->ci->top <= L->stack_last);'), (20, 2, u'-        lua_assert(!L->allowhook);'), (38, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (43, 1, u'+    lua_assert(!L->allowhook);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(L->ci->top <= L->stack_last);'), (20, 2, u'-        lua_assert(!L->allowhook);'), (38, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (43, 1, u'+    lua_assert(!L->allowhook);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        lua_assert(p->is_vararg & VARARG_HASARG);'), (27, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (46, 2, u'-        lua_assert(iswhite(obj2gco(htab)));'), (59, 1, u'+    lua_assert(iswhite(obj2gco(htab)));')]
===========================================
===========================================
Total add: 29
Total del: 29
Header: luaD_callhook
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        lua_assert(p->is_vararg & VARARG_HASARG);'), (27, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (46, 2, u'-        lua_assert(iswhite(obj2gco(htab)));'), (59, 1, u'+    lua_assert(iswhite(obj2gco(htab)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        lua_assert(p->is_vararg & VARARG_HASARG);'), (27, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (46, 2, u'-        lua_assert(iswhite(obj2gco(htab)));'), (59, 1, u'+    lua_assert(iswhite(obj2gco(htab)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(ci->top <= L->stack_last);'), (73, 2, u'-        lua_assert(ci->top <= L->stack_last);'), (90, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (112, 1, u'+    lua_assert(ci->top <= L->stack_last);')]
===========================================
===========================================
Total add: 61
Total del: 61
Header: tryfuncTM
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(ci->top <= L->stack_last);'), (73, 2, u'-        lua_assert(ci->top <= L->stack_last);'), (90, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (112, 1, u'+    lua_assert(ci->top <= L->stack_last);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(ci->top <= L->stack_last);'), (73, 2, u'-        lua_assert(ci->top <= L->stack_last);'), (90, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (112, 1, u'+    lua_assert(ci->top <= L->stack_last);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(ci == L->base_ci && firstArg > L->base);'), (10, 2, u'-        lua_assert(L->status == LUA_YIELD);'), (14, 2, u'-            lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (24, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (29, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (33, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: luaD_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(ci == L->base_ci && firstArg > L->base);'), (10, 2, u'-        lua_assert(L->status == LUA_YIELD);'), (14, 2, u'-            lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (24, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (29, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (33, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(ci == L->base_ci && firstArg > L->base);'), (10, 2, u'-        lua_assert(L->status == LUA_YIELD);'), (14, 2, u'-            lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (24, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (29, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (33, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    lua_assert(L->errfunc == 0);'), (18, 2, u'-        lua_assert(L->nCcalls == L->baseCcalls);'), (31, 1, u'+  lua_assert(L->errfunc == 0);'), (40, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: resume_error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    lua_assert(L->errfunc == 0);'), (18, 2, u'-        lua_assert(L->nCcalls == L->baseCcalls);'), (31, 1, u'+  lua_assert(L->errfunc == 0);'), (40, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    lua_assert(L->errfunc == 0);'), (18, 2, u'-        lua_assert(L->nCcalls == L->baseCcalls);'), (31, 1, u'+  lua_assert(L->errfunc == 0);'), (40, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-            lua_assert(0);\t\t\t/* cannot happen */'), (49, 1, u'+\tlua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: DumpConstants
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-            lua_assert(0);\t\t\t/* cannot happen */'), (49, 1, u'+\tlua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-            lua_assert(0);\t\t\t/* cannot happen */'), (49, 1, u'+\tlua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(p->v != &p->u.value);'), (19, 1, u'+    lua_assert(p->v != &p->u.value);'), (35, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (49, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: *luaF_newupval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(p->v != &p->u.value);'), (19, 1, u'+    lua_assert(p->v != &p->u.value);'), (35, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (49, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(p->v != &p->u.value);'), (19, 1, u'+    lua_assert(p->v != &p->u.value);'), (35, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (49, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (5, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: *luaF_findupval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (5, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (5, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        lua_assert(!isblack(o) && uv->v != &uv->u.value);'), (20, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: luaF_freeupval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        lua_assert(!isblack(o) && uv->v != &uv->u.value);'), (20, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        lua_assert(!isblack(o) && uv->v != &uv->u.value);'), (20, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(ttisnil(gval(n)));'), (5, 1, u'+  lua_assert(ttisnil(gval(n)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(iswhite(o) && !isdead(g, o));'), (5, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (66, 2, u'-        lua_assert(0);'), (71, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Total add: 28
Total del: 29
Header: removeentry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(iswhite(o) && !isdead(g, o));'), (5, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (66, 2, u'-        lua_assert(0);'), (71, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(iswhite(o) && !isdead(g, o));'), (5, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (66, 2, u'-        lua_assert(0);'), (71, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (33, 2, u'-            lua_assert(!ttisnil(gkey(n)));'), (64, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (68, 1, u'+      lua_assert(!ttisnil(gkey(n)));')]
===========================================
===========================================
Total add: 36
Total del: 36
Header: luaC_separateudata
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (33, 2, u'-            lua_assert(!ttisnil(gkey(n)));'), (64, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (68, 1, u'+      lua_assert(!ttisnil(gkey(n)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-        lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (33, 2, u'-            lua_assert(!ttisnil(gkey(n)));'), (64, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (68, 1, u'+      lua_assert(!ttisnil(gkey(n)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (23, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: traverseproto
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (23, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (23, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(ci->top <= l->stack_last);'), (20, 1, u'+    lua_assert(ci->top <= l->stack_last);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: checkstacksizes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(ci->top <= l->stack_last);'), (20, 1, u'+    lua_assert(ci->top <= l->stack_last);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        lua_assert(ci->top <= l->stack_last);'), (20, 1, u'+    lua_assert(ci->top <= l->stack_last);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(isgray(o));'), (7, 1, u'+  lua_assert(isgray(o));'), (66, 2, u'-        lua_assert(0);'), (79, 1, u'+    default: lua_assert(0); return 0;')]
===========================================
===========================================
Total add: 35
Total del: 37
Header: traversestack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(isgray(o));'), (7, 1, u'+  lua_assert(isgray(o));'), (66, 2, u'-        lua_assert(0);'), (79, 1, u'+    default: lua_assert(0); return 0;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(isgray(o));'), (7, 1, u'+  lua_assert(isgray(o));'), (66, 2, u'-        lua_assert(0);'), (79, 1, u'+    default: lua_assert(0); return 0;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (27, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: iscleared
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (27, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (27, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (24, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (41, 2, u'-        lua_assert(0);'), (45, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Total add: 15
Total del: 24
Header: cleartable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (24, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (41, 2, u'-        lua_assert(0);'), (45, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (24, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (41, 2, u'-        lua_assert(0);'), (45, 1, u'+    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (14, 2, u'-            lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (29, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (34, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: freeobj
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (14, 2, u'-            lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (29, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (34, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-            lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (14, 2, u'-            lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (29, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (34, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (10, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: markroot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (10, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (10, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    lua_assert(!iswhite(obj2gco(g->mainthread)));'), (38, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: remarkupvals
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    lua_assert(!iswhite(obj2gco(g->mainthread)));'), (38, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    lua_assert(!iswhite(obj2gco(g->mainthread)));'), (38, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-        lua_assert(old >= g->totalbytes);'), (40, 1, u'+      lua_assert(old >= g->totalbytes);'), (51, 2, u'-        lua_assert(old >= g->totalbytes);'), (60, 1, u'+      lua_assert(old >= g->totalbytes);'), (78, 2, u'-        lua_assert(0);'), (91, 1, u'+    default: lua_assert(0); return 0;')]
===========================================
===========================================
Total add: 39
Total del: 41
Header: atomic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-        lua_assert(old >= g->totalbytes);'), (40, 1, u'+      lua_assert(old >= g->totalbytes);'), (51, 2, u'-        lua_assert(old >= g->totalbytes);'), (60, 1, u'+      lua_assert(old >= g->totalbytes);'), (78, 2, u'-        lua_assert(0);'), (91, 1, u'+    default: lua_assert(0); return 0;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-        lua_assert(old >= g->totalbytes);'), (40, 1, u'+      lua_assert(old >= g->totalbytes);'), (51, 2, u'-        lua_assert(old >= g->totalbytes);'), (60, 1, u'+      lua_assert(old >= g->totalbytes);'), (78, 2, u'-        lua_assert(0);'), (91, 1, u'+    default: lua_assert(0); return 0;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-        lua_assert(g->totalbytes >= g->estimate);')]
===========================================
===========================================
Total add: 19
Total del: 20
Header: singlestep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-        lua_assert(g->totalbytes >= g->estimate);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-        lua_assert(g->totalbytes >= g->estimate);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (16, 2, u'-        lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (35, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (38, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: luaC_step
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (16, 2, u'-        lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (35, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (38, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (16, 2, u'-        lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (35, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (38, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (4, 2, u'-    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (5, 2, u'-    lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (12, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (13, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (14, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: luaC_fullgc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (4, 2, u'-    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (5, 2, u'-    lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (12, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (13, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (14, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (4, 2, u'-    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (5, 2, u'-    lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (12, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (13, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (14, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(isblack(o) && !isdead(g, o));'), (5, 2, u'-    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (11, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (12, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: luaC_barrierf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(isblack(o) && !isdead(g, o));'), (5, 2, u'-    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (11, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (12, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(isblack(o) && !isdead(g, o));'), (5, 2, u'-    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (11, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (12, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (27, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: luaC_link
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (27, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (27, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (13, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: save
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (13, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (13, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        lua_assert(token == cast(unsigned char, token));'), (10, 1, u'+    lua_assert(token == cast(unsigned char, token));')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: luaX_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        lua_assert(token == cast(unsigned char, token));'), (10, 1, u'+    lua_assert(token == cast(unsigned char, token));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        lua_assert(token == cast(unsigned char, token));'), (10, 1, u'+    lua_assert(token == cast(unsigned char, token));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(currIsNewline(ls));'), (10, 1, u'+  lua_assert(currIsNewline(ls));')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: *luaX_newstring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(currIsNewline(ls));'), (10, 1, u'+  lua_assert(currIsNewline(ls));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(currIsNewline(ls));'), (10, 1, u'+  lua_assert(currIsNewline(ls));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(isdigit(ls->current));'), (14, 1, u'+  lua_assert(isdigit(ls->current));')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: trydecpoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(isdigit(ls->current));'), (14, 1, u'+  lua_assert(isdigit(ls->current));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(isdigit(ls->current));'), (14, 1, u'+  lua_assert(isdigit(ls->current));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u"-    lua_assert(s == '[' || s == ']');"), (7, 1, u"+  lua_assert(s == '[' || s == ']');")]
===========================================
===========================================
Total add: 8
Total del: 8
Header: read_numeral
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u"-    lua_assert(s == '[' || s == ']');"), (7, 1, u"+  lua_assert(s == '[' || s == ']');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u"-    lua_assert(s == '[' || s == ']');"), (7, 1, u"+  lua_assert(s == '[' || s == ']');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(143, 1, u'+          lua_assert(!currIsNewline(ls));'), (177, 2, u'-                lua_assert(!currIsNewline(ls));')]
===========================================
===========================================
Total add: 99
Total del: 111
Header: read_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(143, 1, u'+          lua_assert(!currIsNewline(ls));'), (177, 2, u'-                lua_assert(!currIsNewline(ls));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(143, 1, u'+          lua_assert(!currIsNewline(ls));'), (177, 2, u'-                lua_assert(!currIsNewline(ls));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(ls->lookahead.token == TK_EOS);'), (4, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: luaX_next
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(ls->lookahead.token == TK_EOS);'), (4, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    lua_assert(ls->lookahead.token == TK_EOS);'), (4, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert((osize == 0) == (block == NULL));'), (7, 2, u'-    lua_assert((nsize == 0) == (block == NULL));'), (11, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (15, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: *luaM_toobig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert((osize == 0) == (block == NULL));'), (7, 2, u'-    lua_assert((nsize == 0) == (block == NULL));'), (11, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (15, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert((osize == 0) == (block == NULL));'), (7, 2, u'-    lua_assert((nsize == 0) == (block == NULL));'), (11, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (15, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            lua_assert(iscollectable(t1));'), (27, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: luaO_log2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            lua_assert(iscollectable(t1));'), (27, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-            lua_assert(iscollectable(t1));'), (27, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            lua_assert(f->upvalues[i] == name);'), (18, 2, u'-    lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (27, 1, u'+      lua_assert(f->upvalues[i] == name);'), (38, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: removevars
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            lua_assert(f->upvalues[i] == name);'), (18, 2, u'-    lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (27, 1, u'+      lua_assert(f->upvalues[i] == name);'), (38, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-            lua_assert(f->upvalues[i] == name);'), (18, 2, u'-    lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (27, 1, u'+      lua_assert(f->upvalues[i] == name);'), (38, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(fs->freereg == fs->nactvar);'), (15, 1, u'+  lua_assert(fs->freereg == fs->nactvar);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: enterlevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(fs->freereg == fs->nactvar);'), (15, 1, u'+  lua_assert(fs->freereg == fs->nactvar);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(fs->freereg == fs->nactvar);'), (15, 1, u'+  lua_assert(fs->freereg == fs->nactvar);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(!bl->isbreakable || !bl->upval);'), (9, 2, u'-    lua_assert(bl->nactvar == fs->nactvar);'), (18, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (19, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: enterblock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(!bl->isbreakable || !bl->upval);'), (9, 2, u'-    lua_assert(bl->nactvar == fs->nactvar);'), (18, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (19, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(!bl->isbreakable || !bl->upval);'), (9, 2, u'-    lua_assert(bl->nactvar == fs->nactvar);'), (18, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (19, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    lua_assert(luaG_checkcode(f));'), (20, 2, u'-    lua_assert(fs->bl == NULL);'), (42, 1, u'+  lua_assert(luaG_checkcode(f));'), (43, 1, u'+  lua_assert(fs->bl == NULL);')]
===========================================
===========================================
Total add: 23
Total del: 23
Header: open_func
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    lua_assert(luaG_checkcode(f));'), (20, 2, u'-    lua_assert(fs->bl == NULL);'), (42, 1, u'+  lua_assert(luaG_checkcode(f));'), (43, 1, u'+  lua_assert(fs->bl == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-    lua_assert(luaG_checkcode(f));'), (20, 2, u'-    lua_assert(fs->bl == NULL);'), (42, 1, u'+  lua_assert(luaG_checkcode(f));'), (43, 1, u'+  lua_assert(fs->bl == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(funcstate.prev == NULL);'), (13, 2, u'-    lua_assert(funcstate.f->nups == 0);'), (14, 2, u'-    lua_assert(lexstate.fs == NULL);'), (26, 1, u'+  lua_assert(funcstate.prev == NULL);'), (27, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (28, 1, u'+  lua_assert(lexstate.fs == NULL);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: close_func
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(funcstate.prev == NULL);'), (13, 2, u'-    lua_assert(funcstate.f->nups == 0);'), (14, 2, u'-    lua_assert(lexstate.fs == NULL);'), (26, 1, u'+  lua_assert(funcstate.prev == NULL);'), (27, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (28, 1, u'+  lua_assert(lexstate.fs == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(funcstate.prev == NULL);'), (13, 2, u'-    lua_assert(funcstate.f->nups == 0);'), (14, 2, u'-    lua_assert(lexstate.fs == NULL);'), (26, 1, u'+  lua_assert(funcstate.prev == NULL);'), (27, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (28, 1, u'+  lua_assert(lexstate.fs == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (52, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);')]
===========================================
===========================================
Total add: 38
Total del: 38
Header: listfield
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (52, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-        lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (52, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-    lua_assert(f->k == VNONRELOC);')]
===========================================
===========================================
Total add: 37
Total del: 37
Header: explist1
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-    lua_assert(f->k == VNONRELOC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-    lua_assert(f->k == VNONRELOC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(bl.breaklist == NO_JUMP);'), (14, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: block_follow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(bl.breaklist == NO_JUMP);'), (14, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(bl.breaklist == NO_JUMP);'), (14, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (33, 2, u'-                lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (44, 2, u'-                lua_assert(nret == fs->freereg - first);'), (52, 1, u'+        lua_assert(nret == fs->freereg - first);')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: exprstat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (33, 2, u'-                lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (44, 2, u'-                lua_assert(nret == fs->freereg - first);'), (52, 1, u'+        lua_assert(nret == fs->freereg - first);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (33, 2, u'-                lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (44, 2, u'-                lua_assert(nret == fs->freereg - first);'), (52, 1, u'+        lua_assert(nret == fs->freereg - first);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&'), (19, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&'), (19, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&'), (19, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(g->rootgc == obj2gco(L));'), (6, 2, u'-    lua_assert(g->strt.nuse == 0);'), (10, 2, u'-    lua_assert(g->totalbytes == sizeof(LG));'), (15, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (16, 1, u'+  lua_assert(g->strt.nuse == 0);'), (20, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: preinit_state
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(g->rootgc == obj2gco(L));'), (6, 2, u'-    lua_assert(g->strt.nuse == 0);'), (10, 2, u'-    lua_assert(g->totalbytes == sizeof(LG));'), (15, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (16, 1, u'+  lua_assert(g->strt.nuse == 0);'), (20, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(g->rootgc == obj2gco(L));'), (6, 2, u'-    lua_assert(g->strt.nuse == 0);'), (10, 2, u'-    lua_assert(g->totalbytes == sizeof(LG));'), (15, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (16, 1, u'+  lua_assert(g->strt.nuse == 0);'), (20, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    lua_assert(iswhite(obj2gco(L1)));'), (22, 1, u'+  lua_assert(iswhite(obj2gco(L1)));')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: close_state
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    lua_assert(iswhite(obj2gco(L1)));'), (22, 1, u'+  lua_assert(iswhite(obj2gco(L1)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    lua_assert(iswhite(obj2gco(L1)));'), (22, 1, u'+  lua_assert(iswhite(obj2gco(L1)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(L1->openupval == NULL);'), (8, 1, u'+  lua_assert(L1->openupval == NULL);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: *luaE_newthread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(L1->openupval == NULL);'), (8, 1, u'+  lua_assert(L1->openupval == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(L1->openupval == NULL);'), (8, 1, u'+  lua_assert(L1->openupval == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(G(L)->tmudata == NULL);'), (25, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: callallgcTM
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(G(L)->tmudata == NULL);'), (25, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-    lua_assert(G(L)->tmudata == NULL);'), (25, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-            lua_assert(cast_int(h%newsize) == lmod(h, newsize));'), (37, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-    lua_assert(*narray/2 <= na && na <= *narray);'), (35, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: luaH_next
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-    lua_assert(*narray/2 <= na && na <= *narray);'), (35, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-    lua_assert(*narray/2 <= na && na <= *narray);'), (35, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        lua_assert(n != dummynode);'), (46, 1, u'+    lua_assert(n != dummynode);'), (65, 2, u'-    lua_assert(ttisnil(gval(mp)));'), (70, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Total add: 33
Total del: 34
Header: *getfreepos
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        lua_assert(n != dummynode);'), (46, 1, u'+    lua_assert(n != dummynode);'), (65, 2, u'-    lua_assert(ttisnil(gval(mp)));'), (70, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-        lua_assert(n != dummynode);'), (46, 1, u'+    lua_assert(n != dummynode);'), (65, 2, u'-    lua_assert(ttisnil(gval(mp)));'), (70, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(event <= TM_EQ);'), (10, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: luaT_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(event <= TM_EQ);'), (10, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(event <= TM_EQ);'), (10, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u"-        lua_assert(argv[i][0] == '-');"), (10, 2, u'-            lua_assert(chunk != NULL);'), (18, 2, u'-            lua_assert(filename != NULL);'), (29, 1, u"+    lua_assert(argv[i][0] == '-');"), (34, 1, u'+        lua_assert(chunk != NULL);'), (42, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Total add: 24
Total del: 25
Header: collectargs
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u"-        lua_assert(argv[i][0] == '-');"), (10, 2, u'-            lua_assert(chunk != NULL);'), (18, 2, u'-            lua_assert(filename != NULL);'), (29, 1, u"+    lua_assert(argv[i][0] == '-');"), (34, 1, u'+        lua_assert(chunk != NULL);'), (42, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u"-        lua_assert(argv[i][0] == '-');"), (10, 2, u'-            lua_assert(chunk != NULL);'), (18, 2, u'-            lua_assert(filename != NULL);'), (29, 1, u"+    lua_assert(argv[i][0] == '-');"), (34, 1, u'+        lua_assert(chunk != NULL);'), (42, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(ttype(t1) == ttype(t2));'), (14, 1, u'+  lua_assert(ttype(t1) == ttype(t2));')]
===========================================
===========================================
Total add: 19
Total del: 24
Header: lessequal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(ttype(t1) == ttype(t2));'), (14, 1, u'+  lua_assert(ttype(t1) == ttype(t2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(ttype(t1) == ttype(t2));'), (14, 1, u'+  lua_assert(ttype(t1) == ttype(t2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            lua_assert(0);'), (46, 1, u'+      default: lua_assert(0); break;')]
===========================================
===========================================
Total add: 17
Total del: 33
Header: Arith
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            lua_assert(0);'), (46, 1, u'+      default: lua_assert(0); break;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-            lua_assert(0);'), (46, 1, u'+      default: lua_assert(0); break;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(isLua(L->ci));'), (27, 2, u'-        lua_assert(base == L->base && L->base == L->ci->base);'), (28, 2, u'-        lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (29, 2, u'-        lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (60, 2, u'-            lua_assert(ttisstring(rb));'), (71, 2, u'-            lua_assert(ttisstring(KBx(i)));'), (173, 1, u'+  lua_assert(isLua(L->ci));'), (193, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (194, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (195, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (226, 1, u'+        lua_assert(ttisstring(rb));'), (237, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (384, 2, u'-            lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (397, 2, u'-                lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (422, 2, u'-                lua_assert(isLua(L->ci));'), (423, 2, u'-                lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (508, 2, u'-                    lua_assert(GET_OPCODE(*pc) == OP_MOVE);'), (612, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (625, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (650, 1, u'+          lua_assert(isLua(L->ci));'), (651, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (736, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Total add: 377
Total del: 377
Header: Arith
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(isLua(L->ci));'), (27, 2, u'-        lua_assert(base == L->base && L->base == L->ci->base);'), (28, 2, u'-        lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (29, 2, u'-        lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (60, 2, u'-            lua_assert(ttisstring(rb));'), (71, 2, u'-            lua_assert(ttisstring(KBx(i)));'), (173, 1, u'+  lua_assert(isLua(L->ci));'), (193, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (194, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (195, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (226, 1, u'+        lua_assert(ttisstring(rb));'), (237, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (384, 2, u'-            lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (397, 2, u'-                lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (422, 2, u'-                lua_assert(isLua(L->ci));'), (423, 2, u'-                lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (508, 2, u'-                    lua_assert(GET_OPCODE(*pc) == OP_MOVE);'), (612, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (625, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (650, 1, u'+          lua_assert(isLua(L->ci));'), (651, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (736, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(isLua(L->ci));'), (27, 2, u'-        lua_assert(base == L->base && L->base == L->ci->base);'), (28, 2, u'-        lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (29, 2, u'-        lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (60, 2, u'-            lua_assert(ttisstring(rb));'), (71, 2, u'-            lua_assert(ttisstring(KBx(i)));'), (173, 1, u'+  lua_assert(isLua(L->ci));'), (193, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (194, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (195, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (226, 1, u'+        lua_assert(ttisstring(rb));'), (237, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (384, 2, u'-            lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (397, 2, u'-                lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (422, 2, u'-                lua_assert(isLua(L->ci));'), (423, 2, u'-                lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (508, 2, u'-                    lua_assert(GET_OPCODE(*pc) == OP_MOVE);'), (612, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (625, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (650, 1, u'+          lua_assert(isLua(L->ci));'), (651, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (736, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+\t\tCC_ASSERT( minVal<=maxVal );'), (49, 1, u'+\t\tCC_ASSERT( minVal<=result && result<=maxVal );'), (127, 1, u'+\t\t\tCC_ASSERT( false );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-\t\t\t\tCCAssert(0, "");'), (99, 2, u'-\t\tCCAssert(0, "");'), (496, 1, u'+\t\t\t\tCCAssert(0, "");'), (514, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(138, 2, u'-\t\t\tCCAssert(0, "");'), (1035, 1, u'+\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-\t\tCCAssert(0, "");'), (120, 2, u'-\tCCAssert(0, "");'), (126, 2, u'-\tCCAssert(0, "");'), (201, 2, u'-\tCCAssert(pActionOne != NULL, "");'), (202, 2, u'-\tCCAssert(pActionTwo != NULL, "");'), (462, 2, u'-\tCCAssert(pAction != NULL, "");'), (566, 2, u'-\tCCAssert(pAction1 != NULL, "");'), (567, 2, u'-\tCCAssert(pAction2 != NULL, "");'), (1944, 2, u'-\tCCAssert(pAction != NULL, "");'), (1945, 2, u'-\tCCAssert(pAction != m_pOther, "");'), (2033, 2, u'-\tCCAssert(pAnimation != NULL, "");'), (2049, 2, u'-\tCCAssert(pAnimation, "");'), (2075, 2, u'-\tCCAssert(pAnimation != NULL, "");'), (2269, 1, u'+\t\tCCAssert(0, "");'), (2310, 1, u'+\tCCAssert(0, "");'), (2316, 1, u'+\tCCAssert(0, "");'), (2391, 1, u'+\tCCAssert(pActionOne != NULL, "");'), (2392, 1, u'+\tCCAssert(pActionTwo != NULL, "");'), (2652, 1, u'+\tCCAssert(pAction != NULL, "");'), (2756, 1, u'+\tCCAssert(pAction1 != NULL, "");'), (2757, 1, u'+\tCCAssert(pAction2 != NULL, "");'), (4134, 1, u'+\tCCAssert(pAction != NULL, "");'), (4135, 1, u'+\tCCAssert(pAction != m_pOther, "");'), (4223, 1, u'+\tCCAssert(pAnimation != NULL, "");'), (4239, 1, u'+\tCCAssert(pAnimation, "");'), (4265, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (166, 2, u'-\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (184, 2, u'-\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (235, 1, u'+\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");'), (355, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");'), (373, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tCC_ASSERT(width >= 0 && height >= 0);'), (226, 1, u'+\tCC_ASSERT(width >= 0 && height >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "not implement");'), (3, 1, u'+    CCAssert(0, "not implement");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCCopying::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "not implement");'), (3, 1, u'+    CCAssert(0, "not implement");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(0, "not implement");'), (3, 1, u'+    CCAssert(0, "not implement");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-\t\tCCAssert(normalSprite != NULL, "");'), (38, 1, u'+        CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: CCMenuItem::unregisterScriptHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-\t\tCCAssert(normalSprite != NULL, "");'), (38, 1, u'+        CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-\t\tCCAssert(normalSprite != NULL, "");'), (38, 1, u'+        CCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (11, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCRenderTexture::saveBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (11, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    CCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (11, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-        CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (130, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 84
Total del: 84
Header: CCRenderTexture::getUIImageFromBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-        CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (130, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-        CCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (130, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(825, 2, u'-\t\tassert(rc == BPS_SUCCESS);'), (1128, 2, u'-\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");'), (2041, 1, u'+\t\tassert(rc == BPS_SUCCESS);'), (2389, 1, u'+\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(127, 2, u'-\tCCAssert(0, "");'), (173, 2, u'-    CCAssert(pFrame != NULL, msg);'), (228, 2, u'-\tCCAssert(pTexture != NULL, "");'), (239, 2, u'-\tCCAssert(pTexture != NULL, "");'), (249, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (267, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (283, 2, u'-\tCCAssert(pSpriteFrame != NULL, "");'), (293, 2, u'-\tCCAssert(pszSpriteFrameName != NULL, "");'), (499, 2, u'-\tCCAssert(m_bUsesBatchNode, "");'), (654, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (730, 2, u'-\tCCAssert(pChild != NULL, "");'), (735, 2, u'-\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (745, 2, u'-    CCAssert(pChild != NULL, "");'), (746, 2, u'-\tCCAssert(m_pChildren->containsObject(pChild), "");'), (902, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (1046, 2, u'-\tCCAssert(animationName, "");'), (1050, 2, u'-\tCCAssert(a, "");'), (1054, 2, u'-\tCCAssert(frame, "");'), (1080, 2, u'-\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (1100, 2, u'-\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (1248, 1, u'+\tCCAssert(0, "");'), (1294, 1, u'+    CCAssert(pFrame != NULL, msg);'), (1349, 1, u'+\tCCAssert(pTexture != NULL, "");'), (1360, 1, u'+\tCCAssert(pTexture != NULL, "");'), (1370, 1, u'+\tCCAssert(pszFilename != NULL, "");'), (1388, 1, u'+\tCCAssert(pszFilename != NULL, "");'), (1404, 1, u'+\tCCAssert(pSpriteFrame != NULL, "");'), (1414, 1, u'+\tCCAssert(pszSpriteFrameName != NULL, "");'), (1620, 1, u'+\tCCAssert(m_bUsesBatchNode, "");'), (1775, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");'), (1851, 1, u'+\tCCAssert(pChild != NULL, "");'), (1856, 1, u'+\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (1866, 1, u'+    CCAssert(pChild != NULL, "");'), (1867, 1, u'+\tCCAssert(m_pChildren->containsObject(pChild), "");'), (2013, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");'), (2157, 1, u'+\tCCAssert(animationName, "");'), (2161, 1, u'+\tCCAssert(a, "");'), (2165, 1, u'+\tCCAssert(frame, "");'), (2191, 1, u'+\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (2211, 1, u'+\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(249, 2, u'-\t\tCCAssert(child != NULL, "child should not be null");'), (253, 2, u'-\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (274, 2, u'-\t\tCCAssert(child != NULL, "the child should not be null");'), (275, 2, u'-\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (300, 2, u'-\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");'), (369, 1, u'+\t\tCCAssert(child != NULL, "child should not be null");'), (373, 1, u'+\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (394, 1, u'+\t\tCCAssert(child != NULL, "the child should not be null");'), (395, 1, u'+\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");'), (420, 1, u'+\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (116, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
Total add: 62
Total del: 62
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (116, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-\t\t\tCCAssert(false, "Not enough memory to resize the atla");'), (116, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tCCAssert(0, "should not run here");'), (216, 1, u'+\t\tCCAssert(0, "should not run here");')]
===========================================
===========================================
Total add: 120
Total del: 120
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tCCAssert(0, "should not run here");'), (216, 1, u'+\t\tCCAssert(0, "should not run here");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tCCAssert(0, "should not run here");'), (216, 1, u'+\t\tCCAssert(0, "should not run here");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(94, 2, u'-\tCCAssert(format >=0 && format <= 3, "");'), (274, 1, u'+\tCCAssert(format >=0 && format <= 3, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Total add: 98
Total del: 98
Header: CCTexturePVR::unpackPVRData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
Class:	class CCPointObject : CCObject 	class CCPointObject : CCObject
Class:class CCPointObject : CCObject class CCPointObject : CCObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(825, 2, u'-\t\tassert(rc == BPS_SUCCESS);'), (1128, 2, u'-\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");'), (2033, 1, u'+\t\tassert(rc == BPS_SUCCESS);'), (2356, 1, u'+\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");'), (7, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");'), (7, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");'), (7, 1, u'+            CCAssert(it != m_pConfiguration->m_pBitmapFontArray->end(), "LabelBMFont: character is not supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(127, 2, u'-\tCCAssert(0, "");'), (173, 2, u'-    CCAssert(pFrame != NULL, msg);'), (228, 2, u'-\tCCAssert(pTexture != NULL, "");'), (239, 2, u'-\tCCAssert(pTexture != NULL, "");'), (249, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (267, 2, u'-\tCCAssert(pszFilename != NULL, "");'), (283, 2, u'-\tCCAssert(pSpriteFrame != NULL, "");'), (293, 2, u'-\tCCAssert(pszSpriteFrameName != NULL, "");'), (499, 2, u'-\tCCAssert(m_bUsesBatchNode, "");'), (654, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (730, 2, u'-\tCCAssert(pChild != NULL, "");'), (735, 2, u'-\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (745, 2, u'-    CCAssert(pChild != NULL, "");'), (746, 2, u'-\tCCAssert(m_pChildren->containsObject(pChild), "");'), (892, 2, u'-\tCCAssert(! m_bUsesBatchNode, "");'), (1036, 2, u'-\tCCAssert(animationName, "");'), (1040, 2, u'-\tCCAssert(a, "");'), (1044, 2, u'-\tCCAssert(frame, "");'), (1070, 2, u'-\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (1090, 2, u'-\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (1238, 1, u'+\tCCAssert(0, "");'), (1284, 1, u'+    CCAssert(pFrame != NULL, msg);'), (1339, 1, u'+\tCCAssert(pTexture != NULL, "");'), (1350, 1, u'+\tCCAssert(pTexture != NULL, "");'), (1360, 1, u'+\tCCAssert(pszFilename != NULL, "");'), (1378, 1, u'+\tCCAssert(pszFilename != NULL, "");'), (1394, 1, u'+\tCCAssert(pSpriteFrame != NULL, "");'), (1404, 1, u'+\tCCAssert(pszSpriteFrameName != NULL, "");'), (1610, 1, u'+\tCCAssert(m_bUsesBatchNode, "");'), (1765, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");'), (1841, 1, u'+\tCCAssert(pChild != NULL, "");'), (1846, 1, u'+\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");'), (1856, 1, u'+    CCAssert(pChild != NULL, "");'), (1857, 1, u'+\tCCAssert(m_pChildren->containsObject(pChild), "");'), (2003, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");'), (2147, 1, u'+\tCCAssert(animationName, "");'), (2151, 1, u'+\tCCAssert(a, "");'), (2155, 1, u'+\tCCAssert(frame, "");'), (2181, 1, u'+\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");'), (2201, 1, u'+\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pArray != NULL && pDelegate != NULL);'), (3, 1, u'+\tCCAssert(pArray != NULL && pDelegate != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchDispatcher::findHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pArray != NULL && pDelegate != NULL);'), (3, 1, u'+\tCCAssert(pArray != NULL && pDelegate != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(pArray != NULL && pDelegate != NULL);'), (3, 1, u'+\tCCAssert(pArray != NULL && pDelegate != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(pArray != NULL && pDelegate != NULL);')]
===========================================
===========================================
Total add: 17
Total del: 0
Header: CCTouchDispatcher::findHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(pArray != NULL && pDelegate != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(pArray != NULL && pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addUIImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+\tCCAssert(image != NULL, "TextureCache: image MUST not be nill");')]
===========================================
Class: class CC_DLL CCImageHelper { 
Class: class BitmapDC { 
Class: class CC_DLL CCImageHelper { 
Class:  class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\t\t\tIwAssert( GAME, (((iY * iMaxLineWidth + iX) * 4 + 3) < memLimit) ) ;'), (3, 1, u'+\t\t\t\t\t\t\tIwAssert( GAME, (((iY * iMaxLineWidth + iX) * 4 + 3) < bitmapSize) ) ;')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\t\t\tIwAssert( GAME, (((iY * iMaxLineWidth + iX) * 4 + 3) < memLimit) ) ;'), (3, 1, u'+\t\t\t\t\t\t\tIwAssert( GAME, (((iY * iMaxLineWidth + iX) * 4 + 3) < bitmapSize) ) ;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\t\t\tIwAssert( GAME, (((iY * iMaxLineWidth + iX) * 4 + 3) < memLimit) ) ;'), (3, 1, u'+\t\t\t\t\t\t\tIwAssert( GAME, (((iY * iMaxLineWidth + iX) * 4 + 3) < bitmapSize) ) ;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1061, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1102, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1145, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1206, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1218, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 1, u'+        Assert(more >= 2, "more < 2");'), (1409, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1666, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));'), (109, 2, u'-\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));'), (181, 2, u'-\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (197, 2, u'-\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
Class:	class SoundFx { 	class SoundFx 
Class: class CCDictMaker : public CCSAXDelegator { 
Class: class CC_DLL CCImageHelper { 
Class: class BitmapDC { 
Class: class Callback : public IBindStatusCallback { class Callback : public IBindStatusCallback 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 2, u'-    Assert(strm->avail_out > 0, "bug2");'), (1061, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 2, u'-        Assert(cur_match < s->strstart, "no future");'), (1102, 2, u'-        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 2, u'-        Assert(*scan == *match, "match[2]?");'), (1145, 2, u'-        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 2, u'-    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 2, u'-    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 2, u'-    Assert(cur_match < s->strstart, "no future");'), (1206, 2, u'-    Assert(*scan == *match, "match[2]?");'), (1218, 2, u'-    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 2, u'-        Assert(more >= 2, "more < 2");'), (1409, 2, u'-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 2, u'-        Assert(s->block_start >= 0L, "block gone");'), (1666, 2, u'-    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
Class: class CC_DLL CCImageHelper { 
Class: class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCEGLView::sharedOpenGLView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tCCAssert(s_pInstance != NULL, "CCEGLView wasn\'t constructed yet");')]
===========================================
Class: class CCLock::Impl { 
Class:	class SoundFx { 	class SoundFx 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1061, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1102, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1145, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1206, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1218, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 1, u'+        Assert(more >= 2, "more < 2");'), (1409, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1666, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
Class: class CCDictMaker : public CCSAXDelegator { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tIwAssert(GAME, pFile);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: CCImage::_initWithPngData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tIwAssert(GAME, pFile);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tIwAssert(GAME, pFile);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(822, 1, u'+\t\tassert(rc == BPS_SUCCESS);')]
===========================================
Class: class BitmapDC { 
Class: class CCLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(159, 2, u'-\tCCAssert(m_pobOpenGLView, "opengl view should not be null");'), (278, 2, u'-\tCCAssert(pobOpenGLView, "opengl view should not be null");'), (497, 2, u'-\tCCAssert(pScene != NULL, "running scene should not be null");'), (498, 2, u'-\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (506, 2, u'-\tCCAssert(pScene != NULL, "the scene should not be null");'), (518, 2, u'-\tCCAssert(pScene, "the scene should not null");'), (528, 2, u'-\tCCAssert(m_pRunningScene != NULL, "running scene should not null");'), (996, 1, u'+\tCCAssert(m_pobOpenGLView, "opengl view should not be null");'), (1115, 1, u'+\tCCAssert(pobOpenGLView, "opengl view should not be null");'), (1334, 1, u'+\tCCAssert(pScene != NULL, "running scene should not be null");'), (1335, 1, u'+\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");'), (1343, 1, u'+\tCCAssert(pScene != NULL, "the scene should not be null");'), (1355, 1, u'+\tCCAssert(pScene, "the scene should not null");'), (1365, 1, u'+\tCCAssert(m_pRunningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion,"");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pobOpenGLView);'), (3, 1, u'+\tCCAssert(m_pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::setGLDefaultValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pobOpenGLView);'), (3, 1, u'+\tCCAssert(m_pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pobOpenGLView);'), (3, 1, u'+\tCCAssert(m_pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pobOpenGLView);'), (3, 1, u'+\tCCAssert(pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::setOpenGLView
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pobOpenGLView);'), (3, 1, u'+\tCCAssert(pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pobOpenGLView);'), (3, 1, u'+\tCCAssert(pobOpenGLView, "opengl view should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene != NULL);'), (3, 2, u'-\tassert(m_pRunningScene == NULL);'), (4, 1, u'+\tCCAssert(pScene != NULL, "running scene should not be null");'), (5, 1, u'+\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCDirector::runWithScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene != NULL);'), (3, 2, u'-\tassert(m_pRunningScene == NULL);'), (4, 1, u'+\tCCAssert(pScene != NULL, "running scene should not be null");'), (5, 1, u'+\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene != NULL);'), (3, 2, u'-\tassert(m_pRunningScene == NULL);'), (4, 1, u'+\tCCAssert(pScene != NULL, "running scene should not be null");'), (5, 1, u'+\tCCAssert(m_pRunningScene == NULL, "m_pRunningScene should be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene != NULL);'), (3, 1, u'+\tCCAssert(pScene != NULL, "the scene should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::replaceScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene != NULL);'), (3, 1, u'+\tCCAssert(pScene != NULL, "the scene should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene != NULL);'), (3, 1, u'+\tCCAssert(pScene != NULL, "the scene should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene);'), (3, 1, u'+\tCCAssert(pScene, "the scene should not null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::pushScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene);'), (3, 1, u'+\tCCAssert(pScene, "the scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pScene);'), (3, 1, u'+\tCCAssert(pScene, "the scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pRunningScene != NULL);'), (3, 1, u'+\tCCAssert(m_pRunningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::popScene
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pRunningScene != NULL);'), (3, 1, u'+\tCCAssert(m_pRunningScene != NULL, "running scene should not null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pRunningScene != NULL);'), (3, 1, u'+\tCCAssert(m_pRunningScene != NULL, "running scene should not null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSharedScheduler == NULL);'), (3, 1, u'+\tCCAssert(pSharedScheduler == NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::CCScheduler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSharedScheduler == NULL);'), (3, 1, u'+\tCCAssert(pSharedScheduler == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSharedScheduler == NULL);'), (3, 1, u'+\tCCAssert(pSharedScheduler == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pfnSelector);'), (3, 2, u'-\tassert(pTarget);'), (4, 1, u'+\tCCAssert(pfnSelector, "");'), (5, 1, u'+\tCCAssert(pTarget, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pfnSelector);'), (3, 2, u'-\tassert(pTarget);'), (4, 1, u'+\tCCAssert(pfnSelector, "");'), (5, 1, u'+\tCCAssert(pTarget, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pfnSelector);'), (3, 2, u'-\tassert(pTarget);'), (4, 1, u'+\tCCAssert(pfnSelector, "");'), (5, 1, u'+\tCCAssert(pTarget, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElement->paused == bPaused);'), (3, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElement->paused == bPaused);'), (3, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElement->paused == bPaused);'), (3, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(pszFuncName);'), (5, 1, u'+\tCCAssert(pszFuncName, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCScheduler::scheduleScriptFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(pszFuncName);'), (5, 1, u'+\tCCAssert(pszFuncName, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(pszFuncName);'), (5, 1, u'+\tCCAssert(pszFuncName, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElement->paused == bPaused);'), (3, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::scheduleScriptFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElement->paused == bPaused);'), (3, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElement->paused == bPaused);'), (3, 1, u'+\t\tCCAssert(pElement->paused == bPaused, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pHashElement->entry->markedForDeletion);'), (3, 1, u'+\t\tCCAssert(pHashElement->entry->markedForDeletion);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (3, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::resumeTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (3, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (3, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (3, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::pauseTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (3, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (3, 1, u'+\t\tCCAssert(pElementUpdate->entry != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 1, u'+\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpeed::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 1, u'+\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 1, u'+\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (3, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (3, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (3, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (3, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (3, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (3, 1, u'+\tCCAssert(pFollowedNode != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pAction != NULL);'), (3, 1, u'+\t\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pAction != NULL);'), (3, 1, u'+\t\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pAction != NULL);'), (3, 1, u'+\t\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(0);'), (3, 1, u'+\t\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(0);'), (3, 1, u'+\t\t\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(0);'), (3, 1, u'+\t\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(0);'), (3, 1, u'+\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(0);'), (3, 1, u'+\t\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(0);'), (3, 1, u'+\t\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionInterval::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionInterval::setAmplitudeRate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionInterval::getAmplitudeRate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pActionOne != NULL);'), (3, 2, u'-\tassert(pActionTwo != NULL);'), (4, 1, u'+\tCCAssert(pActionOne != NULL, "");'), (5, 1, u'+\tCCAssert(pActionTwo != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSequence::initOneTwo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pActionOne != NULL);'), (3, 2, u'-\tassert(pActionTwo != NULL);'), (4, 1, u'+\tCCAssert(pActionOne != NULL, "");'), (5, 1, u'+\tCCAssert(pActionTwo != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pActionOne != NULL);'), (3, 2, u'-\tassert(pActionTwo != NULL);'), (4, 1, u'+\tCCAssert(pActionOne != NULL, "");'), (5, 1, u'+\tCCAssert(pActionTwo != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 1, u'+\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCRepeatForever::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 1, u'+\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 1, u'+\tCCAssert(pAction != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction1 != NULL);'), (3, 2, u'-\tassert(pAction2 != NULL);'), (4, 1, u'+\tCCAssert(pAction1 != NULL, "");'), (5, 1, u'+\tCCAssert(pAction2 != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: initOneTwo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction1 != NULL);'), (3, 2, u'-\tassert(pAction2 != NULL);'), (4, 1, u'+\tCCAssert(pAction1 != NULL, "");'), (5, 1, u'+\tCCAssert(pAction2 != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction1 != NULL);'), (3, 2, u'-\tassert(pAction2 != NULL);'), (4, 1, u'+\tCCAssert(pAction1 != NULL, "");'), (5, 1, u'+\tCCAssert(pAction2 != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pAction != m_pOther);'), (4, 1, u'+\tCCAssert(pAction != NULL, "");'), (5, 1, u'+\tCCAssert(pAction != m_pOther, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCReverseTime::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pAction != m_pOther);'), (4, 1, u'+\tCCAssert(pAction != NULL, "");'), (5, 1, u'+\tCCAssert(pAction != m_pOther, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pAction != m_pOther);'), (4, 1, u'+\tCCAssert(pAction != NULL, "");'), (5, 1, u'+\tCCAssert(pAction != m_pOther, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation != NULL);'), (3, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAnimate::initWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation != NULL);'), (3, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation != NULL);'), (3, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation);'), (3, 1, u'+\tCCAssert(pAnimation, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAnimate::initWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation);'), (3, 1, u'+\tCCAssert(pAnimation, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation);'), (3, 1, u'+\tCCAssert(pAnimation, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation != NULL);'), (3, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAnimate::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation != NULL);'), (3, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAnimation != NULL);'), (3, 1, u'+\tCCAssert(pAnimation != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(gSharedManager == NULL);'), (3, 1, u'+\tCCAssert(gSharedManager == NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionManager::CCActionManager
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(gSharedManager == NULL);'), (3, 1, u'+\tCCAssert(gSharedManager == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(gSharedManager == NULL);'), (3, 1, u'+\tCCAssert(gSharedManager == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+\tCCAssert(pAction != NULL, "");'), (5, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+\tCCAssert(pAction != NULL, "");'), (5, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+\tCCAssert(pAction != NULL, "");'), (5, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (3, 1, u'+ \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (3, 1, u'+ \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (3, 1, u'+ \tCCAssert(! ccArrayContainsObject(pElement->actions, pAction), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert((int)tag != kCCActionTagInvalid);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");'), (5, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert((int)tag != kCCActionTagInvalid);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");'), (5, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert((int)tag != kCCActionTagInvalid);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");'), (5, 1, u'+\tCCAssert(pTarget != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert((int)tag != kCCActionTagInvalid);'), (3, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionManager::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert((int)tag != kCCActionTagInvalid);'), (3, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert((int)tag != kCCActionTagInvalid);'), (3, 1, u'+    CCAssert((int)tag != kCCActionTagInvalid, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tile != NULL);'), (3, 1, u'+\tCCAssert(tile != NULL, "title should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAtlasNode::initWithTileFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tile != NULL);'), (3, 1, u'+\tCCAssert(tile != NULL, "title should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tile != NULL);'), (3, 1, u'+\tCCAssert(tile != NULL, "title should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pObject->m_uReference > 1);'), (3, 1, u'+\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pObject->m_uReference > 1);'), (3, 1, u'+\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pObject->m_uReference > 1);'), (3, 1, u'+\tCCAssert(pObject->m_uReference > 1, "reference count should greager than 1");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);'), (3, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCPoolManager::removeObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);'), (3, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);'), (3, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(m_pCurReleasePool);'), (7, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCPoolManager::getCurReleasePool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(m_pCurReleasePool);'), (7, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(m_pCurReleasePool);'), (7, 1, u'+\tCCAssert(m_pCurReleasePool, "current auto release pool should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (4, 1, u'+\tCCAssert(0, "not implement");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCCopying::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (4, 1, u'+\tCCAssert(0, "not implement");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (4, 1, u'+\tCCAssert(0, "not implement");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uReference > 0);'), (3, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCObject::release
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uReference > 0);'), (3, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uReference > 0);'), (3, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uReference > 0);'), (3, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCObject::retain
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uReference > 0);'), (3, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uReference > 0);'), (3, 1, u'+\tCCAssert(m_uReference > 0, "reference count should greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (3, 1, u'+\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (3, 1, u'+\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (3, 1, u'+\t\tCCAssert(FNTfile != NULL && strlen(FNTfile)!=0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(theString != NULL);'), (3, 1, u'+\t\tCCAssert(theString != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(theString != NULL);'), (3, 1, u'+\t\tCCAssert(theString != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(theString != NULL);'), (3, 1, u'+\t\tCCAssert(theString != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(label != NULL);'), (3, 1, u'+\t\tCCAssert(label != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pLayers);'), (3, 1, u'+\tCCAssert(m_pLayers, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLayerMultiplex::addLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pLayers);'), (3, 1, u'+\tCCAssert(m_pLayers, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pLayers);'), (3, 1, u'+\tCCAssert(m_pLayers, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(row < rows.size());'), (3, 1, u'+                    CCAssert(row < rows.size(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(row < rows.size());'), (3, 1, u'+                    CCAssert(row < rows.size(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(row < rows.size());'), (3, 1, u'+                    CCAssert(row < rows.size(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(rowColumns);'), (3, 1, u'+\t\t\t\t    CCAssert(rowColumns, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(rowColumns);'), (3, 1, u'+\t\t\t\t    CCAssert(rowColumns, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(rowColumns);'), (3, 1, u'+\t\t\t\t    CCAssert(rowColumns, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(! columnsOccupied);'), (3, 1, u'+\t\tCCAssert(! columnsOccupied, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(! columnsOccupied);'), (3, 1, u'+\t\tCCAssert(! columnsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(! columnsOccupied);'), (3, 1, u'+\t\tCCAssert(! columnsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(column < columns.size());'), (3, 1, u'+\t\t\t\t    CCAssert(column < columns.size(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(column < columns.size());'), (3, 1, u'+\t\t\t\t    CCAssert(column < columns.size(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(column < columns.size());'), (3, 1, u'+\t\t\t\t    CCAssert(column < columns.size(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(columnRows);'), (3, 1, u'+\t\t\t\t    CCAssert(columnRows, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(columnRows);'), (3, 1, u'+\t\t\t\t    CCAssert(columnRows, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t    assert(columnRows);'), (3, 1, u'+\t\t\t\t    CCAssert(columnRows, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(! rowsOccupied);'), (3, 1, u'+\t\tCCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(! rowsOccupied);'), (3, 1, u'+\t\tCCAssert(! rowsOccupied, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(! rowsOccupied);'), (3, 1, u'+\t\tCCAssert(! rowsOccupied, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(normalSprite != NULL);'), (3, 1, u'+\t\tCCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(normalSprite != NULL);'), (3, 1, u'+\t\tCCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(normalSprite != NULL);'), (3, 1, u'+\t\tCCAssert(normalSprite != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pVertexData);'), (3, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCProgressTimer::updateRadial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pVertexData);'), (3, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pVertexData);'), (3, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pVertexData);'), (3, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCProgressTimer::updateBar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pVertexData);'), (3, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pVertexData);'), (3, 1, u'+\t\tCCAssert(m_pVertexData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(textureData);'), (3, 1, u'+\t\t\t\tCCAssert(textureData, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(textureData);'), (3, 1, u'+\t\t\t\tCCAssert(textureData, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(textureData);'), (3, 1, u'+\t\t\t\tCCAssert(textureData, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::spriteWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);'), (3, 1, u'+\tCCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+\tCCAssert(pTexture != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+\tCCAssert(pszFilename != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSpriteFrame != NULL);'), (3, 1, u'+\tCCAssert(pSpriteFrame != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSpriteFrame != NULL);'), (3, 1, u'+\tCCAssert(pSpriteFrame != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSpriteFrame != NULL);'), (3, 1, u'+\tCCAssert(pSpriteFrame != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (3, 1, u'+\tCCAssert(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (3, 1, u'+\tCCAssert(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (3, 1, u'+\tCCAssert(pszSpriteFrameName != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pImage != NULL);'), (3, 1, u'+\tCCAssert(pImage != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::initWithCGImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pImage != NULL);'), (3, 1, u'+\tCCAssert(pImage != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pImage != NULL);'), (3, 1, u'+\tCCAssert(pImage != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(m_bUsesBatchNode, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(m_bUsesBatchNode, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(m_bUsesBatchNode, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pChild != NULL);'), (3, 1, u'+\tCCAssert(pChild != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pChild != NULL);'), (3, 1, u'+\tCCAssert(pChild != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pChild != NULL);'), (3, 1, u'+\tCCAssert(pChild != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (3, 1, u'+\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (3, 1, u'+\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (3, 1, u'+\t\tCCAssert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pChild != NULL);'), (3, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (4, 1, u'+    CCAssert(pChild != NULL, "");'), (5, 1, u'+\tCCAssert(m_pChildren->containsObject(pChild), "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pChild != NULL);'), (3, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (4, 1, u'+    CCAssert(pChild != NULL, "");'), (5, 1, u'+\tCCAssert(m_pChildren->containsObject(pChild), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pChild != NULL);'), (3, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (4, 1, u'+    CCAssert(pChild != NULL, "");'), (5, 1, u'+\tCCAssert(m_pChildren->containsObject(pChild), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setIsRelativeAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(animationName);'), (3, 1, u'+\tCCAssert(animationName, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(animationName);'), (3, 1, u'+\tCCAssert(animationName, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(animationName);'), (3, 1, u'+\tCCAssert(animationName, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(a);'), (3, 1, u'+\tCCAssert(a, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(a);'), (3, 1, u'+\tCCAssert(a, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(a);'), (3, 1, u'+\tCCAssert(a, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(frame);'), (3, 1, u'+\tCCAssert(frame, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(frame);'), (3, 1, u'+\tCCAssert(frame, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(frame);'), (3, 1, u'+\tCCAssert(frame, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert (! m_bUsesBatchNode);'), (4, 1, u'+\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCSprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert (! m_bUsesBatchNode);'), (4, 1, u'+\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert (! m_bUsesBatchNode);'), (4, 1, u'+\tCCAssert (! m_bUsesBatchNode, "CCSprite: updateBlendFunc doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (3, 1, u'+\tCCAssert(! m_bUsesBatchNode, "setTexture doesn\'t work when the sprite is rendered using a CCSpriteSheet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(child != NULL);'), (3, 1, u'+\t\tCCAssert(child != NULL, "child should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(child != NULL);'), (3, 1, u'+\t\tCCAssert(child != NULL, "child should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(child != NULL);'), (3, 1, u'+\t\tCCAssert(child != NULL, "child should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (3, 1, u'+\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (3, 1, u'+\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (3, 1, u'+\t\tCCAssert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(child != NULL);'), (3, 2, u'-\t\tassert(m_pChildren->containsObject(child));'), (4, 1, u'+\t\tCCAssert(child != NULL, "the child should not be null");'), (5, 1, u'+\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(child != NULL);'), (3, 2, u'-\t\tassert(m_pChildren->containsObject(child));'), (4, 1, u'+\t\tCCAssert(child != NULL, "the child should not be null");'), (5, 1, u'+\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(child != NULL);'), (3, 2, u'-\t\tassert(m_pChildren->containsObject(child));'), (4, 1, u'+\t\tCCAssert(child != NULL, "the child should not be null");'), (5, 1, u'+\t\tCCAssert(m_pChildren->containsObject(child), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pChildren->containsObject(pSprite));'), (3, 1, u'+\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pChildren->containsObject(pSprite));'), (3, 1, u'+\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(m_pChildren->containsObject(pSprite));'), (3, 1, u'+\t\tCCAssert(m_pChildren->containsObject(pSprite), "sprite batch node should contain the child");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(false);'), (3, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(false);'), (3, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(false);'), (3, 1, u'+\t\t\tCCAssert(false, "Not enough memory to resize the atla");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "should not run here");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "should not run here");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert(0);'), (3, 1, u'+\t\tCCAssert(0, "should not run here");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(format >=0 && format <= 3);'), (3, 1, u'+\tCCAssert(format >=0 && format <= 3, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(format >=0 && format <= 3);'), (3, 1, u'+\tCCAssert(format >=0 && format <= 3, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(format >=0 && format <= 3);'), (3, 1, u'+\tCCAssert(format >=0 && format <= 3, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(textureFileName);'), (3, 1, u'+\tCCAssert(textureFileName, "texture name should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(textureFileName);'), (3, 1, u'+\tCCAssert(textureFileName, "texture name should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(textureFileName);'), (3, 1, u'+\tCCAssert(textureFileName, "texture name should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert( out );'), (3, 2, u'-\t\tassert( &*out );'), (4, 1, u'+\t\tCCAssert(out, "");'), (5, 1, u'+\t\tCCAssert(&*out, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert( out );'), (3, 2, u'-\t\tassert( &*out );'), (4, 1, u'+\t\tCCAssert(out, "");'), (5, 1, u'+\t\tCCAssert(&*out, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tassert( out );'), (3, 2, u'-\t\tassert( &*out );'), (4, 1, u'+\t\tCCAssert(out, "");'), (5, 1, u'+\t\tCCAssert(&*out, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\tassert( out );'), (3, 2, u'- \t\tassert( &*out );'), (4, 1, u'+ \t\tCCAssert(out, "");'), (5, 1, u'+ \t\tCCAssert(&*out, "");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\tassert( out );'), (3, 2, u'- \t\tassert( &*out );'), (4, 1, u'+ \t\tCCAssert(out, "");'), (5, 1, u'+ \t\tCCAssert(&*out, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\tassert( out );'), (3, 2, u'- \t\tassert( &*out );'), (4, 1, u'+ \t\tCCAssert(out, "");'), (5, 1, u'+ \t\tCCAssert(&*out, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(false);'), (3, 1, u'+\t\t\tCCAssert(false, "illegal pixel format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::bitsPerPixelForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(false);'), (3, 1, u'+\t\t\tCCAssert(false, "illegal pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert(false);'), (3, 1, u'+\t\t\tCCAssert(false, "illegal pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(texture != NULL);'), (3, 1, u'+\tCCAssert(texture != NULL, "texture should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(texture != NULL);'), (3, 1, u'+\tCCAssert(texture != NULL, "texture should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(texture != NULL);'), (3, 1, u'+\tCCAssert(texture != NULL, "texture should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pQuads == NULL && m_pIndices == NULL);'), (3, 1, u'+\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pQuads == NULL && m_pIndices == NULL);'), (3, 1, u'+\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pQuads == NULL && m_pIndices == NULL);'), (3, 1, u'+\tCCAssert(m_pQuads == NULL && m_pIndices == NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(inflatedLen == sizeHint);'), (3, 1, u'+\t\t\t\tCCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(inflatedLen == sizeHint);'), (3, 1, u'+\t\t\t\tCCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(inflatedLen == sizeHint);'), (3, 1, u'+\t\t\t\tCCAssert(inflatedLen == sizeHint, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\t    assert(0);'), (3, 1, u'+ \t\t\t    CCAssert(0, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchDispatcher::forceAddHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\t    assert(0);'), (3, 1, u'+ \t\t\t    CCAssert(0, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\t    assert(0);'), (3, 1, u'+ \t\t\t    CCAssert(0, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pDelegate != NULL);'), (3, 1, u'+    CCAssert(pDelegate != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pDelegate != NULL);'), (3, 1, u'+    CCAssert(pDelegate != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(pDelegate != NULL);'), (3, 1, u'+    CCAssert(pDelegate != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(handler != NULL);'), (3, 1, u'+\tCCAssert(handler != NULL, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(handler != NULL);'), (3, 1, u'+\tCCAssert(handler != NULL, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(handler != NULL);'), (3, 1, u'+\tCCAssert(handler != NULL, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);'), (3, 1, u'+\tCCAssert(uIndex >= 0 && uIndex < 4, "");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchDispatcher::touches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);'), (3, 1, u'+\tCCAssert(uIndex >= 0 && uIndex < 4, "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);'), (3, 1, u'+\tCCAssert(uIndex >= 0 && uIndex < 4, "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pDelegate != NULL);'), (3, 1, u'+\tCCAssert(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchHandler::initWithDelegate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pDelegate != NULL);'), (3, 1, u'+\tCCAssert(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pDelegate != NULL);'), (3, 1, u'+\tCCAssert(pDelegate != NULL, "touch delegate should not be null");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (5, 2, u'-    CC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (6, 2, u'-    CC_ASSERT((len = strlen(pszFileName)) > 0 && strlen(pszMode) > 0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (5, 2, u'-    CC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (6, 2, u'-    CC_ASSERT((len = strlen(pszFileName)) > 0 && strlen(pszMode) > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tCC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (5, 2, u'-    CC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (6, 2, u'-    CC_ASSERT((len = strlen(pszFileName)) > 0 && strlen(pszMode) > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(count >= 2);'), (3, 1, u'+\tb2Assert(count >= 3);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: ComputeCentroid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(count >= 2);'), (3, 1, u'+\tb2Assert(count >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(count >= 2);'), (3, 1, u'+\tb2Assert(count >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(2 <= count && count <= b2_maxPolygonVertices);'), (3, 1, u'+\tb2Assert(3 <= count && count <= b2_maxPolygonVertices);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: b2PolygonShape::Set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(2 <= count && count <= b2_maxPolygonVertices);'), (3, 1, u'+\tb2Assert(3 <= count && count <= b2_maxPolygonVertices);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(2 <= count && count <= b2_maxPolygonVertices);'), (3, 1, u'+\tb2Assert(3 <= count && count <= b2_maxPolygonVertices);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\tb2Assert(s > 0.0f);'), (8, 1, u'+\t\t\tb2Assert(s > 0.0f && "ERROR: Please ensure your polygon is convex and has a CCW winding order");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: b2PolygonShape::Set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\tb2Assert(s > 0.0f);'), (8, 1, u'+\t\t\tb2Assert(s > 0.0f && "ERROR: Please ensure your polygon is convex and has a CCW winding order");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\tb2Assert(s > 0.0f);'), (8, 1, u'+\t\t\tb2Assert(s > 0.0f && "ERROR: Please ensure your polygon is convex and has a CCW winding order");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: b2PolygonShape::RayCast
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: b2PolygonShape::RayCast
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(0.0f <= lower && lower <= input.maxFraction);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(m_vertexCount >= 2);'), (12, 1, u'+\tb2Assert(m_vertexCount >= 3);')]
===========================================
===========================================
Total add: 1
Total del: 10
Header: b2PolygonShape::ComputeMass
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(m_vertexCount >= 2);'), (12, 1, u'+\tb2Assert(m_vertexCount >= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(m_vertexCount >= 2);'), (12, 1, u'+\tb2Assert(m_vertexCount >= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= edge1 && edge1 < count1);'), (3, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: b2EdgeSeparation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= edge1 && edge1 < count1);'), (3, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= edge1 && edge1 < count1);'), (3, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= edge1 && edge1 < count1);'), (3, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2FindIncidentEdge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= edge1 && edge1 < count1);'), (3, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= edge1 && edge1 < count1);'), (3, 1, u'+\tb2Assert(0 <= edge1 && edge1 < poly1->m_vertexCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tb2Assert(0 <= index && index < chain->m_count);')]
===========================================
===========================================
Total add: 30
Total del: 0
Header: b2DistanceProxy::Set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tb2Assert(0 <= index && index < chain->m_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tb2Assert(0 <= index && index < chain->m_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+\t\tb2Assert(child1 != b2_nullNode);'), (25, 1, u'+\t\tb2Assert(child2 != b2_nullNode);')]
===========================================
===========================================
Total add: 26
Total del: 5
Header: b2DynamicTree::InsertLeaf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+\t\tb2Assert(child1 != b2_nullNode);'), (25, 1, u'+\t\tb2Assert(child2 != b2_nullNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(24, 1, u'+\t\tb2Assert(child1 != b2_nullNode);'), (25, 1, u'+\t\tb2Assert(child2 != b2_nullNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: b2DynamicTree::ComputeHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: b2DynamicTree::ComputeHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 <= nodeId && nodeId < m_nodeCapacity);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tb2Assert(m_nodes[index].parent == b2_nullNode);'), (26, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (27, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (28, 1, u'+\t\tb2Assert(node->height == 0);'), (32, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (33, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (35, 1, u'+\tb2Assert(m_nodes[child1].parent == index);'), (36, 1, u'+\tb2Assert(m_nodes[child2].parent == index);'), (56, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (57, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (58, 1, u'+\t\tb2Assert(node->height == 0);'), (62, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (63, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (69, 1, u'+\tb2Assert(node->height == height);'), (74, 1, u'+\tb2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (75, 1, u'+\tb2Assert(aabb.upperBound == node->aabb.upperBound);'), (90, 1, u'+\t\tb2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (95, 1, u'+\tb2Assert(GetHeight() == ComputeHeight());'), (97, 1, u'+\tb2Assert(m_nodeCount + freeCount == m_nodeCapacity);'), (111, 1, u'+\t\tb2Assert(node->IsLeaf() == false);')]
===========================================
===========================================
Total add: 193
Total del: 1
Header: b2DynamicTree::ComputeHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tb2Assert(m_nodes[index].parent == b2_nullNode);'), (26, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (27, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (28, 1, u'+\t\tb2Assert(node->height == 0);'), (32, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (33, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (35, 1, u'+\tb2Assert(m_nodes[child1].parent == index);'), (36, 1, u'+\tb2Assert(m_nodes[child2].parent == index);'), (56, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (57, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (58, 1, u'+\t\tb2Assert(node->height == 0);'), (62, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (63, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (69, 1, u'+\tb2Assert(node->height == height);'), (74, 1, u'+\tb2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (75, 1, u'+\tb2Assert(aabb.upperBound == node->aabb.upperBound);'), (90, 1, u'+\t\tb2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (95, 1, u'+\tb2Assert(GetHeight() == ComputeHeight());'), (97, 1, u'+\tb2Assert(m_nodeCount + freeCount == m_nodeCapacity);'), (111, 1, u'+\t\tb2Assert(node->IsLeaf() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tb2Assert(m_nodes[index].parent == b2_nullNode);'), (26, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (27, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (28, 1, u'+\t\tb2Assert(node->height == 0);'), (32, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (33, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (35, 1, u'+\tb2Assert(m_nodes[child1].parent == index);'), (36, 1, u'+\tb2Assert(m_nodes[child2].parent == index);'), (56, 1, u'+\t\tb2Assert(child1 == b2_nullNode);'), (57, 1, u'+\t\tb2Assert(child2 == b2_nullNode);'), (58, 1, u'+\t\tb2Assert(node->height == 0);'), (62, 1, u'+\tb2Assert(0 <= child1 && child1 < m_nodeCapacity);'), (63, 1, u'+\tb2Assert(0 <= child2 && child2 < m_nodeCapacity);'), (69, 1, u'+\tb2Assert(node->height == height);'), (74, 1, u'+\tb2Assert(aabb.lowerBound == node->aabb.lowerBound);'), (75, 1, u'+\tb2Assert(aabb.upperBound == node->aabb.upperBound);'), (90, 1, u'+\t\tb2Assert(0 <= freeIndex && freeIndex < m_nodeCapacity);'), (95, 1, u'+\tb2Assert(GetHeight() == ComputeHeight());'), (97, 1, u'+\tb2Assert(m_nodeCount + freeCount == m_nodeCapacity);'), (111, 1, u'+\t\tb2Assert(node->IsLeaf() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 < size && size <= b2_maxBlockSize);'), (3, 1, u'+\tb2Assert(0 < size);')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: b2BlockAllocator::Allocate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 < size && size <= b2_maxBlockSize);'), (3, 1, u'+\tb2Assert(0 < size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 < size && size <= b2_maxBlockSize);'), (3, 1, u'+\tb2Assert(0 < size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 < size && size <= b2_maxBlockSize);'), (3, 1, u'+\tb2Assert(0 < size);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: b2BlockAllocator::Free
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 < size && size <= b2_maxBlockSize);'), (3, 1, u'+\tb2Assert(0 < size);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(0 < size && size <= b2_maxBlockSize);'), (3, 1, u'+\tb2Assert(0 < size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < type1 && type1 < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < type2 && type2 < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2Contact::AddType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < type1 && type1 < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < type2 && type2 < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < type1 && type1 < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < type2 && type2 < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < type1 && type1 < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < type2 && type2 < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2Contact::Create
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < type1 && type1 < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < type2 && type2 < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < type1 && type1 < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < type2 && type2 < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= type1 && type1 < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= type2 && type2 < b2Shape::e_typeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < typeA && typeB < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < typeA && typeB < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: b2Contact::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < typeA && typeB < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < typeA && typeB < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2Shape::e_unknown < typeA && typeB < b2Shape::e_typeCount);'), (3, 2, u'-\tb2Assert(b2Shape::e_unknown < typeA && typeB < b2Shape::e_typeCount);'), (4, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);'), (5, 1, u'+\tb2Assert(0 <= typeA && typeB < b2Shape::e_typeCount);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tb2Assert(pointCount > 0);')]
===========================================
===========================================
Total add: 96
Total del: 6
Header: b2ContactSolver::b2ContactSolver
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tb2Assert(pointCount > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tb2Assert(pointCount > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-\t\t\tb2Assert(kNormal > b2_epsilon);'), (72, 2, u'-\t\t\tb2Assert(kTangent > b2_epsilon);')]
===========================================
===========================================
Total add: 26
Total del: 42
Header: b2ContactSolver::b2ContactSolver
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-\t\t\tb2Assert(kNormal > b2_epsilon);'), (72, 2, u'-\t\t\tb2Assert(kTangent > b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-\t\t\tb2Assert(kNormal > b2_epsilon);'), (72, 2, u'-\t\t\tb2Assert(kTangent > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tb2Assert(c->pointCount == 1 || c->pointCount == 2);'), (38, 1, u'+\t\tb2Assert(pointCount == 1 || pointCount == 2);')]
===========================================
===========================================
Total add: 24
Total del: 19
Header: b2ContactSolver::SolveVelocityConstraints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tb2Assert(c->pointCount == 1 || c->pointCount == 2);'), (38, 1, u'+\t\tb2Assert(pointCount == 1 || pointCount == 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-\t\tb2Assert(c->pointCount == 1 || c->pointCount == 2);'), (38, 1, u'+\t\tb2Assert(pointCount == 1 || pointCount == 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tb2Assert(cc->pointCount > 0);'), (6, 1, u'+\t\tb2Assert(pc->pointCount > 0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: struct b2PositionSolverManifold
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tb2Assert(cc->pointCount > 0);'), (6, 1, u'+\t\tb2Assert(pc->pointCount > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tb2Assert(cc->pointCount > 0);'), (6, 1, u'+\t\tb2Assert(pc->pointCount > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tb2Assert(type1 == e_revoluteJoint || type1 == e_prismaticJoint);'), (8, 2, u'-\tb2Assert(type2 == e_revoluteJoint || type2 == e_prismaticJoint);'), (9, 2, u'-\tb2Assert(def->joint1->GetBodyA()->GetType() == b2_staticBody);'), (10, 2, u'-\tb2Assert(def->joint2->GetBodyA()->GetType() == b2_staticBody);'), (18, 1, u'+\tb2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (19, 1, u'+\tb2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);')]
===========================================
===========================================
Total add: 26
Total del: 18
Header: b2GearJoint::b2GearJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tb2Assert(type1 == e_revoluteJoint || type1 == e_prismaticJoint);'), (8, 2, u'-\tb2Assert(type2 == e_revoluteJoint || type2 == e_prismaticJoint);'), (9, 2, u'-\tb2Assert(def->joint1->GetBodyA()->GetType() == b2_staticBody);'), (10, 2, u'-\tb2Assert(def->joint2->GetBodyA()->GetType() == b2_staticBody);'), (18, 1, u'+\tb2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (19, 1, u'+\tb2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tb2Assert(type1 == e_revoluteJoint || type1 == e_prismaticJoint);'), (8, 2, u'-\tb2Assert(type2 == e_revoluteJoint || type2 == e_prismaticJoint);'), (9, 2, u'-\tb2Assert(def->joint1->GetBodyA()->GetType() == b2_staticBody);'), (10, 2, u'-\tb2Assert(def->joint2->GetBodyA()->GetType() == b2_staticBody);'), (18, 1, u'+\tb2Assert(m_typeA == e_revoluteJoint || m_typeA == e_prismaticJoint);'), (19, 1, u'+\tb2Assert(m_typeB == e_revoluteJoint || m_typeB == e_prismaticJoint);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(d + step.dt * k > b2_epsilon);'), (5, 1, u'+\tb2Assert(d + h * k > b2_epsilon);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: b2MouseJoint::InitVelocityConstraints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(d + step.dt * k > b2_epsilon);'), (5, 1, u'+\tb2Assert(d + h * k > b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(d + step.dt * k > b2_epsilon);'), (5, 1, u'+\tb2Assert(d + h * k > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-\tb2Assert(m_limitMass1 > b2_epsilon);'), (54, 2, u'-\tb2Assert(m_limitMass2 > b2_epsilon);'), (55, 2, u'-\tb2Assert(m_pulleyMass > b2_epsilon);')]
===========================================
===========================================
Total add: 19
Total del: 51
Header: b2PulleyJoint::InitVelocityConstraints
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-\tb2Assert(m_limitMass1 > b2_epsilon);'), (54, 2, u'-\tb2Assert(m_limitMass2 > b2_epsilon);'), (55, 2, u'-\tb2Assert(m_pulleyMass > b2_epsilon);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(53, 2, u'-\tb2Assert(m_limitMass1 > b2_epsilon);'), (54, 2, u'-\tb2Assert(m_limitMass2 > b2_epsilon);'), (55, 2, u'-\tb2Assert(m_pulleyMass > b2_epsilon);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tb2Assert(b1->m_invI > 0.0f || b2->m_invI > 0.0f);')]
===========================================
===========================================
Total add: 24
Total del: 14
Header: b2RevoluteJoint::b2RevoluteJoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tb2Assert(b1->m_invI > 0.0f || b2->m_invI > 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tb2Assert(b1->m_invI > 0.0f || b2->m_invI > 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2IsValid(bd->inertiaScale) && bd->inertiaScale >= 0.0f);')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: b2Body::b2Body
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2IsValid(bd->inertiaScale) && bd->inertiaScale >= 0.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tb2Assert(b2IsValid(bd->inertiaScale) && bd->inertiaScale >= 0.0f);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: b2Body::SetType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tb2Assert(fixture->m_proxyId != b2BroadPhase::e_nullProxy);'), (8, 2, u'-\t\tb2Assert(fixture->m_proxyId == b2BroadPhase::e_nullProxy);')]
===========================================
===========================================
Total add: 1
Total del: 6
Header: b2Body::DestroyFixture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tb2Assert(fixture->m_proxyId != b2BroadPhase::e_nullProxy);'), (8, 2, u'-\t\tb2Assert(fixture->m_proxyId == b2BroadPhase::e_nullProxy);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tb2Assert(fixture->m_proxyId != b2BroadPhase::e_nullProxy);'), (8, 2, u'-\t\tb2Assert(fixture->m_proxyId == b2BroadPhase::e_nullProxy);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: b2Body::SetActive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tb2Assert(m_world->IsLocked() == false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tb2Assert(m_shape == NULL);'), (5, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);')]
===========================================
===========================================
Total add: 0
Total del: 6
Header: b2Fixture::b2Fixture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tb2Assert(m_shape == NULL);'), (5, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tb2Assert(m_shape == NULL);'), (5, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);'), (5, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: b2Fixture::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);'), (5, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);'), (5, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);'), (6, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
Total add: 20
Total del: 11
Header: b2Fixture::Destroy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);'), (6, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tb2Assert(m_proxyId == b2BroadPhase::e_nullProxy);'), (6, 1, u'+\tb2Assert(m_proxyCount == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+\t\t\t\tb2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (105, 1, u'+\t\t\t\tb2Assert(alpha0 < 1.0f);')]
===========================================
===========================================
Total add: 104
Total del: 83
Header: b2World::SolveTOI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+\t\t\t\tb2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (105, 1, u'+\t\t\t\tb2Assert(alpha0 < 1.0f);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+\t\t\t\tb2Assert(typeA == b2_dynamicBody || typeB == b2_dynamicBody);'), (105, 1, u'+\t\t\t\tb2Assert(alpha0 < 1.0f);')]
===========================================
Class: class QueryCallback : public b2QueryCallback 	{ 	
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (4, 1, u'+    CC_ASSERT((len = strlen(pszFileName)) > 0 && strlen(pszMode) > 0);')]
===========================================
===========================================
Total add: 11
Total del: 4
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (4, 1, u'+    CC_ASSERT((len = strlen(pszFileName)) > 0 && strlen(pszMode) > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    CC_ASSERT(pszFileName != NULL && pszMode != NULL);'), (4, 1, u'+    CC_ASSERT((len = strlen(pszFileName)) > 0 && strlen(pszMode) > 0);')]
===========================================
Class:class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(target != NULL, "TextureCache: target MUST not be NULL");'), (3, 1, u'+    CCAssert(selector != NULL, "TextureCache: selector MUST not be NULL");')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: CCTextureCache::addImageAsync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(target != NULL, "TextureCache: target MUST not be NULL");'), (3, 1, u'+    CCAssert(selector != NULL, "TextureCache: selector MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    CCAssert(target != NULL, "TextureCache: target MUST not be NULL");'), (3, 1, u'+    CCAssert(selector != NULL, "TextureCache: selector MUST not be NULL");')]
===========================================
Class: class RunnableProxy : 		public Object,   		public virtual IRunnable { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(0);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCCopying::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(0);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: CCCopying::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(159, 2, u'-\tassert(m_pobOpenGLView);'), (278, 2, u'-\tassert(pobOpenGLView);'), (497, 2, u'-\tassert(pScene != NULL);'), (498, 2, u'-\tassert(m_pRunningScene == NULL);'), (506, 2, u'-\tassert(pScene != NULL);'), (518, 2, u'-\tassert(pScene);'), (528, 2, u'-\tassert(m_pRunningScene != NULL);'), (1072, 1, u'+    assert(m_pobOpenGLView);'), (1191, 1, u'+    assert(pobOpenGLView);'), (1410, 1, u'+    assert(pScene != NULL);'), (1411, 1, u'+    assert(m_pRunningScene == NULL);'), (1419, 1, u'+    assert(pScene != NULL);'), (1431, 1, u'+    assert(pScene);'), (1441, 1, u'+    assert(m_pRunningScene != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(192, 2, u'-\tassert(pSharedScheduler == NULL);'), (248, 2, u'-\tassert(pfnSelector);'), (249, 2, u'-\tassert(pTarget);'), (269, 2, u'-\t\tassert(pElement->paused == bPaused);'), (301, 2, u'-\tassert(pszFuncName);'), (318, 2, u'-\t\tassert(pElement->paused == bPaused);'), (480, 2, u'-\t\tassert(pHashElement->entry->markedForDeletion);'), (613, 2, u'-\tassert(pTarget != NULL);'), (628, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (635, 2, u'-\tassert(pTarget != NULL);'), (650, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (657, 2, u'-    CCAssert( pTarget != NULL, "target must be non nil" );'), (997, 1, u'+    assert(pSharedScheduler == NULL);'), (1053, 1, u'+    assert(pfnSelector);'), (1054, 1, u'+    assert(pTarget);'), (1074, 1, u'+        assert(pElement->paused == bPaused);'), (1286, 1, u'+        assert(pHashElement->entry->markedForDeletion);'), (1420, 1, u'+    assert(pTarget != NULL);'), (1435, 1, u'+        assert(pElementUpdate->entry != NULL);'), (1442, 1, u'+    assert(pTarget != NULL);'), (1457, 1, u'+        assert(pElementUpdate->entry != NULL);'), (1464, 1, u'+    CCAssert( pTarget != NULL, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (7, 1, u'+    assert(pAction != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCSpeed::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (7, 1, u'+    assert(pAction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (7, 1, u'+    assert(pAction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (12, 1, u'+    assert(pFollowedNode != NULL);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (12, 1, u'+    assert(pFollowedNode != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (12, 1, u'+    assert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (35, 1, u'+    assert(pFollowedNode != NULL);')]
===========================================
===========================================
Total add: 33
Total del: 33
Header: CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (35, 1, u'+    assert(pFollowedNode != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pFollowedNode != NULL);'), (35, 1, u'+    assert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-\t\t\t\tassert(0);'), (99, 2, u'-\t\tassert(0);'), (495, 1, u'+            assert(0);'), (513, 1, u'+    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 2, u'-\t\t\tassert(0);'), (1018, 1, u'+        assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(79, 2, u'-\t\tassert(0);'), (120, 2, u'-\tassert(0);'), (126, 2, u'-\tassert(0);'), (201, 2, u'-\tassert(pActionOne != NULL);'), (202, 2, u'-\tassert(pActionTwo != NULL);'), (462, 2, u'-\tassert(pAction != NULL);'), (566, 2, u'-\tassert(pAction1 != NULL);'), (567, 2, u'-\tassert(pAction2 != NULL);'), (1944, 2, u'-\tassert(pAction != NULL);'), (1945, 2, u'-\tassert(pAction != m_pOther);'), (2033, 2, u'-\tassert(pAnimation != NULL);'), (2049, 2, u'-\tassert(pAnimation);'), (2075, 2, u'-\tassert(pAnimation != NULL);'), (2269, 1, u'+        assert(0);'), (2310, 1, u'+    assert(0);'), (2316, 1, u'+    assert(0);'), (2391, 1, u'+    assert(pActionOne != NULL);'), (2392, 1, u'+    assert(pActionTwo != NULL);'), (2652, 1, u'+    assert(pAction != NULL);'), (2756, 1, u'+    assert(pAction1 != NULL);'), (2757, 1, u'+    assert(pAction2 != NULL);'), (4133, 1, u'+    assert(pAction != NULL);'), (4134, 1, u'+    assert(pAction != m_pOther);'), (4222, 1, u'+    assert(pAnimation != NULL);'), (4238, 1, u'+    assert(pAnimation);'), (4264, 1, u'+    assert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(gSharedManager == NULL);'), (10, 1, u'+    assert(gSharedManager == NULL);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCActionManager::selectorProtocolRelease
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(gSharedManager == NULL);'), (10, 1, u'+    assert(gSharedManager == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(gSharedManager == NULL);'), (10, 1, u'+    assert(gSharedManager == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (20, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (24, 1, u'+    assert(pAction != NULL);'), (25, 1, u'+    assert(pTarget != NULL);'), (42, 1, u'+    assert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (20, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (24, 1, u'+    assert(pAction != NULL);'), (25, 1, u'+    assert(pTarget != NULL);'), (42, 1, u'+    assert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pAction != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (20, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (24, 1, u'+    assert(pAction != NULL);'), (25, 1, u'+    assert(pTarget != NULL);'), (42, 1, u'+    assert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 2, u'-\tassert(pTarget != NULL);'), (22, 1, u'+    assert(tag != kCCActionTagInvalid);'), (23, 1, u'+    assert(pTarget != NULL);')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: CCActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 2, u'-\tassert(pTarget != NULL);'), (22, 1, u'+    assert(tag != kCCActionTagInvalid);'), (23, 1, u'+    assert(pTarget != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 2, u'-\tassert(pTarget != NULL);'), (22, 1, u'+    assert(tag != kCCActionTagInvalid);'), (23, 1, u'+    assert(pTarget != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (26, 1, u'+    assert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: CCActionManager::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (26, 1, u'+    assert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (26, 1, u'+    assert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\tassert(tile != NULL);'), (37, 1, u'+    assert(tile != NULL);')]
===========================================
===========================================
Total add: 37
Total del: 37
Header: CCAtlasNode::~CCAtlasNode
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\tassert(tile != NULL);'), (37, 1, u'+    assert(tile != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\tassert(tile != NULL);'), (37, 1, u'+    assert(tile != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (4, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCAtlasNode::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (4, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (4, 1, u'+    CCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::getScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (4, 1, u'+    CCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (11, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (13, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (14, 1, u'+    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 18
Total del: 18
Header: CCNode::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (11, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (13, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (14, 1, u'+    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (11, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (13, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");'), (14, 1, u'+    CCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+    CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCNode::removeChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+    CCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::runAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (4, 1, u'+    CCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCAssert( selector, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCNode::schedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCAssert( selector, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector, "Argument must be non-nil");'), (3, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+    CCAssert( selector, "Argument must be non-nil");'), (5, 1, u'+    CCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-\tassert(pObject->m_uReference > 1);'), (165, 2, u'-\tassert(m_pCurReleasePool);'), (181, 2, u'-\tassert(m_pCurReleasePool);'), (231, 1, u'+    assert(pObject->m_uReference > 1);'), (351, 1, u'+    assert(m_pCurReleasePool);'), (367, 1, u'+    assert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tassert(width >= 0 && height >= 0);'), (226, 1, u'+    assert(width >= 0 && height >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\tassert(0);'), (67, 2, u'-\tassert(m_uReference > 0);'), (78, 2, u'-\tassert(m_uReference > 0);'), (141, 1, u'+    assert(0);'), (179, 1, u'+    assert(m_uReference > 0);'), (190, 1, u'+    assert(m_uReference > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\t\tassert(label != NULL);'), (136, 1, u'+    assert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(105, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (140, 2, u'-        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (307, 1, u'+    assert(FNTfile != NULL && strlen(FNTfile)!=0);'), (342, 1, u'+    CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (374, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (413, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (418, 2, u'-\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (423, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (439, 2, u'-\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (555, 2, u'-\t\tassert(theString != NULL);'), (559, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (629, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");'), (748, 1, u'+    CCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");'), (787, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (792, 1, u'+    CCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (797, 1, u'+    CCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (813, 1, u'+    CCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (929, 1, u'+    assert(theString != NULL);'), (933, 1, u'+    CCAssert( m_pConfiguration, "Error creating config for LabelBMFont");'), (1034, 1, u'+        CCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+    assert(label != NULL);'), (78, 1, u'+    assert(label != NULL);'), (108, 2, u'-\t\tassert(label != NULL);'), (129, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Total add: 113
Total del: 113
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+    assert(label != NULL);'), (78, 1, u'+    assert(label != NULL);'), (108, 2, u'-\t\tassert(label != NULL);'), (129, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+    assert(label != NULL);'), (78, 1, u'+    assert(label != NULL);'), (108, 2, u'-\t\tassert(label != NULL);'), (129, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (4, 1, u'+    CCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLayer::ccTouchBegan
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (4, 1, u'+    CCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (4, 1, u'+    CCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pLayers);'), (4, 1, u'+    assert(m_pLayers);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCLayerMultiplex::addLayer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pLayers);'), (4, 1, u'+    assert(m_pLayers);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pLayers);'), (4, 1, u'+    assert(m_pLayers);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCLayerMultiplex::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCLayerMultiplex::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+    CCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (25, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (26, 1, u'+        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: CCTransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (25, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (26, 1, u'+        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+    CCAssert( scene != NULL, "Argument scene must be non-nil");'), (25, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (26, 1, u'+        CCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (284, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (296, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (383, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (396, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (407, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (579, 1, u'+                assert(row < rows.size());'), (583, 1, u'+                assert(rowColumns);'), (636, 1, u'+    assert(! columnsOccupied);'), (659, 2, u'-                    assert(row < rows.size());'), (667, 2, u'-\t\t\t\t    assert(rowColumns);'), (713, 2, u'-\t\tassert(! columnsOccupied);'), (755, 1, u'+                assert(column < columns.size());'), (759, 1, u'+                assert(columnRows);'), (845, 1, u'+    assert(! rowsOccupied);'), (868, 2, u'-\t\t\t\t    assert(column < columns.size());'), (872, 2, u'-\t\t\t\t    assert(columnRows);'), (899, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Total add: 522
Total del: 522
Header: using namespace std;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (284, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (296, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (383, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (396, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (407, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (579, 1, u'+                assert(row < rows.size());'), (583, 1, u'+                assert(rowColumns);'), (636, 1, u'+    assert(! columnsOccupied);'), (659, 2, u'-                    assert(row < rows.size());'), (667, 2, u'-\t\t\t\t    assert(rowColumns);'), (713, 2, u'-\t\tassert(! columnsOccupied);'), (755, 1, u'+                assert(column < columns.size());'), (759, 1, u'+                assert(columnRows);'), (845, 1, u'+    assert(! rowsOccupied);'), (868, 2, u'-\t\t\t\t    assert(column < columns.size());'), (872, 2, u'-\t\t\t\t    assert(columnRows);'), (899, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (284, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (296, 1, u'+    CCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (383, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (396, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (407, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (579, 1, u'+                assert(row < rows.size());'), (583, 1, u'+                assert(rowColumns);'), (636, 1, u'+    assert(! columnsOccupied);'), (659, 2, u'-                    assert(row < rows.size());'), (667, 2, u'-\t\t\t\t    assert(rowColumns);'), (713, 2, u'-\t\tassert(! columnsOccupied);'), (755, 1, u'+                assert(column < columns.size());'), (759, 1, u'+                assert(columnRows);'), (845, 1, u'+    assert(! rowsOccupied);'), (868, 2, u'-\t\t\t\t    assert(column < columns.size());'), (872, 2, u'-\t\t\t\t    assert(columnRows);'), (899, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(287, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (337, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (498, 2, u'-\t\tassert(normalSprite != NULL);'), (1070, 1, u'+    CCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (1120, 1, u'+    CCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (1281, 1, u'+    assert(normalSprite != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(200, 2, u'-\t\tassert(m_pVertexData);'), (273, 1, u'+        assert(m_pVertexData);')]
===========================================
===========================================
Total add: 171
Total del: 173
Header: CCProgressTimer::updateRadial
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(200, 2, u'-\t\tassert(m_pVertexData);'), (273, 1, u'+        assert(m_pVertexData);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(200, 2, u'-\t\tassert(m_pVertexData);'), (273, 1, u'+        assert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(m_pVertexData);'), (121, 1, u'+        assert(m_pVertexData);')]
===========================================
===========================================
Total add: 103
Total del: 109
Header: CCProgressTimer::updateBar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(m_pVertexData);'), (121, 1, u'+        assert(m_pVertexData);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(m_pVertexData);'), (121, 1, u'+        assert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (6, 1, u'+    CCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Total add: 99
Total del: 99
Header: CCRenderTexture::saveBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (6, 1, u'+    CCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,'), (6, 1, u'+    CCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (9, 1, u'+    CCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCParticleSystem::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (9, 1, u'+    CCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert( dict != NULL, "Particles: file not found");'), (9, 1, u'+    CCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (54, 1, u'+                CCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Total add: 32
Total del: 32
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (54, 1, u'+                CCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-\t\t\t\tCCAssert( false, "Invalid emitterType in config file");'), (54, 1, u'+                CCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tassert(textureData);'), (22, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (26, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (31, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (37, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (45, 1, u'+                assert(textureData);'), (52, 1, u'+                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (56, 1, u'+                    CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (61, 1, u'+                    CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (67, 1, u'+            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 38
Total del: 38
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tassert(textureData);'), (22, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (26, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (31, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (37, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (45, 1, u'+                assert(textureData);'), (52, 1, u'+                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (56, 1, u'+                    CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (61, 1, u'+                    CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (67, 1, u'+            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tassert(textureData);'), (22, 2, u'-\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (26, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (31, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (37, 2, u'-\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (45, 1, u'+                assert(textureData);'), (52, 1, u'+                    CCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (56, 1, u'+                    CCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (61, 1, u'+                    CCAssert(isOK, "CCParticleSystem: error init image with Data");'), (67, 1, u'+            CCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (12, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCParticleSystem::getIsBlendAdditive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (12, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (12, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (5, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (10, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (12, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (5, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (10, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (12, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (5, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (10, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (12, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getGravity
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (4, 1, u'+    CCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemPoint::setStartSpin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemPoint::setStartSpinVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemPoint::setEndSpin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemPoint::setEndSpinVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (4, 1, u'+    CCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (4, 1, u'+    CCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemPoint::setStartSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (4, 1, u'+    CCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (4, 1, u'+    CCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||'), (7, 1, u'+    CCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCParticleSystemPoint::setEndSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||'), (7, 1, u'+    CCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||'), (7, 1, u'+    CCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+    CCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(0);'), (6, 1, u'+    assert(0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSprite::spriteWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(0);'), (6, 1, u'+    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(0);'), (6, 1, u'+    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (7, 1, u'+    assert(pTexture != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCSprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (7, 1, u'+    assert(pTexture != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (7, 1, u'+    assert(pTexture != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+    assert(pTexture != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCSprite::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+    assert(pTexture != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTexture != NULL);'), (3, 1, u'+    assert(pTexture != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+    assert(pszFilename != NULL);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCSprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+    assert(pszFilename != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+    assert(pszFilename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+    assert(pszFilename != NULL);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCSprite::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+    assert(pszFilename != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszFilename != NULL);'), (3, 1, u'+    assert(pszFilename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSpriteFrame != NULL);'), (3, 1, u'+    assert(pSpriteFrame != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCSprite::initWithSpriteFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSpriteFrame != NULL);'), (3, 1, u'+    assert(pSpriteFrame != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pSpriteFrame != NULL);'), (3, 1, u'+    assert(pSpriteFrame != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (3, 1, u'+    assert(pszSpriteFrameName != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCSprite::initWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (3, 1, u'+    assert(pszSpriteFrameName != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (3, 1, u'+    assert(pszSpriteFrameName != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesBatchNode);'), (28, 1, u'+    assert(m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 121
Total del: 121
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesBatchNode);'), (28, 1, u'+    assert(m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesBatchNode);'), (28, 1, u'+    assert(m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tassert(! m_bUsesBatchNode);'), (6, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCSprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tassert(! m_bUsesBatchNode);'), (6, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tassert(! m_bUsesBatchNode);'), (6, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pChild != NULL);'), (4, 1, u'+    assert(pChild != NULL);'), (9, 2, u'-\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (15, 1, u'+        assert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCSprite::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pChild != NULL);'), (4, 1, u'+    assert(pChild != NULL);'), (9, 2, u'-\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (15, 1, u'+        assert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pChild != NULL);'), (4, 1, u'+    assert(pChild != NULL);'), (9, 2, u'-\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (15, 1, u'+        assert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (21, 1, u'+    assert(m_pChildren->containsObject(pChild));')]
===========================================
===========================================
Total add: 19
Total del: 19
Header: CCSprite::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (21, 1, u'+    assert(m_pChildren->containsObject(pChild));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (21, 1, u'+    assert(m_pChildren->containsObject(pChild));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (4, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCSprite::setIsRelativeAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (4, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesBatchNode);'), (4, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(animationName);'), (3, 1, u'+    assert(animationName);'), (8, 2, u'-\tassert(a);'), (9, 1, u'+    assert(a);'), (14, 2, u'-\tassert(frame);'), (15, 1, u'+    assert(frame);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCSprite::setDisplayFrameWithAnimationName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(animationName);'), (3, 1, u'+    assert(animationName);'), (8, 2, u'-\tassert(a);'), (9, 1, u'+    assert(a);'), (14, 2, u'-\tassert(frame);'), (15, 1, u'+    assert(frame);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(animationName);'), (3, 1, u'+    assert(animationName);'), (8, 2, u'-\tassert(a);'), (9, 1, u'+    assert(a);'), (14, 2, u'-\tassert(frame);'), (15, 1, u'+    assert(frame);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert (! m_bUsesBatchNode);'), (5, 1, u'+    assert (! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 15
Total del: 15
Header: CCSprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert (! m_bUsesBatchNode);'), (5, 1, u'+    assert (! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert (! m_bUsesBatchNode);'), (5, 1, u'+    assert (! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(! m_bUsesBatchNode);'), (5, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(! m_bUsesBatchNode);'), (5, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(! m_bUsesBatchNode);'), (5, 1, u'+    assert(! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-\t\tassert(child != NULL);'), (124, 2, u'-\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (145, 2, u'-\t\tassert(child != NULL);'), (146, 2, u'-\t\tassert(m_pChildren->containsObject(child));'), (171, 2, u'-\t\tassert(m_pChildren->containsObject(pSprite));'), (315, 1, u'+    assert(child != NULL);'), (319, 1, u'+    assert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (340, 1, u'+    assert(child != NULL);'), (341, 1, u'+    assert(m_pChildren->containsObject(child));'), (366, 1, u'+    assert(m_pChildren->containsObject(pSprite));')]
===========================================
===========================================
Total add: 224
Total del: 224
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-\t\tassert(child != NULL);'), (124, 2, u'-\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (145, 2, u'-\t\tassert(child != NULL);'), (146, 2, u'-\t\tassert(m_pChildren->containsObject(child));'), (171, 2, u'-\t\tassert(m_pChildren->containsObject(pSprite));'), (315, 1, u'+    assert(child != NULL);'), (319, 1, u'+    assert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (340, 1, u'+    assert(child != NULL);'), (341, 1, u'+    assert(m_pChildren->containsObject(child));'), (366, 1, u'+    assert(m_pChildren->containsObject(pSprite));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-\t\tassert(child != NULL);'), (124, 2, u'-\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (145, 2, u'-\t\tassert(child != NULL);'), (146, 2, u'-\t\tassert(m_pChildren->containsObject(child));'), (171, 2, u'-\t\tassert(m_pChildren->containsObject(pSprite));'), (315, 1, u'+    assert(child != NULL);'), (319, 1, u'+    assert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (340, 1, u'+    assert(child != NULL);'), (341, 1, u'+    assert(m_pChildren->containsObject(child));'), (366, 1, u'+    assert(m_pChildren->containsObject(pSprite));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tassert(format >=0 && format <= 3);'), (112, 1, u'+    assert(format >=0 && format <= 3);')]
===========================================
===========================================
Total add: 91
Total del: 92
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tassert(format >=0 && format <= 3);'), (112, 1, u'+    assert(format >=0 && format <= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tassert(format >=0 && format <= 3);'), (112, 1, u'+    assert(format >=0 && format <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(textureFileName);'), (13, 1, u'+    assert(textureFileName);')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: CCSpriteFrameCache::addSpriteFramesWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(textureFileName);'), (13, 1, u'+    assert(textureFileName);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(textureFileName);'), (13, 1, u'+    assert(textureFileName);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (80, 1, u'+        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Total add: 46
Total del: 46
Header: CCTexture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (80, 1, u'+        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\t\tCCAssert(0, "NSInternalInconsistencyException");'), (80, 1, u'+        CCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (76, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (98, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (220, 1, u'+        CCAssert(tempData != NULL, "NULL image data.");'), (245, 1, u'+        CCAssert(tempData != NULL, "NULL image data.");'), (267, 1, u'+        CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Total add: 178
Total del: 178
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (76, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (98, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (220, 1, u'+        CCAssert(tempData != NULL, "NULL image data.");'), (245, 1, u'+        CCAssert(tempData != NULL, "NULL image data.");'), (267, 1, u'+        CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (76, 2, u'-\t\t\tCCAssert(tempData != NULL, "NULL image data.");'), (98, 2, u'-\t\t\tCCAssert(0, "Invalid pixel format");'), (220, 1, u'+        CCAssert(tempData != NULL, "NULL image data.");'), (245, 1, u'+        CCAssert(tempData != NULL, "NULL image data.");'), (267, 1, u'+        CCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (5, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (5, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (5, 1, u'+    CCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (10, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (10, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (10, 1, u'+    CCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\t\tassert(false);'), (82, 1, u'+        assert(false);')]
===========================================
===========================================
Total add: 44
Total del: 44
Header: CCTexture2D::bitsPerPixelForFormat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\t\tassert(false);'), (82, 1, u'+        assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-\t\t\tassert(false);'), (82, 1, u'+        assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(texture != NULL);'), (5, 1, u'+    assert(texture != NULL);'), (17, 2, u'-\tassert(m_pQuads == NULL && m_pIndices == NULL);'), (19, 1, u'+    assert(m_pQuads == NULL && m_pIndices == NULL);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(texture != NULL);'), (5, 1, u'+    assert(texture != NULL);'), (17, 2, u'-\tassert(m_pQuads == NULL && m_pIndices == NULL);'), (19, 1, u'+    assert(m_pQuads == NULL && m_pIndices == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(texture != NULL);'), (5, 1, u'+    assert(texture != NULL);'), (17, 2, u'-\tassert(m_pQuads == NULL && m_pIndices == NULL);'), (19, 1, u'+    assert(m_pQuads == NULL && m_pIndices == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: CCTextureAtlas::updateQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: CCTextureAtlas::insertQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (8, 1, u'+    CCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (22, 1, u'+    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (23, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 21
Total del: 21
Header: CCTextureAtlas::insertQuadFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (22, 1, u'+    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (23, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (22, 1, u'+    CCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (23, 1, u'+    CCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: CCTextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+    CCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (7, 1, u'+    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCTextureCache::CCTextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (7, 1, u'+    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (7, 1, u'+    CCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 28
Total del: 28
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+    CCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+    CCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+    CCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: CCTextureCache::addPVRImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+    CCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (37, 1, u'+    CCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Total add: 35
Total del: 35
Header: CCTextureCache::addUIImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (37, 1, u'+    CCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (37, 1, u'+    CCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
Total add: 98
Total del: 98
Header: CCTexturePVR::unpackPVRData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 2, u'-\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,'), (163, 1, u'+                CCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
Class:class CCPointObject : CCObject { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (41, 1, u'+    CCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (51, 1, u'+    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (71, 1, u'+            CCAssert(m_pTMXLayers, "Allocate memory failed!");'), (73, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (233, 2, u'-                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
Total add: 202
Total del: 202
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (41, 1, u'+    CCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (51, 1, u'+    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (71, 1, u'+            CCAssert(m_pTMXLayers, "Allocate memory failed!");'), (73, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (233, 2, u'-                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (41, 1, u'+    CCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (51, 1, u'+    CCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (71, 1, u'+            CCAssert(m_pTMXLayers, "Allocate memory failed!");'), (73, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (233, 2, u'-                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'- \t\t\t    assert(0);'), (39, 1, u'+                assert(0);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: CCTouchDispatcher::forceAddHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'- \t\t\t    assert(0);'), (39, 1, u'+                assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'- \t\t\t    assert(0);'), (39, 1, u'+                assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(handler != NULL);'), (9, 1, u'+    assert(handler != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCTouchDispatcher::setPriority
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(handler != NULL);'), (9, 1, u'+    assert(handler != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(handler != NULL);'), (9, 1, u'+    assert(handler != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);'), (3, 1, u'+    assert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Total add: 23
Total del: 23
Header: CCTouchDispatcher::touches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);'), (3, 1, u'+    assert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);'), (3, 1, u'+    assert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pDelegate != NULL);'), (3, 1, u'+    assert(pDelegate != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 5
Header: CCTouchHandler::initWithDelegate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pDelegate != NULL);'), (3, 1, u'+    assert(pDelegate != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pDelegate != NULL);'), (3, 1, u'+    assert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(iswhite(obj2gco(cl)));'), (25, 1, u'+    lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: *lua_pushfstring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(iswhite(obj2gco(cl)));'), (25, 1, u'+    lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(iswhite(obj2gco(cl)));'), (25, 1, u'+    lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  {"assert", luaB_assert},'), (27, 1, u'+    {"assert", luaB_assert},')]
===========================================
===========================================
Total add: 25
Total del: 25
Header: luaB_newproxy
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  {"assert", luaB_assert},'), (27, 1, u'+    {"assert", luaB_assert},')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  {"assert", luaB_assert},'), (27, 1, u'+    {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(dest != NO_JUMP);'), (10, 1, u'+    lua_assert(dest != NO_JUMP);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: condjump
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(dest != NO_JUMP);'), (10, 1, u'+    lua_assert(dest != NO_JUMP);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(dest != NO_JUMP);'), (10, 1, u'+    lua_assert(dest != NO_JUMP);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(target < fs->pc);'), (11, 1, u'+        lua_assert(target < fs->pc);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: dischargejpc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(target < fs->pc);'), (11, 1, u'+        lua_assert(target < fs->pc);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(target < fs->pc);'), (11, 1, u'+        lua_assert(target < fs->pc);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(reg == fs->freereg);'), (8, 1, u'+        lua_assert(reg == fs->freereg);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: luaK_reserveregs
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(reg == fs->freereg);'), (8, 1, u'+        lua_assert(reg == fs->freereg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(reg == fs->freereg);'), (8, 1, u'+        lua_assert(reg == fs->freereg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (24, 1, u'+        lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: freeexp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (24, 1, u'+        lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (24, 1, u'+        lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (51, 1, u'+        lua_assert(e->k == VVOID || e->k == VJMP);')]
===========================================
===========================================
Total add: 23
Total del: 22
Header: code_label
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (51, 1, u'+        lua_assert(e->k == VVOID || e->k == VJMP);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (51, 1, u'+        lua_assert(e->k == VVOID || e->k == VJMP);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (39, 1, u'+        lua_assert(0);  /* invalid var kind to store */')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: luaK_exp2RK
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (39, 1, u'+        lua_assert(0);  /* invalid var kind to store */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(37, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (39, 1, u'+        lua_assert(0);  /* invalid var kind to store */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (7, 1, u'+    lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: luaK_self
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (7, 1, u'+    lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (7, 1, u'+    lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-      lua_assert(0);  /* cannot happen */'), (16, 1, u'+        lua_assert(0);  /* cannot happen */')]
===========================================
===========================================
Total add: 16
Total del: 12
Header: codenot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-      lua_assert(0);  /* cannot happen */'), (16, 1, u'+        lua_assert(0);  /* cannot happen */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-      lua_assert(0);  /* cannot happen */'), (16, 1, u'+        lua_assert(0);  /* cannot happen */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-    default: lua_assert(0); r = 0; break;'), (53, 1, u'+        lua_assert(0);')]
===========================================
===========================================
Total add: 36
Total del: 20
Header: luaK_indexed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-    default: lua_assert(0); r = 0; break;'), (53, 1, u'+        lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 2, u'-    default: lua_assert(0); r = 0; break;'), (53, 1, u'+        lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+        lua_assert(0);'), (36, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
Total add: 19
Total del: 14
Header: codecomp
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+        lua_assert(0);'), (36, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 1, u'+        lua_assert(0);'), (36, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (10, 1, u'+        lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (17, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (22, 1, u'+        lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (31, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (54, 2, u'-    default: lua_assert(0);'), (58, 1, u'+            lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (107, 1, u'+        lua_assert(0);')]
===========================================
===========================================
Total add: 64
Total del: 38
Header: luaK_infix
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (10, 1, u'+        lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (17, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (22, 1, u'+        lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (31, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (54, 2, u'-    default: lua_assert(0);'), (58, 1, u'+            lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (107, 1, u'+        lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (10, 1, u'+        lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (17, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (22, 1, u'+        lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (31, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (54, 2, u'-    default: lua_assert(0);'), (58, 1, u'+            lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (107, 1, u'+        lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (3, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (4, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (6, 1, u'+    lua_assert(getOpMode(o) == iABC);'), (7, 1, u'+    lua_assert(getBMode(o) != OpArgN || b == 0);'), (8, 1, u'+    lua_assert(getCMode(o) != OpArgN || c == 0);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: luaK_code
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (3, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (4, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (6, 1, u'+    lua_assert(getOpMode(o) == iABC);'), (7, 1, u'+    lua_assert(getBMode(o) != OpArgN || b == 0);'), (8, 1, u'+    lua_assert(getCMode(o) != OpArgN || c == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (3, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (4, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (6, 1, u'+    lua_assert(getOpMode(o) == iABC);'), (7, 1, u'+    lua_assert(getBMode(o) != OpArgN || b == 0);'), (8, 1, u'+    lua_assert(getCMode(o) != OpArgN || c == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (3, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (5, 1, u'+    lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (6, 1, u'+    lua_assert(getCMode(o) == OpArgN);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: luaK_codeABC
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (3, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (5, 1, u'+    lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (6, 1, u'+    lua_assert(getCMode(o) == OpArgN);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (3, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (5, 1, u'+    lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (6, 1, u'+    lua_assert(getCMode(o) == OpArgN);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(tostore != 0);'), (14, 1, u'+    lua_assert(tostore != 0);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: luaK_codeABx
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(tostore != 0);'), (14, 1, u'+    lua_assert(tostore != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(tostore != 0);'), (14, 1, u'+    lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));'), (26, 1, u'+        lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: static const char KEY_HOOK = 'h';
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));'), (26, 1, u'+        lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));'), (26, 1, u'+        lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    lua_assert(ttisfunction(ci->func));'), (41, 1, u'+        lua_assert(ttisfunction(ci->func));')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: auxgetinfo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    lua_assert(ttisfunction(ci->func));'), (41, 1, u'+        lua_assert(ttisfunction(ci->func));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    lua_assert(ttisfunction(ci->func));'), (41, 1, u'+        lua_assert(ttisfunction(ci->func));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    lua_assert(pc != -1);'), (14, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (49, 1, u'+        lua_assert(pc != -1);'), (53, 1, u'+            lua_assert(ttisstring(&p->k[g]));')]
===========================================
===========================================
Total add: 42
Total del: 41
Header: *getobjname
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    lua_assert(pc != -1);'), (14, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (49, 1, u'+        lua_assert(pc != -1);'), (53, 1, u'+            lua_assert(ttisstring(&p->k[g]));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    lua_assert(pc != -1);'), (14, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (49, 1, u'+        lua_assert(pc != -1);'), (53, 1, u'+            lua_assert(ttisstring(&p->k[g]));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));'), (6, 1, u'+    lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: luaG_typeerror
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));'), (6, 1, u'+    lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));'), (6, 1, u'+    lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (8, 1, u'+    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: luaD_seterrorobj
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (8, 1, u'+    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (8, 1, u'+    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (11, 1, u'+    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: correctstack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (11, 1, u'+    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (11, 1, u'+    lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (20, 2, u'-    lua_assert(!L->allowhook);'), (38, 1, u'+        lua_assert(L->ci->top <= L->stack_last);'), (43, 1, u'+        lua_assert(!L->allowhook);')]
===========================================
===========================================
Total add: 23
Total del: 23
Header: *growCI
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (20, 2, u'-    lua_assert(!L->allowhook);'), (38, 1, u'+        lua_assert(L->ci->top <= L->stack_last);'), (43, 1, u'+        lua_assert(!L->allowhook);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (20, 2, u'-    lua_assert(!L->allowhook);'), (38, 1, u'+        lua_assert(L->ci->top <= L->stack_last);'), (43, 1, u'+        lua_assert(!L->allowhook);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (27, 1, u'+        lua_assert(p->is_vararg & VARARG_HASARG);'), (46, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (59, 1, u'+        lua_assert(iswhite(obj2gco(htab)));')]
===========================================
===========================================
Total add: 29
Total del: 29
Header: luaD_callhook
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (27, 1, u'+        lua_assert(p->is_vararg & VARARG_HASARG);'), (46, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (59, 1, u'+        lua_assert(iswhite(obj2gco(htab)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (27, 1, u'+        lua_assert(p->is_vararg & VARARG_HASARG);'), (46, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (59, 1, u'+        lua_assert(iswhite(obj2gco(htab)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+        lua_assert(ci->top <= L->stack_last);'), (69, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (88, 1, u'+        lua_assert(ci->top <= L->stack_last);'), (112, 2, u'-    lua_assert(ci->top <= L->stack_last);')]
===========================================
===========================================
Total add: 61
Total del: 61
Header: tryfuncTM
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+        lua_assert(ci->top <= L->stack_last);'), (69, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (88, 1, u'+        lua_assert(ci->top <= L->stack_last);'), (112, 2, u'-    lua_assert(ci->top <= L->stack_last);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 1, u'+        lua_assert(ci->top <= L->stack_last);'), (69, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (88, 1, u'+        lua_assert(ci->top <= L->stack_last);'), (112, 2, u'-    lua_assert(ci->top <= L->stack_last);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (10, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (14, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (21, 1, u'+        lua_assert(ci == L->base_ci && firstArg > L->base);'), (26, 1, u'+        lua_assert(L->status == LUA_YIELD);'), (30, 1, u'+            lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: luaD_call
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (10, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (14, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (21, 1, u'+        lua_assert(ci == L->base_ci && firstArg > L->base);'), (26, 1, u'+        lua_assert(L->status == LUA_YIELD);'), (30, 1, u'+            lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (10, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (14, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (21, 1, u'+        lua_assert(ci == L->base_ci && firstArg > L->base);'), (26, 1, u'+        lua_assert(L->status == LUA_YIELD);'), (30, 1, u'+            lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  lua_assert(L->errfunc == 0);'), (18, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);'), (31, 1, u'+    lua_assert(L->errfunc == 0);'), (40, 1, u'+        lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: resume_error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  lua_assert(L->errfunc == 0);'), (18, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);'), (31, 1, u'+    lua_assert(L->errfunc == 0);'), (40, 1, u'+        lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-  lua_assert(L->errfunc == 0);'), (18, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);'), (31, 1, u'+    lua_assert(L->errfunc == 0);'), (40, 1, u'+        lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tlua_assert(0);\t\t\t/* cannot happen */'), (49, 1, u'+            lua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: DumpConstants
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tlua_assert(0);\t\t\t/* cannot happen */'), (49, 1, u'+            lua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-\tlua_assert(0);\t\t\t/* cannot happen */'), (49, 1, u'+            lua_assert(0);\t\t\t/* cannot happen */')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(p->v != &p->u.value);'), (17, 1, u'+        lua_assert(p->v != &p->u.value);'), (37, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (49, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: *luaF_newupval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(p->v != &p->u.value);'), (17, 1, u'+        lua_assert(p->v != &p->u.value);'), (37, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (49, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(p->v != &p->u.value);'), (17, 1, u'+        lua_assert(p->v != &p->u.value);'), (37, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (49, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (5, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: *luaF_findupval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (5, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (5, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);'), (19, 1, u'+        lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: luaF_freeupval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);'), (19, 1, u'+        lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);'), (19, 1, u'+        lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(ttisnil(gval(n)));'), (5, 1, u'+    lua_assert(ttisnil(gval(n)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (5, 1, u'+    lua_assert(iswhite(o) && !isdead(g, o));'), (69, 1, u'+        lua_assert(0);'), (71, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
Total add: 29
Total del: 28
Header: removeentry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (5, 1, u'+    lua_assert(iswhite(o) && !isdead(g, o));'), (69, 1, u'+        lua_assert(0);'), (71, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (5, 1, u'+    lua_assert(iswhite(o) && !isdead(g, o));'), (69, 1, u'+        lua_assert(0);'), (71, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (33, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (63, 1, u'+        lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (67, 1, u'+            lua_assert(!ttisnil(gkey(n)));')]
===========================================
===========================================
Total add: 36
Total del: 36
Header: luaC_separateudata
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (33, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (63, 1, u'+        lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (67, 1, u'+            lua_assert(!ttisnil(gkey(n)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (33, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (63, 1, u'+        lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (67, 1, u'+            lua_assert(!ttisnil(gkey(n)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (23, 1, u'+        lua_assert(cl->l.nupvalues == cl->l.p->nups);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: traverseproto
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (23, 1, u'+        lua_assert(cl->l.nupvalues == cl->l.p->nups);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (23, 1, u'+        lua_assert(cl->l.nupvalues == cl->l.p->nups);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (20, 1, u'+        lua_assert(ci->top <= l->stack_last);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: checkstacksizes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (20, 1, u'+        lua_assert(ci->top <= l->stack_last);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (20, 1, u'+        lua_assert(ci->top <= l->stack_last);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(isgray(o));'), (7, 1, u'+    lua_assert(isgray(o));'), (65, 2, u'-    default: lua_assert(0); return 0;'), (78, 1, u'+        lua_assert(0);')]
===========================================
===========================================
Total add: 37
Total del: 35
Header: traversestack
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(isgray(o));'), (7, 1, u'+    lua_assert(isgray(o));'), (65, 2, u'-    default: lua_assert(0); return 0;'), (78, 1, u'+        lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(isgray(o));'), (7, 1, u'+    lua_assert(isgray(o));'), (65, 2, u'-    default: lua_assert(0); return 0;'), (78, 1, u'+        lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (16, 1, u'+        lua_assert(testbit(h->marked, VALUEWEAKBIT) ||')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: iscleared
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (16, 1, u'+        lua_assert(testbit(h->marked, VALUEWEAKBIT) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (16, 1, u'+        lua_assert(testbit(h->marked, VALUEWEAKBIT) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (24, 1, u'+        lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (43, 1, u'+        lua_assert(0);'), (45, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
Total add: 24
Total del: 15
Header: cleartable
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (24, 1, u'+        lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (43, 1, u'+        lua_assert(0);'), (45, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (24, 1, u'+        lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (43, 1, u'+        lua_assert(0);'), (45, 2, u'-    default: lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (14, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (29, 1, u'+            lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (34, 1, u'+            lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: freeobj
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (14, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (29, 1, u'+            lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (34, 1, u'+            lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (14, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (29, 1, u'+            lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (34, 1, u'+            lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (10, 1, u'+        lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: markroot
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (10, 1, u'+        lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (10, 1, u'+        lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (38, 1, u'+    lua_assert(!iswhite(obj2gco(g->mainthread)));')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: remarkupvals
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (38, 1, u'+    lua_assert(!iswhite(obj2gco(g->mainthread)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (38, 1, u'+    lua_assert(!iswhite(obj2gco(g->mainthread)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-      lua_assert(old >= g->totalbytes);'), (40, 1, u'+        lua_assert(old >= g->totalbytes);'), (51, 2, u'-      lua_assert(old >= g->totalbytes);'), (60, 1, u'+        lua_assert(old >= g->totalbytes);'), (87, 1, u'+        lua_assert(0);'), (91, 2, u'-    default: lua_assert(0); return 0;')]
===========================================
===========================================
Total add: 41
Total del: 39
Header: atomic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-      lua_assert(old >= g->totalbytes);'), (40, 1, u'+        lua_assert(old >= g->totalbytes);'), (51, 2, u'-      lua_assert(old >= g->totalbytes);'), (60, 1, u'+        lua_assert(old >= g->totalbytes);'), (87, 1, u'+        lua_assert(0);'), (91, 2, u'-    default: lua_assert(0); return 0;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-      lua_assert(old >= g->totalbytes);'), (40, 1, u'+        lua_assert(old >= g->totalbytes);'), (51, 2, u'-      lua_assert(old >= g->totalbytes);'), (60, 1, u'+        lua_assert(old >= g->totalbytes);'), (87, 1, u'+        lua_assert(0);'), (91, 2, u'-    default: lua_assert(0); return 0;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+        lua_assert(g->totalbytes >= g->estimate);'), (41, 2, u'-    lua_assert(g->totalbytes >= g->estimate);')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: singlestep
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+        lua_assert(g->totalbytes >= g->estimate);'), (41, 2, u'-    lua_assert(g->totalbytes >= g->estimate);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+        lua_assert(g->totalbytes >= g->estimate);'), (41, 2, u'-    lua_assert(g->totalbytes >= g->estimate);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (16, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (35, 1, u'+    lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (38, 1, u'+        lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: luaC_step
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (16, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (35, 1, u'+    lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (38, 1, u'+        lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (16, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (35, 1, u'+    lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (38, 1, u'+        lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (4, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (5, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (12, 1, u'+    lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (13, 1, u'+    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (14, 1, u'+    lua_assert(ttype(&o->gch) != LUA_TTABLE);')]
===========================================
===========================================
Total add: 9
Total del: 9
Header: luaC_fullgc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (4, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (5, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (12, 1, u'+    lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (13, 1, u'+    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (14, 1, u'+    lua_assert(ttype(&o->gch) != LUA_TTABLE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (4, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (5, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (12, 1, u'+    lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (13, 1, u'+    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (14, 1, u'+    lua_assert(ttype(&o->gch) != LUA_TTABLE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (5, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (11, 1, u'+    lua_assert(isblack(o) && !isdead(g, o));'), (12, 1, u'+    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: luaC_barrierf
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (5, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (11, 1, u'+    lua_assert(isblack(o) && !isdead(g, o));'), (12, 1, u'+    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (5, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (11, 1, u'+    lua_assert(isblack(o) && !isdead(g, o));'), (12, 1, u'+    lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (27, 1, u'+            lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: luaC_link
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (27, 1, u'+            lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (27, 1, u'+            lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (13, 1, u'+        lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: save
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (13, 1, u'+        lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (13, 1, u'+        lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (10, 1, u'+        lua_assert(token == cast(unsigned char, token));')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: luaX_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (10, 1, u'+        lua_assert(token == cast(unsigned char, token));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (10, 1, u'+        lua_assert(token == cast(unsigned char, token));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(currIsNewline(ls));'), (10, 1, u'+    lua_assert(currIsNewline(ls));')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: *luaX_newstring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(currIsNewline(ls));'), (10, 1, u'+    lua_assert(currIsNewline(ls));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(currIsNewline(ls));'), (10, 1, u'+    lua_assert(currIsNewline(ls));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(isdigit(ls->current));'), (14, 1, u'+    lua_assert(isdigit(ls->current));')]
===========================================
===========================================
Total add: 12
Total del: 12
Header: trydecpoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(isdigit(ls->current));'), (14, 1, u'+    lua_assert(isdigit(ls->current));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(isdigit(ls->current));'), (14, 1, u'+    lua_assert(isdigit(ls->current));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u"-  lua_assert(s == '[' || s == ']');"), (9, 1, u"+    lua_assert(s == '[' || s == ']');")]
===========================================
===========================================
Total add: 8
Total del: 8
Header: read_numeral
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u"-  lua_assert(s == '[' || s == ']');"), (9, 1, u"+    lua_assert(s == '[' || s == ']');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u"-  lua_assert(s == '[' || s == ']');"), (9, 1, u"+    lua_assert(s == '[' || s == ']');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-          lua_assert(!currIsNewline(ls));'), (186, 1, u'+                lua_assert(!currIsNewline(ls));')]
===========================================
===========================================
Total add: 111
Total del: 99
Header: read_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-          lua_assert(!currIsNewline(ls));'), (186, 1, u'+                lua_assert(!currIsNewline(ls));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(120, 2, u'-          lua_assert(!currIsNewline(ls));'), (186, 1, u'+                lua_assert(!currIsNewline(ls));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);'), (4, 1, u'+    lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: luaX_next
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);'), (4, 1, u'+    lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);'), (4, 1, u'+    lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (7, 2, u'-  lua_assert((nsize == 0) == (block == NULL));'), (11, 1, u'+    lua_assert((osize == 0) == (block == NULL));'), (15, 1, u'+    lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Total add: 8
Total del: 8
Header: *luaM_toobig
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (7, 2, u'-  lua_assert((nsize == 0) == (block == NULL));'), (11, 1, u'+    lua_assert((osize == 0) == (block == NULL));'), (15, 1, u'+    lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (7, 2, u'-  lua_assert((nsize == 0) == (block == NULL));'), (11, 1, u'+    lua_assert((osize == 0) == (block == NULL));'), (15, 1, u'+    lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-      lua_assert(iscollectable(t1));'), (27, 1, u'+            lua_assert(iscollectable(t1));')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: luaO_log2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-      lua_assert(iscollectable(t1));'), (27, 1, u'+            lua_assert(iscollectable(t1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-      lua_assert(iscollectable(t1));'), (27, 1, u'+            lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-      lua_assert(f->upvalues[i] == name);'), (18, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (27, 1, u'+            lua_assert(f->upvalues[i] == name);'), (38, 1, u'+    lua_assert(v->k == VLOCAL || v->k == VUPVAL);')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: removevars
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-      lua_assert(f->upvalues[i] == name);'), (18, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (27, 1, u'+            lua_assert(f->upvalues[i] == name);'), (38, 1, u'+    lua_assert(v->k == VLOCAL || v->k == VUPVAL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-      lua_assert(f->upvalues[i] == name);'), (18, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (27, 1, u'+            lua_assert(f->upvalues[i] == name);'), (38, 1, u'+    lua_assert(v->k == VLOCAL || v->k == VUPVAL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (15, 1, u'+    lua_assert(fs->freereg == fs->nactvar);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: enterlevel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (15, 1, u'+    lua_assert(fs->freereg == fs->nactvar);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (15, 1, u'+    lua_assert(fs->freereg == fs->nactvar);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (9, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (18, 1, u'+    lua_assert(!bl->isbreakable || !bl->upval);'), (19, 1, u'+    lua_assert(bl->nactvar == fs->nactvar);')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: enterblock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (9, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (18, 1, u'+    lua_assert(!bl->isbreakable || !bl->upval);'), (19, 1, u'+    lua_assert(bl->nactvar == fs->nactvar);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (9, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (18, 1, u'+    lua_assert(!bl->isbreakable || !bl->upval);'), (19, 1, u'+    lua_assert(bl->nactvar == fs->nactvar);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-  lua_assert(luaG_checkcode(f));'), (20, 2, u'-  lua_assert(fs->bl == NULL);'), (42, 1, u'+    lua_assert(luaG_checkcode(f));'), (43, 1, u'+    lua_assert(fs->bl == NULL);')]
===========================================
===========================================
Total add: 23
Total del: 23
Header: open_func
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-  lua_assert(luaG_checkcode(f));'), (20, 2, u'-  lua_assert(fs->bl == NULL);'), (42, 1, u'+    lua_assert(luaG_checkcode(f));'), (43, 1, u'+    lua_assert(fs->bl == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-  lua_assert(luaG_checkcode(f));'), (20, 2, u'-  lua_assert(fs->bl == NULL);'), (42, 1, u'+    lua_assert(luaG_checkcode(f));'), (43, 1, u'+    lua_assert(fs->bl == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(funcstate.prev == NULL);'), (13, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (14, 2, u'-  lua_assert(lexstate.fs == NULL);'), (26, 1, u'+    lua_assert(funcstate.prev == NULL);'), (27, 1, u'+    lua_assert(funcstate.f->nups == 0);'), (28, 1, u'+    lua_assert(lexstate.fs == NULL);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: close_func
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(funcstate.prev == NULL);'), (13, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (14, 2, u'-  lua_assert(lexstate.fs == NULL);'), (26, 1, u'+    lua_assert(funcstate.prev == NULL);'), (27, 1, u'+    lua_assert(funcstate.f->nups == 0);'), (28, 1, u'+    lua_assert(lexstate.fs == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(funcstate.prev == NULL);'), (13, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (14, 2, u'-  lua_assert(lexstate.fs == NULL);'), (26, 1, u'+    lua_assert(funcstate.prev == NULL);'), (27, 1, u'+    lua_assert(funcstate.f->nups == 0);'), (28, 1, u'+    lua_assert(lexstate.fs == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (52, 1, u'+        lua_assert(cc.v.k == VVOID || cc.tostore > 0);')]
===========================================
===========================================
Total add: 38
Total del: 38
Header: listfield
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (52, 1, u'+        lua_assert(cc.v.k == VVOID || cc.tostore > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (52, 1, u'+        lua_assert(cc.v.k == VVOID || cc.tostore > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-  lua_assert(f->k == VNONRELOC);')]
===========================================
===========================================
Total add: 37
Total del: 37
Header: explist1
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-  lua_assert(f->k == VNONRELOC);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-  lua_assert(f->k == VNONRELOC);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (14, 1, u'+    lua_assert(bl.breaklist == NO_JUMP);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: block_follow
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (14, 1, u'+    lua_assert(bl.breaklist == NO_JUMP);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (14, 1, u'+    lua_assert(bl.breaklist == NO_JUMP);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (33, 2, u'-        lua_assert(nret == fs->freereg - first);'), (40, 1, u'+                lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (51, 1, u'+                lua_assert(nret == fs->freereg - first);')]
===========================================
===========================================
Total add: 27
Total del: 27
Header: exprstat
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (33, 2, u'-        lua_assert(nret == fs->freereg - first);'), (40, 1, u'+                lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (51, 1, u'+                lua_assert(nret == fs->freereg - first);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (33, 2, u'-        lua_assert(nret == fs->freereg - first);'), (40, 1, u'+                lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (51, 1, u'+                lua_assert(nret == fs->freereg - first);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&'), (19, 1, u'+        lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&'), (19, 1, u'+        lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&'), (19, 1, u'+        lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (6, 2, u'-  lua_assert(g->strt.nuse == 0);'), (10, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (15, 1, u'+    lua_assert(g->rootgc == obj2gco(L));'), (16, 1, u'+    lua_assert(g->strt.nuse == 0);'), (20, 1, u'+    lua_assert(g->totalbytes == sizeof(LG));')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: preinit_state
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (6, 2, u'-  lua_assert(g->strt.nuse == 0);'), (10, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (15, 1, u'+    lua_assert(g->rootgc == obj2gco(L));'), (16, 1, u'+    lua_assert(g->strt.nuse == 0);'), (20, 1, u'+    lua_assert(g->totalbytes == sizeof(LG));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (6, 2, u'-  lua_assert(g->strt.nuse == 0);'), (10, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (15, 1, u'+    lua_assert(g->rootgc == obj2gco(L));'), (16, 1, u'+    lua_assert(g->strt.nuse == 0);'), (20, 1, u'+    lua_assert(g->totalbytes == sizeof(LG));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (22, 1, u'+    lua_assert(iswhite(obj2gco(L1)));')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: close_state
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (22, 1, u'+    lua_assert(iswhite(obj2gco(L1)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (22, 1, u'+    lua_assert(iswhite(obj2gco(L1)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(L1->openupval == NULL);'), (8, 1, u'+    lua_assert(L1->openupval == NULL);')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: *luaE_newthread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(L1->openupval == NULL);'), (8, 1, u'+    lua_assert(L1->openupval == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(L1->openupval == NULL);'), (8, 1, u'+    lua_assert(L1->openupval == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(G(L)->tmudata == NULL);'), (25, 1, u'+    lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Total add: 13
Total del: 13
Header: callallgcTM
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(G(L)->tmudata == NULL);'), (25, 1, u'+    lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  lua_assert(G(L)->tmudata == NULL);'), (25, 1, u'+    lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-      lua_assert(cast_int(h%newsize) == lmod(h, newsize));'), (36, 1, u'+            lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (35, 1, u'+    lua_assert(*narray/2 <= na && na <= *narray);')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: luaH_next
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (35, 1, u'+    lua_assert(*narray/2 <= na && na <= *narray);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (35, 1, u'+    lua_assert(*narray/2 <= na && na <= *narray);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    lua_assert(n != dummynode);'), (45, 1, u'+        lua_assert(n != dummynode);'), (65, 2, u'-  lua_assert(ttisnil(gval(mp)));'), (70, 1, u'+    lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Total add: 34
Total del: 33
Header: *getfreepos
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    lua_assert(n != dummynode);'), (45, 1, u'+        lua_assert(n != dummynode);'), (65, 2, u'-  lua_assert(ttisnil(gval(mp)));'), (70, 1, u'+    lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    lua_assert(n != dummynode);'), (45, 1, u'+        lua_assert(n != dummynode);'), (65, 2, u'-  lua_assert(ttisnil(gval(mp)));'), (70, 1, u'+    lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(event <= TM_EQ);'), (10, 1, u'+    lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: luaT_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(event <= TM_EQ);'), (10, 1, u'+    lua_assert(event <= TM_EQ);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(event <= TM_EQ);'), (10, 1, u'+    lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u"-    lua_assert(argv[i][0] == '-');"), (10, 2, u'-        lua_assert(chunk != NULL);'), (18, 2, u'-        lua_assert(filename != NULL);'), (27, 1, u"+        lua_assert(argv[i][0] == '-');"), (32, 1, u'+            lua_assert(chunk != NULL);'), (40, 1, u'+            lua_assert(filename != NULL);')]
===========================================
===========================================
Total add: 25
Total del: 24
Header: collectargs
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u"-    lua_assert(argv[i][0] == '-');"), (10, 2, u'-        lua_assert(chunk != NULL);'), (18, 2, u'-        lua_assert(filename != NULL);'), (27, 1, u"+        lua_assert(argv[i][0] == '-');"), (32, 1, u'+            lua_assert(chunk != NULL);'), (40, 1, u'+            lua_assert(filename != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u"-    lua_assert(argv[i][0] == '-');"), (10, 2, u'-        lua_assert(chunk != NULL);'), (18, 2, u'-        lua_assert(filename != NULL);'), (27, 1, u"+        lua_assert(argv[i][0] == '-');"), (32, 1, u'+            lua_assert(chunk != NULL);'), (40, 1, u'+            lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (10, 1, u'+    lua_assert(ttype(t1) == ttype(t2));')]
===========================================
===========================================
Total add: 24
Total del: 19
Header: lessequal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (10, 1, u'+    lua_assert(ttype(t1) == ttype(t2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (10, 1, u'+    lua_assert(ttype(t1) == ttype(t2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-      default: lua_assert(0); break;'), (44, 1, u'+            lua_assert(0);')]
===========================================
===========================================
Total add: 33
Total del: 17
Header: Arith
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-      default: lua_assert(0); break;'), (44, 1, u'+            lua_assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-      default: lua_assert(0); break;'), (44, 1, u'+            lua_assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  lua_assert(isLua(L->ci));'), (27, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (28, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (29, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (60, 2, u'-        lua_assert(ttisstring(rb));'), (71, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (132, 1, u'+    lua_assert(isLua(L->ci));'), (154, 1, u'+        lua_assert(base == L->base && L->base == L->ci->base);'), (155, 1, u'+        lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (156, 1, u'+        lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (206, 1, u'+            lua_assert(ttisstring(rb));'), (217, 1, u'+            lua_assert(ttisstring(KBx(i)));'), (413, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (426, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (482, 1, u'+            lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (495, 1, u'+                lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (520, 1, u'+                lua_assert(isLua(L->ci));'), (521, 1, u'+                lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (606, 1, u'+                    lua_assert(GET_OPCODE(*pc) == OP_MOVE);'), (650, 2, u'-          lua_assert(isLua(L->ci));'), (651, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (736, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Total add: 377
Total del: 377
Header: Arith
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  lua_assert(isLua(L->ci));'), (27, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (28, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (29, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (60, 2, u'-        lua_assert(ttisstring(rb));'), (71, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (132, 1, u'+    lua_assert(isLua(L->ci));'), (154, 1, u'+        lua_assert(base == L->base && L->base == L->ci->base);'), (155, 1, u'+        lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (156, 1, u'+        lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (206, 1, u'+            lua_assert(ttisstring(rb));'), (217, 1, u'+            lua_assert(ttisstring(KBx(i)));'), (413, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (426, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (482, 1, u'+            lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (495, 1, u'+                lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (520, 1, u'+                lua_assert(isLua(L->ci));'), (521, 1, u'+                lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (606, 1, u'+                    lua_assert(GET_OPCODE(*pc) == OP_MOVE);'), (650, 2, u'-          lua_assert(isLua(L->ci));'), (651, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (736, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-  lua_assert(isLua(L->ci));'), (27, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (28, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (29, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (60, 2, u'-        lua_assert(ttisstring(rb));'), (71, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (132, 1, u'+    lua_assert(isLua(L->ci));'), (154, 1, u'+        lua_assert(base == L->base && L->base == L->ci->base);'), (155, 1, u'+        lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (156, 1, u'+        lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (206, 1, u'+            lua_assert(ttisstring(rb));'), (217, 1, u'+            lua_assert(ttisstring(KBx(i)));'), (413, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (426, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (482, 1, u'+            lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (495, 1, u'+                lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (520, 1, u'+                lua_assert(isLua(L->ci));'), (521, 1, u'+                lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (606, 1, u'+                    lua_assert(GET_OPCODE(*pc) == OP_MOVE);'), (650, 2, u'-          lua_assert(isLua(L->ci));'), (651, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (736, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
Class: class CCLock::Impl { 
Class: class CCXLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(pSound);')]
===========================================
===========================================
Total add: 28
Total del: 19
Header: FmodAudioPlayer::playEffect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(pSound);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\tassert(pSound);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 1, u'+    assert((int)tag != kCCActionTagInvalid);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionManager::removeActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 1, u'+    assert((int)tag != kCCActionTagInvalid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 1, u'+    assert((int)tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 1, u'+    assert((int)tag != kCCActionTagInvalid);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCActionManager::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 1, u'+    assert((int)tag != kCCActionTagInvalid);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (3, 1, u'+    assert((int)tag != kCCActionTagInvalid);')]
===========================================
Class:class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(863, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1097, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1108, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1111, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1138, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1149, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1169, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1181, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1224, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1226, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1228, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1243, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1255, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1378, 1, u'+        Assert(more >= 2, "more < 2");'), (1481, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1489, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1725, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
Class: class CCEGL { 
Class: class CCXLock::Impl { 
Class:class MyPlayerEventListener : class MyPlayerEventListener :
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(width >= 0 && height >= 0);'), (3, 1, u'+\tCC_ASSERT(width >= 0 && height >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCRect::CCRect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(width >= 0 && height >= 0);'), (3, 1, u'+\tCC_ASSERT(width >= 0 && height >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(width >= 0 && height >= 0);'), (3, 1, u'+\tCC_ASSERT(width >= 0 && height >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(211, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (246, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (335, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (389, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (394, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (399, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (415, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (549, 2, u'-\t\tassert(theString != NULL);'), (553, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (598, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 2, u'-    assert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tIwAssertMsg(GAME, this, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (3, 1, u'+\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tIwAssertMsg(GAME, this, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (3, 1, u'+\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tIwAssertMsg(GAME, this, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));'), (3, 1, u'+\t\t\tIwAssertMsg(GAME, false, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(width > 0 && height > 0);'), (3, 1, u'+\tassert(width >= 0 && height >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCRect::CCRect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(width > 0 && height > 0);'), (3, 1, u'+\tassert(width >= 0 && height >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(width > 0 && height > 0);'), (3, 1, u'+\tassert(width >= 0 && height >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(width > 0 && height > 0);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: CCRect::CCRect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(width > 0 && height > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(width > 0 && height > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(277, 1, u'+\tassert(pSound);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tCCAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (73, 1, u'+\tCCAssert(0, "Have not implement!");'), (77, 1, u'+\tCCAssert(0, "Have not implement!");')]
===========================================
Class:class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+ \t\tassert( out );'), (72, 1, u'+ \t\tassert( &*out );')]
===========================================
===========================================
Total add: 69
Total del: 69
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+ \t\tassert( out );'), (72, 1, u'+ \t\tassert( &*out );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+ \t\tassert( out );'), (72, 1, u'+ \t\tassert( &*out );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(192, 2, u'-\tassert(pSharedScheduler == NULL);'), (248, 2, u'-\tassert(pfnSelector);'), (249, 2, u'-\tassert(pTarget);'), (269, 2, u'-\t\tassert(pElement->paused == bPaused);'), (301, 2, u'-\tassert(pszFuncName);'), (318, 2, u'-\t\tassert(pElement->paused == bPaused);'), (480, 2, u'-\t\tassert(pHashElement->entry->markedForDeletion);'), (613, 2, u'-\tassert(pTarget != NULL);'), (628, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (635, 2, u'-\tassert(pTarget != NULL);'), (650, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (657, 2, u'-    CCAssert( pTarget != NULL, "target must be non nil" );'), (990, 1, u'+\tassert(pSharedScheduler == NULL);'), (1046, 1, u'+\tassert(pfnSelector);'), (1047, 1, u'+\tassert(pTarget);'), (1067, 1, u'+\t\tassert(pElement->paused == bPaused);'), (1099, 1, u'+\tassert(pszFuncName);'), (1116, 1, u'+\t\tassert(pElement->paused == bPaused);'), (1278, 1, u'+\t\tassert(pHashElement->entry->markedForDeletion);'), (1421, 1, u'+\tassert(pTarget != NULL);'), (1436, 1, u'+\t\tassert(pElementUpdate->entry != NULL);'), (1443, 1, u'+\tassert(pTarget != NULL);'), (1458, 1, u'+\t\tassert(pElementUpdate->entry != NULL);'), (1465, 1, u'+    CCAssert( pTarget != NULL, "target must be non nil" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 2, u'-\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (308, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (345, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (346, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (379, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (380, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (408, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (409, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (440, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (441, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 249
Total del: 243
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 2, u'-\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (308, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (345, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (346, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (379, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (380, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (408, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (409, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (440, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (441, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 2, u'-\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (308, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (345, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (346, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (379, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (380, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (408, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (409, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (440, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (441, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 2, u'-\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (103, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (104, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (105, 2, u'-        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (146, 2, u'-\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (155, 2, u'-\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (165, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (166, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (274, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (295, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (296, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (297, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (340, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (349, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (359, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (360, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 198
Total del: 194
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 2, u'-\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (103, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (104, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (105, 2, u'-        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (146, 2, u'-\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (155, 2, u'-\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (165, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (166, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (274, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (295, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (296, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (297, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (340, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (349, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (359, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (360, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 2, u'-\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (103, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (104, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (105, 2, u'-        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (146, 2, u'-\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (155, 2, u'-\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (165, 2, u'-\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (166, 2, u'-\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (274, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");'), (295, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (296, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (297, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (340, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (349, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (359, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (360, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (64, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (140, 2, u'-\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (143, 2, u'-\t\t\t\tCCAssert(0, "TMX invalid value");'), (188, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (191, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
Total add: 105
Total del: 105
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (64, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (140, 2, u'-\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (143, 2, u'-\t\t\t\tCCAssert(0, "TMX invalid value");'), (188, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (191, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (64, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");'), (140, 2, u'-\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (143, 2, u'-\t\t\t\tCCAssert(0, "TMX invalid value");'), (188, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (191, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tCCAssert(pszRelativePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");'), (13, 1, u'+\tCCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");')]
===========================================
===========================================
Total add: 6
Total del: 5
Header: NS_CC_BEGIN;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tCCAssert(pszRelativePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");'), (13, 1, u'+\tCCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tCCAssert(pszRelativePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");'), (13, 1, u'+\tCCAssert(pszResourcePath != NULL, "[FileUtils setRelativePath] -- wrong relative path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (16, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 44
Total del: 19
Header: CCRenderTexture::getUIImageFromBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (16, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");'), (16, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(191, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (204, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (215, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (350, 2, u'-                    assert(row < rows.size());'), (354, 2, u'-\t\t\t\t    assert(rowColumns);'), (373, 2, u'-\t\tassert(! columnsOccupied);'), (460, 2, u'-\t\t\t\t    assert(column < columns.size());'), (464, 2, u'-\t\t\t\t    assert(columnRows);'), (489, 2, u'-\t\tassert(! rowsOccupied);'), (813, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (826, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (837, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (972, 1, u'+                    assert(row < rows.size());'), (976, 1, u'+\t\t\t\t    assert(rowColumns);'), (995, 1, u'+\t\tassert(! columnsOccupied);'), (1082, 1, u'+\t\t\t\t    assert(column < columns.size());'), (1086, 1, u'+\t\t\t\t    assert(columnRows);'), (1111, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (63, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (71, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (84, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (96, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (106, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 82
Total del: 82
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (63, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (71, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (84, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (96, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (106, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (63, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (71, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (84, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (96, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (106, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tassert(! columnsOccupied);'), (30, 1, u'+\t\tassert(! columnsOccupied);')]
===========================================
===========================================
Total add: 24
Total del: 23
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tassert(! columnsOccupied);'), (30, 1, u'+\t\tassert(! columnsOccupied);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tassert(! columnsOccupied);'), (30, 1, u'+\t\tassert(! columnsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tassert(! rowsOccupied);'), (29, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Total add: 23
Total del: 22
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tassert(! rowsOccupied);'), (29, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-\t\tassert(! rowsOccupied);'), (29, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888,@"only RGBA8888 can be saved as image");'), (3, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCRenderTexture::getUIImageFromBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888,@"only RGBA8888 can be saved as image");'), (3, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888,@"only RGBA8888 can be saved as image");'), (3, 1, u'+\t\tCCAssert(m_ePixelFormat == kCCTexture2DPixelFormat_RGBA8888, "only RGBA8888 can be saved as image");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Total add: 59
Total del: 15
Header: CCRenderTexture::saveBuffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tCCAssert(format == kCCImageFormatJPG || format == kCCImageFormatPNG,')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(111, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (206, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 102
Total del: 102
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(111, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (206, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(111, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (206, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (91, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 47
Total del: 47
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (91, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 2, u'-\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (91, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (8, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 16
Total del: 11
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (8, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\tCCAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (8, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(370, 1, u'+\t\t\t\tCCAssert(m_uNumberOfMipmaps < CC_PVRMIPMAP_MAX,')]
===========================================
Class:   class HiResTestBackToainMenuLayer : public BackToMainMenuLayer { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+#define cpAssertSpaceUnlocked(space) \\'), (3, 1, u'+\tcpAssert(!space->locked, \\')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: cpSpaceFreeChildren
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+#define cpAssertSpaceUnlocked(space) \\'), (3, 1, u'+\tcpAssert(!space->locked, \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+#define cpAssertSpaceUnlocked(space) \\'), (3, 1, u'+\tcpAssert(!space->locked, \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: cpSpaceAddCollisionHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: cpSpaceRemoveCollisionHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: cpSpaceSetDefaultCollisionHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tcpAssertSpaceUnlocked(space);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-#define cpAssertSpaceUnlocked(space) \\'), (4, 2, u'-\tcpAssert(!space->locked, \\')]
===========================================
===========================================
Total add: 0
Total del: 7
Header: cpSpaceSetDefaultCollisionHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-#define cpAssertSpaceUnlocked(space) \\'), (4, 2, u'-\tcpAssert(!space->locked, \\')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-#define cpAssertSpaceUnlocked(space) \\'), (4, 2, u'-\tcpAssert(!space->locked, \\')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCAssert(pFrame != NULL, msg);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: CCSprite::spriteWithSpriteFrameName
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCAssert(pFrame != NULL, msg);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    CCAssert(pFrame != NULL, msg);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "LabelBMFont file could not be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (3, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (3, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tCCAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (3, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for LabelBMFont");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tCCAssert( c < kCCBMFontMaxChars, "LabelBMFont: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_uParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_uParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pObject->m_uRefrence > 1);'), (3, 1, u'+\tassert(pObject->m_uReference > 1);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAutoreleasePool::addObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pObject->m_uRefrence > 1);'), (3, 1, u'+\tassert(pObject->m_uReference > 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pObject->m_uRefrence > 1);'), (3, 1, u'+\tassert(pObject->m_uReference > 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uRefrence > 0);'), (4, 1, u'+\tassert(m_uReference > 0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCObject::release
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uRefrence > 0);'), (4, 1, u'+\tassert(m_uReference > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uRefrence > 0);'), (4, 1, u'+\tassert(m_uReference > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uRefrence > 0);'), (3, 1, u'+\tassert(m_uReference > 0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCObject::retain
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uRefrence > 0);'), (3, 1, u'+\tassert(m_uReference > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_uRefrence > 0);'), (3, 1, u'+\tassert(m_uReference > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_nParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_nParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_nParticleIdx == m_uParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(pHashElement == NULL);'), (10, 1, u'+\t\tassert(pHashElement->entry->markedForDeletion);')]
===========================================
===========================================
Total add: 10
Total del: 2
Header: CCScheduler::scheduleUpdateForTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(pHashElement == NULL);'), (10, 1, u'+\t\tassert(pHashElement->entry->markedForDeletion);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(pHashElement == NULL);'), (10, 1, u'+\t\tassert(pHashElement->entry->markedForDeletion);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(m_pQuads == NULL && m_pIndices == NULL);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: CCTextureAtlas::initWithTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(m_pQuads == NULL && m_pIndices == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(m_pQuads == NULL && m_pIndices == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\t\t\tassert(textureData);')]
===========================================
===========================================
Total add: 8
Total del: 4
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\t\t\tassert(textureData);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\t\t\tassert(textureData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (9, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (11, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (12, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (9, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (11, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (12, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (9, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip" || compression == "zlib", "TMX: unsupported compression method" );'), (11, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (12, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip/zlib maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\t\t\t\tassert(inflatedLen == sizeHint);')]
===========================================
===========================================
Total add: 10
Total del: 2
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\t\t\t\tassert(inflatedLen == sizeHint);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\t\t\t\tassert(inflatedLen == sizeHint);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAction != NULL);'), (3, 1, u'+\tassert(pAction != m_pOther);')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: CCReverseTime::initWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAction != NULL);'), (3, 1, u'+\tassert(pAction != m_pOther);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAction != NULL);'), (3, 1, u'+\tassert(pAction != m_pOther);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (618, 1, u'+      lua_assert(0);  /* cannot happen */'), (653, 1, u'+    default: lua_assert(0); r = 0; break;'), (713, 1, u'+    default: lua_assert(0);'), (748, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (755, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (764, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (787, 1, u'+    default: lua_assert(0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (814, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (815, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (821, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (822, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (830, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(218, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (292, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (314, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (387, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (396, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 1, u'+  lua_assert(L->errfunc == 0);'), (434, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (630, 1, u'+    lua_assert(g->totalbytes >= g->estimate);'), (648, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (651, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (664, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (665, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (666, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (678, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (679, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (707, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (129, 1, u'+  lua_assert(currIsNewline(ls));'), (198, 1, u'+  lua_assert(isdigit(ls->current));'), (216, 1, u"+  lua_assert(s == '[' || s == ']');"), (417, 1, u'+          lua_assert(!currIsNewline(ls));'), (463, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (328, 1, u'+      default: lua_assert(0); break;'), (379, 1, u'+  lua_assert(isLua(L->ci));'), (399, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (400, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (401, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (432, 1, u'+        lua_assert(ttisstring(rb));'), (443, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (607, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (620, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (645, 1, u'+          lua_assert(isLua(L->ci));'), (646, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (731, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 2, u'-  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 2, u'-static int luaB_assert (lua_State *L) {'), (448, 2, u'-  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 2, u'-  lua_assert(dest != NO_JUMP);'), (173, 2, u'-    lua_assert(target < fs->pc);'), (218, 2, u'-    lua_assert(reg == fs->freereg);'), (235, 2, u'-    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 2, u'-      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 2, u'-      lua_assert(0);  /* invalid var kind to store */'), (518, 2, u'-  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (618, 2, u'-      lua_assert(0);  /* cannot happen */'), (653, 2, u'-    default: lua_assert(0); r = 0; break;'), (713, 2, u'-    default: lua_assert(0);'), (748, 2, u'-      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (755, 2, u'-      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (764, 2, u'-        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (787, 2, u'-    default: lua_assert(0);'), (813, 2, u'-  lua_assert(getOpMode(o) == iABC);'), (814, 2, u'-  lua_assert(getBMode(o) != OpArgN || b == 0);'), (815, 2, u'-  lua_assert(getCMode(o) != OpArgN || c == 0);'), (821, 2, u'-  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (822, 2, u'-  lua_assert(getCMode(o) == OpArgN);'), (830, 2, u'-  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(218, 2, u'-    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 2, u'-    lua_assert(ttisfunction(ci->func));'), (507, 2, u'-    lua_assert(pc != -1);'), (511, 2, u'-        lua_assert(ttisstring(&p->k[g]));'), (583, 2, u'-  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 2, u'-  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 2, u'-    lua_assert(L->ci->top <= L->stack_last);'), (200, 2, u'-    lua_assert(!L->allowhook);'), (218, 2, u'-    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 2, u'-    lua_assert(iswhite(obj2gco(htab)));'), (292, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (314, 2, u'-    lua_assert(ci->top <= L->stack_last);'), (387, 2, u'-    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 2, u'-    lua_assert(L->status == LUA_YIELD);'), (396, 2, u'-      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 2, u'-  lua_assert(L->errfunc == 0);'), (434, 2, u'-    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 2, u'-    lua_assert(p->v != &p->u.value);'), (77, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 2, u'-  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 2, u'-    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-  lua_assert(ttisnil(gval(n)));'), (70, 2, u'-  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 2, u'-    default: lua_assert(0);'), (186, 2, u'-    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 2, u'-      lua_assert(!ttisnil(gkey(n)));'), (233, 2, u'-    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 2, u'-    lua_assert(ci->top <= l->stack_last);'), (279, 2, u'-  lua_assert(isgray(o));'), (318, 2, u'-    default: lua_assert(0); return 0;'), (355, 2, u'-    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 2, u'-      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 2, u'-    default: lua_assert(0);'), (415, 2, u'-      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 2, u'-      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 2, u'-    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 2, u'-  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 2, u'-      lua_assert(old >= g->totalbytes);'), (588, 2, u'-      lua_assert(old >= g->totalbytes);'), (605, 2, u'-    default: lua_assert(0); return 0;'), (630, 2, u'-    lua_assert(g->totalbytes >= g->estimate);'), (648, 2, u'-  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (651, 2, u'-    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (664, 2, u'-  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (665, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (666, 2, u'-  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (678, 2, u'-  lua_assert(isblack(o) && !isdead(g, o));'), (679, 2, u'-  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (707, 2, u'-      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 2, u'-    lua_assert(token == cast(unsigned char, token));'), (129, 2, u'-  lua_assert(currIsNewline(ls));'), (198, 2, u'-  lua_assert(isdigit(ls->current));'), (216, 2, u"-  lua_assert(s == '[' || s == ']');"), (417, 2, u'-          lua_assert(!currIsNewline(ls));'), (463, 2, u'-  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 2, u'-  lua_assert((osize == 0) == (block == NULL));'), (82, 2, u'-  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 2, u'-      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-      lua_assert(f->upvalues[i] == name);'), (200, 2, u'-  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 2, u'-  lua_assert(fs->freereg == fs->nactvar);'), (303, 2, u'-  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 2, u'-  lua_assert(bl->nactvar == fs->nactvar);'), (374, 2, u'-  lua_assert(luaG_checkcode(f));'), (375, 2, u'-  lua_assert(fs->bl == NULL);'), (394, 2, u'-  lua_assert(funcstate.prev == NULL);'), (395, 2, u'-  lua_assert(funcstate.f->nups == 0);'), (396, 2, u'-  lua_assert(lexstate.fs == NULL);'), (511, 2, u'-    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 2, u'-  lua_assert(f->k == VNONRELOC);'), (887, 2, u'-  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 2, u'-        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 2, u'-        lua_assert(nret == fs->freereg - first);'), (1332, 2, u'-    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 2, u'-  lua_assert(g->rootgc == obj2gco(L));'), (110, 2, u'-  lua_assert(g->strt.nuse == 0);'), (114, 2, u'-  lua_assert(g->totalbytes == sizeof(LG));'), (129, 2, u'-  lua_assert(iswhite(obj2gco(L1)));'), (136, 2, u'-  lua_assert(L1->openupval == NULL);'), (210, 2, u'-  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 2, u'-      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 2, u'-  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 2, u'-    lua_assert(n != dummynode);'), (427, 2, u'-  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 2, u'-  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 2, u"-    lua_assert(argv[i][0] == '-');"), (303, 2, u'-        lua_assert(chunk != NULL);'), (311, 2, u'-        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 2, u'-  lua_assert(ttype(t1) == ttype(t2));'), (328, 2, u'-      default: lua_assert(0); break;'), (379, 2, u'-  lua_assert(isLua(L->ci));'), (399, 2, u'-    lua_assert(base == L->base && L->base == L->ci->base);'), (400, 2, u'-    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (401, 2, u'-    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (432, 2, u'-        lua_assert(ttisstring(rb));'), (443, 2, u'-        lua_assert(ttisstring(KBx(i)));'), (607, 2, u'-        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (620, 2, u'-            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (645, 2, u'-          lua_assert(isLua(L->ci));'), (646, 2, u'-          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (731, 2, u'-            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pfnSelector);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pfnSelector);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pfnSelector);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(187, 2, u'-                CCAssert(layout_info_.end() != pos, "!!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(pElement->paused == bPaused);')]
===========================================
===========================================
Total add: 3
Total del: 18
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(pElement->paused == bPaused);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\tassert(pElement->paused == bPaused);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                CCAssert(m_pCurDict && !m_sCurKey.empty(), "");'), (31, 1, u'+                CCAssert(! m_tDictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Total add: 24
Total del: 10
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                CCAssert(m_pCurDict && !m_sCurKey.empty(), "");'), (31, 1, u'+                CCAssert(! m_tDictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                CCAssert(m_pCurDict && !m_sCurKey.empty(), "");'), (31, 1, u'+                CCAssert(! m_tDictStack.empty(), "The state is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+                CCAssert(! m_tArrayStack.empty(), "The state is worng!");')]
===========================================
===========================================
Total add: 20
Total del: 4
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+                CCAssert(! m_tArrayStack.empty(), "The state is worng!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 1, u'+                CCAssert(! m_tArrayStack.empty(), "The state is worng!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
Total add: 6
Total del: 5
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(187, 2, u'-                CCAssert(layout_info_.end() != pos, "!!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(187, 1, u'+                CCAssert(layout_info_.end() != pos, "!!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);'), (5, 1, u'+    assert(false);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCScheduler::unscheduleTimer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);'), (5, 1, u'+    assert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(false);'), (5, 1, u'+    assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFileUtils::getFileDataFromZip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCAssert(nSize == 0 || nSize == (int)FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(pfnSelector);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: CCScheduler::unscheduleAllTimers
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(pfnSelector);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert(pfnSelector);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(pTarget);'), (5, 2, u'-\tassert(pfnSelector);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CCScheduler::unscheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(pTarget);'), (5, 2, u'-\tassert(pfnSelector);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(pTarget);'), (5, 2, u'-\tassert(pfnSelector);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(187, 1, u'+                CCAssert(layout_info_.end() != pos, "!!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(497, 1, u'+  lua_assert(iswhite(obj2gco(cl)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(334, 1, u'+static int luaB_assert (lua_State *L) {'), (448, 1, u'+  {"assert", luaB_assert},')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(83, 1, u'+  lua_assert(dest != NO_JUMP);'), (173, 1, u'+    lua_assert(target < fs->pc);'), (218, 1, u'+    lua_assert(reg == fs->freereg);'), (235, 1, u'+    lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v));'), (373, 1, u'+      lua_assert(e->k == VVOID || e->k == VJMP);'), (495, 1, u'+      lua_assert(0);  /* invalid var kind to store */'), (518, 1, u'+  lua_assert(testTMode(GET_OPCODE(*pc)) && GET_OPCODE(*pc) != OP_TESTSET &&'), (618, 1, u'+      lua_assert(0);  /* cannot happen */'), (653, 1, u'+    default: lua_assert(0); r = 0; break;'), (713, 1, u'+    default: lua_assert(0);'), (748, 1, u'+      lua_assert(e1->t == NO_JUMP);  /* list must be closed */'), (755, 1, u'+      lua_assert(e1->f == NO_JUMP);  /* list must be closed */'), (764, 1, u'+        lua_assert(e1->u.s.info == GETARG_B(getcode(fs, e2))-1);'), (787, 1, u'+    default: lua_assert(0);'), (813, 1, u'+  lua_assert(getOpMode(o) == iABC);'), (814, 1, u'+  lua_assert(getBMode(o) != OpArgN || b == 0);'), (815, 1, u'+  lua_assert(getCMode(o) != OpArgN || c == 0);'), (821, 1, u'+  lua_assert(getOpMode(o) == iABx || getOpMode(o) == iAsBx);'), (822, 1, u'+  lua_assert(getCMode(o) == OpArgN);'), (830, 1, u'+  lua_assert(tostore != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(218, 1, u'+    lua_assert(lua_getinfo(L, "lS", ar));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(246, 1, u'+    lua_assert(ttisfunction(ci->func));'), (507, 1, u'+    lua_assert(pc != -1);'), (511, 1, u'+        lua_assert(ttisstring(&p->k[g]));'), (583, 1, u'+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(72, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (144, 1, u'+  lua_assert(L->stack_last - L->stack == L->stacksize - EXTRA_STACK - 1);'), (195, 1, u'+    lua_assert(L->ci->top <= L->stack_last);'), (200, 1, u'+    lua_assert(!L->allowhook);'), (218, 1, u'+    lua_assert(p->is_vararg & VARARG_HASARG);'), (237, 1, u'+    lua_assert(iswhite(obj2gco(htab)));'), (292, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (314, 1, u'+    lua_assert(ci->top <= L->stack_last);'), (387, 1, u'+    lua_assert(ci == L->base_ci && firstArg > L->base);'), (392, 1, u'+    lua_assert(L->status == LUA_YIELD);'), (396, 1, u'+      lua_assert(GET_OPCODE(*((ci-1)->savedpc - 1)) == OP_CALL ||'), (425, 1, u'+  lua_assert(L->errfunc == 0);'), (434, 1, u'+    lua_assert(L->nCcalls == L->baseCcalls);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    lua_assert(p->v != &p->u.value);'), (77, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (83, 1, u'+  lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (101, 1, u'+    lua_assert(!isblack(o) && uv->v != &uv->u.value);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+  lua_assert(ttisnil(gval(n)));'), (70, 1, u'+  lua_assert(iswhite(o) && !isdead(g, o));'), (110, 1, u'+    default: lua_assert(0);'), (186, 1, u'+    lua_assert(ttype(gkey(n)) != LUA_TDEADKEY || ttisnil(gval(n)));'), (190, 1, u'+      lua_assert(!ttisnil(gkey(n)));'), (233, 1, u'+    lua_assert(cl->l.nupvalues == cl->l.p->nups);'), (262, 1, u'+    lua_assert(ci->top <= l->stack_last);'), (279, 1, u'+  lua_assert(isgray(o));'), (318, 1, u'+    default: lua_assert(0); return 0;'), (355, 1, u'+    lua_assert(testbit(h->marked, VALUEWEAKBIT) ||'), (385, 1, u'+      lua_assert(gco2th(o) != L && gco2th(o) != G(L)->mainthread);'), (398, 1, u'+    default: lua_assert(0);'), (415, 1, u'+      lua_assert(!isdead(g, curr) || testbit(curr->gch.marked, FIXEDBIT));'), (420, 1, u'+      lua_assert(isdead(g, curr) || deadmask == bitmask(SFIXEDBIT));'), (518, 1, u'+    lua_assert(uv->u.l.next->u.l.prev == uv && uv->u.l.prev->u.l.next == uv);'), (535, 1, u'+  lua_assert(!iswhite(obj2gco(g->mainthread)));'), (577, 1, u'+      lua_assert(old >= g->totalbytes);'), (588, 1, u'+      lua_assert(old >= g->totalbytes);'), (605, 1, u'+    default: lua_assert(0); return 0;'), (630, 1, u'+    lua_assert(g->totalbytes >= g->estimate);'), (648, 1, u'+  lua_assert(g->gcstate != GCSpause && g->gcstate != GCSpropagate);'), (651, 1, u'+    lua_assert(g->gcstate == GCSsweepstring || g->gcstate == GCSsweep);'), (664, 1, u'+  lua_assert(isblack(o) && iswhite(v) && !isdead(g, v) && !isdead(g, o));'), (665, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (666, 1, u'+  lua_assert(ttype(&o->gch) != LUA_TTABLE);'), (678, 1, u'+  lua_assert(isblack(o) && !isdead(g, o));'), (679, 1, u'+  lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);'), (707, 1, u'+      lua_assert(g->gcstate != GCSfinalize && g->gcstate != GCSpause);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    lua_assert(strlen(luaX_tokens[i])+1 <= TOKEN_LEN);'), (80, 1, u'+    lua_assert(token == cast(unsigned char, token));'), (129, 1, u'+  lua_assert(currIsNewline(ls));'), (198, 1, u'+  lua_assert(isdigit(ls->current));'), (216, 1, u"+  lua_assert(s == '[' || s == ']');"), (417, 1, u'+          lua_assert(!currIsNewline(ls));'), (463, 1, u'+  lua_assert(ls->lookahead.token == TK_EOS);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(78, 1, u'+  lua_assert((osize == 0) == (block == NULL));'), (82, 1, u'+  lua_assert((nsize == 0) == (block == NULL));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 1, u'+      lua_assert(iscollectable(t1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+      lua_assert(f->upvalues[i] == name);'), (200, 1, u'+  lua_assert(v->k == VLOCAL || v->k == VUPVAL);'), (292, 1, u'+  lua_assert(fs->freereg == fs->nactvar);'), (303, 1, u'+  lua_assert(!bl->isbreakable || !bl->upval);'), (304, 1, u'+  lua_assert(bl->nactvar == fs->nactvar);'), (374, 1, u'+  lua_assert(luaG_checkcode(f));'), (375, 1, u'+  lua_assert(fs->bl == NULL);'), (394, 1, u'+  lua_assert(funcstate.prev == NULL);'), (395, 1, u'+  lua_assert(funcstate.f->nups == 0);'), (396, 1, u'+  lua_assert(lexstate.fs == NULL);'), (511, 1, u'+    lua_assert(cc.v.k == VVOID || cc.tostore > 0);'), (642, 1, u'+  lua_assert(f->k == VNONRELOC);'), (887, 1, u'+  lua_assert(bl.breaklist == NO_JUMP);'), (1252, 1, u'+        lua_assert(GETARG_A(getcode(fs,&e)) == fs->nactvar);'), (1263, 1, u'+        lua_assert(nret == fs->freereg - first);'), (1332, 1, u'+    lua_assert(ls->fs->f->maxstacksize >= ls->fs->freereg &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(109, 1, u'+  lua_assert(g->rootgc == obj2gco(L));'), (110, 1, u'+  lua_assert(g->strt.nuse == 0);'), (114, 1, u'+  lua_assert(g->totalbytes == sizeof(LG));'), (129, 1, u'+  lua_assert(iswhite(obj2gco(L1)));'), (136, 1, u'+  lua_assert(L1->openupval == NULL);'), (210, 1, u'+  lua_assert(G(L)->tmudata == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+      lua_assert(cast_int(h%newsize) == lmod(h, newsize));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(206, 1, u'+  lua_assert(*narray/2 <= na && na <= *narray);'), (408, 1, u'+    lua_assert(n != dummynode);'), (427, 1, u'+  lua_assert(ttisnil(gval(mp)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(52, 1, u'+  lua_assert(event <= TM_EQ);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 1, u"+    lua_assert(argv[i][0] == '-');"), (303, 1, u'+        lua_assert(chunk != NULL);'), (311, 1, u'+        lua_assert(filename != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(253, 1, u'+  lua_assert(ttype(t1) == ttype(t2));'), (328, 1, u'+      default: lua_assert(0); break;'), (379, 1, u'+  lua_assert(isLua(L->ci));'), (399, 1, u'+    lua_assert(base == L->base && L->base == L->ci->base);'), (400, 1, u'+    lua_assert(base <= L->top && L->top <= L->stack + L->stacksize);'), (401, 1, u'+    lua_assert(L->top == L->ci->top || luaG_checkopenop(i));'), (432, 1, u'+        lua_assert(ttisstring(rb));'), (443, 1, u'+        lua_assert(ttisstring(KBx(i)));'), (607, 1, u'+        lua_assert(GETARG_C(i) - 1 == LUA_MULTRET);'), (620, 1, u'+            lua_assert(L->top == L->base + clvalue(func)->l.p->maxstacksize);'), (645, 1, u'+          lua_assert(isLua(L->ci));'), (646, 1, u'+          lua_assert(GET_OPCODE(*((L->ci)->savedpc - 1)) == OP_CALL);'), (731, 1, u'+            lua_assert(GET_OPCODE(*pc) == OP_MOVE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( selector, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::schedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( selector, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tCCAssert( selector != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( selector, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->body, "Cannot add a shape with a NULL body.");')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: cpSpaceAddShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->body, "Cannot add a shape with a NULL body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->body, "Cannot add a shape with a NULL body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->body, "Cannot add a static shape with a NULL body.");')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: cpSpaceAddStaticShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->body, "Cannot add a static shape with a NULL body.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(shape->body, "Cannot add a static shape with a NULL body.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpArrayContains(space->bodies, body), "Cannot add the same body more than once.");'), (3, 1, u'+\tcpAssertWarn(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (4, 1, u'+\tcpAssert(!body->space, "Cannot add a body to a more than one space or to the same space twice.");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: cpSpaceAddBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpArrayContains(space->bodies, body), "Cannot add the same body more than once.");'), (3, 1, u'+\tcpAssertWarn(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (4, 1, u'+\tcpAssert(!body->space, "Cannot add a body to a more than one space or to the same space twice.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssert(!cpArrayContains(space->bodies, body), "Cannot add the same body more than once.");'), (3, 1, u'+\tcpAssertWarn(!cpBodyIsStatic(body), "Static bodies cannot be added to a space as they are not meant to be simulated.");'), (4, 1, u'+\tcpAssert(!body->space, "Cannot add a body to a more than one space or to the same space twice.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),'), (13, 1, u'+\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),')]
===========================================
===========================================
Total add: 12
Total del: 2
Header: cpSpaceRemoveShape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),'), (13, 1, u'+\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),'), (13, 1, u'+\tcpAssertWarn(cpHashSetFind(space->activeShapes->handleSet, shape->hashid, shape),')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpArrayContains(space->bodies, body),'), (4, 1, u'+\tcpAssertWarn(body->space == space,')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: cpSpaceRemoveBody
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpArrayContains(space->bodies, body),'), (4, 1, u'+\tcpAssertWarn(body->space == space,')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tcpAssertWarn(cpArrayContains(space->bodies, body),'), (4, 1, u'+\tcpAssertWarn(body->space == space,')]
===========================================
Class:class CCInputView : public TWindow { 
Class:class CCTextFieldTTF::LengthStack : public std::vector< unsigned short > { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(pZipFileName != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");')]
===========================================
===========================================
Total add: 26
Total del: 16
Header: getDiffResolutionPath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(pZipFileName != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCAssert(pZipFileName != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                assert(row < rows.size());'), (15, 2, u'-\t\t\t\tassert(rowColumns);'), (36, 1, u'+                    assert(row < rows.size());'), (40, 1, u'+\t\t\t\t    assert(rowColumns);')]
===========================================
===========================================
Total add: 26
Total del: 28
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                assert(row < rows.size());'), (15, 2, u'-\t\t\t\tassert(rowColumns);'), (36, 1, u'+                    assert(row < rows.size());'), (40, 1, u'+\t\t\t\t    assert(rowColumns);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-                assert(row < rows.size());'), (15, 2, u'-\t\t\t\tassert(rowColumns);'), (36, 1, u'+                    assert(row < rows.size());'), (40, 1, u'+\t\t\t\t    assert(rowColumns);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\t\tassert(column < columns.size());'), (15, 2, u'-\t\t\t\tassert(columnRows);'), (43, 1, u'+\t\t\t\t    assert(column < columns.size());'), (47, 1, u'+\t\t\t\t    assert(columnRows);')]
===========================================
===========================================
Total add: 33
Total del: 34
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\t\tassert(column < columns.size());'), (15, 2, u'-\t\t\t\tassert(columnRows);'), (43, 1, u'+\t\t\t\t    assert(column < columns.size());'), (47, 1, u'+\t\t\t\t    assert(columnRows);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-\t\t\t\tassert(column < columns.size());'), (15, 2, u'-\t\t\t\tassert(columnRows);'), (43, 1, u'+\t\t\t\t    assert(column < columns.size());'), (47, 1, u'+\t\t\t\t    assert(columnRows);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(121, 1, u'+    CCAssert(index < data->num, "index out of range in objectAtIndex()");'), (163, 1, u'+    CCAssert(data->num, "no objects added");')]
===========================================
Class:     class CCIMEDispatcher::Impl { 
Class: class CCTextFieldTTF::LengthStack : public std::vector< unsigned short > { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                CCAssert(m_pTMXLayers, "Allocate memory failed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                    CCAssert(m_pTMXLayers, "Allocate memory filed!");')]
===========================================
===========================================
Total add: 0
Total del: 5
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                    CCAssert(m_pTMXLayers, "Allocate memory filed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-                    CCAssert(m_pTMXLayers, "Allocate memory filed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (94, 1, u'+\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-\tCCAssert( scene != NULL, "Argument scene must be non-nil");'), (94, 2, u'-\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                    CCAssert(m_pTMXLayers, "Allocate memory filed!");')]
===========================================
===========================================
Total add: 9
Total del: 0
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                    CCAssert(m_pTMXLayers, "Allocate memory filed!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                    CCAssert(m_pTMXLayers, "Allocate memory filed!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 1, u'+\tassert(m_pobOpenGLView);'), (269, 1, u'+\tassert(pobOpenGLView);'), (483, 1, u'+\tassert(pScene != NULL);'), (484, 1, u'+\tassert(m_pRunningScene == NULL);'), (492, 1, u'+\tassert(pScene != NULL);'), (504, 1, u'+\tassert(pScene);'), (514, 1, u'+\tassert(m_pRunningScene != NULL);'), (714, 1, u'+\tassert(isOpenGLAttached());'), (722, 1, u'+\tassert(! isOpenGLAttached());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(170, 1, u'+\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (501, 1, u'+\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (523, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (524, 1, u'+\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (546, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (552, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (581, 1, u'+\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (684, 1, u'+\tCCAssert( child != NULL, "Child must be non-nil");'), (869, 1, u'+\tCCAssert( action != NULL, "Argument must be non-nil");'), (886, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (892, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (925, 1, u'+\tCCAssert( selector != NULL, "Argument must be non-nil");'), (926, 1, u'+\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(272, 1, u'+\t\tassert(0);'), (277, 1, u'+\t\tassert(0);'), (282, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 2, u'-\tassert(m_pobOpenGLView);'), (277, 2, u'-\tassert(pobOpenGLView);'), (496, 2, u'-\tassert(pScene != NULL);'), (497, 2, u'-\tassert(m_pRunningScene == NULL);'), (505, 2, u'-\tassert(pScene != NULL);'), (517, 2, u'-\tassert(pScene);'), (527, 2, u'-\tassert(m_pRunningScene != NULL);'), (668, 2, u'-\tassert(0);'), (674, 2, u'-\tassert(0);'), (680, 2, u'-\tassert(0);'), (745, 2, u'-\tassert(isOpenGLAttached());'), (753, 2, u'-\tassert(! isOpenGLAttached());'), (909, 2, u'-    assert(false);'), (915, 2, u'-    assert(false);'), (921, 2, u'-    assert(false);'), (926, 2, u'-    assert(false);'), (932, 2, u'-    assert(false);'), (937, 2, u'-    assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(272, 2, u'-\t\tassert(0);'), (277, 2, u'-\t\tassert(0);'), (282, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(170, 2, u'-\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (501, 2, u'-\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (523, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (524, 2, u'-\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (546, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (552, 2, u'-\tCCAssert( child != NULL, "Argument must be non-nil");'), (581, 2, u'-\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (684, 2, u'-\tCCAssert( child != NULL, "Child must be non-nil");'), (869, 2, u'-\tCCAssert( action != NULL, "Argument must be non-nil");'), (886, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (892, 2, u'-\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (925, 2, u'-\tCCAssert( selector != NULL, "Argument must be non-nil");'), (926, 2, u'-\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(715, 2, u'-    CCAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 2, u'-        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(254, 1, u'+\tCCAssert(false, "Layer#ccTouchBegan override me");'), (627, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (638, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(165, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (176, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (186, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (328, 1, u'+                assert(row < rows.size());'), (332, 1, u'+\t\t\t\tassert(rowColumns);'), (350, 1, u'+\t\tassert(! columnsOccupied);'), (440, 1, u'+\t\t\t\tassert(column < columns.size());'), (444, 1, u'+\t\t\t\tassert(columnRows);'), (468, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(153, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (158, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (163, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (168, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (176, 1, u'+\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (181, 1, u'+\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(298, 2, u'-\tCCAssert(false, "Layer#ccTouchBegan override me");'), (671, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (682, 2, u'-\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(165, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (176, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (186, 2, u'-\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (358, 2, u'-                assert(row < rows.size());'), (362, 2, u'-\t\t\t\tassert(rowColumns);'), (380, 2, u'-\t\tassert(! columnsOccupied);'), (470, 2, u'-\t\t\t\tassert(column < columns.size());'), (474, 2, u'-\t\t\t\tassert(columnRows);'), (498, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(153, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (158, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (163, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (168, 2, u'-\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (176, 2, u'-\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (181, 2, u'-\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(244, 2, u'-\t\tassert(0);'), (249, 2, u'-\t\tassert(0);'), (254, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(656, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (667, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(381, 2, u'-                assert(row < rows.size());'), (385, 2, u'-\t\t\t\tassert(rowColumns);'), (403, 2, u'-\t\tassert(! columnsOccupied);'), (493, 2, u'-\t\t\t\tassert(column < columns.size());'), (497, 2, u'-\t\t\t\tassert(columnRows);'), (521, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(169, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (480, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (502, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (503, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (525, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (531, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (560, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (669, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (854, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (871, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (877, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (910, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (911, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
===========================================
Total add: 10
Total del: 1
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));')]
===========================================
===========================================
Total add: 20
Total del: 1
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+\t\t\tIwAssert(GAME, ("Play music %s Failed. Error Code : %s", pszFilePath, s3eAudioGetErrorString()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tIwAssertMsg(GAME, this, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tIwAssertMsg(GAME, this, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\t\tIwAssertMsg(GAME, this, ("Play sound %s Failed. Error Code : %s", pszFilePath, s3eSoundGetErrorString()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: namespace CocosDenshion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\t\tIwAssertMsg(GAME, fileHandle, ("Open file %s Failed. s3eFileError Code : %i", pszFilePath, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (7, 1, u'+        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (7, 1, u'+        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (7, 1, u'+        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (7, 1, u'+\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (7, 1, u'+\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (7, 1, u'+\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (6, 1, u'+        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: CCFileUtils::getFileData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (6, 1, u'+        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tIwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));'), (6, 1, u'+        IwAssertMsg(GAME, pFile, ("Open file %s Failed. s3eFileError Code : %i", pszFileName, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(pMaker->m_pCurDict && !pMaker->m_sCurKey.empty(), "");'), (4, 1, u'+\t\t\tCCAssert(m_pCurDict && !m_sCurKey.empty(), "");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: startElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(pMaker->m_pCurDict && !pMaker->m_sCurKey.empty(), "");'), (4, 1, u'+\t\t\tCCAssert(m_pCurDict && !m_sCurKey.empty(), "");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tCCAssert(pMaker->m_pCurDict && !pMaker->m_sCurKey.empty(), "");'), (4, 1, u'+\t\t\tCCAssert(m_pCurDict && !m_sCurKey.empty(), "");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
Total add: 12
Total del: 4
Header: endElement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+        CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\tCCAssert(!pMaker->m_sCurKey.empty(), "not found real : <integet/real>");'), (4, 1, u'+ \t\t\tCCAssert(!m_sCurKey.empty(), "not found real : <integet/real>");')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: textHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\tCCAssert(!pMaker->m_sCurKey.empty(), "not found real : <integet/real>");'), (4, 1, u'+ \t\t\tCCAssert(!m_sCurKey.empty(), "not found real : <integet/real>");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\tCCAssert(!pMaker->m_sCurKey.empty(), "not found real : <integet/real>");'), (4, 1, u'+ \t\t\tCCAssert(!m_sCurKey.empty(), "not found real : <integet/real>");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\tCCAssert(!pMaker->m_sCurKey.empty(), "not found string");'), (4, 1, u'+ \t\t\tCCAssert(!m_sCurKey.empty(), "not found string");')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: textHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\tCCAssert(!pMaker->m_sCurKey.empty(), "not found string");'), (4, 1, u'+ \t\t\tCCAssert(!m_sCurKey.empty(), "not found string");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \t\t\tCCAssert(!pMaker->m_sCurKey.empty(), "not found string");'), (4, 1, u'+ \t\t\tCCAssert(!m_sCurKey.empty(), "not found string");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            CCAssert(m_bInArray, "The plist file is wrong!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCDirector::setAnimationInterval
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(0);')]
===========================================
Class: class CCDictMaker { 
Class: class CCDictMaker : public CCSAXDelegator { 
Class:class CCDictMaker class CCDictMaker
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(84, 2, u'-        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tIwAssertMsg(GAME, file, ("Open file %s Failed. s3eFileError Code : %i", pszFile, s3eFileGetError()));'), (19, 1, u'+\t\t\tIwAssertMsg(GAME, file, ("Open file %s Failed. s3eFileError Code : %i", pszFile, s3eFileGetError()));')]
===========================================
===========================================
Total add: 14
Total del: 4
Header: CCSAXParser::init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tIwAssertMsg(GAME, file, ("Open file %s Failed. s3eFileError Code : %i", pszFile, s3eFileGetError()));'), (19, 1, u'+\t\t\tIwAssertMsg(GAME, file, ("Open file %s Failed. s3eFileError Code : %i", pszFile, s3eFileGetError()));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\tIwAssertMsg(GAME, file, ("Open file %s Failed. s3eFileError Code : %i", pszFile, s3eFileGetError()));'), (19, 1, u'+\t\t\tIwAssertMsg(GAME, file, ("Open file %s Failed. s3eFileError Code : %i", pszFile, s3eFileGetError()));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(340, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (342, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Total add: 6
Total del: 551
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(340, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (342, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(340, 2, u'-\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (342, 2, u'-\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(59, 1, u'+    assert(pDelegate != NULL);')]
===========================================
Class:  class CCDictMaker : public CCSAXDelegator { 
Class: class Callback : public IBindStatusCallback { class Callback : public IBindStatusCallback 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(827, 1, u'+    Assert(strm->avail_out > 0, "bug2");'), (1061, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1072, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1075, 1, u'+        Assert(cur_match < s->strstart, "no future");'), (1102, 1, u'+        Assert(scan[2] == match[2], "scan[2]?");'), (1113, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1133, 1, u'+        Assert(*scan == *match, "match[2]?");'), (1145, 1, u'+        Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1187, 1, u'+    Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");'), (1189, 1, u'+    Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");'), (1191, 1, u'+    Assert(cur_match < s->strstart, "no future");'), (1206, 1, u'+    Assert(*scan == *match, "match[2]?");'), (1218, 1, u'+    Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");'), (1340, 1, u'+        Assert(more >= 2, "more < 2");'), (1409, 1, u'+            Assert(s->strstart < s->w_size+MAX_DIST(s) ||'), (1417, 1, u'+        Assert(s->block_start >= 0L, "block gone");'), (1666, 1, u'+    Assert (flush != Z_NO_FLUSH, "no flush?");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(341, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (343, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Total add: 554
Total del: 0
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(341, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (343, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(341, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (343, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tassert(format >=0 && format <= 3);'), (36, 1, u'+\tassert(format >=0 && format <= 3);')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tassert(format >=0 && format <= 3);'), (36, 1, u'+\tassert(format >=0 && format <= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-\tassert(format >=0 && format <= 3);'), (36, 1, u'+\tassert(format >=0 && format <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-\t\t\tassert(false);'), (139, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Total add: 83
Total del: 83
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-\t\t\tassert(false);'), (139, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 2, u'-\t\t\tassert(false);'), (139, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (15, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (31, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (41, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (15, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (31, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (41, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (15, 2, u'-\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (31, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (41, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(0);'), (35, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Total add: 23
Total del: 23
Header: CCActionInterval::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(0);'), (35, 1, u'+\t\tassert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\t\tassert(0);'), (35, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (8, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (13, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (18, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (8, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (13, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (18, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (8, 2, u'-\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");'), (13, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (18, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (4, 1, u'+    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (4, 1, u'+    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (4, 1, u'+    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
Class:   class HiResTestBackToainMenuLayer : public BackToMainMenuLayer { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(m_pAnimations == NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(m_pAnimations == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(m_pAnimations == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 2, u'-        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(149, 1, u'+        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 2, u'-    assert(pDelegate != NULL);')]
===========================================
Class:class CCEGL class CCEGL
Class:class CCDictMaker class CCDictMaker
Class: class BitmapDC { 
Class: class CCLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+    assert(pDelegate != NULL);')]
===========================================
Class:class CCEGL class CCEGL
Class:class CCDictMaker class CCDictMaker
Class: class BitmapDC { 
Class: class CCLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class BitmapDC { 
Class:class CCDictMaker class CCDictMaker
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 1, u'+    assert(pDelegate != NULL);')]
===========================================
Class:class CCEGL class CCEGL
Class:class CCDictMaker class CCDictMaker
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(68, 2, u'-    assert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (3, 1, u'+\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCAtlasNode::updateAtlasValues
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (3, 1, u'+\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");'), (3, 1, u'+\tCCAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+\tassert(pObject->m_uRefrence > 1);'), (165, 1, u'+\tassert(m_pCurReleasePool);'), (181, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tassert(0);'), (66, 1, u'+\tassert(m_uRefrence > 0);'), (77, 1, u'+\tassert(m_uRefrence > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-\tassert(pObject->m_uRefrence > 1);'), (165, 2, u'-\tassert(m_pCurReleasePool);'), (181, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\tassert(0);'), (66, 2, u'-\tassert(m_uRefrence > 0);'), (77, 2, u'-\tassert(m_uRefrence > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    NSAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");'), (6, 1, u'+    CCAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCEventDispatcher::touchesCancelledWithEvent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    NSAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");'), (6, 1, u'+    CCAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    NSAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");'), (6, 1, u'+    CCAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace   cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace   cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+        CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCKeypadHandler::initWithDelegate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");'), (3, 1, u'+    CCAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+        CCAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (3, 1, u'+\t\tCCAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (3, 1, u'+\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (3, 1, u'+\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (3, 1, u'+\t\tCCAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (7, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (7, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (7, 1, u'+\t\tCCAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tCCAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tCCAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tCCAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");'), (3, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");'), (3, 1, u'+\t\tCCAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            NSAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (4, 1, u'+            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCRenderTexture::initWithWidthAndHeight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            NSAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (4, 1, u'+            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            NSAssert(0, "Render Texture : Could not attach texture to framebuffer");'), (4, 1, u'+            CCAssert(0, "Render Texture : Could not attach texture to framebuffer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert( dict != NULL, "Particles: file not found");'), (6, 1, u'+\tCCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert( dict != NULL, "Particles: file not found");'), (6, 1, u'+\tCCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert( dict != NULL, "Particles: file not found");'), (6, 1, u'+\tCCAssert( dict != NULL, "Particles: file not found");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (4, 1, u'+\t\t\t\tCCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (4, 1, u'+\t\t\t\tCCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (4, 1, u'+\t\t\t\tCCAssert( false, "Invalid emitterType in config file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (4, 1, u'+\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (8, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (10, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (16, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (18, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (4, 1, u'+\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (8, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (10, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (16, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (18, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (4, 1, u'+\t\t\t\t\tCCAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (8, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (10, 1, u'+\t\t\t\t\t\tCCAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (16, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (18, 1, u'+\t\t\t\t\t\tCCAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (3, 1, u'+\t\t\tCCAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getTangentialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getTangentialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRadialAccel
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (9, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (10, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (16, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (17, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: CCParticleSystem::getRadialAccelVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (9, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (10, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (16, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (17, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (9, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (10, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (16, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (17, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getSpeed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getSpeedVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getStartRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getStartRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getEndRadius
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getEndRadiusVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRotatePerSecond
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::setRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystem::getRotatePerSecondVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (3, 1, u'+\tCCAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffsetInPixels() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemQuad::setDisplayFrame
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffsetInPixels() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffsetInPixels() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (3, 1, u'+\tCCAssert( CCPoint::CCPointEqualToPoint( spriteFrame->getOffsetInPixels() , CCPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemQuad::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");'), (3, 1, u'+    CCAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(false, "Layer#ccTouchBegan override me");'), (3, 1, u'+\tCCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCLayer::ccTouchBegan
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(false, "Layer#ccTouchBegan override me");'), (3, 1, u'+\tCCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(false, "Layer#ccTouchBegan override me");'), (3, 1, u'+\tCCAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCMultiplexLayer::switchTo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCMultiplexLayer::switchToAndReleaseMe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (3, 1, u'+\tCCAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (3, 1, u'+\t\tCCAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (3, 1, u'+\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::getScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (3, 1, u'+\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (3, 1, u'+\tCCAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( aTag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (5, 1, u'+\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (5, 1, u'+\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (4, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");'), (5, 1, u'+\tCCAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::addChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::removeChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCNodeTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (3, 1, u'+\tCCAssert( child != NULL, "Child must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::runAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (3, 1, u'+\tCCAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::getActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (3, 1, u'+\tCCAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (3, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+\tCCAssert( selector != NULL, "Argument must be non-nil");'), (5, 1, u'+\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCNode::schedule
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (3, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+\tCCAssert( selector != NULL, "Argument must be non-nil");'), (5, 1, u'+\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (3, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");'), (4, 1, u'+\tCCAssert( selector != NULL, "Argument must be non-nil");'), (5, 1, u'+\tCCAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemPoint::setStartSpin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemPoint::setStartSpinVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemPoint::setEndSpin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemPoint::setEndSpinVar
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (3, 1, u'+\tCCAssert(var == 0, "PointParticleSystem doesn\'t support spinning");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (3, 1, u'+\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemPoint::setStartSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (3, 1, u'+\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (3, 1, u'+\tCCAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||'), (3, 1, u'+\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCParticleSystemPoint::setEndSize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||'), (3, 1, u'+\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||'), (3, 1, u'+\tCCAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+\tCCAssert( scene != NULL, "Argument scene must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+\tCCAssert( scene != NULL, "Argument scene must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (3, 1, u'+\tCCAssert( scene != NULL, "Argument scene must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (3, 1, u'+\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (3, 1, u'+\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (3, 1, u'+\t\tCCAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
Class:     class CCEGL { 
Class:class CCDictMaker class CCDictMaker
Class:     class CCXEGL { 
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( sprite != NULL, "Argument must be non-nil");'), (4, 1, u'+        CCAssert( sprite != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( sprite != NULL, "Argument must be non-nil");'), (4, 1, u'+        CCAssert( sprite != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( sprite != NULL, "Argument must be non-nil");'), (4, 1, u'+        CCAssert( sprite != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+        CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+        CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( child != NULL, "Argument must be non-nil");'), (4, 1, u'+        CCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FileUtils::getFileDataFromZip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");'), (3, 1, u'+        CCAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0, "NSInternalInconsistencyException");'), (3, 1, u'+\t\tCCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::initWithData
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0, "NSInternalInconsistencyException");'), (3, 1, u'+\t\tCCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0, "NSInternalInconsistencyException");'), (3, 1, u'+\t\tCCAssert(0, "NSInternalInconsistencyException");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (3, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (3, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (3, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (3, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (3, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (3, 1, u'+\t\t\tCCAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(0, "Invalid pixel format");'), (3, 1, u'+\t\t\tCCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(0, "Invalid pixel format");'), (3, 1, u'+\t\t\tCCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(0, "Invalid pixel format");'), (3, 1, u'+\t\t\tCCAssert(0, "Invalid pixel format");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+\tCCAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (3, 1, u'+\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (3, 1, u'+\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||'), (3, 1, u'+\tCCAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::updateQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (3, 1, u'+\tCCAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (7, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::insertQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (7, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+\tCCAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (6, 2, u'-\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (7, 1, u'+\tCCAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::insertQuadFromIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (3, 2, u'-\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (4, 1, u'+\tCCAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (5, 1, u'+\tCCAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+\tCCAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::CCTextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+\tCCAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tCCAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: sharegroup:[[[[CCDirector sharedDirector] openGLView] context] sharegroup]];
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tCCAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tCCAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");'), (3, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tNSAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tNSAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 2, u'-\tNSAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");'), (4, 1, u'+\tCCAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (5, 1, u'+\tCCAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+\tCCAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+\tCCAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+\tCCAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(imageref != nil, @"TextureCache: image MUST not be nill");'), (3, 1, u'+\tCCAssert(imageref != nil, @"TextureCache: image MUST not be nill");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(imageref != nil, @"TextureCache: image MUST not be nill");'), (3, 1, u'+\tCCAssert(imageref != nil, @"TextureCache: image MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(imageref != nil, @"TextureCache: image MUST not be nill");'), (3, 1, u'+\tCCAssert(imageref != nil, @"TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (6, 1, u'+\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (6, 1, u'+\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");'), (6, 1, u'+\tCCAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+\t\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (8, 2, u'-\t\tNSAssert( child != NULL, "Argument must be non-nil");'), (10, 1, u'+\t\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+\t\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (8, 2, u'-\t\tNSAssert( child != NULL, "Argument must be non-nil");'), (10, 1, u'+\t\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (3, 1, u'+\t\tCCAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (8, 2, u'-\t\tNSAssert( child != NULL, "Argument must be non-nil");'), (10, 1, u'+\t\tCCAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (3, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (3, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (3, 1, u'+\t\tCCAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (3, 1, u'+\t\tCCAssert( item, "TMX atlas index not found. Shall not happen");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 2, u'-        NSAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (8, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (9, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (10, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 2, u'-        NSAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (8, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (9, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (10, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 2, u'-        NSAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );'), (8, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (9, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (10, 1, u'+        CCAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (3, 1, u'+\t\tCCAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (3, 1, u'+\t\tCCAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (6, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (7, 1, u'+\t\tCCAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (8, 1, u'+\t\tCCAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (3, 1, u'+\t\t\tCCAssert(CCPoint::CCPointEqualToPoint(pos, CCPointZero), "offset for hexagonal map not implemented yet");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (3, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (6, 2, u'-\t\t\t\tNSAssert(0, "TMX invalid value");'), (7, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (3, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (6, 2, u'-\t\t\t\tNSAssert(0, "TMX invalid value");'), (7, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (3, 1, u'+\t\t\t\tCCAssert(0, "TMX Hexa zOrder not supported");'), (6, 2, u'-\t\t\t\tNSAssert(0, "TMX invalid value");'), (7, 1, u'+\t\t\t\tCCAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (3, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (3, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (3, 1, u'+\t\tCCAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");'), (3, 1, u'+\t\tCCAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (3, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (5, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (6, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (3, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (5, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (6, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (3, 1, u'+\t\t\t\tCCAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (5, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (6, 1, u'+\t\t\tCCAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+\t\tCCAssert( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+\t\tCCAssert( file != NULL, "file must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( file != NULL, "file must be non-nil");'), (3, 1, u'+\t\tCCAssert( file != NULL, "file must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (3, 1, u'+\t\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (3, 1, u'+\t\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (3, 1, u'+\t\t\tCCAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (7, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+\t\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (10, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (11, 1, u'+\t\tCCAssert( tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (7, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+\t\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (10, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (11, 1, u'+\t\tCCAssert( tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (4, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (5, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (6, 2, u'-\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (7, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (8, 1, u'+\t\tCCAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (9, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (10, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (11, 1, u'+\t\tCCAssert( tile.r != 0, "R component must be non 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (7, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (7, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (3, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (4, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (5, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (6, 1, u'+\t\tCCAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (7, 1, u'+\t\tCCAssert( position.y < m_pTGAInfo->height, "Invalid position.y");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (3, 1, u'+\t\tCCAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (7, 1, u'+\t\tCCAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTouchDispatcher::sharedDispatcher
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (7, 1, u'+\t\tCCAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (7, 1, u'+\t\tCCAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
Class: class CCXLock::Impl { 
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNodeReorder::SpriteBatchNodeReorder
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: SpriteBatchNodeReorder::SpriteBatchNodeReorder
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert( prev == currentIndex-1, "Child order failed");'), (3, 1, u'+        CCAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (7, 1, u'+\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: Paddle::ccTouchMoved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (7, 1, u'+\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (7, 1, u'+\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: Paddle::ccTouchEnded
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");'), (3, 1, u'+\tCCAssert(m_state == kPaddleStateGrabbed, L"Paddle - Unexpected state!");')]
===========================================
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\t\tNSAssert( prev == currentIndex-1, "Child order failed");'), (65, 1, u'+        NSAssert( prev == currentIndex-1, "Child order failed");'), (86, 2, u'-\t\tNSAssert( prev == currentIndex-1, "Child order failed");'), (91, 1, u'+        NSAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
Total add: 49
Total del: 49
Header: SpriteSheetZOrder::title
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\t\tNSAssert( prev == currentIndex-1, "Child order failed");'), (65, 1, u'+        NSAssert( prev == currentIndex-1, "Child order failed");'), (86, 2, u'-\t\tNSAssert( prev == currentIndex-1, "Child order failed");'), (91, 1, u'+        NSAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 2, u'-\t\tNSAssert( prev == currentIndex-1, "Child order failed");'), (65, 1, u'+        NSAssert( prev == currentIndex-1, "Child order failed");'), (86, 2, u'-\t\tNSAssert( prev == currentIndex-1, "Child order failed");'), (91, 1, u'+        NSAssert( prev == currentIndex-1, "Child order failed");')]
===========================================
Class: class MySprite2 : public CCSprite { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCX_ASSERT(s_pMainWindow);')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: CCXEGLView::setContentScaleFactor
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCX_ASSERT(s_pMainWindow);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    CCX_ASSERT(s_pMainWindow);')]
===========================================
Class: class BitmapDC { 
Class: class CCXLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (8, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (13, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (18, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Total add: 10
Total del: 10
Header: CCParticleSystem::initWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (8, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (13, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (18, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (8, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (13, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (18, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
Class: class BitmapDC { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    NSAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (6, 2, u'-    NSAssert(strlen(pszResourcePath) <= EOS_FILE_MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");'), (62, 2, u'-    NSAssert(pszZipPath != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");'), (63, 1, u'+    NSAssert(pZipFileName != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");')]
===========================================
===========================================
Total add: 25
Total del: 28
Header: static char s_pszZipFilePath[EOS_FILE_MAX_PATH]  = {0};
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    NSAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (6, 2, u'-    NSAssert(strlen(pszResourcePath) <= EOS_FILE_MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");'), (62, 2, u'-    NSAssert(pszZipPath != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");'), (63, 1, u'+    NSAssert(pZipFileName != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    NSAssert(pszResourcePath != NULL, "[FileUtils setResourcePath] -- wrong resource path");'), (6, 2, u'-    NSAssert(strlen(pszResourcePath) <= EOS_FILE_MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");'), (62, 2, u'-    NSAssert(pszZipPath != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");'), (63, 1, u'+    NSAssert(pZipFileName != NULL, "[FileUtils setResourceZipFile] -- wrong zip file path");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert(strlen(pszResourcePath) <= MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");'), (3, 1, u'+    NSAssert(strlen(pszResourcePath) <= EOS_FILE_MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");')]
===========================================
===========================================
Total add: 27
Total del: 1
Header: CCFileUtils::setResourcePath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert(strlen(pszResourcePath) <= MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");'), (3, 1, u'+    NSAssert(strlen(pszResourcePath) <= EOS_FILE_MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert(strlen(pszResourcePath) <= MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");'), (3, 1, u'+    NSAssert(strlen(pszResourcePath) <= EOS_FILE_MAX_PATH, "[FileUtils setResourcePath] -- resource path too long");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert((strlen(pszDriver) + strlen(pszZipPath)) <= MAX_PATH, "[FileUtils setResourceZipFile] -- zip file path too long");'), (3, 1, u'+    NSAssert((strlen(pszDriver) + strlen(fullPath)) <= EOS_FILE_MAX_PATH, "[FileUtils setResourceZipFile] -- zip file path too long");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCFileUtils::setResourceZipFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert((strlen(pszDriver) + strlen(pszZipPath)) <= MAX_PATH, "[FileUtils setResourceZipFile] -- zip file path too long");'), (3, 1, u'+    NSAssert((strlen(pszDriver) + strlen(fullPath)) <= EOS_FILE_MAX_PATH, "[FileUtils setResourceZipFile] -- zip file path too long");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    NSAssert((strlen(pszDriver) + strlen(pszZipPath)) <= MAX_PATH, "[FileUtils setResourceZipFile] -- zip file path too long");'), (3, 1, u'+    NSAssert((strlen(pszDriver) + strlen(fullPath)) <= EOS_FILE_MAX_PATH, "[FileUtils setResourceZipFile] -- zip file path too long");')]
===========================================
Class: class CCXLock::Impl { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        assert(m_nEffect1ID > 0);')]
===========================================
===========================================
Total add: 17
Total del: 2
Header: TMainForm::CtrlSelected
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        assert(m_nEffect1ID > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-        assert(m_nEffect1ID > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        assert(m_nEffect2ID > 0);')]
===========================================
===========================================
Total add: 17
Total del: 15
Header: TMainForm::CtrlSelected
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        assert(m_nEffect2ID > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        assert(m_nEffect2ID > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(180, 2, u'-\tassert(m_pobOpenGLView);'), (283, 2, u'-\tassert(0);'), (291, 2, u'-\tassert(pobOpenGLView);'), (444, 2, u'-\tassert(isOpenGLAttached());'), (579, 2, u'-\tassert(pScene != NULL);'), (580, 2, u'-\tassert(m_pRunningScene == NULL);'), (588, 2, u'-\tassert(pScene != NULL);'), (600, 2, u'-\tassert(pScene);'), (610, 2, u'-\tassert(m_pRunningScene != NULL);'), (739, 2, u'-\tassert(0);'), (745, 2, u'-\tassert(0);'), (751, 2, u'-\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(58, 1, u'+\t\tassert(m_pAnimations == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(714, 1, u'+    NSAssert( s_nEventQueueCount < QUEUE_EVENT_MAX, "CCEventDispatcher: recompile. Increment QUEUE_EVENT_MAX value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+        NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+\tNSAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTexture2D::generateMipmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+\tNSAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (3, 1, u'+\tNSAssert( m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||'), (3, 1, u'+\tNSAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTexture2D::setTexParameters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||'), (3, 1, u'+\tNSAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||'), (3, 1, u'+\tNSAssert( (m_uPixelsWide == ccNextPOT(m_uPixelsWide) && m_uPixelsHigh == ccNextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+\tNSAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::insertQuad
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+\tNSAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (3, 1, u'+\tNSAssert( index < m_uCapacity, "insertQuadWithTexture: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+\tNSAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+\tNSAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (3, 1, u'+\tNSAssert( index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: CCTextureAtlas::removeQuadAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(272, 2, u'-\t\tassert(0);'), (277, 2, u'-\t\tassert(0);'), (282, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(160, 1, u'+\tassert(m_pobOpenGLView);'), (269, 1, u'+\tassert(0);'), (277, 1, u'+\tassert(pobOpenGLView);'), (495, 1, u'+\tassert(pScene != NULL);'), (496, 1, u'+\tassert(m_pRunningScene == NULL);'), (504, 1, u'+\tassert(pScene != NULL);'), (516, 1, u'+\tassert(pScene);'), (526, 1, u'+\tassert(m_pRunningScene != NULL);'), (659, 1, u'+\tassert(0);'), (665, 1, u'+\tassert(0);'), (671, 1, u'+\tassert(0);'), (775, 1, u'+\tassert(isOpenGLAttached());'), (783, 1, u'+\tassert(! isOpenGLAttached());'), (910, 1, u'+    assert(false);'), (916, 1, u'+    assert(false);'), (922, 1, u'+    assert(false);'), (927, 1, u'+    assert(false);'), (933, 1, u'+    assert(false);'), (938, 1, u'+    assert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pfnSelector != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+\tassert(pfnSelector);'), (5, 1, u'+\tassert(pTarget);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCScheduler::scheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pfnSelector != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+\tassert(pfnSelector);'), (5, 1, u'+\tassert(pTarget);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pfnSelector != NULL);'), (3, 2, u'-\tassert(pTarget != NULL);'), (4, 1, u'+\tassert(pfnSelector);'), (5, 1, u'+\tassert(pTarget);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 2, u'-\tassert(pfnSelector != NULL);'), (4, 1, u'+\tassert(pTarget);'), (5, 1, u'+\tassert(pfnSelector);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCScheduler::unscheduleSelector
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 2, u'-\tassert(pfnSelector != NULL);'), (4, 1, u'+\tassert(pTarget);'), (5, 1, u'+\tassert(pfnSelector);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pTarget != NULL);'), (3, 2, u'-\tassert(pfnSelector != NULL);'), (4, 1, u'+\tassert(pTarget);'), (5, 1, u'+\tassert(pfnSelector);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        NSAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        NSAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        NSAssert( gid == 0 || gid >= m_pTileSet->m_uFirstGid, "TMXLayer: invalid gid" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(144, 1, u'+\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffsetInPixels() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");'), (284, 1, u'+    NSAssert( m_nParticleIdx == m_nParticleCount, "Abnormal error in particle quad");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 2, u'-\t\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffset() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (146, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (151, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (156, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (164, 2, u'-\t\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (169, 2, u'-\t\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (153, 1, u'+\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (158, 1, u'+\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (163, 1, u'+\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (171, 1, u'+\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (176, 1, u'+\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 1, u'+\t\tassert( out );'), (142, 1, u'+\t\tassert( &*out );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tassert(pSpriteSheet != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: CCSprite::initWithCGImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tassert(pSpriteSheet != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tassert(pSpriteSheet != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: CCSprite::updateTransform
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());')]
===========================================
===========================================
Total add: 10
Total del: 9
Header: CCSprite::draw
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+\t\tassert(((CCSprite*)pChild)->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setIsRelativeAnchorPoint
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert (! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert (! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::updateBlendFunc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert (! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert (! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert (! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert (! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (3, 1, u'+\tassert(! m_bUsesBatchNode);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+\t\tassert(child != NULL);'), (193, 1, u'+\t\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (214, 1, u'+\t\tassert(child != NULL);'), (215, 1, u'+\t\tassert(m_pChildren->containsObject(child));'), (240, 1, u'+\t\tassert(m_pChildren->containsObject(pSprite));'), (349, 1, u'+\t\t\tassert(false);'), (490, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");'), (7, 1, u'+\tassert(format >=0 && format <= 3);')]
===========================================
===========================================
Total add: 1
Total del: 5
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");'), (7, 1, u'+\tassert(format >=0 && format <= 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");'), (7, 1, u'+\tassert(format >=0 && format <= 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Total add: 56
Total del: 12
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(48, 1, u'+\t\t\tassert(false);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(244, 2, u'-\tNSAssert(false, "Layer#ccTouchBegan override me");'), (470, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (481, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(275, 1, u'+\tNSAssert(false, "Layer#ccTouchBegan override me");'), (645, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (656, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(636, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (647, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+\t\tassert(m_pVertexData);'), (38, 2, u'-\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Total add: 24
Total del: 49
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+\t\tassert(m_pVertexData);'), (38, 2, u'-\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+\t\tassert(m_pVertexData);'), (38, 2, u'-\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(74, 1, u'+\t\tassert(m_pVertexData);')]
===========================================
===========================================
Total add: 64
Total del: 24
Header: namespace cocos2d
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(74, 1, u'+\t\tassert(m_pVertexData);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(74, 1, u'+\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (162, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (172, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (314, 2, u'-                assert(row < rows.size());'), (318, 2, u'-\t\t\t\tassert(rowColumns);'), (336, 2, u'-\t\tassert(! columnsOccupied);'), (426, 2, u'-\t\t\t\tassert(column < columns.size());'), (430, 2, u'-\t\t\t\tassert(columnRows);'), (454, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (3, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (3, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (3, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (3, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (3, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (3, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value length must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(163, 1, u'+\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (174, 1, u'+\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (184, 1, u'+\t\tNSAssert(m_eState == kCCMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (326, 1, u'+                assert(row < rows.size());'), (330, 1, u'+\t\t\t\tassert(rowColumns);'), (348, 1, u'+\t\tassert(! columnsOccupied);'), (438, 1, u'+\t\t\t\tassert(column < columns.size());'), (442, 1, u'+\t\t\t\tassert(columnRows);'), (466, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(349, 1, u'+                assert(row < rows.size());'), (353, 1, u'+\t\t\t\tassert(rowColumns);'), (371, 1, u'+\t\tassert(! columnsOccupied);'), (461, 1, u'+\t\t\t\tassert(column < columns.size());'), (465, 1, u'+\t\t\t\tassert(columnRows);'), (489, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+        NSAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+        NSAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (3, 1, u'+        NSAssert(pBuffer, "CCBMFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (3, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (3, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (3, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (3, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (3, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (3, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCLabelBMFont: page can\'t be larger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (3, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (3, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (3, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBMFontMaxChars, "BitmpaFontAtlas: CharID bigger than supported");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tNSAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tNSAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");'), (3, 1, u'+\t\t\tNSAssert( c < kCCBMFontMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(271, 1, u'+\t\tassert(0);'), (276, 1, u'+\t\tassert(0);'), (281, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(245, 1, u'+\t\tassert(0);'), (250, 1, u'+\t\tassert(0);'), (255, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (418, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (440, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (441, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (463, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (469, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (498, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (604, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (789, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (806, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (812, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (845, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (846, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(168, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (479, 1, u'+\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (501, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (502, 1, u'+\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (524, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (530, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (559, 1, u'+\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (667, 1, u'+\tNSAssert( child != NULL, "Child must be non-nil");'), (852, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");'), (869, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (875, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (908, 1, u'+\tNSAssert( selector != NULL, "Argument must be non-nil");'), (909, 1, u'+\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(169, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (480, 1, u'+\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (502, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (503, 1, u'+\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (525, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (531, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (560, 1, u'+\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (669, 1, u'+\tNSAssert( child != NULL, "Child must be non-nil");'), (854, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");'), (871, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (877, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (910, 1, u'+\tNSAssert( selector != NULL, "Argument must be non-nil");'), (911, 1, u'+\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (133, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (222, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (261, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (266, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (271, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (287, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (402, 2, u'-\t\tassert(theString != NULL);'), (406, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (451, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-\t\tassert(label != NULL);'), (69, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(98, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (133, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (222, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (261, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (266, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (271, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (287, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (402, 1, u'+\t\tassert(theString != NULL);'), (406, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (451, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+\t\tassert(label != NULL);'), (69, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+\t\tassert(pAction != NULL);'), (741, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\t\t\t\tassert(0);'), (98, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+\t\tassert(0);'), (117, 1, u'+\tassert(0);'), (123, 1, u'+\tassert(0);'), (186, 1, u'+\tassert(pActionOne != NULL);'), (187, 1, u'+\tassert(pActionTwo != NULL);'), (447, 1, u'+\tassert(pAction != NULL);'), (539, 1, u'+\tassert(pAction1 != NULL);'), (540, 1, u'+\tassert(pAction2 != NULL);'), (1813, 1, u'+\tassert(pAnimation != NULL);'), (1829, 1, u'+\tassert(pAnimation);'), (1855, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-\t\tassert(pAction != NULL);'), (741, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\t\t\t\tassert(0);'), (98, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 2, u'-\t\tassert(0);'), (117, 2, u'-\tassert(0);'), (123, 2, u'-\tassert(0);'), (186, 2, u'-\tassert(pActionOne != NULL);'), (187, 2, u'-\tassert(pActionTwo != NULL);'), (447, 2, u'-\tassert(pAction != NULL);'), (539, 2, u'-\tassert(pAction1 != NULL);'), (540, 2, u'-\tassert(pAction2 != NULL);'), (1813, 2, u'-\tassert(pAnimation != NULL);'), (1829, 2, u'-\tassert(pAnimation);'), (1855, 2, u'-\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(202, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (256, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (291, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (302, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 206
Total del: 93
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(202, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (256, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (291, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (302, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(202, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (256, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (291, 2, u'-        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (302, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (110, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (172, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (177, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (182, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (205, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (210, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (215, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (233, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (298, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (427, 2, u'-\t\tassert(theString != NULL);'), (431, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (491, 1, u'+\t\tassert(theString != NULL);'), (495, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");')]
===========================================
===========================================
Total add: 258
Total del: 224
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (110, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (172, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (177, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (182, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (205, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (210, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (215, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (233, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (298, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (427, 2, u'-\t\tassert(theString != NULL);'), (431, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (491, 1, u'+\t\tassert(theString != NULL);'), (495, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (110, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (172, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (177, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (182, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (205, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (210, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (215, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (233, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (298, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (427, 2, u'-\t\tassert(theString != NULL);'), (431, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (491, 1, u'+\t\tassert(theString != NULL);'), (495, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");'), (128, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Total add: 95
Total del: 95
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");'), (128, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(34, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");'), (128, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 1, u'+    assert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (150, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (399, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (401, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Total add: 331
Total del: 331
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (150, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (399, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (401, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(148, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (150, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );'), (399, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (401, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(62, 1, u'+    NSAssert(pDelegate != NULL, "It\'s a wrong delegate!");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);'), (3, 1, u'+        NSAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: FileUtils::getFileDataFromZip
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);'), (3, 1, u'+        NSAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);'), (3, 1, u'+        NSAssert(nSize == 0 || nSize == FileInfo.uncompressed_size, "the file size is wrong");')]
===========================================
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
Class:     class MyLayer : public CCLayer { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (57, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 81
Total del: 51
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (57, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (57, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(82, 1, u'+        assert(nSize == 0 || nSize == FileInfo.uncompressed_size);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (57, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
Total add: 80
Total del: 51
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (57, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (57, 1, u'+        NSAssert(pBuffer, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");')]
===========================================
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
Class:     class MyLayer : public CCLayer { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(row < rows.size());')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(row < rows.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(row < rows.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(row < rows.size());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(row < rows.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(row < rows.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(row < rows.size());')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(row < rows.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tassert(row < rows.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(row < rows.size());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(row < rows.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(row < rows.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(177, 2, u'-\tassert(m_pobOpenGLView);'), (280, 2, u'-\tassert(0);'), (288, 2, u'-\tassert(pobOpenGLView);'), (463, 2, u'-\tassert(isOpenGLAttached());'), (588, 2, u'-\tassert(pScene != NULL);'), (589, 2, u'-\tassert(m_pRunningScene == NULL);'), (597, 2, u'-\tassert(pScene != NULL);'), (609, 2, u'-\tassert(pScene);'), (619, 2, u'-\tassert(m_pRunningScene != NULL);'), (748, 2, u'-\tassert(0);'), (754, 2, u'-\tassert(0);'), (760, 2, u'-\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-\tassert(pSharedScheduler == NULL);'), (186, 2, u'-\tassert(false);'), (191, 2, u'-\tassert(false);'), (196, 2, u'-\tassert(false);'), (201, 2, u'-\tassert(pfnSelector != NULL);'), (202, 2, u'-\tassert(pTarget != NULL);'), (222, 2, u'-\t\tassert(pElement->paused == bPaused);'), (264, 2, u'-\tassert(pTarget != NULL);'), (265, 2, u'-\tassert(pfnSelector != NULL);'), (391, 2, u'-\tassert(pHashElement == NULL);'), (498, 2, u'-\tassert(pTarget != NULL);'), (513, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (520, 2, u'-\tassert(pTarget != NULL);'), (535, 2, u'-\t\tassert(pElementUpdate->entry != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 2, u'-\tassert(pAction != NULL);'), (225, 2, u'-\tassert(pFollowedNode != NULL);'), (239, 2, u'-\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 2, u'-\tassert(gSharedManager == NULL);'), (201, 2, u'-\tassert(pAction != NULL);'), (202, 2, u'-\tassert(pTarget != NULL);'), (219, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (298, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (299, 2, u'-\tassert(pTarget != NULL);'), (328, 2, u'-\tassert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-\t\tassert(pAction != NULL);'), (741, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\t\t\t\tassert(0);'), (98, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 2, u'-\t\tassert(0);'), (117, 2, u'-\tassert(0);'), (123, 2, u'-\tassert(0);'), (186, 2, u'-\tassert(pActionOne != NULL);'), (187, 2, u'-\tassert(pActionTwo != NULL);'), (447, 2, u'-\tassert(pAction != NULL);'), (539, 2, u'-\tassert(pAction1 != NULL);'), (540, 2, u'-\tassert(pAction2 != NULL);'), (1813, 2, u'-\tassert(pAnimation != NULL);'), (1829, 2, u'-\tassert(pAnimation);'), (1855, 2, u'-\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 2, u'-\tassert(tile != NULL);'), (102, 2, u'-\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (418, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (440, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (441, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (463, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (469, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (498, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (602, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (787, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (804, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (810, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (843, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (844, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-\tassert(pObject->m_uRefrence > 1);'), (165, 2, u'-\tassert(m_pCurReleasePool);'), (181, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\tassert(0);'), (66, 2, u'-\tassert(m_uRefrence > 0);'), (77, 2, u'-\tassert(m_uRefrence > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(268, 2, u'-\t\tassert(0);'), (273, 2, u'-\t\tassert(0);'), (278, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (130, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (190, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (229, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (234, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (239, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (255, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (370, 2, u'-\t\tassert(theString != NULL);'), (374, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (419, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-\t\tassert(label != NULL);'), (69, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(194, 2, u'-\tNSAssert(false, "Layer#ccTouchBegan override me");'), (420, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (431, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (162, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (172, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (308, 2, u'-\t\t\t\tassert(row < rows.size());'), (318, 2, u'-\t\t\t\tassert(rowColumns);'), (336, 2, u'-\t\tassert(! columnsOccupied);'), (426, 2, u'-\t\t\t\tassert(column < columns.size());'), (430, 2, u'-\t\t\t\tassert(columnRows);'), (454, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(236, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (286, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (344, 2, u'-\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(342, 2, u'-\t\t\tassert(m_pVertexData);'), (425, 2, u'-\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-\t\t\tNSAssert(0, "Render Texture : Could not attach texture to framebuffer")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-\t\tNSAssert( dict != NULL, "Particles: file not found");'), (216, 2, u'-\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (241, 2, u'-\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (245, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (250, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (256, 2, u'-\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (668, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (673, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (678, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (683, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (688, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (693, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (698, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (703, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (708, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (713, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (718, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (723, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (728, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (733, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (740, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (745, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (750, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (755, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (760, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (765, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (770, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (775, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (780, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (785, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (790, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (795, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (146, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (151, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (156, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (164, 2, u'-\t\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (169, 2, u'-\t\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 2, u'-\t\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffset() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
Class:class CCDictMaker class CCDictMaker
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    assert(pDelegate != NULL);')]
===========================================
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 2, u'-\tassert(0);'), (201, 2, u'-\tassert(pTexture != NULL);'), (212, 2, u'-\tassert(pTexture != NULL);'), (222, 2, u'-\tassert(pszFilename != NULL);'), (240, 2, u'-\tassert(pszFilename != NULL);'), (256, 2, u'-\tassert(pSpriteFrame != NULL);'), (266, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (300, 2, u'-\tassert(pSpriteSheet != NULL);'), (439, 2, u'-\tassert(m_bUsesSpriteSheet);'), (559, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (627, 2, u'-\tassert(pChild != NULL);'), (643, 2, u'-    assert(pChild != NULL);'), (644, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (770, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (939, 2, u'-\tassert(pFrame);'), (971, 2, u'-\tassert(pszAnimationName != NULL);'), (981, 2, u'-\tassert (! m_bUsesSpriteSheet);'), (1001, 2, u'-\tassert(! m_bUsesSpriteSheet);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 2, u'-\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(165, 2, u'-\tassert(child != NULL);'), (169, 2, u'-\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (182, 2, u'-\tassert(child != NULL);'), (183, 2, u'-\tassert(m_pChildren->containsObject(child));'), (208, 2, u'-\tassert(m_pChildren->containsObject(pSprite));'), (318, 2, u'-\t\tassert(false);'), (459, 2, u'-\tassert(0);'), (603, 2, u'-\tNSAssert( sprite != NULL, "Argument must be non-nil");'), (626, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 2, u'-\t\tNSAssert(0, "NSInternalInconsistencyException");'), (298, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (322, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (343, 2, u'-\t\t\tNSAssert(0, "Invalid pixel format");'), (566, 2, u'-\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (573, 2, u'-\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 2, u'-\tassert(texture != NULL);'), (206, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (215, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (218, 2, u'-\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (234, 2, u'-\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (235, 2, u'-\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (258, 2, u'-\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (271, 2, u'-\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
Class:class CCAsyncObject : NSObject class CCAsyncObject : NSObject
Class:	class CGPointObject : NSObject 	class CGPointObject : NSObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (78, 2, u'-\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (225, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (226, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (257, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (258, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (391, 2, u'-\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (412, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (413, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (451, 2, u'-\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (461, 2, u'-\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (471, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (472, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (533, 2, u'-\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (595, 2, u'-\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (598, 2, u'-\t\t\t\tNSAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (52, 2, u'-\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(409, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (411, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (113, 2, u'-\t\tNSAssert( file != NULL, "file must be non-nil");'), (124, 2, u'-\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (132, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (133, 2, u'-\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (134, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (135, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (136, 2, u'-\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (166, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (167, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (168, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (210, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(126, 2, u'- \t\t\t    assert(0);'), (232, 2, u'-\tassert(0);'), (240, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-\tassert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(177, 1, u'+\tassert(m_pobOpenGLView);'), (280, 1, u'+\tassert(0);'), (288, 1, u'+\tassert(pobOpenGLView);'), (463, 1, u'+\tassert(isOpenGLAttached());'), (588, 1, u'+\tassert(pScene != NULL);'), (589, 1, u'+\tassert(m_pRunningScene == NULL);'), (597, 1, u'+\tassert(pScene != NULL);'), (609, 1, u'+\tassert(pScene);'), (619, 1, u'+\tassert(m_pRunningScene != NULL);'), (748, 1, u'+\tassert(0);'), (754, 1, u'+\tassert(0);'), (760, 1, u'+\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+\tassert(pSharedScheduler == NULL);'), (186, 1, u'+\tassert(false);'), (191, 1, u'+\tassert(false);'), (196, 1, u'+\tassert(false);'), (201, 1, u'+\tassert(pfnSelector != NULL);'), (202, 1, u'+\tassert(pTarget != NULL);'), (222, 1, u'+\t\tassert(pElement->paused == bPaused);'), (264, 1, u'+\tassert(pTarget != NULL);'), (265, 1, u'+\tassert(pfnSelector != NULL);'), (391, 1, u'+\tassert(pHashElement == NULL);'), (498, 1, u'+\tassert(pTarget != NULL);'), (513, 1, u'+\t\tassert(pElementUpdate->entry != NULL);'), (520, 1, u'+\tassert(pTarget != NULL);'), (535, 1, u'+\t\tassert(pElementUpdate->entry != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 1, u'+\tassert(pAction != NULL);'), (225, 1, u'+\tassert(pFollowedNode != NULL);'), (239, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 1, u'+\tassert(gSharedManager == NULL);'), (201, 1, u'+\tassert(pAction != NULL);'), (202, 1, u'+\tassert(pTarget != NULL);'), (219, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (298, 1, u'+\tassert(tag != kCCActionTagInvalid);'), (299, 1, u'+\tassert(pTarget != NULL);'), (328, 1, u'+\tassert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+\t\tassert(pAction != NULL);'), (741, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\t\t\t\tassert(0);'), (98, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+\t\tassert(0);'), (117, 1, u'+\tassert(0);'), (123, 1, u'+\tassert(0);'), (186, 1, u'+\tassert(pActionOne != NULL);'), (187, 1, u'+\tassert(pActionTwo != NULL);'), (447, 1, u'+\tassert(pAction != NULL);'), (539, 1, u'+\tassert(pAction1 != NULL);'), (540, 1, u'+\tassert(pAction2 != NULL);'), (1813, 1, u'+\tassert(pAnimation != NULL);'), (1829, 1, u'+\tassert(pAnimation);'), (1855, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 1, u'+\tassert(tile != NULL);'), (102, 1, u'+\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (418, 1, u'+\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (440, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (441, 1, u'+\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (463, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (469, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (498, 1, u'+\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (602, 1, u'+\tNSAssert( child != NULL, "Child must be non-nil");'), (787, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");'), (804, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (810, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (843, 1, u'+\tNSAssert( selector != NULL, "Argument must be non-nil");'), (844, 1, u'+\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+\tassert(pObject->m_uRefrence > 1);'), (165, 1, u'+\tassert(m_pCurReleasePool);'), (181, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tassert(0);'), (66, 1, u'+\tassert(m_uRefrence > 0);'), (77, 1, u'+\tassert(m_uRefrence > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(268, 1, u'+\t\tassert(0);'), (273, 1, u'+\t\tassert(0);'), (278, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (130, 1, u'+\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (190, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (229, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (234, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (239, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (255, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (370, 1, u'+\t\tassert(theString != NULL);'), (374, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (419, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+\t\tassert(label != NULL);'), (69, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(194, 1, u'+\tNSAssert(false, "Layer#ccTouchBegan override me");'), (420, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (431, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (162, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (172, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (308, 1, u'+\t\t\t\tassert(row < rows.size());'), (318, 1, u'+\t\t\t\tassert(rowColumns);'), (336, 1, u'+\t\tassert(! columnsOccupied);'), (426, 1, u'+\t\t\t\tassert(column < columns.size());'), (430, 1, u'+\t\t\t\tassert(columnRows);'), (454, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(236, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (286, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (344, 1, u'+\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(342, 1, u'+\t\t\tassert(m_pVertexData);'), (425, 1, u'+\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+\t\t\tNSAssert(0, "Render Texture : Could not attach texture to framebuffer")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+\t\tNSAssert( dict != NULL, "Particles: file not found");'), (216, 1, u'+\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (241, 1, u'+\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (245, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (250, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (256, 1, u'+\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (668, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (673, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (678, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (683, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (688, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (693, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (698, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (703, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (708, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (713, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (718, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (723, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (728, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (733, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (740, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (745, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (750, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (755, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (760, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (765, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (770, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (775, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (780, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (785, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (790, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (795, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (146, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (151, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (156, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (164, 1, u'+\t\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (169, 1, u'+\t\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 1, u'+\t\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffset() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
Class:class CCDictMaker class CCDictMaker
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    assert(pDelegate != NULL);')]
===========================================
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+\tassert(0);'), (201, 1, u'+\tassert(pTexture != NULL);'), (212, 1, u'+\tassert(pTexture != NULL);'), (222, 1, u'+\tassert(pszFilename != NULL);'), (240, 1, u'+\tassert(pszFilename != NULL);'), (256, 1, u'+\tassert(pSpriteFrame != NULL);'), (266, 1, u'+\tassert(pszSpriteFrameName != NULL);'), (300, 1, u'+\tassert(pSpriteSheet != NULL);'), (439, 1, u'+\tassert(m_bUsesSpriteSheet);'), (559, 1, u'+\tassert(! m_bUsesSpriteSheet);'), (627, 1, u'+\tassert(pChild != NULL);'), (643, 1, u'+    assert(pChild != NULL);'), (644, 1, u'+\tassert(m_pChildren->containsObject(pChild));'), (770, 1, u'+\tassert(! m_bUsesSpriteSheet);'), (939, 1, u'+\tassert(pFrame);'), (971, 1, u'+\tassert(pszAnimationName != NULL);'), (981, 1, u'+\tassert (! m_bUsesSpriteSheet);'), (1001, 1, u'+\tassert(! m_bUsesSpriteSheet);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 1, u'+\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(165, 1, u'+\tassert(child != NULL);'), (169, 1, u'+\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (182, 1, u'+\tassert(child != NULL);'), (183, 1, u'+\tassert(m_pChildren->containsObject(child));'), (208, 1, u'+\tassert(m_pChildren->containsObject(pSprite));'), (318, 1, u'+\t\tassert(false);'), (459, 1, u'+\tassert(0);'), (603, 1, u'+\tNSAssert( sprite != NULL, "Argument must be non-nil");'), (626, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 1, u'+\t\tNSAssert(0, "NSInternalInconsistencyException");'), (298, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (322, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (343, 1, u'+\t\t\tNSAssert(0, "Invalid pixel format");'), (566, 1, u'+\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (573, 1, u'+\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 1, u'+\tassert(texture != NULL);'), (206, 1, u'+\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (215, 1, u'+\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (218, 1, u'+\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (234, 1, u'+\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (235, 1, u'+\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (258, 1, u'+\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (271, 1, u'+\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
Class:class CCAsyncObject : NSObject class CCAsyncObject : NSObject
Class:	class CGPointObject : NSObject 	class CGPointObject : NSObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (78, 1, u'+\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (225, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (226, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (257, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (258, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (391, 1, u'+\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (412, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (413, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (451, 1, u'+\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (461, 1, u'+\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (471, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (472, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (533, 1, u'+\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (595, 1, u'+\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (598, 1, u'+\t\t\t\tNSAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (52, 1, u'+\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(409, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (411, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (113, 1, u'+\t\tNSAssert( file != NULL, "file must be non-nil");'), (124, 1, u'+\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (132, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (133, 1, u'+\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (134, 1, u'+\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (135, 1, u'+\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (136, 1, u'+\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (166, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (167, 1, u'+\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (168, 1, u'+\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (210, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(126, 1, u'+ \t\t\t    assert(0);'), (232, 1, u'+\tassert(0);'), (240, 1, u'+\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+\tassert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(177, 1, u'+\tassert(m_pobOpenGLView);'), (280, 1, u'+\tassert(0);'), (288, 1, u'+\tassert(pobOpenGLView);'), (463, 1, u'+\tassert(isOpenGLAttached());'), (588, 1, u'+\tassert(pScene != NULL);'), (589, 1, u'+\tassert(m_pRunningScene == NULL);'), (597, 1, u'+\tassert(pScene != NULL);'), (609, 1, u'+\tassert(pScene);'), (619, 1, u'+\tassert(m_pRunningScene != NULL);'), (748, 1, u'+\tassert(0);'), (754, 1, u'+\tassert(0);'), (760, 1, u'+\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 1, u'+\tassert(pSharedScheduler == NULL);'), (186, 1, u'+\tassert(false);'), (191, 1, u'+\tassert(false);'), (196, 1, u'+\tassert(false);'), (201, 1, u'+\tassert(pfnSelector != NULL);'), (202, 1, u'+\tassert(pTarget != NULL);'), (222, 1, u'+\t\tassert(pElement->paused == bPaused);'), (264, 1, u'+\tassert(pTarget != NULL);'), (265, 1, u'+\tassert(pfnSelector != NULL);'), (391, 1, u'+\tassert(pHashElement == NULL);'), (498, 1, u'+\tassert(pTarget != NULL);'), (513, 1, u'+\t\tassert(pElementUpdate->entry != NULL);'), (520, 1, u'+\tassert(pTarget != NULL);'), (535, 1, u'+\t\tassert(pElementUpdate->entry != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 1, u'+\tassert(pAction != NULL);'), (225, 1, u'+\tassert(pFollowedNode != NULL);'), (239, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 1, u'+\tassert(gSharedManager == NULL);'), (201, 1, u'+\tassert(pAction != NULL);'), (202, 1, u'+\tassert(pTarget != NULL);'), (219, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (298, 1, u'+\tassert(tag != kCCActionTagInvalid);'), (299, 1, u'+\tassert(pTarget != NULL);'), (328, 1, u'+\tassert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 1, u'+\t\tassert(pAction != NULL);'), (741, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\t\t\t\tassert(0);'), (98, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+\t\tassert(0);'), (117, 1, u'+\tassert(0);'), (123, 1, u'+\tassert(0);'), (186, 1, u'+\tassert(pActionOne != NULL);'), (187, 1, u'+\tassert(pActionTwo != NULL);'), (447, 1, u'+\tassert(pAction != NULL);'), (539, 1, u'+\tassert(pAction1 != NULL);'), (540, 1, u'+\tassert(pAction2 != NULL);'), (1813, 1, u'+\tassert(pAnimation != NULL);'), (1829, 1, u'+\tassert(pAnimation);'), (1855, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 1, u'+\tassert(tile != NULL);'), (102, 1, u'+\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (418, 1, u'+\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (440, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (441, 1, u'+\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (463, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (469, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (498, 1, u'+\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (602, 1, u'+\tNSAssert( child != NULL, "Child must be non-nil");'), (787, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");'), (804, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (810, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (843, 1, u'+\tNSAssert( selector != NULL, "Argument must be non-nil");'), (844, 1, u'+\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+\tassert(pObject->m_uRefrence > 1);'), (165, 1, u'+\tassert(m_pCurReleasePool);'), (181, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tassert(0);'), (66, 1, u'+\tassert(m_uRefrence > 0);'), (77, 1, u'+\tassert(m_uRefrence > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(268, 1, u'+\t\tassert(0);'), (273, 1, u'+\t\tassert(0);'), (278, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (130, 1, u'+\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (190, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (229, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (234, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (239, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (255, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (370, 1, u'+\t\tassert(theString != NULL);'), (374, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (419, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 1, u'+\t\tassert(label != NULL);'), (69, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(194, 1, u'+\tNSAssert(false, "Layer#ccTouchBegan override me");'), (420, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (431, 1, u'+\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (162, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (172, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (308, 1, u'+\t\t\t\tassert(row < rows.size());'), (318, 1, u'+\t\t\t\tassert(rowColumns);'), (336, 1, u'+\t\tassert(! columnsOccupied);'), (426, 1, u'+\t\t\t\tassert(column < columns.size());'), (430, 1, u'+\t\t\t\tassert(columnRows);'), (454, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(236, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (286, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (344, 1, u'+\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(342, 1, u'+\t\t\tassert(m_pVertexData);'), (425, 1, u'+\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 1, u'+\t\t\tNSAssert(0, "Render Texture : Could not attach texture to framebuffer")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+\t\tNSAssert( dict != NULL, "Particles: file not found");'), (216, 1, u'+\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (241, 1, u'+\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (245, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (250, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (256, 1, u'+\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (668, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (673, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (678, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (683, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (688, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (693, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (698, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (703, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (708, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (713, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (718, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (723, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (728, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (733, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (740, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (745, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (750, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (755, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (760, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (765, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (770, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (775, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (780, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (785, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (790, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (795, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (146, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (151, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (156, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (164, 1, u'+\t\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (169, 1, u'+\t\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 1, u'+\t\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffset() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
Class:class CCDictMaker class CCDictMaker
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    assert(pDelegate != NULL);')]
===========================================
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 1, u'+\tassert(0);'), (201, 1, u'+\tassert(pTexture != NULL);'), (212, 1, u'+\tassert(pTexture != NULL);'), (222, 1, u'+\tassert(pszFilename != NULL);'), (240, 1, u'+\tassert(pszFilename != NULL);'), (256, 1, u'+\tassert(pSpriteFrame != NULL);'), (266, 1, u'+\tassert(pszSpriteFrameName != NULL);'), (300, 1, u'+\tassert(pSpriteSheet != NULL);'), (439, 1, u'+\tassert(m_bUsesSpriteSheet);'), (559, 1, u'+\tassert(! m_bUsesSpriteSheet);'), (627, 1, u'+\tassert(pChild != NULL);'), (643, 1, u'+    assert(pChild != NULL);'), (644, 1, u'+\tassert(m_pChildren->containsObject(pChild));'), (770, 1, u'+\tassert(! m_bUsesSpriteSheet);'), (939, 1, u'+\tassert(pFrame);'), (971, 1, u'+\tassert(pszAnimationName != NULL);'), (981, 1, u'+\tassert (! m_bUsesSpriteSheet);'), (1001, 1, u'+\tassert(! m_bUsesSpriteSheet);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 1, u'+\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(165, 1, u'+\tassert(child != NULL);'), (169, 1, u'+\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (182, 1, u'+\tassert(child != NULL);'), (183, 1, u'+\tassert(m_pChildren->containsObject(child));'), (208, 1, u'+\tassert(m_pChildren->containsObject(pSprite));'), (318, 1, u'+\t\tassert(false);'), (459, 1, u'+\tassert(0);'), (603, 1, u'+\tNSAssert( sprite != NULL, "Argument must be non-nil");'), (626, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 1, u'+\t\tNSAssert(0, "NSInternalInconsistencyException");'), (298, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (322, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (343, 1, u'+\t\t\tNSAssert(0, "Invalid pixel format");'), (566, 1, u'+\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (573, 1, u'+\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 1, u'+\tassert(texture != NULL);'), (206, 1, u'+\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (215, 1, u'+\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (218, 1, u'+\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (234, 1, u'+\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (235, 1, u'+\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (258, 1, u'+\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (271, 1, u'+\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
Class:class CCAsyncObject : NSObject class CCAsyncObject : NSObject
Class:	class CGPointObject : NSObject 	class CGPointObject : NSObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 1, u'+\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (78, 1, u'+\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 1, u'+\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (225, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (226, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (257, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (258, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (391, 1, u'+\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (412, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (413, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (451, 1, u'+\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (461, 1, u'+\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (471, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (472, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (533, 1, u'+\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (595, 1, u'+\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (598, 1, u'+\t\t\t\tNSAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 1, u'+\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (52, 1, u'+\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(409, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (411, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (113, 1, u'+\t\tNSAssert( file != NULL, "file must be non-nil");'), (124, 1, u'+\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (132, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (133, 1, u'+\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (134, 1, u'+\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (135, 1, u'+\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (136, 1, u'+\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (166, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (167, 1, u'+\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (168, 1, u'+\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (210, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(126, 1, u'+ \t\t\t    assert(0);'), (232, 1, u'+\tassert(0);'), (240, 1, u'+\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 1, u'+\tassert(pDelegate != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(177, 2, u'-\tassert(m_pobOpenGLView);'), (280, 2, u'-\tassert(0);'), (288, 2, u'-\tassert(pobOpenGLView);'), (463, 2, u'-\tassert(isOpenGLAttached());'), (588, 2, u'-\tassert(pScene != NULL);'), (589, 2, u'-\tassert(m_pRunningScene == NULL);'), (597, 2, u'-\tassert(pScene != NULL);'), (609, 2, u'-\tassert(pScene);'), (619, 2, u'-\tassert(m_pRunningScene != NULL);'), (748, 2, u'-\tassert(0);'), (754, 2, u'-\tassert(0);'), (760, 2, u'-\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(132, 2, u'-\tassert(pSharedScheduler == NULL);'), (186, 2, u'-\tassert(false);'), (191, 2, u'-\tassert(false);'), (196, 2, u'-\tassert(false);'), (201, 2, u'-\tassert(pfnSelector != NULL);'), (202, 2, u'-\tassert(pTarget != NULL);'), (222, 2, u'-\t\tassert(pElement->paused == bPaused);'), (264, 2, u'-\tassert(pTarget != NULL);'), (265, 2, u'-\tassert(pfnSelector != NULL);'), (391, 2, u'-\tassert(pHashElement == NULL);'), (498, 2, u'-\tassert(pTarget != NULL);'), (513, 2, u'-\t\tassert(pElementUpdate->entry != NULL);'), (520, 2, u'-\tassert(pTarget != NULL);'), (535, 2, u'-\t\tassert(pElementUpdate->entry != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(137, 2, u'-\tassert(pAction != NULL);'), (225, 2, u'-\tassert(pFollowedNode != NULL);'), (239, 2, u'-\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 2, u'-\tassert(gSharedManager == NULL);'), (201, 2, u'-\tassert(pAction != NULL);'), (202, 2, u'-\tassert(pTarget != NULL);'), (219, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (298, 2, u'-\tassert(tag != kCCActionTagInvalid);'), (299, 2, u'-\tassert(pTarget != NULL);'), (328, 2, u'-\tassert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-\t\tassert(pAction != NULL);'), (741, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 2, u'-\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\t\t\t\tassert(0);'), (98, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 2, u'-\t\tassert(0);'), (117, 2, u'-\tassert(0);'), (123, 2, u'-\tassert(0);'), (186, 2, u'-\tassert(pActionOne != NULL);'), (187, 2, u'-\tassert(pActionTwo != NULL);'), (447, 2, u'-\tassert(pAction != NULL);'), (539, 2, u'-\tassert(pAction1 != NULL);'), (540, 2, u'-\tassert(pAction2 != NULL);'), (1813, 2, u'-\tassert(pAnimation != NULL);'), (1829, 2, u'-\tassert(pAnimation);'), (1855, 2, u'-\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(57, 2, u'-\tassert(tile != NULL);'), (102, 2, u'-\tNSAssert(false, "CCAtlasNode:Abstract updateAtlasValue not overriden");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 2, u'-\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");'), (418, 2, u'-\tNSAssert( aTag != kCCNodeTagInvalid, "Invalid tag");'), (440, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (441, 2, u'-\tNSAssert( child->m_pParent == NULL, "child already added. It can\'t be added again");'), (463, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (469, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");'), (498, 2, u'-\tNSAssert( tag != kCCNodeTagInvalid, "Invalid tag");'), (602, 2, u'-\tNSAssert( child != NULL, "Child must be non-nil");'), (787, 2, u'-\tNSAssert( action != NULL, "Argument must be non-nil");'), (804, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (810, 2, u'-\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (843, 2, u'-\tNSAssert( selector != NULL, "Argument must be non-nil");'), (844, 2, u'-\tNSAssert( interval >=0, "Argument must be positive");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-\tassert(pObject->m_uRefrence > 1);'), (165, 2, u'-\tassert(m_pCurReleasePool);'), (181, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\tassert(0);'), (66, 2, u'-\tassert(m_uRefrence > 0);'), (77, 2, u'-\tassert(m_uRefrence > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(268, 2, u'-\t\tassert(0);'), (273, 2, u'-\t\tassert(0);'), (278, 2, u'-\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(96, 2, u'-\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);'), (130, 2, u'-\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (190, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (229, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (234, 2, u'-\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (239, 2, u'-\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (255, 2, u'-\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (370, 2, u'-\t\tassert(theString != NULL);'), (374, 2, u'-\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (419, 2, u'-\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(55, 2, u'-\t\tassert(label != NULL);'), (69, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 2, u'-\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(194, 2, u'-\tNSAssert(false, "Layer#ccTouchBegan override me");'), (420, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );'), (431, 2, u'-\tNSAssert( n < m_pLayers->count(), "Invalid index in MultiplexLayer switchTo message" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 2, u'-\tNSAssert( scene != NULL, "Argument scene must be non-nil");'), (93, 2, u'-\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(151, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (162, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (172, 2, u'-\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (308, 2, u'-\t\t\t\tassert(row < rows.size());'), (318, 2, u'-\t\t\t\tassert(rowColumns);'), (336, 2, u'-\t\tassert(! columnsOccupied);'), (426, 2, u'-\t\t\t\tassert(column < columns.size());'), (430, 2, u'-\t\t\t\tassert(columnRows);'), (454, 2, u'-\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(236, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");'), (286, 2, u'-\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");'), (344, 2, u'-\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(342, 2, u'-\t\t\tassert(m_pVertexData);'), (425, 2, u'-\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(81, 2, u'-\t\t\tNSAssert(0, "Render Texture : Could not attach texture to framebuffer")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 2, u'-\t\tNSAssert( dict != NULL, "Particles: file not found");'), (216, 2, u'-\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (241, 2, u'-\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (245, 2, u'-\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (250, 2, u'-\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");'), (256, 2, u'-\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (668, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (673, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (678, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (683, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (688, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (693, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (698, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (703, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (708, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (713, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (718, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (723, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (728, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (733, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (740, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (745, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (750, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (755, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (760, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (765, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (770, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (775, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (780, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (785, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (790, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (795, 2, u'-\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (146, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (151, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (156, 2, u'-\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (164, 2, u'-\t\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (169, 2, u'-\t\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 2, u'-\t\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffset() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
Class:class CCDictMaker class CCDictMaker
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 2, u'-    assert(pDelegate != NULL);')]
===========================================
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(77, 2, u'-\tassert(0);'), (201, 2, u'-\tassert(pTexture != NULL);'), (212, 2, u'-\tassert(pTexture != NULL);'), (222, 2, u'-\tassert(pszFilename != NULL);'), (240, 2, u'-\tassert(pszFilename != NULL);'), (256, 2, u'-\tassert(pSpriteFrame != NULL);'), (266, 2, u'-\tassert(pszSpriteFrameName != NULL);'), (300, 2, u'-\tassert(pSpriteSheet != NULL);'), (439, 2, u'-\tassert(m_bUsesSpriteSheet);'), (559, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (627, 2, u'-\tassert(pChild != NULL);'), (643, 2, u'-    assert(pChild != NULL);'), (644, 2, u'-\tassert(m_pChildren->containsObject(pChild));'), (770, 2, u'-\tassert(! m_bUsesSpriteSheet);'), (939, 2, u'-\tassert(pFrame);'), (971, 2, u'-\tassert(pszAnimationName != NULL);'), (981, 2, u'-\tassert (! m_bUsesSpriteSheet);'), (1001, 2, u'-\tassert(! m_bUsesSpriteSheet);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(88, 2, u'-\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(165, 2, u'-\tassert(child != NULL);'), (169, 2, u'-\tassert(pSprite->getTexture()->getName() == m_pobTextureAtlas->getTexture()->getName());'), (182, 2, u'-\tassert(child != NULL);'), (183, 2, u'-\tassert(m_pChildren->containsObject(child));'), (208, 2, u'-\tassert(m_pChildren->containsObject(pSprite));'), (318, 2, u'-\t\tassert(false);'), (459, 2, u'-\tassert(0);'), (603, 2, u'-\tNSAssert( sprite != NULL, "Argument must be non-nil");'), (626, 2, u'-\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(166, 2, u'-\t\tNSAssert(0, "NSInternalInconsistencyException");'), (298, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (322, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (343, 2, u'-\t\t\tNSAssert(0, "Invalid pixel format");'), (566, 2, u'-\tNSAssert( m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh), "Mimpap texture only works in POT textures");'), (573, 2, u'-\tNSAssert( (m_uPixelsWide == nextPOT(m_uPixelsWide) && m_uPixelsHigh == nextPOT(m_uPixelsHigh)) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(130, 2, u'-\tassert(texture != NULL);'), (206, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "updateQuadWithTexture: Invalid index");'), (215, 2, u'-\tNSAssert( index >= 0 && index < m_uCapacity, "insertQuadWithTexture: Invalid index");'), (218, 2, u'-\tNSAssert( m_uTotalQuads <= m_uCapacity, "invalid totalQuads");'), (234, 2, u'-\tNSAssert( newIndex >= 0 && newIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (235, 2, u'-\tNSAssert( oldIndex >= 0 && oldIndex < m_uTotalQuads, "insertQuadFromIndex:atIndex: Invalid index");'), (258, 2, u'-\tNSAssert( index >= 0 && index < m_uTotalQuads, "removeQuadAtIndex: Invalid index");'), (271, 2, u'-\tNSAssert( m_uTotalQuads >= 0, "invalid totalQuads");')]
===========================================
Class:class CCAsyncObject : NSObject class CCAsyncObject : NSObject
Class:	class CGPointObject : NSObject 	class CGPointObject : NSObject
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(73, 2, u'-\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (78, 2, u'-\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(189, 2, u'-\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (225, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (226, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (257, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (258, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (391, 2, u'-\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (412, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (413, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (451, 2, u'-\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (461, 2, u'-\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (471, 2, u'-\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (472, 2, u'-\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (533, 2, u'-\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (595, 2, u'-\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (598, 2, u'-\t\t\t\tNSAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(46, 2, u'-\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (52, 2, u'-\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(409, 2, u'-\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );'), (411, 2, u'-\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(95, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (113, 2, u'-\t\tNSAssert( file != NULL, "file must be non-nil");'), (124, 2, u'-\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (132, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (133, 2, u'-\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (134, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (135, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (136, 2, u'-\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (166, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (167, 2, u'-\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (168, 2, u'-\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (210, 2, u'-\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(126, 2, u'- \t\t\t    assert(0);'), (232, 2, u'-\tassert(0);'), (240, 2, u'-\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(92, 2, u'-\tassert(pDelegate != NULL);')]
===========================================
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class:     class MyLayer : public CCLayer { 
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
Class: class MyLayer : public CCLayer { class MyLayer : public CCLayer 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (10, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (10, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'- \tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (10, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
Class: class QueryCallback : public b2QueryCallback 	{ 	
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
Class: class FlipXLeftOver : public CCFlipXTransition { 
Class: class FlipXRightOver : public CCFlipXTransition { 
Class: class FlipYUpOver : public CCFlipYTransition { 
Class: class FlipYDownOver : public CCFlipYTransition { 
Class: class FlipAngularLeftOver : public CCFlipAngularTransition { 
Class: class FlipAngularRightOver : public CCFlipAngularTransition { 
Class: class ZoomFlipXLeftOver : public CCZoomFlipXTransition { 
Class: class ZoomFlipXRightOver : public CCZoomFlipXTransition { 
Class: class ZoomFlipYUpOver : public CCZoomFlipYTransition { 
Class: class ZoomFlipYDownOver : public CCZoomFlipYTransition { 
Class: class ZoomFlipAngularLeftOver : public CCZoomFlipAngularTransition { 
Class: class ZoomFlipAngularRightOver : public CCZoomFlipAngularTransition { 
Class: class PageTransitionForward : public CCPageTurnTransition { 
Class: class PageTransitionBackward : public CCPageTurnTransition { 
Class: class QueryCallback : public b2QueryCallback 	{ 	
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
Class: class FlipXLeftOver : public CCFlipXTransition { 
Class: class FlipXRightOver : public CCFlipXTransition { 
Class: class FlipYUpOver : public CCFlipYTransition { 
Class: class FlipYDownOver : public CCFlipYTransition { 
Class: class FlipAngularLeftOver : public CCFlipAngularTransition { 
Class: class FlipAngularRightOver : public CCFlipAngularTransition { 
Class: class ZoomFlipXLeftOver : public CCZoomFlipXTransition { 
Class: class ZoomFlipXRightOver : public CCZoomFlipXTransition { 
Class: class ZoomFlipYUpOver : public CCZoomFlipYTransition { 
Class: class ZoomFlipYDownOver : public CCZoomFlipYTransition { 
Class: class ZoomFlipAngularLeftOver : public CCZoomFlipAngularTransition { 
Class: class ZoomFlipAngularRightOver : public CCZoomFlipAngularTransition { 
Class: class PageTransitionForward : public CCPageTurnTransition { 
Class: class PageTransitionBackward : public CCPageTurnTransition { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(m_nEffect2ID > 0);'), (7, 1, u'+        assert(m_nEffect2ID > 0);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: TMainForm::CtrlSelected
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(m_nEffect2ID > 0);'), (7, 1, u'+        assert(m_nEffect2ID > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(m_nEffect2ID > 0);'), (7, 1, u'+        assert(m_nEffect2ID > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(69, 1, u'+    assert(pDelegate != NULL);')]
===========================================
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: NSPoolManager::pop
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
Class:     class MyLayer : public CCLayer { 
Class:class CCXEGL class CCXEGL
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Total add: 23
Total del: 1
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (10, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (10, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(! ccArrayContainsObject(pElement->actions, pAction));'), (10, 1, u'+ \tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
Class: class QueryCallback : public b2QueryCallback 	{ 	
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tb2Assert(0 <= edge1 && edge1 < count1);'), (153, 1, u'+\tb2Assert(0 <= edge1 && edge1 < count1);')]
===========================================
Class:     class MyLayer : public CCLayer { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tassert(0);'), (58, 1, u'+\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
Total add: 24
Total del: 43
Header: CCSpriteFrameCache::addSpriteFramesWithDictionary
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tassert(0);'), (58, 1, u'+\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(31, 2, u'-\t\tassert(0);'), (58, 1, u'+\t\tNSAssert(0, "cocos2d: WARNING: format is not supported for CCSpriteFrameCache addSpriteFramesWithDictionary:texture:");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(image != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+\tNSAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: CCTextureCache::addUIImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(image != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+\tNSAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(image != NULL, "TextureCache: image MUST not be nill");'), (3, 1, u'+\tNSAssert(image != NULL && key != NULL, "TextureCache: image MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pAction != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCSpeed::actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pAction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pAction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: *CCFollow::actionWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: *CCFollow::initWithTarget
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tassert(pFollowedNode != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pAction != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: *CCRepeatForever::actionWithAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pAction != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert(pAction != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tassert(tile != NULL);')]
===========================================
===========================================
Total add: 10
Total del: 6
Header: CCAtlasNode::atlasWithTileFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tassert(tile != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+\tassert(tile != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);')]
===========================================
===========================================
Total add: 10
Total del: 5
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tassert(FNTfile != NULL && strlen(FNTfile)!=0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(theString != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(theString != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(theString != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(label != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( strlen(value) != 0, "value lenght must be greater than 0");'), (6, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( strlen(value) != 0, "value lenght must be greater than 0");'), (6, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( strlen(value) != 0, "value lenght must be greater than 0");'), (6, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "value lenght must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( strlen(value) != 0, "Value lenght must be greater than 0");'), (6, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( strlen(value) != 0, "Value lenght must be greater than 0");'), (6, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert( strlen(value) != 0, "Value lenght must be greater than 0");'), (6, 1, u'+\t\tNSAssert( value != NULL && strlen(value) != 0, "Value lenght must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\t\tassert(normalSprite != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(pSpriteSheet != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: CCSprite::initWithCGImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(pSpriteSheet != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(pSpriteSheet != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(texture != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureAtlas::initWithFile
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(texture != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\tassert(texture != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tassert(m_pCurReleasePool);'), (10, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Total add: 13
Total del: 12
Header: NSPoolManager::pop
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tassert(m_pCurReleasePool);'), (10, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\t\tassert(m_pCurReleasePool);'), (10, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( compression == "gzip", "TMX: unsupported compression method" );'), (3, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( compression == "gzip", "TMX: unsupported compression method" );'), (3, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\t\tNSAssert( compression == "gzip", "TMX: unsupported compression method" );'), (3, 1, u'+\t\t\t\tNSAssert( compression == "" || compression == "gzip", "TMX: unsupported compression method" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 1, u'+\t\tNSAssert(tmxFile != NULL && strlen(tmxFile)>0, "TMXTiledMap: tmx file should not bi nil");'), (51, 1, u'+\t\tNSAssert( mapInfo->getTilesets()->count() != 0, "TMXTiledMap: Map not found. Please check the filename.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(186, 1, u'+\t\tNSAssert( m_uMaxGID >= m_pTileSet->m_uFirstGid &&'), (219, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (220, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (251, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (252, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (385, 1, u'+\t\tNSAssert( item, "TMX atlas index not found. Shall not happen");'), (406, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (407, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (445, 1, u'+\t\tNSAssert(0, "addChild: is not supported on CCTMXLayer. Instead use setTileGID:at:/tileAt:");'), (455, 1, u'+\t\tNSAssert( m_pChildren->containsObject(sprite), "Tile does not belong to TMXLayer");'), (465, 1, u'+\t\tNSAssert( pos.x < m_tLayerSize.width && pos.y < m_tLayerSize.height && pos.x >=0 && pos.y >=0, "TMXLayer: invalid position");'), (466, 1, u'+\t\tNSAssert( m_pTiles && m_pAtlasIndexArray, "TMXLayer: the tiles map has been released");'), (539, 1, u'+\t\t\tNSAssert(CGPoint::CGPointEqualToPoint(pos, CGPointZero), "offset for hexagonal map not implemented yet");'), (599, 1, u'+\t\t\t\tNSAssert(0, "TMX Hexa zOrder not supported");'), (602, 1, u'+\t\t\t\tNSAssert(0, "TMX invalid value");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( dynamic_cast<CCMenuItem*>(child) != NULL, L"Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( dynamic_cast<CCMenuItem*>(child) != NULL, L"Menu only supports MenuItem objects as children");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\tNSAssert( dynamic_cast<CCMenuItem*>(child) != NULL, L"Menu only supports MenuItem objects as children");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(87, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");'), (105, 1, u'+\t\tNSAssert( file != NULL, "file must be non-nil");'), (116, 1, u'+\t\t\tNSAssert(0, "TileMapAtlasLoadTGA : TileMapAtas cannot load TGA file");'), (124, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (125, 1, u'+\t\tNSAssert( m_pPosToAtlasIndex != NULL, "posToAtlasIndex must not be nil");'), (126, 1, u'+\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (127, 1, u'+\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.x");'), (128, 1, u'+\t\tNSAssert( tile.r != 0, "R component must be non 0");'), (152, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must not be nil");'), (153, 1, u'+\t\tNSAssert( position.x < m_pTGAInfo->width, "Invalid position.x");'), (154, 1, u'+\t\tNSAssert( position.y < m_pTGAInfo->height, "Invalid position.y");'), (196, 1, u'+\t\tNSAssert( m_pTGAInfo != NULL, "tgaInfo must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(318, 1, u'+\t\t\t\tNSAssert( compression == "gzip", "TMX: unsupported compression method" );'), (320, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Total add: 482
Total del: 1
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(318, 1, u'+\t\t\t\tNSAssert( compression == "gzip", "TMX: unsupported compression method" );'), (320, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(318, 1, u'+\t\t\t\tNSAssert( compression == "gzip", "TMX: unsupported compression method" );'), (320, 1, u'+\t\t\tNSAssert( pTMXMapInfo->getLayerAttribs() != TMXLayerAttribNone, "TMX tile map: Only base64 and/or gzip maps are supported" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 2, u'-\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (187, 1, u'+\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (209, 2, u'-\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (215, 2, u'-\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (217, 2, u'-\t\t\t\t\tNSAssert(image->initWithData(deflated, deflatedLen), "CCParticleSystem: error init image with Data");'), (227, 1, u'+\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (231, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (236, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Total add: 121
Total del: 117
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 2, u'-\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (187, 1, u'+\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (209, 2, u'-\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (215, 2, u'-\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (217, 2, u'-\t\t\t\t\tNSAssert(image->initWithData(deflated, deflatedLen), "CCParticleSystem: error init image with Data");'), (227, 1, u'+\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (231, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (236, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(100, 2, u'-\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (187, 1, u'+\t\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (209, 2, u'-\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (215, 2, u'-\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (217, 2, u'-\t\t\t\t\tNSAssert(image->initWithData(deflated, deflatedLen), "CCParticleSystem: error init image with Data");'), (227, 1, u'+\t\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (231, 1, u'+\t\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (236, 1, u'+\t\t\t\t\t\tNSAssert(isOK, "CCParticleSystem: error init image with Data");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t    assert(0);'), (33, 1, u'+ \t\t\t    assert(0);')]
===========================================
===========================================
Total add: 38
Total del: 18
Header: CCTouchDispatcher::forceAddHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t    assert(0);'), (33, 1, u'+ \t\t\t    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t    assert(0);'), (33, 1, u'+ \t\t\t    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (21, 2, u'-\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (41, 1, u'+\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (47, 1, u'+\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (49, 1, u'+\t\t\t\t\tNSAssert(image->initWithData(deflated, deflatedLen), "CCParticleSystem: error init image with Data");'), (55, 1, u'+\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (58, 2, u'-\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Total add: 32
Total del: 23
Header: namespace cocos2d {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (21, 2, u'-\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (41, 1, u'+\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (47, 1, u'+\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (49, 1, u'+\t\t\t\t\tNSAssert(image->initWithData(deflated, deflatedLen), "CCParticleSystem: error init image with Data");'), (55, 1, u'+\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (58, 2, u'-\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (21, 2, u'-\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (41, 1, u'+\t\t\t\t\tNSAssert( buffer != NULL, "CCParticleSystem: error decoding textureImageData");'), (47, 1, u'+\t\t\t\t\tNSAssert( deflated != NULL, "CCParticleSystem: error ungzipping textureImageData");'), (49, 1, u'+\t\t\t\t\tNSAssert(image->initWithData(deflated, deflatedLen), "CCParticleSystem: error init image with Data");'), (55, 1, u'+\t\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (58, 2, u'-\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(image->initWithContentsOfFile(fullpath), "")')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(image->initWithContentsOfFile(fullpath), "")')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tNSAssert(image->initWithContentsOfFile(fullpath), "")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (49, 1, u'+\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 109
Total del: 1
Header: THE SOFTWARE.
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (49, 1, u'+\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(44, 1, u'+\t\tNSAssert(0,"ParallaxNode: use addChild:z:parallaxRatio:positionOffset instead");'), (49, 1, u'+\t\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
Class:class CCDictMaker class CCDictMaker
Class:class CCDictMaker class CCDictMaker
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\t\tNSAssert(!pMaker->m_sCurKey.empty(), "not found key : <integet/real>");'), (30, 1, u'+ \t\t\tNSAssert(!pMaker->m_sCurKey.empty(), "not found key : <integet/real>");')]
===========================================
===========================================
Total add: 18
Total del: 13
Header: characters
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\t\tNSAssert(!pMaker->m_sCurKey.empty(), "not found key : <integet/real>");'), (30, 1, u'+ \t\t\tNSAssert(!pMaker->m_sCurKey.empty(), "not found key : <integet/real>");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-\t\t\tNSAssert(!pMaker->m_sCurKey.empty(), "not found key : <integet/real>");'), (30, 1, u'+ \t\t\tNSAssert(!pMaker->m_sCurKey.empty(), "not found key : <integet/real>");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(71, 1, u'+\t\tNSAssert( dict != NULL, "Particles: file not found");'), (158, 1, u'+\t\t\t\tNSAssert( false, "Invalid emitterType in config file");'), (195, 1, u'+\t\t\tNSAssert( this->m_pTexture != NULL, "CCParticleSystem: error loading the texture");'), (592, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (597, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (602, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (607, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (612, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (617, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (622, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (627, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (632, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (637, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (642, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (647, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (652, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (657, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeGravity, "Particle Mode should be Gravity");'), (664, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (669, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (674, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (679, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (684, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (689, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (694, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (699, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (704, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (709, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (714, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");'), (719, 1, u'+\t\tNSAssert( m_nEmitterMode == kCCParticleModeRadius, "Particle Mode should be Radius");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(141, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (146, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (151, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (156, 1, u'+\t\tNSAssert(var == 0, "PointParticleSystem doesn\'t support spinning");'), (164, 1, u'+\t\tNSAssert(size >= 0 && size <= CC_MAX_PARTICLE_SIZE, "PointParticleSystem only supports 0 <= size <= 64");'), (169, 1, u'+\t\tNSAssert( (size == kCCParticleStartSizeEqualToEndSize) ||')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(131, 1, u'+\t\tNSAssert( CGPoint::CGPointEqualToPoint( spriteFrame->getOffset() , CGPointZero ), "QuadParticle only supports SpriteFrames with no offsets");')]
===========================================
Class:  class Shaky3DDemo : public CCShaky3D { 
Class: class Waves3DDemo : public CCWaves3D { 
Class: class FlipX3DDemo : public CCFlipX3D { 
Class: class FlipY3DDemo : public CCFlipY3D { 
Class: class Lens3DDemo : public CCLens3D { 
Class:  class Ripple3DDemo : public CCRipple3D { 
Class:  class LiquidDemo : public CCLiquid { 
Class:  class WavesDemo : public CCWaves { 
Class:  class TwirlDemo : public CCTwirl { 
Class:  class ShakyTiles3DDemo : public CCShakyTiles3D { 
Class:  class ShatteredTiles3DDemo : public CCShatteredTiles3D { 
Class:  class ShuffleTilesDemo : public CCShuffleTiles { 
Class:  class FadeOutTRTilesDemo : public CCFadeOutTRTiles { 
Class:  class FadeOutBLTilesDemo : public CCFadeOutBLTiles { 
Class:  class FadeOutUpTilesDemo : public CCFadeOutUpTiles { 
Class: class FadeOutDownTilesDemo : public CCFadeOutDownTiles { 
Class: class TurnOffTilesDemo : public CCTurnOffTiles { 
Class: class WavesTiles3DDemo : public CCWavesTiles3D { 
Class: class JumpTiles3DDemo : public CCJumpTiles3D { 
Class: class SplitRowsDemo : public CCSplitRows { 
Class: class SplitColsDemo : public CCSplitCols { 
Class: class PageTurn3DDemo : public CCPageTurn3D { 
Class:  class FadeWhiteTransition : public CCFadeTransition { 
Class: class FlipXLeftOver : public CCFlipXTransition { 
Class: class FlipXRightOver : public CCFlipXTransition { 
Class: class FlipYUpOver : public CCFlipYTransition { 
Class: class FlipYDownOver : public CCFlipYTransition { 
Class: class FlipAngularLeftOver : public CCFlipAngularTransition { 
Class: class FlipAngularRightOver : public CCFlipAngularTransition { 
Class: class ZoomFlipXLeftOver : public CCZoomFlipXTransition { 
Class: class ZoomFlipXRightOver : public CCZoomFlipXTransition { 
Class: class ZoomFlipYUpOver : public CCZoomFlipYTransition { 
Class: class ZoomFlipYDownOver : public CCZoomFlipYTransition { 
Class: class ZoomFlipAngularLeftOver : public CCZoomFlipAngularTransition { 
Class: class ZoomFlipAngularRightOver : public CCZoomFlipAngularTransition { 
Class: class PageTransitionForward : public CCPageTurnTransition { 
Class: class PageTransitionBackward : public CCPageTurnTransition { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(pObject->m_uRefrence > 1);')]
===========================================
===========================================
Total add: 6
Total del: 2
Header: NSAutoreleasePool::~NSAutoreleasePool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(pObject->m_uRefrence > 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+\tassert(pObject->m_uRefrence > 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+\t\tassert(m_pCurReleasePool);'), (45, 1, u'+\tassert(m_pCurReleasePool);'), (53, 2, u'-\tassert(m_pReleasePoolStack->top());'), (70, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Total add: 36
Total del: 19
Header: NSPoolManager::finalize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+\t\tassert(m_pCurReleasePool);'), (45, 1, u'+\tassert(m_pCurReleasePool);'), (53, 2, u'-\tassert(m_pReleasePoolStack->top());'), (70, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 1, u'+\t\tassert(m_pCurReleasePool);'), (45, 1, u'+\tassert(m_pCurReleasePool);'), (53, 2, u'-\tassert(m_pReleasePoolStack->top());'), (70, 1, u'+\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(134, 1, u'+\t\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(75, 1, u'+\t\t\tNSAssert(0, "Render Texture : Could not attach texture to framebuffer")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pobSharedDirector==NULL);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: CCDirector::setDierectorType
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pobSharedDirector==NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(pobSharedDirector==NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);'), (3, 1, u'+\tassert(m_pReleasePoolStack->top());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: NSPoolManager::removeObject
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);'), (3, 1, u'+\tassert(m_pReleasePoolStack->top());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);'), (3, 1, u'+\tassert(m_pReleasePoolStack->top());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Total add: 2
Total del: 4
Header: NSPoolManager::getCurReleasePool
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(m_pCurReleasePool);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(80, 1, u'+\t\t\t\tassert(0);'), (98, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(229, 1, u'+\t\tassert(0);'), (234, 1, u'+\t\tassert(0);'), (239, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(115, 1, u'+\t\t\tNSAssert(0, "CCBitmapFontConfiguration::parseConfigFile | Open file error.");'), (175, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 0, "BitmapFontAtlas file could not be found");'), (214, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (219, 1, u'+\t\tNSAssert(atoi(value.c_str()) <= CCConfiguration::sharedConfiguration()->getMaxTextureSize(), "CCBitmapFontAtlas: page can\'t be larger than supported");'), (224, 1, u'+\t\tNSAssert(atoi(value.c_str()) == 1, "CCBitfontAtlas: only supports 1 page");'), (240, 1, u'+\t\tNSAssert(characterDefinition->charID < kCCBitmapFontAtlasMaxChars, "BitmpaFontAtlas: CharID bigger than supported");'), (357, 1, u'+\t\tNSAssert( m_pConfiguration, "Error creating config for BitmapFontAtlas");'), (401, 1, u'+\t\t\tNSAssert( c < kCCBitmapFontAtlasMaxChars, "BitmapFontAtlas: character outside bounds");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(341, 1, u'+\t\t\tassert(m_pVertexData);'), (424, 1, u'+\t\t\tassert(m_pVertexData);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\tNSAssert( row < [rows count], @"Too many menu items for the amount of rows/columns.");'), (15, 1, u'+\t\t\t\tassert(row < rows.size());'), (24, 2, u'-\t\t\tNSAssert( rowColumns, @"Can\'t have zero columns on a row");'), (27, 1, u'+\t\t\t\tassert(rowColumns);'), (50, 2, u'-\t\tNSAssert( !columnsOccupied, @"Too many rows/columns for available menu items." );'), (55, 1, u'+\t\tassert(! columnsOccupied);')]
===========================================
===========================================
Total add: 75
Total del: 38
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\tNSAssert( row < [rows count], @"Too many menu items for the amount of rows/columns.");'), (15, 1, u'+\t\t\t\tassert(row < rows.size());'), (24, 2, u'-\t\t\tNSAssert( rowColumns, @"Can\'t have zero columns on a row");'), (27, 1, u'+\t\t\t\tassert(rowColumns);'), (50, 2, u'-\t\tNSAssert( !columnsOccupied, @"Too many rows/columns for available menu items." );'), (55, 1, u'+\t\tassert(! columnsOccupied);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\t\tNSAssert( row < [rows count], @"Too many menu items for the amount of rows/columns.");'), (15, 1, u'+\t\t\t\tassert(row < rows.size());'), (24, 2, u'-\t\t\tNSAssert( rowColumns, @"Can\'t have zero columns on a row");'), (27, 1, u'+\t\t\t\tassert(rowColumns);'), (50, 2, u'-\t\tNSAssert( !columnsOccupied, @"Too many rows/columns for available menu items." );'), (55, 1, u'+\t\tassert(! columnsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\t\tNSAssert( column < [columns count], @"Too many menu items for the amount of rows/columns.");'), (45, 1, u'+\t\t\t\tassert(column < columns.size());'), (48, 2, u'-\t\t\tNSAssert( columnRows, @"Can\'t have zero rows on a column");'), (51, 1, u'+\t\t\t\tassert(columnRows);'), (84, 2, u'-\t\tNSAssert( !rowsOccupied, @"Too many rows/columns for available menu items.");'), (88, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Total add: 106
Total del: 55
Header: namespace cocos2d{
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\t\tNSAssert( column < [columns count], @"Too many menu items for the amount of rows/columns.");'), (45, 1, u'+\t\t\t\tassert(column < columns.size());'), (48, 2, u'-\t\t\tNSAssert( columnRows, @"Can\'t have zero rows on a column");'), (51, 1, u'+\t\t\t\tassert(columnRows);'), (84, 2, u'-\t\tNSAssert( !rowsOccupied, @"Too many rows/columns for available menu items.");'), (88, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 2, u'-\t\t\tNSAssert( column < [columns count], @"Too many menu items for the amount of rows/columns.");'), (45, 1, u'+\t\t\t\tassert(column < columns.size());'), (48, 2, u'-\t\t\tNSAssert( columnRows, @"Can\'t have zero rows on a column");'), (51, 1, u'+\t\t\t\tassert(columnRows);'), (84, 2, u'-\t\tNSAssert( !rowsOccupied, @"Too many rows/columns for available menu items.");'), (88, 1, u'+\t\tassert(! rowsOccupied);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+\t\tassert(pAction != NULL);'), (579, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(102, 1, u'+\t\tNSAssert( dynamic_cast<CCMenuItem*>(child) != NULL, L"Menu only supports MenuItem objects as children");'), (127, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchEnded] -- invalid state");'), (134, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchCancelled] -- invalid state");'), (140, 1, u'+\t\tNSAssert(m_eState == kMenuStateTrackingTouch, "[Menu ccTouchMoved] -- invalid state");'), (220, 1, u'+\t\t\tNSAssert( row < [rows count], @"Too many menu items for the amount of rows/columns.");'), (223, 1, u'+\t\t\tNSAssert( rowColumns, @"Can\'t have zero columns on a row");'), (236, 1, u'+\t\tNSAssert( !columnsOccupied, @"Too many rows/columns for available menu items." );'), (294, 1, u'+\t\t\tNSAssert( column < [columns count], @"Too many menu items for the amount of rows/columns.");'), (297, 1, u'+\t\t\tNSAssert( columnRows, @"Can\'t have zero rows on a column");'), (314, 1, u'+\t\tNSAssert( !rowsOccupied, @"Too many rows/columns for available menu items.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(231, 1, u'+\t\tNSAssert( strlen(value) != 0, "value lenght must be greater than 0");'), (280, 1, u'+\t\tNSAssert( strlen(value) != 0, "Value lenght must be greater than 0");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: CCAnimate::initWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAnimation);')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: CCAnimate::initWithAnimation
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAnimation);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAnimation);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: CCAnimate::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert(pAnimation != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! pElement->actions->containsObject(pAction));'), (4, 1, u'+\tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCActionManager::addAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! pElement->actions->containsObject(pAction));'), (4, 1, u'+\tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! pElement->actions->containsObject(pAction));'), (4, 1, u'+\tassert(! ccArrayContainsObject(pElement->actions, pAction));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( action = NULL, "Argument must be non-nil");'), (3, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::runAction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( action = NULL, "Argument must be non-nil");'), (3, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert( action = NULL, "Argument must be non-nil");'), (3, 1, u'+\tNSAssert( action != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Total add: 24
Total del: 1
Header: CCIntervalAction::copyWithZone
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pActionOne != NULL);'), (4, 1, u'+\tassert(pActionTwo != NULL);')]
===========================================
===========================================
Total add: 13
Total del: 1
Header: CCSequence::initOneTwo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pActionOne != NULL);'), (4, 1, u'+\tassert(pActionTwo != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(pActionOne != NULL);'), (4, 1, u'+\tassert(pActionTwo != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+\tassert(pAction1 != NULL);'), (43, 1, u'+\tassert(pAction2 != NULL);')]
===========================================
===========================================
Total add: 57
Total del: 4
Header: CCRepeat::reverse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+\tassert(pAction1 != NULL);'), (43, 1, u'+\tassert(pAction2 != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(42, 1, u'+\tassert(pAction1 != NULL);'), (43, 1, u'+\tassert(pAction2 != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(! isOpenGLAttached());')]
===========================================
===========================================
Total add: 0
Total del: 4
Header: CCDirector::detach
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(! isOpenGLAttached());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(! isOpenGLAttached());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (17, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Total add: 6
Total del: 9
Header: CCNode::stopActionByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (17, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");'), (17, 1, u'+\tNSAssert( tag != kCCActionTagInvalid, "Invalid tag");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\t\tassert(0);'), (21, 1, u'+\t\t\t    assert(0);')]
===========================================
===========================================
Total add: 13
Total del: 10
Header: CCTouchDispatcher::forceAddHandler
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\t\tassert(0);'), (21, 1, u'+\t\t\t    assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\t\t\tassert(0);'), (21, 1, u'+\t\t\t    assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(64, 1, u'+\tassert(gSharedManager == NULL);'), (178, 1, u'+\tassert(pAction != NULL);'), (179, 1, u'+\tassert(pTarget != NULL);'), (194, 1, u'+\tassert(! pElement->actions->containsObject(pAction));'), (273, 1, u'+\tassert(tag != kCCActionTagInvalid);'), (274, 1, u'+\tassert(pTarget != NULL);'), (303, 1, u'+\tassert(tag != kCCActionTagInvalid);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t assert(0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::reorderChild
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex > 0 && uIndex < 4);'), (3, 1, u'+\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTouchDispatcher::touches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex > 0 && uIndex < 4);'), (3, 1, u'+\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex > 0 && uIndex < 4);'), (3, 1, u'+\tassert(uIndex >= 0 && uIndex < 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (19, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Total add: 18
Total del: 11
Header: CCTransitionScene::initWithDuration
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (19, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(18, 2, u'-\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );'), (19, 1, u'+\t\tNSAssert( m_pInScene != m_pOutScene, "Incoming scene must be different from the outgoing scene" );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+\tNSAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCTextureCache::CCTextureCache
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+\tNSAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");'), (3, 1, u'+\tNSAssert(g_sharedTextureCache == NULL, "Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (13, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (13, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-\t\t\tNSAssert(tempData != NULL, "NULL image data.");'), (13, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (12, 1, u'+\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: CCTouchDispatcher::getSharedDispatcher
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (12, 1, u'+\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");'), (12, 1, u'+\t\tNSAssert(sharedDispatcher == nil, @"Attempted to allocate a second instance of a singleton.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tNSAssert(image->initWithContentsOfFile(fullpath), "")')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tNSAssert(image->initWithContentsOfFile(fullpath), "")')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\t\t\tNSAssert(image->initWithContentsOfFile(fullpath), "")')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_pobTexture);'), (3, 1, u'+\tassert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
Total add: 10
Total del: 3
Header: CCSprite::setTexture
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_pobTexture);'), (3, 1, u'+\tassert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(! m_pobTexture);'), (3, 1, u'+\tassert((! texture) || dynamic_cast<CCTexture2D*>(texture));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tNSAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
Total add: 4
Total del: 5
Header: CCLayer::onExit
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tNSAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+\tNSAssert(false, "Layer#ccTouchBegan override me");')]
===========================================
Class: class CCDictMaker { 
Class:class CCXEGL { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(204, 2, u'-\t\tassert(0);'), (302, 2, u'-\tassert(uIndex < count());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: CCTexture2D::initPremultipliedATextureWithImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+\t\t\tNSAssert(tempData != NULL, "NULL image data.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (3, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be NULL");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!filename.empty() , "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: sharegroup:[[[[CCDirector sharedDirector] openGLView] context] sharegroup]];
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!filename.empty() , "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!filename.empty() , "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(filename != NULL , "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::addImageAsync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");'), (7, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");'), (7, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");'), (7, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!fileimage.empty(), "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!fileimage.empty(), "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(!fileimage.empty(), "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: NSMutableArray<T>::replaceObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\tassert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+\t\tassert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: NSMutableArray<T>::getObjectAtIndex
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(uIndex >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: sharegroup:[[[[CCDirector sharedDirector] openGLView] context] sharegroup]];
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (7, 1, u'+\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::addImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (7, 1, u'+\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (7, 1, u'+\tNSAssert(!path.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(!fileimage.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: CCTextureCache::addPVRTCImage
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(!fileimage.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");'), (6, 1, u'+\tNSAssert(!fileimage.empty(), "TextureCache: fileimage MUST not be nill");')]
===========================================
Class:class CCAsyncObject : NSObject { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tNSAssert(path != nil, @"TextureCache: fileimage MUST not be nill");'), (9, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: sharegroup:[[[[CCDirector sharedDirector] openGLView] context] sharegroup]];
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tNSAssert(path != nil, @"TextureCache: fileimage MUST not be nill");'), (9, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tNSAssert(path != nil, @"TextureCache: fileimage MUST not be nill");'), (9, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(path != nil, @"TextureCache: fileimage MUST not be nill");'), (6, 2, u'-\tNSAssert( bpp==2 || bpp==4, @"TextureCache: bpp must be either 2 or 4");'), (8, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (9, 1, u'+\tNSAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Total add: 5
Total del: 4
Header: sharegroup:[[[[CCDirector sharedDirector] openGLView] context] sharegroup]];
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(path != nil, @"TextureCache: fileimage MUST not be nill");'), (6, 2, u'-\tNSAssert( bpp==2 || bpp==4, @"TextureCache: bpp must be either 2 or 4");'), (8, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (9, 1, u'+\tNSAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-\tNSAssert(path != nil, @"TextureCache: fileimage MUST not be nill");'), (6, 2, u'-\tNSAssert( bpp==2 || bpp==4, @"TextureCache: bpp must be either 2 or 4");'), (8, 1, u'+\tNSAssert(path != NULL, "TextureCache: fileimage MUST not be nill");'), (9, 1, u'+\tNSAssert( bpp==2 || bpp==4, "TextureCache: bpp must be either 2 or 4");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tNSAssert(fileimage != nil, @"TextureCache: fileimage MUST not be nill");'), (13, 1, u'+\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Total add: 6
Total del: 5
Header: sharegroup:[[[[CCDirector sharedDirector] openGLView] context] sharegroup]];
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tNSAssert(fileimage != nil, @"TextureCache: fileimage MUST not be nill");'), (13, 1, u'+\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-\tNSAssert(fileimage != nil, @"TextureCache: fileimage MUST not be nill");'), (13, 1, u'+\tNSAssert(fileimage != NULL, "TextureCache: fileimage MUST not be nill");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: CCNode::getScale
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tNSAssert( m_fScaleX == m_fScaleY, "CCNode#scale. ScaleX != ScaleY. Don\'t know which one to return");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (52, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
Total add: 17
Total del: 23
Header: CCNode::getChildByTag
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (52, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(41, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");'), (52, 1, u'+\tNSAssert( child != NULL, "Argument must be non-nil");')]
===========================================
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
5952
Mismatch count:17338
Normal count:183107
