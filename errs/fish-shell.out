projects/top_C++/fish-shell
Going to process projects/top_C++/fish-shell/all_log.txt 
---------- fish-shell ------------

===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+                assert(end >= begin);')]
===========================================
===========================================
Total add: 19
Total del: 20
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+                assert(end >= begin);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(38, 1, u'+                assert(end >= begin);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(callbacks != NULL);')]
===========================================
===========================================
Total add: 53
Total del: 8
Header: env_universal_t::get_names
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(callbacks != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(callbacks != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 5
Total del: 2
Header: env_universal_t::sync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: env_universal_t::read_message_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(s_universal_variables == NULL);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: env_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(s_universal_variables == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(s_universal_variables == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 0
Total del: 22
Header: env_universal_t::get_names
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(in[0] == PROCESS_EXPAND);')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: expand_pid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(in[0] == PROCESS_EXPAND);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(in[0] == PROCESS_EXPAND);')]
===========================================
Class: class universal_notifier_inotify_t : public universal_notifier_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        assert(arg != NULL);'), (64, 1, u'+        assert(arg_is_valid_option);'), (82, 1, u'+                    assert(0 && "Unexpected character in builtin_echo argument");')]
===========================================
===========================================
Total add: 40
Total del: 35
Header: builtin_echo
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        assert(arg != NULL);'), (64, 1, u'+        assert(arg_is_valid_option);'), (82, 1, u'+                    assert(0 && "Unexpected character in builtin_echo argument");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        assert(arg != NULL);'), (64, 1, u'+        assert(arg_is_valid_option);'), (82, 1, u'+                    assert(0 && "Unexpected character in builtin_echo argument");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(synchronizes_via_fishd());')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: reconnect
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(synchronizes_via_fishd());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(synchronizes_via_fishd());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(! synchronizes_via_fishd());')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: env_universal_common_sync
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(! synchronizes_via_fishd());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(! synchronizes_via_fishd());')]
===========================================
Class:class universal_notifier_null_t : public universal_notifier_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert((wint_t)result_char == result_char_or_none);')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: read_unquoted_escape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert((wint_t)result_char == result_char_or_none);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+        assert((wint_t)result_char == result_char_or_none);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert((wint_t)to_append_char == to_append_or_none);')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: unescape_string_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert((wint_t)to_append_char == to_append_or_none);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert((wint_t)to_append_char == to_append_or_none);')]
===========================================
Class:class universal_notifier_named_pipe_t : public universal_notifier_t { 
Class:class universal_notifier_inotify_t : public universal_notifier_t { 
Class: class universal_notifier_notifyd_t : public universal_notifier_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                assert(expected_val.missing());')]
===========================================
===========================================
Total add: 16
Total del: 3
Header: test_universal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                assert(expected_val.missing());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                assert(expected_val.missing());')]
===========================================
Class: class universal_notifier_shmem_poller_t : public universal_notifier_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        PARSE_ASSERT(top_symbol.node_idx != -1);'), (3, 1, u'+        PARSE_ASSERT(top_symbol.node_idx != NODE_OFFSET_INVALID);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: class parse_ll_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        PARSE_ASSERT(top_symbol.node_idx != -1);'), (3, 1, u'+        PARSE_ASSERT(top_symbol.node_idx != NODE_OFFSET_INVALID);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        PARSE_ASSERT(top_symbol.node_idx != -1);'), (3, 1, u'+        PARSE_ASSERT(top_symbol.node_idx != NODE_OFFSET_INVALID);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 13
Total del: 4
Header: env_universal_t::set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: env_universal_t::remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: env_universal_t::get_names
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert(! string_suffixes_string(L"/", directory));'), (93, 1, u'+        assert(fd >= 0);'), (119, 1, u'+        assert(fd >= 0);'), (169, 1, u'+        assert(vars_fd >= 0);'), (179, 1, u'+        assert(private_fd >= 0);')]
===========================================
===========================================
Total add: 194
Total del: 15
Header: env_universal_t::load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert(! string_suffixes_string(L"/", directory));'), (93, 1, u'+        assert(fd >= 0);'), (119, 1, u'+        assert(fd >= 0);'), (169, 1, u'+        assert(vars_fd >= 0);'), (179, 1, u'+        assert(private_fd >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert(! string_suffixes_string(L"/", directory));'), (93, 1, u'+        assert(fd >= 0);'), (119, 1, u'+        assert(fd >= 0);'), (169, 1, u'+        assert(vars_fd >= 0);'), (179, 1, u'+        assert(private_fd >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: env_universal_t::get_export
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: *dequeue_spawn_request
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(threadPtr != NULL);')]
===========================================
===========================================
Total add: 58
Total del: 47
Header: *dequeue_spawn_request
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(threadPtr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(threadPtr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        assert(threadIdx < IO_MAX_THREADS);'), (26, 2, u'-        assert(thread->thread != 0);'), (33, 2, u'-        assert(s_active_thread_count > 0);')]
===========================================
===========================================
Total add: 30
Total del: 31
Header: iothread_service_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        assert(threadIdx < IO_MAX_THREADS);'), (26, 2, u'-        assert(thread->thread != 0);'), (33, 2, u'-        assert(s_active_thread_count > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-        assert(threadIdx < IO_MAX_THREADS);'), (26, 2, u'-        assert(thread->thread != 0);'), (33, 2, u'-        assert(s_active_thread_count > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(parser->current_block()->job == j);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: parse_execution_context_t::run_1_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(parser->current_block()->job == j);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(parser->current_block()->job == j);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: perform_file_detection_done
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job.type == symbol_job);'), (5, 1, u'+    assert(job.production_idx == 0);'), (9, 1, u'+        assert(opt_background->production_idx <= 1);')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: parse_node_tree_t::parse_node_list_t parse_node_tree_t::specific_statements_for_
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job.type == symbol_job);'), (5, 1, u'+    assert(job.production_idx == 0);'), (9, 1, u'+        assert(opt_background->production_idx <= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job.type == symbol_job);'), (5, 1, u'+    assert(job.production_idx == 0);'), (9, 1, u'+        assert(opt_background->production_idx <= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(token.type == parse_token_type_string);'), (3, 2, u'-        assert(token.keyword == parse_keyword_end || token.keyword == parse_keyword_else || token.keyword == parse_keyword_case);')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: parse_ll_t::parse_error_unbalancing_token
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(token.type == parse_token_type_string);'), (3, 2, u'-        assert(token.keyword == parse_keyword_end || token.keyword == parse_keyword_else || token.keyword == parse_keyword_case);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(token.type == parse_token_type_string);'), (3, 2, u'-        assert(token.keyword == parse_keyword_end || token.keyword == parse_keyword_else || token.keyword == parse_keyword_case);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(arg_list->type == symbol_argument_list);'), (3, 1, u'+    assert(arg_list->type == symbol_freestanding_argument_list);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: parser_t::expand_argument_list
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(arg_list->type == symbol_argument_list);'), (3, 1, u'+    assert(arg_list->type == symbol_freestanding_argument_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(arg_list->type == symbol_argument_list);'), (3, 1, u'+    assert(arg_list->type == symbol_freestanding_argument_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(arg_list->type == symbol_argument_list);'), (3, 1, u'+        assert(arg_list->type == symbol_freestanding_argument_list);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: parser_t::detect_errors_in_argument_list
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(arg_list->type == symbol_argument_list);'), (3, 1, u'+        assert(arg_list->type == symbol_freestanding_argument_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(arg_list->type == symbol_argument_list);'), (3, 1, u'+        assert(arg_list->type == symbol_freestanding_argument_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (6, 1, u'+        ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: highlighter_t::highlight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (6, 1, u'+        ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (6, 1, u'+        ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(addr - base < SOURCE_OFFSET_INVALID);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: parse_execution_context_t::get_offset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(addr - base < SOURCE_OFFSET_INVALID);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(addr - base < SOURCE_OFFSET_INVALID);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        assert(child_start_big < NODE_OFFSET_INVALID);')]
===========================================
===========================================
Total add: 10
Total del: 3
Header: class parse_ll_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        assert(child_start_big < NODE_OFFSET_INVALID);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        assert(child_start_big < NODE_OFFSET_INVALID);')]
===========================================
Class:class sloppy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(err.source_start <= src.size());')]
===========================================
===========================================
Total add: 16
Total del: 9
Header: parser_t::get_backtrace
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(err.source_start <= src.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-        assert(err.source_start <= src.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+        assert(! tree.empty());'), (63, 1, u'+        assert(arg_list->type == symbol_argument_list);')]
===========================================
===========================================
Total add: 28
Total del: 47
Header: parser_t::parser_test_argument
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+        assert(! tree.empty());'), (63, 1, u'+        assert(arg_list->type == symbol_argument_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 1, u'+        assert(! tree.empty());'), (63, 1, u'+        assert(arg_list->type == symbol_argument_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(node.type == symbol_argument);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: parse_util_detect_errors_in_argument
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(node.type == symbol_argument);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(node.type == symbol_argument);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    assert(! tree.empty());'), (31, 1, u'+    assert(arg_list->type == symbol_argument_list);')]
===========================================
===========================================
Total add: 21
Total del: 53
Header: parser_t::eval_args
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    assert(! tree.empty());'), (31, 1, u'+    assert(arg_list->type == symbol_argument_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    assert(! tree.empty());'), (31, 1, u'+    assert(arg_list->type == symbol_argument_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+    assert(source_offset >= 0);')]
===========================================
===========================================
Total add: 13
Total del: 31
Header: parser_t::current_line
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+    assert(source_offset >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+    assert(source_offset >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(fd >= 0);')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: io_buffer_t::read
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(fd >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(fd >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    assert(erased);')]
===========================================
===========================================
Total add: 2
Total del: 11
Header: autoload_t::load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    assert(erased);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-    assert(erased);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (390, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (393, 2, u'-    assert(buff.size() == color.size());'), (438, 2, u'-        assert(end >= subbuff);')]
===========================================
===========================================
Total add: 0
Total del: 518
Header: autosuggest_validate_from_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (390, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (393, 2, u'-    assert(buff.size() == color.size());'), (438, 2, u'-        assert(end >= subbuff);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (390, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (393, 2, u'-    assert(buff.size() == color.size());'), (438, 2, u'-        assert(end >= subbuff);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(in_len > 0);'), (7, 1, u"+    assert(in[0] == L'$');"), (39, 1, u'+            assert(slice_end_idx > slice_begin_idx);')]
===========================================
===========================================
Total add: 45
Total del: 1
Header: highlight_shell_classic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(in_len > 0);'), (7, 1, u"+    assert(in[0] == L'$');"), (39, 1, u'+            assert(slice_end_idx > slice_begin_idx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(in_len > 0);'), (7, 1, u"+    assert(in[0] == L'$');"), (39, 1, u'+            assert(slice_end_idx > slice_begin_idx);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cmdsub_begin != NULL && cmdsub_begin >= valid_range_start && cmdsub_begin <= valid_range_end);'), (3, 2, u'-        assert(cmdsub_end != NULL && cmdsub_end > cmdsub_begin && cmdsub_end >= valid_range_start && cmdsub_end <= valid_range_end);'), (4, 1, u'+        assert(bracket_range_begin != NULL && bracket_range_begin >= valid_range_start && bracket_range_begin <= valid_range_end);'), (5, 1, u'+        assert(bracket_range_end != NULL && bracket_range_end > bracket_range_begin && bracket_range_end >= valid_range_start && bracket_range_end <= valid_range_end);')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: parse_util_locate_cmdsubst_range
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cmdsub_begin != NULL && cmdsub_begin >= valid_range_start && cmdsub_begin <= valid_range_end);'), (3, 2, u'-        assert(cmdsub_end != NULL && cmdsub_end > cmdsub_begin && cmdsub_end >= valid_range_start && cmdsub_end <= valid_range_end);'), (4, 1, u'+        assert(bracket_range_begin != NULL && bracket_range_begin >= valid_range_start && bracket_range_begin <= valid_range_end);'), (5, 1, u'+        assert(bracket_range_end != NULL && bracket_range_end > bracket_range_begin && bracket_range_end >= valid_range_start && bracket_range_end <= valid_range_end);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cmdsub_begin != NULL && cmdsub_begin >= valid_range_start && cmdsub_begin <= valid_range_end);'), (3, 2, u'-        assert(cmdsub_end != NULL && cmdsub_end > cmdsub_begin && cmdsub_end >= valid_range_start && cmdsub_end <= valid_range_end);'), (4, 1, u'+        assert(bracket_range_begin != NULL && bracket_range_begin >= valid_range_start && bracket_range_begin <= valid_range_end);'), (5, 1, u'+        assert(bracket_range_end != NULL && bracket_range_end > bracket_range_begin && bracket_range_end >= valid_range_start && bracket_range_end <= valid_range_end);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+    assert(data != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 24
Header: clear_pager
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+    assert(data != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(28, 1, u'+    assert(data != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(denom > 0);')]
===========================================
===========================================
Total add: 11
Total del: 1
Header: typedef std::vector<comp_t> comp_info_list_t;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(denom > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+    assert(denom > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        assert(min_cols_required_for_rows <= cols);'), (26, 2, u'-            assert(min_cols_required_for_rows <= cols);')]
===========================================
===========================================
Total add: 23
Total del: 24
Header: pager_t::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        assert(min_cols_required_for_rows <= cols);'), (26, 2, u'-            assert(min_cols_required_for_rows <= cols);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        assert(min_cols_required_for_rows <= cols);'), (26, 2, u'-            assert(min_cols_required_for_rows <= cols);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(ctx->colors.size() == data->command_length());'), (3, 1, u'+        assert(ctx->colors.size() == data->command_line.size());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: highlight_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(ctx->colors.size() == data->command_length());'), (3, 1, u'+        assert(ctx->colors.size() == data->command_line.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(ctx->colors.size() == data->command_length());'), (3, 1, u'+        assert(ctx->colors.size() == data->command_line.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    assert(data->buff_pos() > 0);'), (25, 1, u'+        assert(el->position > 0);')]
===========================================
===========================================
Total add: 14
Total del: 9
Header: insert_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    assert(data->buff_pos() > 0);'), (25, 1, u'+        assert(el->position > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-    assert(data->buff_pos() > 0);'), (25, 1, u'+        assert(el->position > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(data->buff_pos() >= prefix_start);'), (7, 1, u'+            assert(el->position >= prefix_start);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: handle_completions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(data->buff_pos() >= prefix_start);'), (7, 1, u'+            assert(el->position >= prefix_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(data->buff_pos() >= prefix_start);'), (7, 1, u'+            assert(el->position >= prefix_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(match_highlight_pos >= 0);')]
===========================================
===========================================
Total add: 7
Total del: 3
Header: threaded_highlight
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(match_highlight_pos >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(match_highlight_pos >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(data->buff_pos > 0);'), (4, 1, u'+    assert(data->buff_pos() > 0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: insert_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(data->buff_pos > 0);'), (4, 1, u'+    assert(data->buff_pos() > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(data->buff_pos > 0);'), (4, 1, u'+    assert(data->buff_pos() > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(data->buff_pos >= prefix_start);'), (7, 1, u'+            assert(data->buff_pos() >= prefix_start);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: handle_completions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(data->buff_pos >= prefix_start);'), (7, 1, u'+            assert(data->buff_pos() >= prefix_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            assert(data->buff_pos >= prefix_start);'), (7, 1, u'+            assert(data->buff_pos() >= prefix_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(0);')]
===========================================
===========================================
Total add: 1
Total del: 111
Header: pager_t::completion_try_print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        assert(cols >= 0);')]
===========================================
===========================================
Total add: 2
Total del: 21
Header: pager_t::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        assert(cols >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-        assert(cols >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(result == PAGER_SELECTION_NONE || result < completions.size());'), (3, 1, u'+    assert(result == PAGER_SELECTION_NONE || result < completion_infos.size());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: pager_t::visual_selected_completion_index
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(result == PAGER_SELECTION_NONE || result < completions.size());'), (3, 1, u'+    assert(result == PAGER_SELECTION_NONE || result < completion_infos.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(result == PAGER_SELECTION_NONE || result < completions.size());'), (3, 1, u'+    assert(result == PAGER_SELECTION_NONE || result < completion_infos.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! strcmp(buff, tests[i].expected));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! strcmp(buff, tests[i].expected));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! strcmp(buff, tests[i].expected));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_indents.size() == text.size());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_indents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_indents.size() == text.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_indents.size() == text.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_indents.size() == indents.size());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_indents
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_indents.size() == indents.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_indents.size() == indents.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(find(evicted_nodes.begin(), evicted_nodes.end(), node) == evicted_nodes.end());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: public:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(find(evicted_nodes.begin(), evicted_nodes.end(), node) == evicted_nodes.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(find(evicted_nodes.begin(), evicted_nodes.end(), node) == evicted_nodes.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cache.size() == std::min(i, (size_t)16));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_lru
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cache.size() == std::min(i, (size_t)16));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cache.size() == std::min(i, (size_t)16));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cache.add_node(node));'), (3, 2, u'-        assert(! cache.add_node(node));'), (7, 2, u'-    assert(cache.evicted_nodes == expected_evicted);'), (10, 2, u'-    assert(cache.evicted_nodes.size() == total_nodes);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: test_lru
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cache.add_node(node));'), (3, 2, u'-        assert(! cache.add_node(node));'), (7, 2, u'-    assert(cache.evicted_nodes == expected_evicted);'), (10, 2, u'-    assert(cache.evicted_nodes.size() == total_nodes);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(cache.add_node(node));'), (3, 2, u'-        assert(! cache.add_node(node));'), (7, 2, u'-    assert(cache.evicted_nodes == expected_evicted);'), (10, 2, u'-    assert(cache.evicted_nodes.size() == total_nodes);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(is_potential_path(L"al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (3, 2, u'-    assert(is_potential_path(L"alpha/", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (4, 2, u'-    assert(is_potential_path(L"aard", wds, 0, &tmp) && tmp == L"aardvark");'), (9, 2, u'-    assert(! is_potential_path(L"balpha/", wds, PATH_REQUIRE_DIR, &tmp));'), (10, 2, u'-    assert(! is_potential_path(L"aard", wds, PATH_REQUIRE_DIR, &tmp));'), (11, 2, u'-    assert(! is_potential_path(L"aarde", wds, PATH_REQUIRE_DIR, &tmp));'), (12, 2, u'-    assert(! is_potential_path(L"aarde", wds, 0, &tmp));'), (18, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (19, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (20, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (25, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, PATH_REQUIRE_DIR, &tmp));'), (26, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, 0, &tmp));'), (27, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, 0, &tmp));'), (32, 2, u'-    assert(is_potential_path(L"/usr", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: test_is_potential_path
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(is_potential_path(L"al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (3, 2, u'-    assert(is_potential_path(L"alpha/", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (4, 2, u'-    assert(is_potential_path(L"aard", wds, 0, &tmp) && tmp == L"aardvark");'), (9, 2, u'-    assert(! is_potential_path(L"balpha/", wds, PATH_REQUIRE_DIR, &tmp));'), (10, 2, u'-    assert(! is_potential_path(L"aard", wds, PATH_REQUIRE_DIR, &tmp));'), (11, 2, u'-    assert(! is_potential_path(L"aarde", wds, PATH_REQUIRE_DIR, &tmp));'), (12, 2, u'-    assert(! is_potential_path(L"aarde", wds, 0, &tmp));'), (18, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (19, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (20, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (25, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, PATH_REQUIRE_DIR, &tmp));'), (26, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, 0, &tmp));'), (27, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, 0, &tmp));'), (32, 2, u'-    assert(is_potential_path(L"/usr", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(is_potential_path(L"al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (3, 2, u'-    assert(is_potential_path(L"alpha/", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (4, 2, u'-    assert(is_potential_path(L"aard", wds, 0, &tmp) && tmp == L"aardvark");'), (9, 2, u'-    assert(! is_potential_path(L"balpha/", wds, PATH_REQUIRE_DIR, &tmp));'), (10, 2, u'-    assert(! is_potential_path(L"aard", wds, PATH_REQUIRE_DIR, &tmp));'), (11, 2, u'-    assert(! is_potential_path(L"aarde", wds, PATH_REQUIRE_DIR, &tmp));'), (12, 2, u'-    assert(! is_potential_path(L"aarde", wds, 0, &tmp));'), (18, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (19, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (20, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (25, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, PATH_REQUIRE_DIR, &tmp));'), (26, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, 0, &tmp));'), (27, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, 0, &tmp));'), (32, 2, u'-    assert(is_potential_path(L"/usr", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(bracket == nonbracket);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: run_test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(bracket == nonbracket);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(bracket == nonbracket);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv1) != 0);'), (6, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv2) == 0);'), (10, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv3) != 0);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: test_test_brackets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv1) != 0);'), (6, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv2) == 0);'), (10, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv3) != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv1) != 0);'), (6, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv2) == 0);'), (10, 2, u'-    assert(builtin_test(parser, (wchar_t **)argv3) != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"5 -ne 6"));'), (3, 2, u'-    assert(run_test_test(0, L"5 -eq 5"));'), (4, 2, u'-    assert(run_test_test(0, L"0 -eq 0"));'), (5, 2, u'-    assert(run_test_test(0, L"-1 -eq -1"));'), (6, 2, u'-    assert(run_test_test(0, L"1 -ne -1"));'), (7, 2, u'-    assert(run_test_test(1, L"-1 -ne -1"));'), (8, 2, u'-    assert(run_test_test(0, L"abc != def"));'), (9, 2, u'-    assert(run_test_test(1, L"abc = def"));'), (10, 2, u'-    assert(run_test_test(0, L"5 -le 10"));'), (11, 2, u'-    assert(run_test_test(0, L"10 -le 10"));'), (12, 2, u'-    assert(run_test_test(1, L"20 -le 10"));'), (13, 2, u'-    assert(run_test_test(0, L"-1 -le 0"));'), (14, 2, u'-    assert(run_test_test(1, L"0 -le -1"));'), (15, 2, u'-    assert(run_test_test(0, L"15 -ge 10"));'), (16, 2, u'-    assert(run_test_test(0, L"15 -ge 10"));'), (17, 2, u'-    assert(run_test_test(1, L"! 15 -ge 10"));'), (18, 2, u'-    assert(run_test_test(0, L"! ! 15 -ge 10"));'), (20, 2, u'-    assert(run_test_test(0, L"0 -ne 1 -a 0 -eq 0"));'), (21, 2, u'-    assert(run_test_test(0, L"0 -ne 1 -a -n 5"));'), (22, 2, u'-    assert(run_test_test(0, L"-n 5 -a 10 -gt 5"));'), (23, 2, u'-    assert(run_test_test(0, L"-n 3 -a -n 5"));')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"5 -ne 6"));'), (3, 2, u'-    assert(run_test_test(0, L"5 -eq 5"));'), (4, 2, u'-    assert(run_test_test(0, L"0 -eq 0"));'), (5, 2, u'-    assert(run_test_test(0, L"-1 -eq -1"));'), (6, 2, u'-    assert(run_test_test(0, L"1 -ne -1"));'), (7, 2, u'-    assert(run_test_test(1, L"-1 -ne -1"));'), (8, 2, u'-    assert(run_test_test(0, L"abc != def"));'), (9, 2, u'-    assert(run_test_test(1, L"abc = def"));'), (10, 2, u'-    assert(run_test_test(0, L"5 -le 10"));'), (11, 2, u'-    assert(run_test_test(0, L"10 -le 10"));'), (12, 2, u'-    assert(run_test_test(1, L"20 -le 10"));'), (13, 2, u'-    assert(run_test_test(0, L"-1 -le 0"));'), (14, 2, u'-    assert(run_test_test(1, L"0 -le -1"));'), (15, 2, u'-    assert(run_test_test(0, L"15 -ge 10"));'), (16, 2, u'-    assert(run_test_test(0, L"15 -ge 10"));'), (17, 2, u'-    assert(run_test_test(1, L"! 15 -ge 10"));'), (18, 2, u'-    assert(run_test_test(0, L"! ! 15 -ge 10"));'), (20, 2, u'-    assert(run_test_test(0, L"0 -ne 1 -a 0 -eq 0"));'), (21, 2, u'-    assert(run_test_test(0, L"0 -ne 1 -a -n 5"));'), (22, 2, u'-    assert(run_test_test(0, L"-n 5 -a 10 -gt 5"));'), (23, 2, u'-    assert(run_test_test(0, L"-n 3 -a -n 5"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"5 -ne 6"));'), (3, 2, u'-    assert(run_test_test(0, L"5 -eq 5"));'), (4, 2, u'-    assert(run_test_test(0, L"0 -eq 0"));'), (5, 2, u'-    assert(run_test_test(0, L"-1 -eq -1"));'), (6, 2, u'-    assert(run_test_test(0, L"1 -ne -1"));'), (7, 2, u'-    assert(run_test_test(1, L"-1 -ne -1"));'), (8, 2, u'-    assert(run_test_test(0, L"abc != def"));'), (9, 2, u'-    assert(run_test_test(1, L"abc = def"));'), (10, 2, u'-    assert(run_test_test(0, L"5 -le 10"));'), (11, 2, u'-    assert(run_test_test(0, L"10 -le 10"));'), (12, 2, u'-    assert(run_test_test(1, L"20 -le 10"));'), (13, 2, u'-    assert(run_test_test(0, L"-1 -le 0"));'), (14, 2, u'-    assert(run_test_test(1, L"0 -le -1"));'), (15, 2, u'-    assert(run_test_test(0, L"15 -ge 10"));'), (16, 2, u'-    assert(run_test_test(0, L"15 -ge 10"));'), (17, 2, u'-    assert(run_test_test(1, L"! 15 -ge 10"));'), (18, 2, u'-    assert(run_test_test(0, L"! ! 15 -ge 10"));'), (20, 2, u'-    assert(run_test_test(0, L"0 -ne 1 -a 0 -eq 0"));'), (21, 2, u'-    assert(run_test_test(0, L"0 -ne 1 -a -n 5"));'), (22, 2, u'-    assert(run_test_test(0, L"-n 5 -a 10 -gt 5"));'), (23, 2, u'-    assert(run_test_test(0, L"-n 3 -a -n 5"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"0 = 0 -o 0 = 1 -a 0 = 2"));'), (3, 2, u'-    assert(run_test_test(0, L"-n 5 -o 0 = 1 -a 0 = 2"));'), (4, 2, u'-    assert(run_test_test(1, L"( 0 = 0 -o  0 = 1 ) -a 0 = 2"));'), (5, 2, u'-    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));'), (12, 2, u'-    assert(run_test_test(0, L"-e /bin/ls"));'), (13, 2, u'-    assert(run_test_test(1, L"-e /bin/ls_not_a_path"));'), (14, 2, u'-    assert(run_test_test(0, L"-x /bin/ls"));'), (15, 2, u'-    assert(run_test_test(1, L"-x /bin/ls_not_a_path"));'), (16, 2, u'-    assert(run_test_test(0, L"-d /bin/"));'), (17, 2, u'-    assert(run_test_test(1, L"-d /bin/ls"));'), (26, 2, u'-    assert(run_test_test(1, L"-d /bin -a 5 -eq 3"));'), (27, 2, u'-    assert(run_test_test(0, L"-d /bin -o 5 -eq 3"));'), (28, 2, u'-    assert(run_test_test(0, L"-d /bin -a ! 5 -eq 3"));'), (34, 2, u'-    assert(run_test_test(0, L"foo"));'), (35, 2, u'-    assert(run_test_test(0, L"foo -a bar"));'), (40, 2, u'-    assert(run_test_test(1, L"foo bar"));'), (41, 2, u'-    assert(run_test_test(1, L"foo bar baz"));'), (46, 2, u'-    assert(run_test_test(1, L"1 = 1 -a = 1"));'), (50, 2, u'-    assert(run_test_test(0, L"-S = -S"));'), (51, 2, u'-    assert(run_test_test(1, L"! ! ! A"));')]
===========================================
===========================================
Total add: 20
Total del: 20
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"0 = 0 -o 0 = 1 -a 0 = 2"));'), (3, 2, u'-    assert(run_test_test(0, L"-n 5 -o 0 = 1 -a 0 = 2"));'), (4, 2, u'-    assert(run_test_test(1, L"( 0 = 0 -o  0 = 1 ) -a 0 = 2"));'), (5, 2, u'-    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));'), (12, 2, u'-    assert(run_test_test(0, L"-e /bin/ls"));'), (13, 2, u'-    assert(run_test_test(1, L"-e /bin/ls_not_a_path"));'), (14, 2, u'-    assert(run_test_test(0, L"-x /bin/ls"));'), (15, 2, u'-    assert(run_test_test(1, L"-x /bin/ls_not_a_path"));'), (16, 2, u'-    assert(run_test_test(0, L"-d /bin/"));'), (17, 2, u'-    assert(run_test_test(1, L"-d /bin/ls"));'), (26, 2, u'-    assert(run_test_test(1, L"-d /bin -a 5 -eq 3"));'), (27, 2, u'-    assert(run_test_test(0, L"-d /bin -o 5 -eq 3"));'), (28, 2, u'-    assert(run_test_test(0, L"-d /bin -a ! 5 -eq 3"));'), (34, 2, u'-    assert(run_test_test(0, L"foo"));'), (35, 2, u'-    assert(run_test_test(0, L"foo -a bar"));'), (40, 2, u'-    assert(run_test_test(1, L"foo bar"));'), (41, 2, u'-    assert(run_test_test(1, L"foo bar baz"));'), (46, 2, u'-    assert(run_test_test(1, L"1 = 1 -a = 1"));'), (50, 2, u'-    assert(run_test_test(0, L"-S = -S"));'), (51, 2, u'-    assert(run_test_test(1, L"! ! ! A"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"0 = 0 -o 0 = 1 -a 0 = 2"));'), (3, 2, u'-    assert(run_test_test(0, L"-n 5 -o 0 = 1 -a 0 = 2"));'), (4, 2, u'-    assert(run_test_test(1, L"( 0 = 0 -o  0 = 1 ) -a 0 = 2"));'), (5, 2, u'-    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));'), (12, 2, u'-    assert(run_test_test(0, L"-e /bin/ls"));'), (13, 2, u'-    assert(run_test_test(1, L"-e /bin/ls_not_a_path"));'), (14, 2, u'-    assert(run_test_test(0, L"-x /bin/ls"));'), (15, 2, u'-    assert(run_test_test(1, L"-x /bin/ls_not_a_path"));'), (16, 2, u'-    assert(run_test_test(0, L"-d /bin/"));'), (17, 2, u'-    assert(run_test_test(1, L"-d /bin/ls"));'), (26, 2, u'-    assert(run_test_test(1, L"-d /bin -a 5 -eq 3"));'), (27, 2, u'-    assert(run_test_test(0, L"-d /bin -o 5 -eq 3"));'), (28, 2, u'-    assert(run_test_test(0, L"-d /bin -a ! 5 -eq 3"));'), (34, 2, u'-    assert(run_test_test(0, L"foo"));'), (35, 2, u'-    assert(run_test_test(0, L"foo -a bar"));'), (40, 2, u'-    assert(run_test_test(1, L"foo bar"));'), (41, 2, u'-    assert(run_test_test(1, L"foo bar baz"));'), (46, 2, u'-    assert(run_test_test(1, L"1 = 1 -a = 1"));'), (50, 2, u'-    assert(run_test_test(0, L"-S = -S"));'), (51, 2, u'-    assert(run_test_test(1, L"! ! ! A"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(rgb_color_t(L"#FF00A0").is_rgb());'), (3, 2, u'-    assert(rgb_color_t(L"FF00A0").is_rgb());'), (4, 2, u'-    assert(rgb_color_t(L"#F30").is_rgb());'), (5, 2, u'-    assert(rgb_color_t(L"F30").is_rgb());'), (6, 2, u'-    assert(rgb_color_t(L"f30").is_rgb());'), (7, 2, u'-    assert(rgb_color_t(L"#FF30a5").is_rgb());'), (8, 2, u'-    assert(rgb_color_t(L"3f30").is_none());'), (9, 2, u'-    assert(rgb_color_t(L"##f30").is_none());'), (10, 2, u'-    assert(rgb_color_t(L"magenta").is_named());'), (11, 2, u'-    assert(rgb_color_t(L"MaGeNTa").is_named());'), (12, 2, u'-    assert(rgb_color_t(L"mooganta").is_none());')]
===========================================
===========================================
Total add: 11
Total del: 11
Header: test_colors
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(rgb_color_t(L"#FF00A0").is_rgb());'), (3, 2, u'-    assert(rgb_color_t(L"FF00A0").is_rgb());'), (4, 2, u'-    assert(rgb_color_t(L"#F30").is_rgb());'), (5, 2, u'-    assert(rgb_color_t(L"F30").is_rgb());'), (6, 2, u'-    assert(rgb_color_t(L"f30").is_rgb());'), (7, 2, u'-    assert(rgb_color_t(L"#FF30a5").is_rgb());'), (8, 2, u'-    assert(rgb_color_t(L"3f30").is_none());'), (9, 2, u'-    assert(rgb_color_t(L"##f30").is_none());'), (10, 2, u'-    assert(rgb_color_t(L"magenta").is_named());'), (11, 2, u'-    assert(rgb_color_t(L"MaGeNTa").is_named());'), (12, 2, u'-    assert(rgb_color_t(L"mooganta").is_none());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(rgb_color_t(L"#FF00A0").is_rgb());'), (3, 2, u'-    assert(rgb_color_t(L"FF00A0").is_rgb());'), (4, 2, u'-    assert(rgb_color_t(L"#F30").is_rgb());'), (5, 2, u'-    assert(rgb_color_t(L"F30").is_rgb());'), (6, 2, u'-    assert(rgb_color_t(L"f30").is_rgb());'), (7, 2, u'-    assert(rgb_color_t(L"#FF30a5").is_rgb());'), (8, 2, u'-    assert(rgb_color_t(L"3f30").is_none());'), (9, 2, u'-    assert(rgb_color_t(L"##f30").is_none());'), (10, 2, u'-    assert(rgb_color_t(L"magenta").is_named());'), (11, 2, u'-    assert(rgb_color_t(L"MaGeNTa").is_named());'), (12, 2, u'-    assert(rgb_color_t(L"mooganta").is_none());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 3);'), (3, 2, u'-    assert(completions.at(0).completion == L"oo1");'), (4, 2, u'-    assert(completions.at(1).completion == L"oo2");'), (5, 2, u'-    assert(completions.at(2).completion == L"oo3");')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 3);'), (3, 2, u'-    assert(completions.at(0).completion == L"oo1");'), (4, 2, u'-    assert(completions.at(1).completion == L"oo2");'), (5, 2, u'-    assert(completions.at(2).completion == L"oo3");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 3);'), (3, 2, u'-    assert(completions.at(0).completion == L"oo1");'), (4, 2, u'-    assert(completions.at(1).completion == L"oo2");'), (5, 2, u'-    assert(completions.at(2).completion == L"oo3");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 2);'), (3, 2, u'-    assert(completions.at(0).completion == L"$Foo1");'), (4, 2, u'-    assert(completions.at(1).completion == L"$Bar1");')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 2);'), (3, 2, u'-    assert(completions.at(0).completion == L"$Foo1");'), (4, 2, u'-    assert(completions.at(1).completion == L"$Bar1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 2);'), (3, 2, u'-    assert(completions.at(0).completion == L"$Foo1");'), (4, 2, u'-    assert(completions.at(1).completion == L"$Bar1");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"r");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"t");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"t");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"t");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"qux");')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"qux");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(completions.size() == 1);'), (3, 2, u'-    assert(completions.at(0).completion == L"qux");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(in_cursor_pos != wcstring::npos);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_1_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(in_cursor_pos != wcstring::npos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(in_cursor_pos != wcstring::npos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(out_cursor_pos != wcstring::npos);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_1_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(out_cursor_pos != wcstring::npos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(out_cursor_pos != wcstring::npos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(result == expected);'), (3, 2, u'-    assert(cursor_pos == out_cursor_pos);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_1_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(result == expected);'), (3, 2, u'-    assert(cursor_pos == out_cursor_pos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(result == expected);'), (3, 2, u'-    assert(cursor_pos == out_cursor_pos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(success);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: perform_one_autosuggestion_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(success);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(success);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(suggestion == expected);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: perform_one_autosuggestion_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(suggestion == expected);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(suggestion == expected);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"alphabeta") == L"alphabeta");'), (6, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHABETA") == L"ALPHABETA");'), (10, 2, u'-    assert(combine_command_and_autosuggestion(L"alPha", L"alphabeTa") == L"alPhabeTa");'), (14, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHAA") == L"ALPHAA");'), (15, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHA") == L"alpha");')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: test_autosuggestion_combining
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"alphabeta") == L"alphabeta");'), (6, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHABETA") == L"ALPHABETA");'), (10, 2, u'-    assert(combine_command_and_autosuggestion(L"alPha", L"alphabeTa") == L"alPhabeTa");'), (14, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHAA") == L"ALPHAA");'), (15, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHA") == L"alpha");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"alphabeta") == L"alphabeta");'), (6, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHABETA") == L"ALPHABETA");'), (10, 2, u'-    assert(combine_command_and_autosuggestion(L"alPha", L"alphabeTa") == L"alPhabeTa");'), (14, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHAA") == L"ALPHAA");'), (15, 2, u'-    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHA") == L"alpha");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(search.go_backwards());'), (6, 2, u'-    assert(! search.go_backwards());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_history_matches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(search.go_backwards());'), (6, 2, u'-    assert(! search.go_backwards());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(search.go_backwards());'), (6, 2, u'-    assert(! search.go_backwards());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(search.go_forwards());'), (5, 2, u'-    assert(! search.go_forwards());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_history_matches
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(search.go_forwards());'), (5, 2, u'-    assert(! search.go_forwards());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(search.go_forwards());'), (5, 2, u'-    assert(! search.go_forwards());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_string() == L"Alpha");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: history_tests_t::test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_string() == L"Alpha");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_string() == L"Alpha");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_string() == L"Beta");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: history_tests_t::test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_string() == L"Beta");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_string() == L"Beta");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! item.empty());'), (6, 2, u'-    assert(before.size() == after.size());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: history_tests_t::test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! item.empty());'), (6, 2, u'-    assert(before.size() == after.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(! item.empty());'), (6, 2, u'-    assert(before.size() == after.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(bef.contents == aft.contents);'), (3, 2, u'-        assert(bef.creation_timestamp == aft.creation_timestamp);'), (4, 2, u'-        assert(bef.required_paths == aft.required_paths);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: history_tests_t::test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(bef.contents == aft.contents);'), (3, 2, u'-        assert(bef.creation_timestamp == aft.creation_timestamp);'), (4, 2, u'-        assert(bef.required_paths == aft.required_paths);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(bef.contents == aft.contents);'), (3, 2, u'-        assert(bef.creation_timestamp == aft.creation_timestamp);'), (4, 2, u'-        assert(bef.required_paths == aft.required_paths);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(hist_idx >= RACE_COUNT);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: history_tests_t::test_history_races
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(hist_idx >= RACE_COUNT);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(hist_idx >= RACE_COUNT);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(should_contain == does_contain);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: history_tests_t::test_history_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(should_contain == does_contain);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            assert(should_contain == does_contain);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(history_contains(everything, texts[i]));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: history_tests_t::test_history_merge
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(history_contains(everything, texts[i]));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(history_contains(everything, texts[i]));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_colors.size() == text.size());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_highlighting
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_colors.size() == text.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_colors.size() == text.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_colors.size() == colors.size());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_highlighting
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_colors.size() == colors.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(expected_colors.size() == colors.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(completions.size() == 1);'), (8, 1, u'+    assert(completions.at(0).completion == L"qux");')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(completions.size() == 1);'), (8, 1, u'+    assert(completions.at(0).completion == L"qux");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(completions.size() == 1);'), (8, 1, u'+    assert(completions.at(0).completion == L"qux");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(row_start >= 0);'), (7, 1, u'+    assert(row_stop >= row_start);')]
===========================================
===========================================
Total add: 6
Total del: 1
Header: pager_t::completion_print_item
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(row_start >= 0);'), (7, 1, u'+    assert(row_stop >= row_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(row_start >= 0);'), (7, 1, u'+    assert(row_stop >= row_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(row_count > term_height);'), (17, 1, u'+            assert(start_row >= 0 && start_row <= last_starting_row);'), (20, 1, u'+        assert(stop_row >= start_row);'), (21, 1, u'+        assert(stop_row <= row_count);'), (22, 1, u'+        assert(stop_row - start_row <= term_height);')]
===========================================
===========================================
Total add: 26
Total del: 2
Header: pager_t::completion_try_print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(row_count > term_height);'), (17, 1, u'+            assert(start_row >= 0 && start_row <= last_starting_row);'), (20, 1, u'+        assert(stop_row >= start_row);'), (21, 1, u'+        assert(stop_row <= row_count);'), (22, 1, u'+        assert(stop_row - start_row <= term_height);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(row_count > term_height);'), (17, 1, u'+            assert(start_row >= 0 && start_row <= last_starting_row);'), (20, 1, u'+        assert(stop_row >= start_row);'), (21, 1, u'+        assert(stop_row <= row_count);'), (22, 1, u'+        assert(stop_row - start_row <= term_height);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            assert(min_cols_required_for_rows <= cols);')]
===========================================
===========================================
Total add: 17
Total del: 0
Header: pager_t::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            assert(min_cols_required_for_rows <= cols);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            assert(min_cols_required_for_rows <= cols);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(result == PAGER_SELECTION_NONE || result < completions.size());')]
===========================================
===========================================
Total add: 28
Total del: 1
Header: pager_t::select_next_completion_in_direction
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(result == PAGER_SELECTION_NONE || result < completions.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    assert(result == PAGER_SELECTION_NONE || result < completions.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+        assert(cols >= 0);')]
===========================================
===========================================
Total add: 33
Total del: 21
Header: pager_t::render
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+        assert(cols >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(56, 1, u'+        assert(cols >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-                    assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (60, 1, u'+                        assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Total add: 35
Total del: 24
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-                    assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (60, 1, u'+                        assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(51, 2, u'-                    assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (60, 1, u'+                        assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            assert(0);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: completion_try_print
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+            assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(b != NULL);')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: reader_shell_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(b != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(b != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job_node.type == symbol_job);')]
===========================================
===========================================
Total add: 35
Total del: 0
Header: parse_execution_context_t::execution_cancellation_reason_t parse_execution_conte
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job_node.type == symbol_job);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job_node.type == symbol_job);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(specific_statement_type_is_redirectable_block(specific_statement));')]
===========================================
===========================================
Total add: 23
Total del: 1
Header: parse_execution_context_t::run_1_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(specific_statement_type_is_redirectable_block(specific_statement));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(specific_statement_type_is_redirectable_block(specific_statement));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(node.type == symbol_job_list ||'), (6, 1, u'+    assert(node.type == symbol_job_list || specific_statement_type_is_redirectable_block(node));')]
===========================================
===========================================
Total add: 1
Total del: 4
Header: parse_execution_context_t::eval_node_at_offset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(node.type == symbol_job_list ||'), (6, 1, u'+    assert(node.type == symbol_job_list || specific_statement_type_is_redirectable_block(node));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(node.type == symbol_job_list ||'), (6, 1, u'+    assert(node.type == symbol_job_list || specific_statement_type_is_redirectable_block(node));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(top_job_list.type == symbol_job_list);'), (11, 1, u'+    assert(list_type != entry_type);'), (14, 2, u'-    assert(job_list->type == symbol_job_list);'), (21, 2, u'-    assert(job_list->type == symbol_job_list);'), (22, 2, u'-    assert(job_list->production_idx == 0 || job_list->production_idx == 1);'), (58, 1, u'+    assert(list_cursor == NULL || list_cursor->type == list_type);'), (59, 1, u'+    assert(list_entry == NULL || list_entry->type == entry_type);')]
===========================================
===========================================
Total add: 32
Total del: 23
Header: parse_node_tree_t::parse_node_list_t parse_node_tree_t::specific_statements_for_
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(top_job_list.type == symbol_job_list);'), (11, 1, u'+    assert(list_type != entry_type);'), (14, 2, u'-    assert(job_list->type == symbol_job_list);'), (21, 2, u'-    assert(job_list->type == symbol_job_list);'), (22, 2, u'-    assert(job_list->production_idx == 0 || job_list->production_idx == 1);'), (58, 1, u'+    assert(list_cursor == NULL || list_cursor->type == list_type);'), (59, 1, u'+    assert(list_entry == NULL || list_entry->type == entry_type);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(top_job_list.type == symbol_job_list);'), (11, 1, u'+    assert(list_type != entry_type);'), (14, 2, u'-    assert(job_list->type == symbol_job_list);'), (21, 2, u'-    assert(job_list->type == symbol_job_list);'), (22, 2, u'-    assert(job_list->production_idx == 0 || job_list->production_idx == 1);'), (58, 1, u'+    assert(list_cursor == NULL || list_cursor->type == list_type);'), (59, 1, u'+    assert(list_entry == NULL || list_entry->type == entry_type);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(is_interactive >= 0);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: get_is_interactive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(is_interactive >= 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(is_interactive >= 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(0 && "This should be unreachable");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: exec_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(0 && "This should be unreachable");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+        assert(0 && "This should be unreachable");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                assert(0 && "INTERNAL_EXEC process found in pipeline, where it should never be. Aborting.");')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: exec_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                assert(0 && "INTERNAL_EXEC process found in pipeline, where it should never be. Aborting.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+                assert(0 && "INTERNAL_EXEC process found in pipeline, where it should never be. Aborting.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                assert(0 && "INTERNAL_EXEC process found in pipeline, where it should never be. Aborting.");')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: exec_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                assert(0 && "INTERNAL_EXEC process found in pipeline, where it should never be. Aborting.");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+                assert(0 && "INTERNAL_EXEC process found in pipeline, where it should never be. Aborting.");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job_list.type == symbol_job_list);'), (73, 1, u'+    assert(infinite_recursive_statement == NULL || infinite_recursive_statement->type == symbol_decorated_statement);')]
===========================================
===========================================
Total add: 75
Total del: 0
Header: parse_execution_context_t::get_offset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job_list.type == symbol_job_list);'), (73, 1, u'+    assert(infinite_recursive_statement == NULL || infinite_recursive_statement->type == symbol_decorated_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job_list.type == symbol_job_list);'), (73, 1, u'+    assert(infinite_recursive_statement == NULL || infinite_recursive_statement->type == symbol_decorated_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job.type == symbol_job);'), (23, 1, u'+        assert(statement->type == symbol_statement);'), (32, 1, u'+    assert(top_job_list.type == symbol_job_list);'), (38, 1, u'+    assert(job_list->type == symbol_job_list);'), (45, 1, u'+    assert(job_list->type == symbol_job_list);'), (46, 1, u'+    assert(job_list->production_idx == 0 || job_list->production_idx == 1);')]
===========================================
===========================================
Total add: 60
Total del: 0
Header: *parse_node_tree_t::header_node_for_block_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job.type == symbol_job);'), (23, 1, u'+        assert(statement->type == symbol_statement);'), (32, 1, u'+    assert(top_job_list.type == symbol_job_list);'), (38, 1, u'+    assert(job_list->type == symbol_job_list);'), (45, 1, u'+    assert(job_list->type == symbol_job_list);'), (46, 1, u'+    assert(job_list->production_idx == 0 || job_list->production_idx == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job.type == symbol_job);'), (23, 1, u'+        assert(statement->type == symbol_statement);'), (32, 1, u'+    assert(top_job_list.type == symbol_job_list);'), (38, 1, u'+    assert(job_list->type == symbol_job_list);'), (45, 1, u'+    assert(job_list->type == symbol_job_list);'), (46, 1, u'+    assert(job_list->production_idx == 0 || job_list->production_idx == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(this == &principal_parser());')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: *parser_t::current_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(this == &principal_parser());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(this == &principal_parser());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(plain_statement.type == symbol_plain_statement);')]
===========================================
===========================================
Total add: 38
Total del: 0
Header: parse_execution_context_t::get_offset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(plain_statement.type == symbol_plain_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(plain_statement.type == symbol_plain_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job != NULL);'), (6, 1, u'+    assert(proc != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: parse_execution_context_t::handle_command_not_found
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job != NULL);'), (6, 1, u'+    assert(proc != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(job != NULL);'), (6, 1, u'+    assert(proc != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job_cont != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: parse_execution_context_t::populate_job_from_job_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job_cont != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(job_cont != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(job_cont != NULL);'), (22, 1, u'+        assert(! processes.empty());')]
===========================================
===========================================
Total add: 30
Total del: 9
Header: parse_execution_context_t::populate_job_from_job_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(job_cont != NULL);'), (22, 1, u'+        assert(! processes.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+        assert(job_cont != NULL);'), (22, 1, u'+        assert(! processes.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(statement.type == symbol_plain_statement);'), (7, 2, u'-    assert(statement.type == symbol_plain_statement);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: *parse_execution_context_t::create_plain_process
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(statement.type == symbol_plain_statement);'), (7, 2, u'-    assert(statement.type == symbol_plain_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(statement.type == symbol_plain_statement);'), (7, 2, u'-    assert(statement.type == symbol_plain_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(statement.type == symbol_block_statement);'), (7, 1, u'+    assert(block_contents.type == symbol_job_list);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: parse_execution_context_t::run_switch_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(statement.type == symbol_block_statement);'), (7, 1, u'+    assert(block_contents.type == symbol_job_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(statement.type == symbol_block_statement);'), (7, 1, u'+    assert(block_contents.type == symbol_job_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(statement.type == symbol_switch_statement);')]
===========================================
===========================================
Total add: 97
Total del: 0
Header: parse_execution_context_t::run_switch_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(statement.type == symbol_switch_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(statement.type == symbol_switch_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(out_chain.empty());'), (10, 1, u'+    assert(out_chain != NULL && out_opened_fds != NULL);'), (11, 1, u'+    assert(out_chain->empty());')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: io_cleanup_fds
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(out_chain.empty());'), (10, 1, u'+    assert(out_chain != NULL && out_opened_fds != NULL);'), (11, 1, u'+    assert(out_chain->empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(out_chain.empty());'), (10, 1, u'+    assert(out_chain != NULL && out_opened_fds != NULL);'), (11, 1, u'+    assert(out_chain->empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(node_offset == NODE_OFFSET_INVALID || def.empty());')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: internal_exec_helper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(node_offset == NODE_OFFSET_INVALID || def.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(node_offset == NODE_OFFSET_INVALID || def.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                        assert(p->argv0() != NULL);'), (11, 1, u'+                        assert(p->type == INTERNAL_BLOCK_NODE);')]
===========================================
===========================================
Total add: 12
Total del: 3
Header: exec_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                        assert(p->argv0() != NULL);'), (11, 1, u'+                        assert(p->type == INTERNAL_BLOCK_NODE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                        assert(p->argv0() != NULL);'), (11, 1, u'+                        assert(p->type == INTERNAL_BLOCK_NODE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(parser->current_block()->job == j);')]
===========================================
===========================================
Total add: 5
Total del: 6
Header: parse_execution_context_t::run_1_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(parser->current_block()->job == j);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(parser->current_block()->job == j);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(! tree.empty());'), (12, 1, u'+    assert(offset < tree.size());'), (15, 2, u'-    assert(job_list.type == symbol_job_list);'), (25, 1, u'+    assert(node.type == symbol_job_list ||'), (35, 1, u'+            assert(offset == 0);')]
===========================================
===========================================
Total add: 47
Total del: 7
Header: parse_execution_context_t::run_job_list
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(! tree.empty());'), (12, 1, u'+    assert(offset < tree.size());'), (15, 2, u'-    assert(job_list.type == symbol_job_list);'), (25, 1, u'+    assert(node.type == symbol_job_list ||'), (35, 1, u'+            assert(offset == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    assert(! tree.empty());'), (12, 1, u'+    assert(offset < tree.size());'), (15, 2, u'-    assert(job_list.type == symbol_job_list);'), (25, 1, u'+    assert(node.type == symbol_job_list ||'), (35, 1, u'+            assert(offset == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(! execution_contexts.empty() && execution_contexts.back() == ctx);')]
===========================================
===========================================
Total add: 34
Total del: 0
Header: parser_t::eval_new_parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(! execution_contexts.empty() && execution_contexts.back() == ctx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(! execution_contexts.empty() && execution_contexts.back() == ctx);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(! execution_contexts.empty() && execution_contexts.back() == ctx);')]
===========================================
===========================================
Total add: 1
Total del: 6
Header: parser_t::eval_new_parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(! execution_contexts.empty() && execution_contexts.back() == ctx);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(! execution_contexts.empty() && execution_contexts.back() == ctx);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(! symbol_stack.empty());'), (6, 1, u'+            assert(is_terminate || ! symbol_stack.empty());')]
===========================================
===========================================
Total add: 8
Total del: 2
Header: parse_ll_t::accept_tokens
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(! symbol_stack.empty());'), (6, 1, u'+            assert(is_terminate || ! symbol_stack.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(! symbol_stack.empty());'), (6, 1, u'+            assert(is_terminate || ! symbol_stack.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(parser->current_block()->job == j);')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: parse_execution_context_t::run_1_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(parser->current_block()->job == j);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(parser->current_block()->job == j);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(job_list.type == symbol_job_list);')]
===========================================
===========================================
Total add: 7
Total del: 2
Header: parse_execution_context_t::run_job_list
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(job_list.type == symbol_job_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(job_list.type == symbol_job_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(&tree.at(offset) == &node);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: parse_execution_context_t::get_offset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(&tree.at(offset) == &node);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(&tree.at(offset) == &node);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert(elem.node != NULL);'), (30, 1, u'+    assert(job_list_node.type == symbol_job_list);'), (36, 1, u'+        assert(job_list->type == symbol_job_list);')]
===========================================
===========================================
Total add: 56
Total del: 8
Header: parse_execution_context_t::eval_next_stack_elem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert(elem.node != NULL);'), (30, 1, u'+    assert(job_list_node.type == symbol_job_list);'), (36, 1, u'+        assert(job_list->type == symbol_job_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-        assert(elem.node != NULL);'), (30, 1, u'+    assert(job_list_node.type == symbol_job_list);'), (36, 1, u'+        assert(job_list->type == symbol_job_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    PARSE_ASSERT(0);')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: *parse_node_tree_t::get_child
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    PARSE_ASSERT(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    PARSE_ASSERT(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                assert(current_block->type() == IF);')]
===========================================
===========================================
Total add: 0
Total del: 117
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                assert(current_block->type() == IF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 2, u'-                assert(current_block->type() == IF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(execution_stack != NULL);'), (17, 1, u'+    assert(! execution_stack->empty());'), (24, 1, u'+    assert(next_offset < ctx.tree.size());')]
===========================================
===========================================
Total add: 109
Total del: 1
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(execution_stack != NULL);'), (17, 1, u'+    assert(! execution_stack->empty());'), (24, 1, u'+    assert(next_offset < ctx.tree.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+    assert(execution_stack != NULL);'), (17, 1, u'+    assert(! execution_stack->empty());'), (24, 1, u'+    assert(next_offset < ctx.tree.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(! ctx.tree.empty());'), (6, 2, u'-    assert(job_list->type == symbol_job_list);')]
===========================================
===========================================
Total add: 3
Total del: 35
Header: parser_t::eval2
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(! ctx.tree.empty());'), (6, 2, u'-    assert(job_list->type == symbol_job_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(! ctx.tree.empty());'), (6, 2, u'-    assert(job_list->type == symbol_job_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(current_block->type() == IF);'), (4, 1, u'+                        assert(current_block()->type() == IF);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(current_block->type() == IF);'), (4, 1, u'+                        assert(current_block()->type() == IF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                        assert(current_block->type() == IF);'), (4, 1, u'+                        assert(current_block()->type() == IF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(p <= INT_MAX);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: parser_t::error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(p <= INT_MAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(p <= INT_MAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_MAIN_THREAD();'), (31, 1, u'+    assert(output != NULL);'), (41, 1, u'+        assert(err.source_start <= src.size());')]
===========================================
===========================================
Total add: 20
Total del: 142
Header: append_syntax_error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_MAIN_THREAD();'), (31, 1, u'+    assert(output != NULL);'), (41, 1, u'+        assert(err.source_start <= src.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_MAIN_THREAD();'), (31, 1, u'+    assert(output != NULL);'), (41, 1, u'+        assert(err.source_start <= src.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 18
Total del: 5
Header: struct block_info_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(p <= INT_MAX);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: parser_t::error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(p <= INT_MAX);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(p <= INT_MAX);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert(stack_top.keyword != parse_keyword_none && stack_top.keyword != token.keyword);')]
===========================================
===========================================
Total add: 24
Total del: 1
Header: parse_ll_t::top_node_handle_terminal_types
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert(stack_top.keyword != parse_keyword_none && stack_top.keyword != token.keyword);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+                assert(stack_top.keyword != parse_keyword_none && stack_top.keyword != token.keyword);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert(! symbol_stack.empty());')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: parse_ll_t::accept_tokens
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert(! symbol_stack.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            assert(! symbol_stack.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 0
Total del: 8
Header: tokenizer_t::tokenizer_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(start < nodes.size());'), (7, 1, u'+    assert(node_idx < nodes.size());')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: parse_token_type_from_tokenizer_token
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(start < nodes.size());'), (7, 1, u'+    assert(node_idx < nodes.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(start < nodes.size());'), (7, 1, u'+    assert(node_idx < nodes.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+        assert(node.source_start < indents->size());')]
===========================================
===========================================
Total add: 114
Total del: 0
Header: parse_util_escape_string_with_quote
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+        assert(node.source_start < indents->size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u'+        assert(node.source_start < indents->size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: completer_t::complete_param
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 43
Total del: 25
Header: expand_get_all_process_names
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(63, 2, u'-        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: iothread_perform_on_main_base
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: job_iterator_t::job_iterator_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(s_request_queue_lock);'), (6, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: iothread_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(s_request_queue_lock);'), (6, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    ASSERT_IS_LOCKED(s_request_queue_lock);'), (6, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_LOCKED(s_request_queue_lock);'), (3, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: iothread_spawn_if_needed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_LOCKED(s_request_queue_lock);'), (3, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_LOCKED(s_request_queue_lock);'), (3, 1, u'+    ASSERT_IS_LOCKED(s_spawn_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(threadIdx < IO_MAX_THREADS);'), (5, 2, u'-    assert(thread->thread != 0);'), (12, 1, u'+        assert(threadIdx < IO_MAX_THREADS);'), (15, 1, u'+        assert(thread->thread != 0);'), (24, 2, u'-    assert(s_active_thread_count > 0);'), (28, 1, u'+        assert(s_active_thread_count > 0);')]
===========================================
===========================================
Total add: 27
Total del: 20
Header: iothread_service_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(threadIdx < IO_MAX_THREADS);'), (5, 2, u'-    assert(thread->thread != 0);'), (12, 1, u'+        assert(threadIdx < IO_MAX_THREADS);'), (15, 1, u'+        assert(thread->thread != 0);'), (24, 2, u'-    assert(s_active_thread_count > 0);'), (28, 1, u'+        assert(s_active_thread_count > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(threadIdx < IO_MAX_THREADS);'), (5, 2, u'-    assert(thread->thread != 0);'), (12, 1, u'+        assert(threadIdx < IO_MAX_THREADS);'), (15, 1, u'+        assert(thread->thread != 0);'), (24, 2, u'-    assert(s_active_thread_count > 0);'), (28, 1, u'+        assert(s_active_thread_count > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            assert(processed_once);')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: offset_of_next_item_fish_2_0
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            assert(processed_once);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+            assert(processed_once);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(str != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 7
Header: *unescape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(str != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(str != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(redirection_node.type == symbol_redirection);')]
===========================================
===========================================
Total add: 18
Total del: 0
Header: parse_node_tree_t::command_for_plain_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(redirection_node.type == symbol_redirection);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(redirection_node.type == symbol_redirection);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(cmdsubst_begin != NULL && cmdsubst_end != NULL && cmdsubst_end >= cmdsubst_begin);')]
===========================================
===========================================
Total add: 7
Total del: 1
Header: completer_t::try_complete_user
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(cmdsubst_begin != NULL && cmdsubst_end != NULL && cmdsubst_end >= cmdsubst_begin);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(cmdsubst_begin != NULL && cmdsubst_end != NULL && cmdsubst_end >= cmdsubst_begin);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+            assert(plain_statement->has_source() && plain_statement->type == symbol_plain_statement);')]
===========================================
===========================================
Total add: 97
Total del: 165
Header: complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+            assert(plain_statement->has_source() && plain_statement->type == symbol_plain_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+            assert(plain_statement->has_source() && plain_statement->type == symbol_plain_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(completions.at(0).completion == L"o");'), (6, 1, u'+    assert(completions.at(0).completion == L"r");'), (10, 1, u'+    assert(completions.size() == 1);'), (11, 1, u'+    assert(completions.at(0).completion == L"r");'), (15, 1, u'+    assert(completions.size() == 1);'), (16, 1, u'+    assert(completions.at(0).completion == L"r");'), (27, 1, u'+    assert(completions.size() == 1);'), (28, 1, u'+    assert(completions.at(0).completion == L"t");'), (33, 1, u'+    assert(completions.size() == 0);'), (38, 1, u'+    assert(completions.size() == 0);')]
===========================================
===========================================
Total add: 32
Total del: 2
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(completions.at(0).completion == L"o");'), (6, 1, u'+    assert(completions.at(0).completion == L"r");'), (10, 1, u'+    assert(completions.size() == 1);'), (11, 1, u'+    assert(completions.at(0).completion == L"r");'), (15, 1, u'+    assert(completions.size() == 1);'), (16, 1, u'+    assert(completions.at(0).completion == L"r");'), (27, 1, u'+    assert(completions.size() == 1);'), (28, 1, u'+    assert(completions.at(0).completion == L"t");'), (33, 1, u'+    assert(completions.size() == 0);'), (38, 1, u'+    assert(completions.size() == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(completions.at(0).completion == L"o");'), (6, 1, u'+    assert(completions.at(0).completion == L"r");'), (10, 1, u'+    assert(completions.size() == 1);'), (11, 1, u'+    assert(completions.at(0).completion == L"r");'), (15, 1, u'+    assert(completions.size() == 1);'), (16, 1, u'+    assert(completions.at(0).completion == L"r");'), (27, 1, u'+    assert(completions.size() == 1);'), (28, 1, u'+    assert(completions.at(0).completion == L"t");'), (33, 1, u'+    assert(completions.size() == 0);'), (38, 1, u'+    assert(completions.size() == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(completions.size() == 1);'), (6, 1, u'+    assert(completions.at(0).completion == L"o");')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(completions.size() == 1);'), (6, 1, u'+    assert(completions.at(0).completion == L"o");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(completions.size() == 1);'), (6, 1, u'+    assert(completions.at(0).completion == L"o");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    PARSE_ASSERT(token.type >= FIRST_PARSE_TOKEN_TYPE);'), (6, 1, u'+    PARSE_ASSERT(token1.type >= FIRST_PARSE_TOKEN_TYPE);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: parse_ll_t::accept_token
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    PARSE_ASSERT(token.type >= FIRST_PARSE_TOKEN_TYPE);'), (6, 1, u'+    PARSE_ASSERT(token1.type >= FIRST_PARSE_TOKEN_TYPE);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    PARSE_ASSERT(token.type >= FIRST_PARSE_TOKEN_TYPE);'), (6, 1, u'+    PARSE_ASSERT(token1.type >= FIRST_PARSE_TOKEN_TYPE);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        assert(tok_extent < 10000000); //paranoia')]
===========================================
===========================================
Total add: 14
Total del: 16
Header: parse_t::parse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        assert(tok_extent < 10000000); //paranoia')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-        assert(tok_extent < 10000000); //paranoia')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(node.type == symbol_plain_statement);')]
===========================================
===========================================
Total add: 17
Total del: 0
Header: enum parse_statement_decoration_t parse_node_tree_t::decoration_for_plain_statem
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(node.type == symbol_plain_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(node.type == symbol_plain_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(node.type == symbol_plain_statement);')]
===========================================
===========================================
Total add: 12
Total del: 0
Header: parse_node_tree_t::argument_list_is_root
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(node.type == symbol_plain_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(node.type == symbol_plain_statement);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(cursor_pos >= subcmd_offset);'), (11, 2, u'-    assert(subcmd_tok_begin >= subcmd_cstr);'), (12, 2, u'-    assert(subcmd_tok_end >= subcmd_tok_begin);'), (139, 1, u'+        assert(matching_cmd_node->type == parse_token_type_string);')]
===========================================
===========================================
Total add: 37
Total del: 97
Header: reader_expand_abbreviation_in_command
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(cursor_pos >= subcmd_offset);'), (11, 2, u'-    assert(subcmd_tok_begin >= subcmd_cstr);'), (12, 2, u'-    assert(subcmd_tok_end >= subcmd_tok_begin);'), (139, 1, u'+        assert(matching_cmd_node->type == parse_token_type_string);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(cursor_pos >= subcmd_offset);'), (11, 2, u'-    assert(subcmd_tok_begin >= subcmd_cstr);'), (12, 2, u'-    assert(subcmd_tok_end >= subcmd_tok_begin);'), (139, 1, u'+        assert(matching_cmd_node->type == parse_token_type_string);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(! result.empty());')]
===========================================
===========================================
Total add: 0
Total del: 98
Header: builtin_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(! result.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(! result.empty());')]
===========================================
Class:  class parse_exec_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(source_end >= node.source_start);'), (11, 2, u'-    assert(source_end <= color_array.size());')]
===========================================
===========================================
Total add: 3
Total del: 17
Header: highlight_shell_classic
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(source_end >= node.source_start);'), (11, 2, u'-    assert(source_end <= color_array.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(source_end >= node.source_start);'), (11, 2, u'-    assert(source_end <= color_array.size());')]
===========================================
Class: class highlighter_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(buff.size() == color.size());'), (11, 1, u'+    assert(this->buff.size() == this->color_array.size());')]
===========================================
===========================================
Total add: 7
Total del: 10
Header: command_is_valid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(buff.size() == color.size());'), (11, 1, u'+    assert(this->buff.size() == this->color_array.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-    assert(buff.size() == color.size());'), (11, 1, u'+    assert(this->buff.size() == this->color_array.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(node.type == symbol_argument_list || node.type == symbol_arguments_or_redirections_list);')]
===========================================
===========================================
Total add: 14
Total del: 0
Header: parse_node_tree_t::find_nodes
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(node.type == symbol_argument_list || node.type == symbol_arguments_or_redirections_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 1, u'+    assert(node.type == symbol_argument_list || node.type == symbol_arguments_or_redirections_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            PARSE_ASSERT(node.type == symbol_argument_list || node.type == symbol_argument_list_nonempty);'), (3, 1, u'+            PARSE_ASSERT(node.type == symbol_argument_list);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: class parse_exec_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            PARSE_ASSERT(node.type == symbol_argument_list || node.type == symbol_argument_list_nonempty);'), (3, 1, u'+            PARSE_ASSERT(node.type == symbol_argument_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            PARSE_ASSERT(node.type == symbol_argument_list || node.type == symbol_argument_list_nonempty);'), (3, 1, u'+            PARSE_ASSERT(node.type == symbol_argument_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(which < parent.child_count);'), (15, 2, u'-        assert(expected_type == token_type_invalid || expected_type == result->type);'), (16, 1, u'+        PARSE_ASSERT(which < parent.child_count);'), (23, 1, u'+            assert(expected_type == token_type_invalid || expected_type == result->type);')]
===========================================
===========================================
Total add: 12
Total del: 10
Header: *parse_node_tree_t::get_child
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(which < parent.child_count);'), (15, 2, u'-        assert(expected_type == token_type_invalid || expected_type == result->type);'), (16, 1, u'+        PARSE_ASSERT(which < parent.child_count);'), (23, 1, u'+            assert(expected_type == token_type_invalid || expected_type == result->type);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(which < parent.child_count);'), (15, 2, u'-        assert(expected_type == token_type_invalid || expected_type == result->type);'), (16, 1, u'+        PARSE_ASSERT(which < parent.child_count);'), (23, 1, u'+            assert(expected_type == token_type_invalid || expected_type == result->type);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        PARSE_ASSERT(node.parent < this->size());')]
===========================================
===========================================
Total add: 13
Total del: 5
Header: *parse_node_tree_t::get_child
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        PARSE_ASSERT(node.parent < this->size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        PARSE_ASSERT(node.parent < this->size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (23, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 11
Total del: 6
Header: tokenize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (23, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();'), (23, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    assert(begin >= buff);'), (14, 2, u'-    assert(begin <= (buff+wcslen(buff)));'), (15, 2, u'-    assert(end >= begin);'), (16, 2, u'-    assert(end <= (buff+wcslen(buff)));'), (17, 1, u'+    assert(cmdsubst_begin >= buff);'), (18, 1, u'+    assert(cmdsubst_begin <= (buff+wcslen(buff)));'), (19, 1, u'+    assert(cmdsubst_end >= cmdsubst_begin);'), (20, 1, u'+    assert(cmdsubst_end <= (buff+wcslen(buff)));')]
===========================================
===========================================
Total add: 9
Total del: 8
Header: parse_util_token_extent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    assert(begin >= buff);'), (14, 2, u'-    assert(begin <= (buff+wcslen(buff)));'), (15, 2, u'-    assert(end >= begin);'), (16, 2, u'-    assert(end <= (buff+wcslen(buff)));'), (17, 1, u'+    assert(cmdsubst_begin >= buff);'), (18, 1, u'+    assert(cmdsubst_begin <= (buff+wcslen(buff)));'), (19, 1, u'+    assert(cmdsubst_end >= cmdsubst_begin);'), (20, 1, u'+    assert(cmdsubst_end <= (buff+wcslen(buff)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-    assert(begin >= buff);'), (14, 2, u'-    assert(begin <= (buff+wcslen(buff)));'), (15, 2, u'-    assert(end >= begin);'), (16, 2, u'-    assert(end <= (buff+wcslen(buff)));'), (17, 1, u'+    assert(cmdsubst_begin >= buff);'), (18, 1, u'+    assert(cmdsubst_begin <= (buff+wcslen(buff)));'), (19, 1, u'+    assert(cmdsubst_end >= cmdsubst_begin);'), (20, 1, u'+    assert(cmdsubst_end <= (buff+wcslen(buff)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                assert(0 && "Unexpected mode in read_string");')]
===========================================
===========================================
Total add: 13
Total del: 1
Header: read_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                assert(0 && "Unexpected mode in read_string");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+                assert(0 && "Unexpected mode in read_string");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    assert(trailing <= len);')]
===========================================
===========================================
Total add: 51
Total del: 13
Header: path_make_canonical
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    assert(trailing <= len);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(29, 1, u'+    assert(trailing <= len);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                assert(single_magic_input_redirect == NULL && "Should have at most one input IO_BUFFER");')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                assert(single_magic_input_redirect == NULL && "Should have at most one input IO_BUFFER");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                assert(single_magic_input_redirect == NULL && "Should have at most one input IO_BUFFER");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                assert(block_output_io_buffer.get() != NULL);')]
===========================================
===========================================
Total add: 7
Total del: 5
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                assert(block_output_io_buffer.get() != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                assert(block_output_io_buffer.get() != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                assert(single_magic_input_redirect != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                assert(single_magic_input_redirect != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+                assert(single_magic_input_redirect != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(p->io_chain().empty());')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: parser_t::parse_job_argument_list
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(p->io_chain().empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(p->io_chain().empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(element.get() != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: io_chain_t::push_back
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(element.get() != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(element.get() != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(source_end >= node.source_start);'), (11, 1, u'+    assert(source_end <= color_array.size());'), (126, 1, u'+                        assert(in_pos >= backslash_pos && in_pos <= buff_len);'), (136, 1, u'+                    assert(fill_end >= backslash_pos);'), (156, 1, u'+                            assert(in_pos < buff_len);'), (307, 1, u'+        assert(child != NULL && child->type == symbol_argument);'), (327, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();'), (330, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
Total add: 406
Total del: 0
Header: highlight_shell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(source_end >= node.source_start);'), (11, 1, u'+    assert(source_end <= color_array.size());'), (126, 1, u'+                        assert(in_pos >= backslash_pos && in_pos <= buff_len);'), (136, 1, u'+                    assert(fill_end >= backslash_pos);'), (156, 1, u'+                            assert(in_pos < buff_len);'), (307, 1, u'+        assert(child != NULL && child->type == symbol_argument);'), (327, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();'), (330, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(source_end >= node.source_start);'), (11, 1, u'+    assert(source_end <= color_array.size());'), (126, 1, u'+                        assert(in_pos >= backslash_pos && in_pos <= buff_len);'), (136, 1, u'+                    assert(fill_end >= backslash_pos);'), (156, 1, u'+                            assert(in_pos < buff_len);'), (307, 1, u'+        assert(child != NULL && child->type == symbol_argument);'), (327, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();'), (330, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(! symbol_stack.empty());'), (18, 1, u'+        PARSE_ASSERT(! symbol_stack.empty());')]
===========================================
===========================================
Total add: 14
Total del: 1
Header: parse_ll_t::accept_token
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(! symbol_stack.empty());'), (18, 1, u'+        PARSE_ASSERT(! symbol_stack.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(! symbol_stack.empty());'), (18, 1, u'+        PARSE_ASSERT(! symbol_stack.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(tok_extent < 10000000); //paranoia')]
===========================================
===========================================
Total add: 1
Total del: 6
Header: parse_t::parse
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(tok_extent < 10000000); //paranoia')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(tok_extent < 10000000); //paranoia')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        PARSE_ASSERT(production != NULL);')]
===========================================
===========================================
Total add: 12
Total del: 6
Header: parse_ll_t::accept_token
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        PARSE_ASSERT(production != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        PARSE_ASSERT(production != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-        PARSE_ASSERT(node.child_count == 0);'), (73, 1, u'+        PARSE_ASSERT(parent_node.child_count == 0);'), (144, 1, u'+            PARSE_ASSERT(production_element_is_valid(elem));')]
===========================================
===========================================
Total add: 50
Total del: 86
Header: class parse_ll_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-        PARSE_ASSERT(node.child_count == 0);'), (73, 1, u'+        PARSE_ASSERT(parent_node.child_count == 0);'), (144, 1, u'+            PARSE_ASSERT(production_element_is_valid(elem));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(61, 2, u'-        PARSE_ASSERT(node.child_count == 0);'), (73, 1, u'+        PARSE_ASSERT(parent_node.child_count == 0);'), (144, 1, u'+            PARSE_ASSERT(production_element_is_valid(elem));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+        PARSE_ASSERT(production != NULL);')]
===========================================
===========================================
Total add: 10
Total del: 116
Header: parse_ll_t::accept_token
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+        PARSE_ASSERT(production != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(123, 1, u'+        PARSE_ASSERT(production != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        PARSE_ASSERT(header_parent.child_count == 1);'), (3, 1, u'+        PARSE_ASSERT(header_parent.child_count == 1);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: class parse_exec_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        PARSE_ASSERT(header_parent.child_count == 1);'), (3, 1, u'+        PARSE_ASSERT(header_parent.child_count == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        PARSE_ASSERT(header_parent.child_count == 1);'), (3, 1, u'+        PARSE_ASSERT(header_parent.child_count == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            PARSE_ASSERT(parse_node.child_count == 3);'), (7, 1, u'+            PARSE_ASSERT(parse_node.child_count == 4);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            PARSE_ASSERT(parse_node.child_count == 3);'), (7, 1, u'+            PARSE_ASSERT(parse_node.child_count == 4);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-            PARSE_ASSERT(parse_node.child_count == 3);'), (7, 1, u'+            PARSE_ASSERT(parse_node.child_count == 4);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(cmdsub_begin != NULL && cmdsub_begin >= buff);'), (7, 2, u'-    assert(cmdsub_end != NULL && cmdsub_end >= cmdsub_begin);')]
===========================================
===========================================
Total add: 0
Total del: 9
Header: test_abbreviations
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(cmdsub_begin != NULL && cmdsub_begin >= buff);'), (7, 2, u'-    assert(cmdsub_end != NULL && cmdsub_end >= cmdsub_begin);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-    assert(cmdsub_begin != NULL && cmdsub_begin >= buff);'), (7, 2, u'-    assert(cmdsub_end != NULL && cmdsub_end >= cmdsub_begin);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(cursor_pos >= subcmd_offset);')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: reader_expand_abbreviation_in_command
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(cursor_pos >= subcmd_offset);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(cursor_pos >= subcmd_offset);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    assert(cursor_pos <= bufflen);'), (96, 1, u'+            assert(end < cursor);'), (98, 1, u'+            assert(pos <= buff + bufflen);')]
===========================================
===========================================
Total add: 36
Total del: 52
Header: parse_util_locate_cmdsubst
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    assert(cursor_pos <= bufflen);'), (96, 1, u'+            assert(end < cursor);'), (98, 1, u'+            assert(pos <= buff + bufflen);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(36, 1, u'+    assert(cursor_pos <= bufflen);'), (96, 1, u'+            assert(end < cursor);'), (98, 1, u'+            assert(pos <= buff + bufflen);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            PARSE_ASSERT(parse_node.child_count == 4);'), (18, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (35, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);'), (37, 1, u'+            PARSE_ASSERT(first_child.type == symbol_if_clause || first_child.type == parse_token_type_end);')]
===========================================
===========================================
Total add: 51
Total del: 2
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            PARSE_ASSERT(parse_node.child_count == 4);'), (18, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (35, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);'), (37, 1, u'+            PARSE_ASSERT(first_child.type == symbol_if_clause || first_child.type == parse_token_type_end);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            PARSE_ASSERT(parse_node.child_count == 4);'), (18, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (35, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);'), (37, 1, u'+            PARSE_ASSERT(first_child.type == symbol_if_clause || first_child.type == parse_token_type_end);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            PARSE_ASSERT(parse_node.child_count == 2);'), (8, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            PARSE_ASSERT(parse_node.child_count == 2);'), (8, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-            PARSE_ASSERT(parse_node.child_count == 2);'), (8, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        assert(! result.empty());')]
===========================================
===========================================
Total add: 99
Total del: 0
Header: builtin_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        assert(! result.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        assert(! result.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-        PARSE_ASSERT(k == parse_keyword_none || k == parse_keyword_command || k == parse_keyword_builtin);')]
===========================================
===========================================
Total add: 6
Total del: 98
Header: struct exec_node_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-        PARSE_ASSERT(k == parse_keyword_none || k == parse_keyword_command || k == parse_keyword_builtin);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 2, u'-        PARSE_ASSERT(k == parse_keyword_none || k == parse_keyword_command || k == parse_keyword_builtin);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        PARSE_ASSERT(node.source_start <= src.size());'), (6, 2, u'-        PARSE_ASSERT(node.source_start + node.source_length <= src.size());')]
===========================================
===========================================
Total add: 3
Total del: 8
Header: class parse_exec_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        PARSE_ASSERT(node.source_start <= src.size());'), (6, 2, u'-        PARSE_ASSERT(node.source_start + node.source_length <= src.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        PARSE_ASSERT(node.source_start <= src.size());'), (6, 2, u'-        PARSE_ASSERT(node.source_start + node.source_length <= src.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);')]
===========================================
===========================================
Total add: 8
Total del: 2
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        PARSE_ASSERT(! exec_nodes.empty());'), (27, 1, u'+                PARSE_ASSERT(idx < parse_node.child_count);')]
===========================================
===========================================
Total add: 32
Total del: 0
Header: class parse_exec_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        PARSE_ASSERT(! exec_nodes.empty());'), (27, 1, u'+                PARSE_ASSERT(idx < parse_node.child_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        PARSE_ASSERT(! exec_nodes.empty());'), (27, 1, u'+                PARSE_ASSERT(idx < parse_node.child_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1);'), (31, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);'), (38, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 3);')]
===========================================
===========================================
Total add: 29
Total del: 9
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1);'), (31, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);'), (38, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1);'), (31, 1, u'+            PARSE_ASSERT(parse_node.child_count == 2);'), (38, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (18, 1, u'+            PARSE_ASSERT(parse_node.child_count == 5);'), (25, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (32, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);')]
===========================================
===========================================
Total add: 30
Total del: 2
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (18, 1, u'+            PARSE_ASSERT(parse_node.child_count == 5);'), (25, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (32, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (18, 1, u'+            PARSE_ASSERT(parse_node.child_count == 5);'), (25, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (32, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1 || parse_node.child_count == 2 );'), (5, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1 || parse_node.child_count == 2);'), (19, 2, u'-            PARSE_ASSERT(parse_node.child_count == 3);'), (21, 2, u'-            PARSE_ASSERT(! assembling_statements.empty());'), (28, 2, u'-            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (33, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1);')]
===========================================
===========================================
Total add: 8
Total del: 21
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1 || parse_node.child_count == 2 );'), (5, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1 || parse_node.child_count == 2);'), (19, 2, u'-            PARSE_ASSERT(parse_node.child_count == 3);'), (21, 2, u'-            PARSE_ASSERT(! assembling_statements.empty());'), (28, 2, u'-            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (33, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1 || parse_node.child_count == 2 );'), (5, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1 || parse_node.child_count == 2);'), (19, 2, u'-            PARSE_ASSERT(parse_node.child_count == 3);'), (21, 2, u'-            PARSE_ASSERT(! assembling_statements.empty());'), (28, 2, u'-            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (33, 2, u'-            PARSE_ASSERT(parse_node.child_count == 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    PARSE_ASSERT(stack_top_type() == symbol_statement_list);'), (6, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_job_list);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: parse_ll_t::parse_error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    PARSE_ASSERT(stack_top_type() == symbol_statement_list);'), (6, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_job_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    PARSE_ASSERT(stack_top_type() == symbol_statement_list);'), (6, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_job_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                    assert(0 && "Need assignment");')]
===========================================
===========================================
Total add: 18
Total del: 3
Header: parse_ll_t::accept_token_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                    assert(0 && "Need assignment");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-                    assert(0 && "Need assignment");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+        assert(line_end >= line_start);'), (24, 1, u'+        assert(source_start >= line_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        PARSE_ASSERT(node.source_start <= src.size());'), (17, 1, u'+        PARSE_ASSERT(node.source_start + node.source_length <= src.size());'), (23, 1, u'+        PARSE_ASSERT(! exec_nodes.empty());'), (34, 1, u'+            PARSE_ASSERT(child_idx < parse_node.child_count);')]
===========================================
===========================================
Total add: 50
Total del: 2
Header: class parse_exec_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        PARSE_ASSERT(node.source_start <= src.size());'), (17, 1, u'+        PARSE_ASSERT(node.source_start + node.source_length <= src.size());'), (23, 1, u'+        PARSE_ASSERT(! exec_nodes.empty());'), (34, 1, u'+            PARSE_ASSERT(child_idx < parse_node.child_count);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+        PARSE_ASSERT(node.source_start <= src.size());'), (17, 1, u'+        PARSE_ASSERT(node.source_start + node.source_length <= src.size());'), (23, 1, u'+        PARSE_ASSERT(! exec_nodes.empty());'), (34, 1, u'+            PARSE_ASSERT(child_idx < parse_node.child_count);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);'), (22, 1, u'+            PARSE_ASSERT(! assembling_statements.empty());'), (29, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (34, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (40, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0);')]
===========================================
===========================================
Total add: 35
Total del: 3
Header: parse_exec_t::run_top_node
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);'), (22, 1, u'+            PARSE_ASSERT(! assembling_statements.empty());'), (29, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (34, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (40, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+            PARSE_ASSERT(parse_node.child_count == 3);'), (22, 1, u'+            PARSE_ASSERT(! assembling_statements.empty());'), (29, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0 || parse_node.child_count == 2);'), (34, 1, u'+            PARSE_ASSERT(parse_node.child_count == 1);'), (40, 1, u'+            PARSE_ASSERT(parse_node.child_count == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(exec_nodes.empty());')]
===========================================
===========================================
Total add: 0
Total del: 8
Header: parse_exec_t::simulate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(exec_nodes.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(exec_nodes.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(node_idx < nodes.size());'), (3, 2, u'-    PARSE_ASSERT(nodes.at(node_idx).type == symbol_statement_list);'), (4, 1, u'+    PARSE_ASSERT(exec_nodes.empty());')]
===========================================
===========================================
Total add: 14
Total del: 2
Header: parse_execution_context_t::simulate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(node_idx < nodes.size());'), (3, 2, u'-    PARSE_ASSERT(nodes.at(node_idx).type == symbol_statement_list);'), (4, 1, u'+    PARSE_ASSERT(exec_nodes.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(node_idx < nodes.size());'), (3, 2, u'-    PARSE_ASSERT(nodes.at(node_idx).type == symbol_statement_list);'), (4, 1, u'+    PARSE_ASSERT(exec_nodes.empty());')]
===========================================
Class: class parse_exec_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-#define PARSE_ASSERT(a) assert(a)'), (8, 2, u'-#define PARSER_DIE() assert(0)')]
===========================================
Class: class parse_node_t { 
Class:class parse_execution_context_t { 
Class:  class parse_node_t { 
Class: class parse_ll_t { 
Class:  class parse_node_t { 
Class: class parse_execution_context_t { 
Class: class parse_ll_t { 
Class:class parse_tree_t { 
Class:class parse_node_t : public parse_node_base_t { 
Class:class parse_statement_list_t : public parse_node_base_t { 
Class: class parse_statement_t : public parse_node_base_t { 
Class: class parse_abstract_statement_t : public parse_statement_t { 
Class: class parse_boolean_statement_t : public parse_statement_t { 
Class:class parse_decorated_statement_t : public parse_statement_t static void dump_tree_recursive(const std::vector<parse_node_t> &nodes, const wcstring &src, size_t start, size_t indent, wcstring *result, size_t *line) public:     enum {     enum 
Class:class parse_plain_statement_t : public parse_statement_t { 
Class: class parse_block_statement_t : public parse_statement_t { 
Class: class parse_string_t : public parse_node_base_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    assert(start < nodes.size());')]
===========================================
===========================================
Total add: 26
Total del: 35
Header: class parse_boolean_statement_t : public parse_statement_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    assert(start < nodes.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    assert(start < nodes.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        assert(node == NULL);')]
===========================================
===========================================
Total add: 3
Total del: 55
Header: struct parse_stack_element_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        assert(node == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-        assert(node == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        PARSE_ASSERT(! symbol_stack.empty());'), (7, 1, u'+        PARSE_ASSERT(top_symbol.node_idx != -1);'), (8, 1, u'+        PARSE_ASSERT(top_symbol.node_idx < nodes.size());')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: class parse_ll_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        PARSE_ASSERT(! symbol_stack.empty());'), (7, 1, u'+        PARSE_ASSERT(top_symbol.node_idx != -1);'), (8, 1, u'+        PARSE_ASSERT(top_symbol.node_idx < nodes.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        PARSE_ASSERT(! symbol_stack.empty());'), (7, 1, u'+        PARSE_ASSERT(top_symbol.node_idx != -1);'), (8, 1, u'+        PARSE_ASSERT(top_symbol.node_idx < nodes.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(idx < symbol_stack.size());'), (16, 2, u'-        assert(idx < symbol_stack.size());'), (18, 1, u'+        PARSE_ASSERT(tok->type != token_type_invalid);'), (34, 1, u'+        PARSE_ASSERT(node.child_count == 0);')]
===========================================
===========================================
Total add: 28
Total del: 10
Header: class parse_ll_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(idx < symbol_stack.size());'), (16, 2, u'-        assert(idx < symbol_stack.size());'), (18, 1, u'+        PARSE_ASSERT(tok->type != token_type_invalid);'), (34, 1, u'+        PARSE_ASSERT(node.child_count == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-        assert(idx < symbol_stack.size());'), (16, 2, u'-        assert(idx < symbol_stack.size());'), (18, 1, u'+        PARSE_ASSERT(tok->type != token_type_invalid);'), (34, 1, u'+        PARSE_ASSERT(node.child_count == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(stack_top_type() == symbol_decorated_statement);'), (4, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_plain_statement);')]
===========================================
===========================================
Total add: 1
Total del: 3
Header: parse_ll_t::accept_token_plain_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(stack_top_type() == symbol_decorated_statement);'), (4, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_plain_statement);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(stack_top_type() == symbol_decorated_statement);'), (4, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_plain_statement);')]
===========================================
Class:class parse_node_t : public parse_node_base_t { 
Class: class parse_abstract_statement_t : public parse_statement_t { 
Class: class parse_string_t : public parse_node_base_t { 
Class: class parse_arguments_or_redirection_list_t : public parse_node_base_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+        assert(node == NULL);')]
===========================================
===========================================
Total add: 77
Total del: 1
Header: class parse_block_statement_t : public parse_statement_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+        assert(node == NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+        assert(node == NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        assert(idx < symbol_stack.size());'), (17, 1, u'+        assert(idx < symbol_stack.size());')]
===========================================
===========================================
Total add: 16
Total del: 1
Header: class parse_ll_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        assert(idx < symbol_stack.size());'), (17, 1, u'+        assert(idx < symbol_stack.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+        assert(idx < symbol_stack.size());'), (17, 1, u'+        assert(idx < symbol_stack.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(symbol_stack.top().type == symbol_statement_list);'), (3, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_statement_list);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: parse_ll_t::accept_token_statement_list
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(symbol_stack.top().type == symbol_statement_list);'), (3, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_statement_list);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    PARSE_ASSERT(symbol_stack.top().type == symbol_statement_list);'), (3, 1, u'+    PARSE_ASSERT(stack_top_type() == symbol_statement_list);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    assert(0 && "Need assignment");')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: parse_ll_t::accept_token_statement
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    assert(0 && "Need assignment");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                    assert(0 && "Need assignment");')]
===========================================
Class:class parse_tree_t { 
Class:  class parse_node_base_t { 
Class:class parse_statement_list_t : public parse_node_base_t { 
Class: class parse_statement_t : public parse_node_base_t { 
Class: class parse_boolean_statement_t : public parse_statement_t { 
Class:class parse_decorated_statement_t : public parse_statement_t { 
Class: class parse_plain_statement_t : public parse_statement_t { 
Class: class parse_block_statement_t : public parse_statement_t { 
Class: class parse_ll_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(completions.empty());'), (10, 1, u'+    assert(completions.size() == 2);'), (11, 1, u'+    assert(completions.at(0).completion == L"$Foo1");'), (12, 1, u'+    assert(completions.at(1).completion == L"$Bar1");')]
===========================================
===========================================
Total add: 12
Total del: 1
Header: test_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(completions.empty());'), (10, 1, u'+    assert(completions.size() == 2);'), (11, 1, u'+    assert(completions.at(0).completion == L"$Foo1");'), (12, 1, u'+    assert(completions.at(1).completion == L"$Bar1");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(completions.empty());'), (10, 1, u'+    assert(completions.size() == 2);'), (11, 1, u'+    assert(completions.at(0).completion == L"$Foo1");'), (12, 1, u'+    assert(completions.at(1).completion == L"$Bar1");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(179, 2, u'-        assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Total add: 81
Total del: 96
Header: handle_completions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(179, 2, u'-        assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(179, 2, u'-        assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Total add: 37
Total del: 17
Header: handle_completions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+            assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+                assert(wcslen(str) >= wc_len);'), (63, 1, u'+        assert(completion_string != NULL);')]
===========================================
===========================================
Total add: 49
Total del: 10
Header: wildcard_complete_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+                assert(wcslen(str) >= wc_len);'), (63, 1, u'+        assert(completion_string != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(35, 1, u'+                assert(wcslen(str) >= wc_len);'), (63, 1, u'+        assert(completion_string != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u"+        assert(buffer.at(buffer.size() - 1) == '\\0');")]
===========================================
===========================================
Total add: 70
Total del: 0
Header: Our history format is intended to be valid YAML. Here it is:
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u"+        assert(buffer.at(buffer.size() - 1) == '\\0');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(54, 1, u"+        assert(buffer.at(buffer.size() - 1) == '\\0');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u"+    assert(in[0] == HOME_DIRECTORY || in[0] == L'~');")]
===========================================
===========================================
Total add: 26
Total del: 9
Header: expand_unescape_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u"+    assert(in[0] == HOME_DIRECTORY || in[0] == L'~');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u"+    assert(in[0] == HOME_DIRECTORY || in[0] == L'~');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: proc_set_last_status
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            assert(0); //should have been caught by the above test')]
===========================================
===========================================
Total add: 32
Total del: 2
Header: *test_parser::parse_expression
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            assert(0); //should have been caught by the above test')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+            assert(0); //should have been caught by the above test')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(0, L"-S = -S"));'), (5, 1, u'+    assert(run_test_test(1, L"! ! ! A"));')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(0, L"-S = -S"));'), (5, 1, u'+    assert(run_test_test(1, L"! ! ! A"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(0, L"-S = -S"));'), (5, 1, u'+    assert(run_test_test(1, L"! ! ! A"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert((unsigned char *)pointers - base == (ptrdiff_t)pointers_allocation_len);'), (6, 2, u'-    assert((unsigned char *)strings - (unsigned char *)pointers == (ptrdiff_t)strings_allocation_len);'), (7, 2, u'-    assert((unsigned char *)strings - base == (ptrdiff_t)(pointers_allocation_len + strings_allocation_len));'), (9, 1, u'+    assert((unsigned char *)pointers - base == (std::ptrdiff_t)pointers_allocation_len);'), (10, 1, u'+    assert((unsigned char *)strings - (unsigned char *)pointers == (std::ptrdiff_t)strings_allocation_len);'), (11, 1, u'+    assert((unsigned char *)strings - base == (std::ptrdiff_t)(pointers_allocation_len + strings_allocation_len));')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: **make_null_terminated_array_helper
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert((unsigned char *)pointers - base == (ptrdiff_t)pointers_allocation_len);'), (6, 2, u'-    assert((unsigned char *)strings - (unsigned char *)pointers == (ptrdiff_t)strings_allocation_len);'), (7, 2, u'-    assert((unsigned char *)strings - base == (ptrdiff_t)(pointers_allocation_len + strings_allocation_len));'), (9, 1, u'+    assert((unsigned char *)pointers - base == (std::ptrdiff_t)pointers_allocation_len);'), (10, 1, u'+    assert((unsigned char *)strings - (unsigned char *)pointers == (std::ptrdiff_t)strings_allocation_len);'), (11, 1, u'+    assert((unsigned char *)strings - base == (std::ptrdiff_t)(pointers_allocation_len + strings_allocation_len));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert((unsigned char *)pointers - base == (ptrdiff_t)pointers_allocation_len);'), (6, 2, u'-    assert((unsigned char *)strings - (unsigned char *)pointers == (ptrdiff_t)strings_allocation_len);'), (7, 2, u'-    assert((unsigned char *)strings - base == (ptrdiff_t)(pointers_allocation_len + strings_allocation_len));'), (9, 1, u'+    assert((unsigned char *)pointers - base == (std::ptrdiff_t)pointers_allocation_len);'), (10, 1, u'+    assert((unsigned char *)strings - (unsigned char *)pointers == (std::ptrdiff_t)strings_allocation_len);'), (11, 1, u'+    assert((unsigned char *)strings - base == (std::ptrdiff_t)(pointers_allocation_len + strings_allocation_len));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 0
Total del: 7
Header: **env_export_arr
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+                    assert(end >= begin);')]
===========================================
===========================================
Total add: 9
Total del: 3
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+                    assert(end >= begin);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 1, u'+                    assert(end >= begin);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(width_by_offset.size() > 0 && width_by_offset.at(0) == 0);'), (3, 1, u'+    assert(! width_by_offset.empty() && width_by_offset.at(0) == 0);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: truncation_offset_for_width
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(width_by_offset.size() > 0 && width_by_offset.at(0) == 0);'), (3, 1, u'+    assert(! width_by_offset.empty() && width_by_offset.at(0) == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(width_by_offset.size() > 0 && width_by_offset.at(0) == 0);'), (3, 1, u'+    assert(! width_by_offset.empty() && width_by_offset.at(0) == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            assert(insertion_point > 0);')]
===========================================
===========================================
Total add: 13
Total del: 4
Header: completion_apply_to_command_line
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            assert(insertion_point > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            assert(insertion_point > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+        assert(pipe_current_read == -1);')]
===========================================
===========================================
Total add: 22
Total del: 3
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+        assert(pipe_current_read == -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+        assert(pipe_current_read == -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(pipe_current_write == -1);'), (14, 1, u'+            assert(pipe_next_read == -1);')]
===========================================
===========================================
Total add: 9
Total del: 4
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(pipe_current_write == -1);'), (14, 1, u'+            assert(pipe_next_read == -1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(pipe_current_write == -1);'), (14, 1, u'+            assert(pipe_next_read == -1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-            assert(p->next != NULL);')]
===========================================
===========================================
Total add: 18
Total del: 26
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-            assert(p->next != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 2, u'-            assert(p->next != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: exec_pipe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(p->next != NULL);')]
===========================================
===========================================
Total add: 11
Total del: 9
Header: exec
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(p->next != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+            assert(p->next != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(element.get() != NULL);')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: io_chain_t::remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(element.get() != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(element.get() != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(sizeof(size_t) >= sizeof(unsigned int));'), (4, 2, u'-    assert(sizeof(void*) >= sizeof(size_t));')]
===========================================
===========================================
Total add: 0
Total del: 3
Header: reader_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(sizeof(size_t) >= sizeof(unsigned int));'), (4, 2, u'-    assert(sizeof(void*) >= sizeof(size_t));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-    assert(sizeof(size_t) >= sizeof(unsigned int));'), (4, 2, u'-    assert(sizeof(void*) >= sizeof(size_t));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(sizeof(size_t) >= sizeof(unsigned int));'), (4, 1, u'+    assert(sizeof(void*) >= sizeof(size_t));')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: reader_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(sizeof(size_t) >= sizeof(unsigned int));'), (4, 1, u'+    assert(sizeof(void*) >= sizeof(size_t));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(sizeof(size_t) >= sizeof(unsigned int));'), (4, 1, u'+    assert(sizeof(void*) >= sizeof(size_t));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            assert(result != node->env.end());'), (17, 1, u'+            assert(result != preexisting_node->env.end());')]
===========================================
===========================================
Total add: 10
Total del: 8
Header: env_set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            assert(result != node->env.end());'), (17, 1, u'+            assert(result != preexisting_node->env.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-            assert(result != node->env.end());'), (17, 1, u'+            assert(result != preexisting_node->env.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: show_stackframe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"1 = 1 -a = 1"));')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"1 = 1 -a = 1"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"1 = 1 -a = 1"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHAA") == L"ALPHAA");'), (5, 1, u'+    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHA") == L"alpha");')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: test_autosuggestion_combining
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHAA") == L"ALPHAA");'), (5, 1, u'+    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHA") == L"alpha");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHAA") == L"ALPHAA");'), (5, 1, u'+    assert(combine_command_and_autosuggestion(L"alpha", L"ALPHA") == L"alpha");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(bracket == nonbracket);')]
===========================================
===========================================
Total add: 21
Total del: 1
Header: run_test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(bracket == nonbracket);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(bracket == nonbracket);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"foo bar"));'), (5, 1, u'+    assert(run_test_test(1, L"foo bar baz"));')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"foo bar"));'), (5, 1, u'+    assert(run_test_test(1, L"foo bar baz"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"foo bar"));'), (5, 1, u'+    assert(run_test_test(1, L"foo bar baz"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-                assert(begin != NULL);')]
===========================================
===========================================
Total add: 19
Total del: 29
Header: exec_subshell_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-                assert(begin != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 2, u'-                assert(begin != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(in != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: str2wcstring
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(in != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(in != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(begin != NULL);')]
===========================================
===========================================
Total add: 3
Total del: 11
Header: exec_subshell_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(begin != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(begin != NULL);')]
===========================================
Class: class move_word_state_machine_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i < RACE_COUNT && "Line expected to be at end of some array");')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: history_tests_t::test_history_races
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i < RACE_COUNT && "Line expected to be at end of some array");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(i < RACE_COUNT && "Line expected to be at end of some array");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(new_items.size() >= first_unwritten_new_item_index);'), (36, 1, u'+    assert(countdown_to_vacuum > 0);')]
===========================================
===========================================
Total add: 22
Total del: 11
Header: history_t::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(new_items.size() >= first_unwritten_new_item_index);'), (36, 1, u'+    assert(countdown_to_vacuum > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-    assert(new_items.size() >= first_unwritten_new_item_index);'), (36, 1, u'+    assert(countdown_to_vacuum > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(new_items.size() >= first_unwritten_new_item_index);')]
===========================================
===========================================
Total add: 4
Total del: 2
Header: history_t::add
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(new_items.size() >= first_unwritten_new_item_index);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(new_items.size() >= first_unwritten_new_item_index);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(deleted_items.empty());')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: history_t::save_internal_via_appending
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(deleted_items.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(deleted_items.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+    assert(first_unwritten_new_item_index <= new_items.size());')]
===========================================
===========================================
Total add: 11
Total del: 7
Header: history_t::remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+    assert(first_unwritten_new_item_index <= new_items.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+    assert(first_unwritten_new_item_index <= new_items.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(prompt_line_count >= 1);')]
===========================================
===========================================
Total add: 0
Total del: 7
Header: s_reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(prompt_line_count >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-        assert(prompt_line_count >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(111, 2, u'-        assert(screen_width - left_prompt_width >= 1);')]
===========================================
===========================================
Total add: 32
Total del: 163
Header: s_write
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(111, 2, u'-        assert(screen_width - left_prompt_width >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(111, 2, u'-        assert(screen_width - left_prompt_width >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);'), (13, 1, u'+                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Total add: 22
Total del: 22
Header: builtin_contains
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);'), (13, 1, u'+                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-            assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);'), (13, 1, u'+                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(159, 2, u'-            assert(false); //should never get here'), (167, 1, u'+                assert(false); //should never get here')]
===========================================
===========================================
Total add: 76
Total del: 76
Header: builtin_end
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(159, 2, u'-            assert(false); //should never get here'), (167, 1, u'+                assert(false); //should never get here')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(159, 2, u'-            assert(false); //should never get here'), (167, 1, u'+                assert(false); //should never get here')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(subject.get());'), (9, 1, u'+            assert(subject.get());')]
===========================================
===========================================
Total add: 6
Total del: 6
Header: unary_operator::evaluate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(subject.get());'), (9, 1, u'+            assert(subject.get());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-        assert(subject.get());'), (9, 1, u'+            assert(subject.get());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        assert(combiners.size() + 1 == subjects.size());'), (11, 2, u'-        assert(! subjects.empty());'), (35, 1, u'+            assert(combiners.size() + 1 == subjects.size());'), (36, 1, u'+            assert(! subjects.empty());')]
===========================================
===========================================
Total add: 36
Total del: 36
Header: combining_expression::evaluate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        assert(combiners.size() + 1 == subjects.size());'), (11, 2, u'-        assert(! subjects.empty());'), (35, 1, u'+            assert(combiners.size() + 1 == subjects.size());'), (36, 1, u'+            assert(! subjects.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-        assert(combiners.size() + 1 == subjects.size());'), (11, 2, u'-        assert(! subjects.empty());'), (35, 1, u'+            assert(combiners.size() + 1 == subjects.size());'), (36, 1, u'+            assert(! subjects.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+                                    assert(in_pos > 0);'), (207, 2, u'-                        assert(in_pos > 0);')]
===========================================
===========================================
Total add: 151
Total del: 83
Header: *unescape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+                                    assert(in_pos > 0);'), (207, 2, u'-                        assert(in_pos > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(136, 1, u'+                                    assert(in_pos > 0);'), (207, 2, u'-                        assert(in_pos > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(85, 2, u'-                    assert(current_block->type() == IF);'), (128, 1, u'+                        assert(current_block->type() == IF);')]
===========================================
===========================================
Total add: 154
Total del: 143
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(85, 2, u'-                    assert(current_block->type() == IF);'), (128, 1, u'+                        assert(current_block->type() == IF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(85, 2, u'-                    assert(current_block->type() == IF);'), (128, 1, u'+                        assert(current_block->type() == IF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(156, 1, u'+                    assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (167, 2, u'-                assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Total add: 89
Total del: 120
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(156, 1, u'+                    assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (167, 2, u'-                assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(156, 1, u'+                    assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (167, 2, u'-                assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-            assert(0);'), (49, 1, u'+                assert(0);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: _xdg_mime_magic_read_magic_file
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-            assert(0);'), (49, 1, u'+                assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(25, 2, u'-            assert(0);'), (49, 1, u'+                assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);'), (135, 1, u'+            assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Total add: 91
Total del: 91
Header: builtin_count
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);'), (135, 1, u'+            assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(45, 2, u'-                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);'), (135, 1, u'+            assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(119, 2, u'-                assert(false); //should never get here'), (224, 1, u'+            assert(false); //should never get here')]
===========================================
===========================================
Total add: 122
Total del: 122
Header: builtin_begin
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(119, 2, u'-                assert(false); //should never get here'), (224, 1, u'+            assert(false); //should never get here')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(119, 2, u'-                assert(false); //should never get here'), (224, 1, u'+            assert(false); //should never get here')]
===========================================
Class:    class expression;
Class:    class test_parser {     class test_parser 
Class:    class expression {     class expression 
Class: class parenthetical_expression : public expression { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'- \tassert (main_thread_id != 0);'), (7, 1, u'+    assert(main_thread_id != 0);')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: restore_term_foreground_process_group
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'- \tassert (main_thread_id != 0);'), (7, 1, u'+    assert(main_thread_id != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'- \tassert (main_thread_id != 0);'), (7, 1, u'+    assert(main_thread_id != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (! is_main_thread() && ! thread_assertions_configured_for_testing) {'), (3, 1, u'+    if (! is_main_thread() && ! thread_assertions_configured_for_testing)')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: assert_is_main_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (! is_main_thread() && ! thread_assertions_configured_for_testing) {'), (3, 1, u'+    if (! is_main_thread() && ! thread_assertions_configured_for_testing)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (! is_main_thread() && ! thread_assertions_configured_for_testing) {'), (3, 1, u'+    if (! is_main_thread() && ! thread_assertions_configured_for_testing)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (is_main_thread() && ! thread_assertions_configured_for_testing) {'), (3, 1, u'+    if (is_main_thread() && ! thread_assertions_configured_for_testing)')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: assert_is_background_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (is_main_thread() && ! thread_assertions_configured_for_testing) {'), (3, 1, u'+    if (is_main_thread() && ! thread_assertions_configured_for_testing)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    if (is_main_thread() && ! thread_assertions_configured_for_testing) {'), (3, 1, u'+    if (is_main_thread() && ! thread_assertions_configured_for_testing)')]
===========================================
Class:class completer_t { class completer_t 
Class:class completer_t { 
Class:class completion_autoload_t : public autoload_t { class completion_autoload_t : public autoload_t 
Class:class completion_autoload_t : public autoload_t { 
Class:class variable_entry_t { class variable_entry_t 
Class:class variable_entry_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-            assert(result != node->env.end());')]
===========================================
===========================================
Total add: 47
Total del: 67
Header: env_set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-            assert(result != node->env.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(104, 2, u'-            assert(result != node->env.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+            assert(result != node->env.end());')]
===========================================
===========================================
Total add: 75
Total del: 54
Header: env_set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+            assert(result != node->env.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+            assert(result != node->env.end());')]
===========================================
Class:class process_iterator_t { class process_iterator_t 
Class:class process_iterator_t { 
Class:class process_iterator_t { class process_iterator_t 
Class:class process_iterator_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  assert( pgr > 1 );'), (7, 1, u'+    assert(pgr > 1);')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: int _nl_msg_cat_cntr=0;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  assert( pgr > 1 );'), (7, 1, u'+    assert(pgr > 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-  assert( pgr > 1 );'), (7, 1, u'+    assert(pgr > 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert( ! strcmp(buff, tests[i].expected));'), (8, 1, u'+        assert(! strcmp(buff, tests[i].expected));')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert( ! strcmp(buff, tests[i].expected));'), (8, 1, u'+        assert(! strcmp(buff, tests[i].expected));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-        assert( ! strcmp(buff, tests[i].expected));'), (8, 1, u'+        assert(! strcmp(buff, tests[i].expected));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert( ! strcmp(buff1, buff2));'), (3, 1, u'+        assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert( ! strcmp(buff1, buff2));'), (3, 1, u'+        assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert( ! strcmp(buff1, buff2));'), (3, 1, u'+        assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ! strcmp(buff1, buff2));'), (3, 1, u'+    assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ! strcmp(buff1, buff2));'), (3, 1, u'+    assert(! strcmp(buff1, buff2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert( ! strcmp(buff1, buff2));'), (3, 1, u'+    assert(! strcmp(buff1, buff2));')]
===========================================
Class:class lru_node_test_t : public lru_node_t { class lru_node_test_t : public lru_node_t 
Class:class test_lru_t : public lru_cache_t<lru_node_test_t> { class test_lru_t : public lru_cache_t<lru_node_test_t> 
Class:class history_tests_t { class history_tests_t 
Class:class history_tests_t { 
Class:class function_autoload_t : public autoload_t { class function_autoload_t : public autoload_t 
Class:class function_autoload_t : public autoload_t { 
Class:class time_profiler_t { class time_profiler_t 
Class:class time_profiler_t { 
Class:class history_lru_node_t : public lru_node_t { class history_lru_node_t : public lru_node_t 
Class:class history_lru_cache_t : public lru_cache_t<history_lru_node_t> { class history_lru_cache_t : public lru_cache_t<history_lru_node_t> 
Class:class string_table_compare_t { class string_table_compare_t 
Class:class string_table_compare_t class string_table_compare_t
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-  ASSERT_IS_LOCKED(s_request_queue_lock);'), (18, 1, u'+    ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Total add: 8
Total del: 6
Header: iothread_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-  ASSERT_IS_LOCKED(s_request_queue_lock);'), (18, 1, u'+    ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 2, u'-  ASSERT_IS_LOCKED(s_request_queue_lock);'), (18, 1, u'+    ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert(threadPtr != NULL);'), (15, 1, u'+    assert(threadPtr != NULL);')]
===========================================
===========================================
Total add: 17
Total del: 15
Header: *dequeue_request
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert(threadPtr != NULL);'), (15, 1, u'+    assert(threadPtr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-  assert(threadPtr != NULL);'), (15, 1, u'+    assert(threadPtr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(thread != NULL);'), (12, 1, u'+        assert(thread != NULL);')]
===========================================
===========================================
Total add: 6
Total del: 4
Header: *iothread_worker
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(thread != NULL);'), (12, 1, u'+        assert(thread != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-    assert(thread != NULL);'), (12, 1, u'+        assert(thread != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    assert(err == 0);'), (24, 1, u'+        assert(err == 0);')]
===========================================
===========================================
Total add: 14
Total del: 11
Header: iothread_spawn_if_needed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    assert(err == 0);'), (24, 1, u'+        assert(err == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-    assert(err == 0);'), (24, 1, u'+        assert(err == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-  assert(threadIdx < IO_MAX_THREADS);'), (20, 1, u'+    assert(threadIdx < IO_MAX_THREADS);'), (23, 2, u'-  assert(thread->thread != 0);'), (25, 1, u'+    assert(thread->thread != 0);'), (34, 2, u'-  assert(s_active_thread_count > 0);'), (38, 1, u'+    assert(s_active_thread_count > 0);')]
===========================================
===========================================
Total add: 20
Total del: 17
Header: iothread_perform_base
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-  assert(threadIdx < IO_MAX_THREADS);'), (20, 1, u'+    assert(threadIdx < IO_MAX_THREADS);'), (23, 2, u'-  assert(thread->thread != 0);'), (25, 1, u'+    assert(thread->thread != 0);'), (34, 2, u'-  assert(s_active_thread_count > 0);'), (38, 1, u'+    assert(s_active_thread_count > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(17, 2, u'-  assert(threadIdx < IO_MAX_THREADS);'), (20, 1, u'+    assert(threadIdx < IO_MAX_THREADS);'), (23, 2, u'-  assert(thread->thread != 0);'), (25, 1, u'+    assert(thread->thread != 0);'), (34, 2, u'-  assert(s_active_thread_count > 0);'), (38, 1, u'+    assert(s_active_thread_count > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-  assert( cursor_pos >= 0 );'), (34, 1, u'+    assert(cursor_pos >= 0);'), (53, 2, u'-  assert( begin >= buff );'), (54, 2, u'-  assert( begin <= (buff+wcslen(buff) ) );'), (55, 2, u'-  assert( end >= begin );'), (56, 2, u'-  assert( end <= (buff+wcslen(buff) ) );'), (69, 1, u'+    assert(begin >= buff);'), (70, 1, u'+    assert(begin <= (buff+wcslen(buff)));'), (71, 1, u'+    assert(end >= begin);'), (72, 1, u'+    assert(end <= (buff+wcslen(buff)));'), (208, 2, u'-  assert( pa >= buff );'), (209, 2, u'-  assert( pa <= (buff+wcslen(buff) ) );'), (210, 2, u'-  assert( pb >= pa );'), (211, 2, u'-  assert( pb <= (buff+wcslen(buff) ) );'), (212, 1, u'+    assert(pa >= buff);'), (213, 1, u'+    assert(pa <= (buff+wcslen(buff)));'), (214, 1, u'+    assert(pb >= pa);'), (215, 1, u'+    assert(pb <= (buff+wcslen(buff)));')]
===========================================
===========================================
Total add: 94
Total del: 94
Header: parse_util_job_extent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-  assert( cursor_pos >= 0 );'), (34, 1, u'+    assert(cursor_pos >= 0);'), (53, 2, u'-  assert( begin >= buff );'), (54, 2, u'-  assert( begin <= (buff+wcslen(buff) ) );'), (55, 2, u'-  assert( end >= begin );'), (56, 2, u'-  assert( end <= (buff+wcslen(buff) ) );'), (69, 1, u'+    assert(begin >= buff);'), (70, 1, u'+    assert(begin <= (buff+wcslen(buff)));'), (71, 1, u'+    assert(end >= begin);'), (72, 1, u'+    assert(end <= (buff+wcslen(buff)));'), (208, 2, u'-  assert( pa >= buff );'), (209, 2, u'-  assert( pa <= (buff+wcslen(buff) ) );'), (210, 2, u'-  assert( pb >= pa );'), (211, 2, u'-  assert( pb <= (buff+wcslen(buff) ) );'), (212, 1, u'+    assert(pa >= buff);'), (213, 1, u'+    assert(pa <= (buff+wcslen(buff)));'), (214, 1, u'+    assert(pb >= pa);'), (215, 1, u'+    assert(pb <= (buff+wcslen(buff)));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(30, 2, u'-  assert( cursor_pos >= 0 );'), (34, 1, u'+    assert(cursor_pos >= 0);'), (53, 2, u'-  assert( begin >= buff );'), (54, 2, u'-  assert( begin <= (buff+wcslen(buff) ) );'), (55, 2, u'-  assert( end >= begin );'), (56, 2, u'-  assert( end <= (buff+wcslen(buff) ) );'), (69, 1, u'+    assert(begin >= buff);'), (70, 1, u'+    assert(begin <= (buff+wcslen(buff)));'), (71, 1, u'+    assert(end >= begin);'), (72, 1, u'+    assert(end <= (buff+wcslen(buff)));'), (208, 2, u'-  assert( pa >= buff );'), (209, 2, u'-  assert( pa <= (buff+wcslen(buff) ) );'), (210, 2, u'-  assert( pb >= pa );'), (211, 2, u'-  assert( pb <= (buff+wcslen(buff) ) );'), (212, 1, u'+    assert(pa >= buff);'), (213, 1, u'+    assert(pa <= (buff+wcslen(buff)));'), (214, 1, u'+    assert(pb >= pa);'), (215, 1, u'+    assert(pb <= (buff+wcslen(buff)));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(110, 2, u'-                        assert(current_block->type() == IF);'), (124, 1, u'+                    assert(current_block->type() == IF);')]
===========================================
===========================================
Total add: 137
Total del: 137
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(110, 2, u'-                        assert(current_block->type() == IF);'), (124, 1, u'+                    assert(current_block->type() == IF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(110, 2, u'-                        assert(current_block->type() == IF);'), (124, 1, u'+                    assert(current_block->type() == IF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(j->first_process != NULL);'), (13, 1, u'+    assert(j->first_process != NULL);')]
===========================================
===========================================
Total add: 46
Total del: 46
Header: job_is_stopped
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(j->first_process != NULL);'), (13, 1, u'+    assert(j->first_process != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 2, u'-\tassert(j->first_process != NULL);'), (13, 1, u'+    assert(j->first_process != NULL);')]
===========================================
Class:class background_highlight_context_t { class background_highlight_context_t 
Class:class background_highlight_context_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(983, 2, u'-\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (1218, 1, u'+                assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Total add: 640
Total del: 631
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(983, 2, u'-\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (1218, 1, u'+                assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(983, 2, u'-\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (1218, 1, u'+                assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
Class:class scoped_buffer_t { class scoped_buffer_t 
Class:class scoped_buffer_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert (directory != NULL);'), (13, 1, u'+    assert(directory != NULL);')]
===========================================
===========================================
Total add: 40
Total del: 36
Header: xdg_dir_time_list_free
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert (directory != NULL);'), (13, 1, u'+    assert(directory != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert (directory != NULL);'), (13, 1, u'+    assert(directory != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert (directory != NULL);'), (21, 1, u'+    assert(directory != NULL);')]
===========================================
===========================================
Total add: 26
Total del: 24
Header: xdg_check_file
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert (directory != NULL);'), (21, 1, u'+    assert(directory != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert (directory != NULL);'), (21, 1, u'+    assert(directory != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-  assert (file_name != NULL);'), (17, 1, u'+    assert(file_name != NULL);')]
===========================================
===========================================
Total add: 24
Total del: 24
Header: _xdg_glob_hash_node_lookup_file_name
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-  assert (file_name != NULL);'), (17, 1, u'+    assert(file_name != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 2, u'-  assert (file_name != NULL);'), (17, 1, u'+    assert(file_name != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert (glob_hash != NULL);'), (13, 2, u'-  assert (glob != NULL);'), (14, 1, u'+    assert(glob_hash != NULL);'), (15, 1, u'+    assert(glob != NULL);')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: _xdg_glob_determine_type
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert (glob_hash != NULL);'), (13, 2, u'-  assert (glob != NULL);'), (14, 1, u'+    assert(glob_hash != NULL);'), (15, 1, u'+    assert(glob != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-  assert (glob_hash != NULL);'), (13, 2, u'-  assert (glob != NULL);'), (14, 1, u'+    assert(glob_hash != NULL);'), (15, 1, u'+    assert(glob != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert (magic_file != NULL);'), (11, 2, u'-  assert (match != NULL);'), (23, 1, u'+    assert(magic_file != NULL);'), (24, 1, u'+    assert(match != NULL);')]
===========================================
===========================================
Total add: 37
Total del: 37
Header: _xdg_mime_magic_read_a_number
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert (magic_file != NULL);'), (11, 2, u'-  assert (match != NULL);'), (23, 1, u'+    assert(magic_file != NULL);'), (24, 1, u'+    assert(match != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 2, u'-  assert (magic_file != NULL);'), (11, 2, u'-  assert (match != NULL);'), (23, 1, u'+    assert(magic_file != NULL);'), (24, 1, u'+    assert(match != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  assert (magic_file != NULL);'), (75, 1, u'+    assert(magic_file != NULL);')]
===========================================
===========================================
Total add: 176
Total del: 176
Header: _xdg_mime_magic_parse_error
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  assert (magic_file != NULL);'), (75, 1, u'+    assert(magic_file != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 2, u'-  assert (magic_file != NULL);'), (75, 1, u'+    assert(magic_file != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    assert (0);'), (75, 1, u'+            assert(0);')]
===========================================
===========================================
Total add: 38
Total del: 38
Header: _xdg_mime_magic_matchlet_mirror
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    assert (0);'), (75, 1, u'+            assert(0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-    assert (0);'), (75, 1, u'+            assert(0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \tassert (main_thread_id != 0);'), (4, 1, u'+   assert (main_thread_id != 0);')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: setup_fork_guards
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \tassert (main_thread_id != 0);'), (4, 1, u'+   assert (main_thread_id != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'- \tassert (main_thread_id != 0);'), (4, 1, u'+   assert (main_thread_id != 0);')]
===========================================
Class:class sloppy 
Class:class sloppy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( pgr > 1 );'), (4, 1, u'+  assert( pgr > 1 );')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: killpg
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( pgr > 1 );'), (4, 1, u'+  assert( pgr > 1 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( pgr > 1 );'), (4, 1, u'+  assert( pgr > 1 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));'), (4, 1, u'+    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));'), (4, 1, u'+    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));'), (4, 1, u'+    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(suggestion == expected);'), (3, 1, u'+        assert(suggestion == expected);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: perform_one_autosuggestion_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(suggestion == expected);'), (3, 1, u'+        assert(suggestion == expected);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-        assert(suggestion == expected);'), (3, 1, u'+        assert(suggestion == expected);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(! prev_matches.empty());'), (3, 1, u'+    assert(! prev_matches.empty());')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: history_search_t::go_to_beginning
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(! prev_matches.empty());'), (3, 1, u'+    assert(! prev_matches.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(! prev_matches.empty());'), (3, 1, u'+    assert(! prev_matches.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT_IS_LOCKED(s_request_queue_lock);'), (3, 1, u'+  ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: iothread_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT_IS_LOCKED(s_request_queue_lock);'), (3, 1, u'+  ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tASSERT_IS_LOCKED(s_request_queue_lock);'), (3, 1, u'+  ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(threadPtr != NULL);'), (18, 1, u'+  assert(threadPtr != NULL);')]
===========================================
===========================================
Total add: 16
Total del: 16
Header: *dequeue_request
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(threadPtr != NULL);'), (18, 1, u'+  assert(threadPtr != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert(threadPtr != NULL);'), (18, 1, u'+  assert(threadPtr != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(thread != NULL);'), (8, 1, u'+    assert(thread != NULL);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: iothread_spawn_if_needed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(thread != NULL);'), (8, 1, u'+    assert(thread != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\t\tassert(thread != NULL);'), (8, 1, u'+    assert(thread != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-\t\tassert(err == 0);'), (28, 1, u'+    assert(err == 0);')]
===========================================
===========================================
Total add: 16
Total del: 16
Header: iothread_spawn_if_needed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-\t\tassert(err == 0);'), (28, 1, u'+    assert(err == 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-\t\tassert(err == 0);'), (28, 1, u'+    assert(err == 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(threadIdx < IO_MAX_THREADS);'), (7, 2, u'-\tassert(thread->thread != 0);'), (14, 2, u'-\tassert(s_active_thread_count > 0);'), (20, 1, u'+  assert(threadIdx < IO_MAX_THREADS);'), (23, 1, u'+  assert(thread->thread != 0);'), (30, 1, u'+  assert(s_active_thread_count > 0);')]
===========================================
===========================================
Total add: 17
Total del: 17
Header: iothread_service_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(threadIdx < IO_MAX_THREADS);'), (7, 2, u'-\tassert(thread->thread != 0);'), (14, 2, u'-\tassert(s_active_thread_count > 0);'), (20, 1, u'+  assert(threadIdx < IO_MAX_THREADS);'), (23, 1, u'+  assert(thread->thread != 0);'), (30, 1, u'+  assert(s_active_thread_count > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-\tassert(threadIdx < IO_MAX_THREADS);'), (7, 2, u'-\tassert(thread->thread != 0);'), (14, 2, u'-\tassert(s_active_thread_count > 0);'), (20, 1, u'+  assert(threadIdx < IO_MAX_THREADS);'), (23, 1, u'+  assert(thread->thread != 0);'), (30, 1, u'+  assert(s_active_thread_count > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: iothread_drain_all
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-\tassert( cursor_pos >= 0 );'), (39, 2, u'-\tassert( begin >= buff );'), (40, 2, u'-\tassert( begin <= (buff+wcslen(buff) ) );'), (41, 2, u'-\tassert( end >= begin );'), (42, 2, u'-\tassert( end <= (buff+wcslen(buff) ) );'), (122, 2, u'-\tassert( pa >= buff );'), (123, 2, u'-\tassert( pa <= (buff+wcslen(buff) ) );'), (124, 2, u'-\tassert( pb >= pa );'), (125, 2, u'-\tassert( pb <= (buff+wcslen(buff) ) );'), (136, 1, u'+  assert( cursor_pos >= 0 );'), (152, 1, u'+  assert( begin >= buff );'), (153, 1, u'+  assert( begin <= (buff+wcslen(buff) ) );'), (154, 1, u'+  assert( end >= begin );'), (155, 1, u'+  assert( end <= (buff+wcslen(buff) ) );'), (235, 1, u'+  assert( pa >= buff );'), (236, 1, u'+  assert( pa <= (buff+wcslen(buff) ) );'), (237, 1, u'+  assert( pb >= pa );'), (238, 1, u'+  assert( pb <= (buff+wcslen(buff) ) );')]
===========================================
===========================================
Total add: 118
Total del: 118
Header: parse_util_job_extent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-\tassert( cursor_pos >= 0 );'), (39, 2, u'-\tassert( begin >= buff );'), (40, 2, u'-\tassert( begin <= (buff+wcslen(buff) ) );'), (41, 2, u'-\tassert( end >= begin );'), (42, 2, u'-\tassert( end <= (buff+wcslen(buff) ) );'), (122, 2, u'-\tassert( pa >= buff );'), (123, 2, u'-\tassert( pa <= (buff+wcslen(buff) ) );'), (124, 2, u'-\tassert( pb >= pa );'), (125, 2, u'-\tassert( pb <= (buff+wcslen(buff) ) );'), (136, 1, u'+  assert( cursor_pos >= 0 );'), (152, 1, u'+  assert( begin >= buff );'), (153, 1, u'+  assert( begin <= (buff+wcslen(buff) ) );'), (154, 1, u'+  assert( end >= begin );'), (155, 1, u'+  assert( end <= (buff+wcslen(buff) ) );'), (235, 1, u'+  assert( pa >= buff );'), (236, 1, u'+  assert( pa <= (buff+wcslen(buff) ) );'), (237, 1, u'+  assert( pb >= pa );'), (238, 1, u'+  assert( pb <= (buff+wcslen(buff) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 2, u'-\tassert( cursor_pos >= 0 );'), (39, 2, u'-\tassert( begin >= buff );'), (40, 2, u'-\tassert( begin <= (buff+wcslen(buff) ) );'), (41, 2, u'-\tassert( end >= begin );'), (42, 2, u'-\tassert( end <= (buff+wcslen(buff) ) );'), (122, 2, u'-\tassert( pa >= buff );'), (123, 2, u'-\tassert( pa <= (buff+wcslen(buff) ) );'), (124, 2, u'-\tassert( pb >= pa );'), (125, 2, u'-\tassert( pb <= (buff+wcslen(buff) ) );'), (136, 1, u'+  assert( cursor_pos >= 0 );'), (152, 1, u'+  assert( begin >= buff );'), (153, 1, u'+  assert( begin <= (buff+wcslen(buff) ) );'), (154, 1, u'+  assert( end >= begin );'), (155, 1, u'+  assert( end <= (buff+wcslen(buff) ) );'), (235, 1, u'+  assert( pa >= buff );'), (236, 1, u'+  assert( pa <= (buff+wcslen(buff) ) );'), (237, 1, u'+  assert( pb >= pa );'), (238, 1, u'+  assert( pb <= (buff+wcslen(buff) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(j->first_process != NULL);'), (10, 1, u'+  assert(j->first_process != NULL);')]
===========================================
===========================================
Total add: 7
Total del: 7
Header: job_is_completed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(j->first_process != NULL);'), (10, 1, u'+  assert(j->first_process != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 2, u'-\tassert(j->first_process != NULL);'), (10, 1, u'+  assert(j->first_process != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(289, 2, u'-\t\tassert(data->buff_pos >= prefix_start);'), (310, 1, u'+    assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Total add: 172
Total del: 172
Header: handle_completions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(289, 2, u'-\t\tassert(data->buff_pos >= prefix_start);'), (310, 1, u'+    assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(289, 2, u'-\t\tassert(data->buff_pos >= prefix_start);'), (310, 1, u'+    assert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (103, 1, u'+          assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Total add: 74
Total del: 74
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (103, 1, u'+          assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(39, 2, u'-\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));'), (103, 1, u'+          assert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-\t  assert (0);'), (52, 1, u'+    assert (0);')]
===========================================
===========================================
Total add: 26
Total del: 26
Header: _xdg_mime_magic_read_magic_file
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-\t  assert (0);'), (52, 1, u'+    assert (0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 2, u'-\t  assert (0);'), (52, 1, u'+    assert (0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(width_by_offset.size() > 0 && width_by_offset.at(0) == 0);'), (66, 1, u'+    assert(left_prompt_width + right_prompt_width < screen_width);'), (161, 1, u'+    assert(done);')]
===========================================
===========================================
Total add: 162
Total del: 0
Header: is_dumb
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(width_by_offset.size() > 0 && width_by_offset.at(0) == 0);'), (66, 1, u'+    assert(left_prompt_width + right_prompt_width < screen_width);'), (161, 1, u'+    assert(done);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+    assert(width_by_offset.size() > 0 && width_by_offset.at(0) == 0);'), (66, 1, u'+    assert(left_prompt_width + right_prompt_width < screen_width);'), (161, 1, u'+    assert(done);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(screen_width - prompt_width >= 1);'), (8, 1, u'+        assert(screen_width - left_prompt_width >= 1);')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: s_write
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(screen_width - prompt_width >= 1);'), (8, 1, u'+        assert(screen_width - left_prompt_width >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-        assert(screen_width - prompt_width >= 1);'), (8, 1, u'+        assert(screen_width - left_prompt_width >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(! reset_cursor || reset_prompt);')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: s_reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(! reset_cursor || reset_prompt);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(! reset_cursor || reset_prompt);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(prompt_line_count >= 1);'), (9, 1, u'+        assert(prompt_line_count >= 1);')]
===========================================
===========================================
Total add: 9
Total del: 4
Header: s_reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(prompt_line_count >= 1);'), (9, 1, u'+        assert(prompt_line_count >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(prompt_line_count >= 1);'), (9, 1, u'+        assert(prompt_line_count >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(base == 8 || base == 16);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: builtin_functions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(base == 8 || base == 16);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    assert(base == 8 || base == 16);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(prompt_line_count >= 1);')]
===========================================
===========================================
Total add: 11
Total del: 4
Header: s_reset
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(prompt_line_count >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    assert(prompt_line_count >= 1);')]
===========================================
Class: class move_word_state_machine_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+                        assert(current_block->type() == IF);')]
===========================================
===========================================
Total add: 18
Total del: 1
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+                        assert(current_block->type() == IF);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+                        assert(current_block->type() == IF);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                assert(false); //should never get here')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: builtin_end
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                assert(false); //should never get here')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                assert(false); //should never get here')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 1, u'+    assert(type == BEGIN || type == TOP || type == SUBST);')]
===========================================
===========================================
Total add: 70
Total del: 4
Header: block_t::~block_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 1, u'+    assert(type == BEGIN || type == TOP || type == SUBST);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(70, 1, u'+    assert(type == BEGIN || type == TOP || type == SUBST);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (27, 1, u'+    assert(out_chain.empty());')]
===========================================
===========================================
Total add: 117
Total del: 0
Header: has_fd
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (27, 1, u'+    assert(out_chain.empty());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(26, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (27, 1, u'+    assert(out_chain.empty());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(opt_index >= 0 && opt_index < sizeof long_options / sizeof *long_options);'), (3, 1, u'+                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: builtin_contains
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(opt_index >= 0 && opt_index < sizeof long_options / sizeof *long_options);'), (3, 1, u'+                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                assert(opt_index >= 0 && opt_index < sizeof long_options / sizeof *long_options);'), (3, 1, u'+                assert(opt_index >= 0 && (size_t)opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 116
Total del: 112
Header: find_process
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(screen_width - prompt_width >= 1);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: s_write
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(screen_width - prompt_width >= 1);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+        assert(screen_width - prompt_width >= 1);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(pos >= tok_pos);')]
===========================================
===========================================
Total add: 1
Total del: 2
Header: tokenize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(pos >= tok_pos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-                    assert(pos >= tok_pos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: exec_close
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Total add: 5
Total del: 5
Header: *reader_readline
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+\t\t\t\t\tassert(base_pos_new != (size_t)(-1) && base_pos_old != (size_t)(-1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                assert(pos >= item_begin);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: expand_brackets
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                assert(pos >= item_begin);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                assert(pos >= item_begin);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                    assert(pos >= tok_pos);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: tokenize
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                    assert(pos >= tok_pos);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+                    assert(pos >= tok_pos);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(data->buff_pos > 0);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: insert_string
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(data->buff_pos > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(data->buff_pos > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                                    assert(in_pos > 0);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: *unescape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                                    assert(in_pos > 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+                                    assert(in_pos > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(type == type_named || type == type_rgb);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: rgb_color_t::to_term256_index
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(type == type_named || type == type_rgb);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(type == type_named || type == type_rgb);')]
===========================================
Class:class process_iterator_t { class process_iterator_t 
Class:class sloppy 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(is_potential_path(L"al", wds, true, &tmp) && tmp == L"alpha/");'), (3, 2, u'-    assert(is_potential_path(L"alpha/", wds, true, &tmp) && tmp == L"alpha/");'), (4, 2, u'-    assert(is_potential_path(L"aard", wds, false, &tmp) && tmp == L"aardvark");'), (5, 1, u'+    assert(is_potential_path(L"al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (6, 1, u'+    assert(is_potential_path(L"alpha/", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (7, 1, u'+    assert(is_potential_path(L"aard", wds, 0, &tmp) && tmp == L"aardvark");'), (9, 2, u'-    assert(! is_potential_path(L"balpha/", wds, true, &tmp));'), (10, 2, u'-    assert(! is_potential_path(L"aard", wds, true, &tmp));'), (11, 2, u'-    assert(! is_potential_path(L"aarde", wds, true, &tmp));'), (12, 2, u'-    assert(! is_potential_path(L"aarde", wds, false, &tmp));'), (13, 1, u'+    assert(! is_potential_path(L"balpha/", wds, PATH_REQUIRE_DIR, &tmp));'), (14, 1, u'+    assert(! is_potential_path(L"aard", wds, PATH_REQUIRE_DIR, &tmp));'), (15, 1, u'+    assert(! is_potential_path(L"aarde", wds, PATH_REQUIRE_DIR, &tmp));'), (16, 1, u'+    assert(! is_potential_path(L"aarde", wds, 0, &tmp));'), (18, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, false, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (19, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, true, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (20, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, false, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (21, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (22, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (23, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (25, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, true, &tmp));'), (26, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, false, &tmp));'), (27, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, false, &tmp));'), (28, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, PATH_REQUIRE_DIR, &tmp));'), (29, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, 0, &tmp));'), (30, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, 0, &tmp));'), (32, 2, u'-    assert(is_potential_path(L"/usr", wds, true, &tmp) && tmp == L"/usr/");'), (33, 1, u'+    assert(is_potential_path(L"/usr", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
Total add: 14
Total del: 14
Header: test_is_potential_path
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(is_potential_path(L"al", wds, true, &tmp) && tmp == L"alpha/");'), (3, 2, u'-    assert(is_potential_path(L"alpha/", wds, true, &tmp) && tmp == L"alpha/");'), (4, 2, u'-    assert(is_potential_path(L"aard", wds, false, &tmp) && tmp == L"aardvark");'), (5, 1, u'+    assert(is_potential_path(L"al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (6, 1, u'+    assert(is_potential_path(L"alpha/", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (7, 1, u'+    assert(is_potential_path(L"aard", wds, 0, &tmp) && tmp == L"aardvark");'), (9, 2, u'-    assert(! is_potential_path(L"balpha/", wds, true, &tmp));'), (10, 2, u'-    assert(! is_potential_path(L"aard", wds, true, &tmp));'), (11, 2, u'-    assert(! is_potential_path(L"aarde", wds, true, &tmp));'), (12, 2, u'-    assert(! is_potential_path(L"aarde", wds, false, &tmp));'), (13, 1, u'+    assert(! is_potential_path(L"balpha/", wds, PATH_REQUIRE_DIR, &tmp));'), (14, 1, u'+    assert(! is_potential_path(L"aard", wds, PATH_REQUIRE_DIR, &tmp));'), (15, 1, u'+    assert(! is_potential_path(L"aarde", wds, PATH_REQUIRE_DIR, &tmp));'), (16, 1, u'+    assert(! is_potential_path(L"aarde", wds, 0, &tmp));'), (18, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, false, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (19, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, true, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (20, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, false, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (21, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (22, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (23, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (25, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, true, &tmp));'), (26, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, false, &tmp));'), (27, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, false, &tmp));'), (28, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, PATH_REQUIRE_DIR, &tmp));'), (29, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, 0, &tmp));'), (30, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, 0, &tmp));'), (32, 2, u'-    assert(is_potential_path(L"/usr", wds, true, &tmp) && tmp == L"/usr/");'), (33, 1, u'+    assert(is_potential_path(L"/usr", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(is_potential_path(L"al", wds, true, &tmp) && tmp == L"alpha/");'), (3, 2, u'-    assert(is_potential_path(L"alpha/", wds, true, &tmp) && tmp == L"alpha/");'), (4, 2, u'-    assert(is_potential_path(L"aard", wds, false, &tmp) && tmp == L"aardvark");'), (5, 1, u'+    assert(is_potential_path(L"al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (6, 1, u'+    assert(is_potential_path(L"alpha/", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"alpha/");'), (7, 1, u'+    assert(is_potential_path(L"aard", wds, 0, &tmp) && tmp == L"aardvark");'), (9, 2, u'-    assert(! is_potential_path(L"balpha/", wds, true, &tmp));'), (10, 2, u'-    assert(! is_potential_path(L"aard", wds, true, &tmp));'), (11, 2, u'-    assert(! is_potential_path(L"aarde", wds, true, &tmp));'), (12, 2, u'-    assert(! is_potential_path(L"aarde", wds, false, &tmp));'), (13, 1, u'+    assert(! is_potential_path(L"balpha/", wds, PATH_REQUIRE_DIR, &tmp));'), (14, 1, u'+    assert(! is_potential_path(L"aard", wds, PATH_REQUIRE_DIR, &tmp));'), (15, 1, u'+    assert(! is_potential_path(L"aarde", wds, PATH_REQUIRE_DIR, &tmp));'), (16, 1, u'+    assert(! is_potential_path(L"aarde", wds, 0, &tmp));'), (18, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, false, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (19, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, true, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (20, 2, u'-    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, false, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (21, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (22, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/al", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/tmp/is_potential_path_test/alpha/");'), (23, 1, u'+    assert(is_potential_path(L"/tmp/is_potential_path_test/aardv", wds, 0, &tmp) && tmp == L"/tmp/is_potential_path_test/aardvark");'), (25, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, true, &tmp));'), (26, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, false, &tmp));'), (27, 2, u'-    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, false, &tmp));'), (28, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/aardvark", wds, PATH_REQUIRE_DIR, &tmp));'), (29, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/al/", wds, 0, &tmp));'), (30, 1, u'+    assert(! is_potential_path(L"/tmp/is_potential_path_test/ar", wds, 0, &tmp));'), (32, 2, u'-    assert(is_potential_path(L"/usr", wds, true, &tmp) && tmp == L"/usr/");'), (33, 1, u'+    assert(is_potential_path(L"/usr", wds, PATH_REQUIRE_DIR, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        assert(success);'), (19, 1, u'+        assert(suggestion == expected);')]
===========================================
===========================================
Total add: 78
Total del: 3
Header: test_colors
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        assert(success);'), (19, 1, u'+        assert(suggestion == expected);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+        assert(success);'), (19, 1, u'+        assert(suggestion == expected);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tassert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Total add: 6
Total del: 12
Header: handle_completions
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tassert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+\t\tassert(data->buff_pos >= prefix_start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(outSuggestionOK != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: autosuggest_suggest_special
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(outSuggestionOK != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 2, u'-    assert(outSuggestionOK != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(run_test_test(0, L"foo"));'), (6, 1, u'+    assert(run_test_test(0, L"foo -a bar"));')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(run_test_test(0, L"foo"));'), (6, 1, u'+    assert(run_test_test(0, L"foo -a bar"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    assert(run_test_test(0, L"foo"));'), (6, 1, u'+    assert(run_test_test(0, L"foo -a bar"));')]
===========================================
Class: class history_item_data_deleter_t { class history_item_data_deleter_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(is_potential_path(L"/usr", wds, true, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: test_is_potential_path
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(is_potential_path(L"/usr", wds, true, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(is_potential_path(L"/usr", wds, true, &tmp) && tmp == L"/usr/");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+static bool thread_assertions_configured_for_testing = false;')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: struct termios shell_modes;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+static bool thread_assertions_configured_for_testing = false;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+static bool thread_assertions_configured_for_testing = false;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void configure_thread_assertions_for_testing(void) {'), (3, 1, u'+    thread_assertions_configured_for_testing = true;')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: set_main_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void configure_thread_assertions_for_testing(void) {'), (3, 1, u'+    thread_assertions_configured_for_testing = true;')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+void configure_thread_assertions_for_testing(void) {'), (3, 1, u'+    thread_assertions_configured_for_testing = true;')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (! is_main_thread() && ! thread_assertions_configured_for_testing) {')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: assert_is_main_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (! is_main_thread() && ! thread_assertions_configured_for_testing) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (! is_main_thread() && ! thread_assertions_configured_for_testing) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (is_main_thread() && ! thread_assertions_configured_for_testing) {')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: assert_is_background_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (is_main_thread() && ! thread_assertions_configured_for_testing) {')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    if (is_main_thread() && ! thread_assertions_configured_for_testing) {')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    configure_thread_assertions_for_testing();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: main
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    configure_thread_assertions_for_testing();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    configure_thread_assertions_for_testing();')]
===========================================
Class: class autosuggest_parsed_command_t { class autosuggest_parsed_command_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 53
Total del: 164
Header: class autosuggest_parsed_command_t {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
Class: class autosuggest_parsed_command_t { class autosuggest_parsed_command_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-                assert(data->buff_pos >= start);')]
===========================================
===========================================
Total add: 2
Total del: 16
Header: struct autosuggestion_context_t {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-                assert(data->buff_pos >= start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 2, u'-                assert(data->buff_pos >= start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void assert_is_locked(void *vmutex, const char *who)'), (3, 1, u'+void assert_is_locked(void *vmutex, const char *who, const char *caller)')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: assert_is_background_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void assert_is_locked(void *vmutex, const char *who)'), (3, 1, u'+void assert_is_locked(void *vmutex, const char *who, const char *caller)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-void assert_is_locked(void *vmutex, const char *who)'), (3, 1, u'+void assert_is_locked(void *vmutex, const char *who, const char *caller)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+            assert(should_contain == does_contain);'), (57, 1, u'+        assert(history_contains(everything, texts[i]));')]
===========================================
===========================================
Total add: 64
Total del: 0
Header: history_tests_t::test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+            assert(should_contain == does_contain);'), (57, 1, u'+        assert(history_contains(everything, texts[i]));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(49, 1, u'+            assert(should_contain == does_contain);'), (57, 1, u'+        assert(history_contains(everything, texts[i]));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: env_set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: env_universal_barrier
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: parser_t::eval_job
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 10
Total del: 0
Header: get_is_interactive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(opt_index >= 0 && opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: builtin_contains
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(opt_index >= 0 && opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+                assert(opt_index >= 0 && opt_index < sizeof long_options / sizeof *long_options);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(result != node->env.end());')]
===========================================
===========================================
Total add: 3
Total del: 8
Header: env_set
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(result != node->env.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+            assert(result != node->env.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(in != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: io_untransmogrify
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(in != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(in != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(j->first_process != NULL);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: job_is_completed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(j->first_process != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert(j->first_process != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(data != NULL);')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: completion_insert
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(data != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    assert(data != NULL);')]
===========================================
Class:  class scoped_buffer_t { class scoped_buffer_t 
Class:         class parenthetical_expression : public expression {     class parenthetical_expression : public expression 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+        assert(close_index <= end);')]
===========================================
===========================================
Total add: 31
Total del: 0
Header: namespace test_expressions {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+        assert(close_index <= end);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(21, 1, u'+        assert(close_index <= end);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(result->range.end <= args.size());')]
===========================================
===========================================
Total add: 13
Total del: 0
Header: namespace test_expressions {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(result->range.end <= args.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+            assert(result->range.end <= args.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(run_test_test(1, L"( 0 = 0 -o  0 = 1 ) -a 0 = 2"));'), (4, 1, u'+    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(run_test_test(1, L"( 0 = 0 -o  0 = 1 ) -a 0 = 2"));'), (4, 1, u'+    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    assert(run_test_test(1, L"( 0 = 0 -o  0 = 1 ) -a 0 = 2"));'), (4, 1, u'+    assert(run_test_test(0, L"0 = 0 -o ( 0 = 1 -a 0 = 2 )"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            assert(param_idx < sizeof params / sizeof *params);')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: debug_safe
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            assert(param_idx < sizeof params / sizeof *params);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+            assert(param_idx < sizeof params / sizeof *params);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: wopen_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: wopen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"-d /bin -a 5 -eq 3"));'), (5, 1, u'+    assert(run_test_test(0, L"-d /bin -o 5 -eq 3"));'), (6, 1, u'+    assert(run_test_test(0, L"-d /bin -a ! 5 -eq 3"));')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: test_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"-d /bin -a 5 -eq 3"));'), (5, 1, u'+    assert(run_test_test(0, L"-d /bin -o 5 -eq 3"));'), (6, 1, u'+    assert(run_test_test(0, L"-d /bin -a ! 5 -eq 3"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(run_test_test(1, L"-d /bin -a 5 -eq 3"));'), (5, 1, u'+    assert(run_test_test(0, L"-d /bin -o 5 -eq 3"));'), (6, 1, u'+    assert(run_test_test(0, L"-d /bin -a ! 5 -eq 3"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: &get_stderr_buffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class:    class expression;
Class:    class test_parser {     class test_parser 
Class:           class expression {     class expression 
Class:          class unary_primary : public expression {     class unary_primary : public expression 
Class:          class binary_primary : public expression {     class binary_primary : public expression 
Class:          class unary_operator : public expression {     class unary_operator : public expression 
Class:          class combining_expression : public expression {     class combining_expression : public expression 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    assert(run_test_test(0, L"5 -ne 6"));'), (33, 1, u'+    assert(run_test_test(0, L"5 -eq 5"));'), (34, 1, u'+    assert(run_test_test(0, L"0 -eq 0"));'), (35, 1, u'+    assert(run_test_test(0, L"-1 -eq -1"));'), (36, 1, u'+    assert(run_test_test(0, L"1 -ne -1"));'), (37, 1, u'+    assert(run_test_test(1, L"-1 -ne -1"));'), (38, 1, u'+    assert(run_test_test(0, L"abc != def"));'), (39, 1, u'+    assert(run_test_test(1, L"abc = def"));'), (40, 1, u'+    assert(run_test_test(0, L"5 -le 10"));'), (41, 1, u'+    assert(run_test_test(0, L"10 -le 10"));'), (42, 1, u'+    assert(run_test_test(1, L"20 -le 10"));'), (43, 1, u'+    assert(run_test_test(0, L"-1 -le 0"));'), (44, 1, u'+    assert(run_test_test(1, L"0 -le -1"));'), (45, 1, u'+    assert(run_test_test(0, L"15 -ge 10"));'), (46, 1, u'+    assert(run_test_test(0, L"15 -ge 10"));'), (47, 1, u'+    assert(run_test_test(1, L"! 15 -ge 10"));'), (48, 1, u'+    assert(run_test_test(0, L"! ! 15 -ge 10"));'), (50, 1, u'+    assert(run_test_test(0, L"0 -ne 1 -a 0 -eq 0"));'), (51, 1, u'+    assert(run_test_test(0, L"0 -ne 1 -a -n 5"));'), (52, 1, u'+    assert(run_test_test(0, L"-n 5 -a 10 -gt 5"));'), (53, 1, u'+    assert(run_test_test(0, L"-n 3 -a -n 5"));'), (62, 1, u'+    assert(run_test_test(0, L"0 = 0 -o 0 = 1 -a 0 = 2"));'), (63, 1, u'+    assert(run_test_test(0, L"-n 5 -o 0 = 1 -a 0 = 2"));'), (66, 1, u'+    assert(run_test_test(0, L"-e /bin/ls"));'), (67, 1, u'+    assert(run_test_test(1, L"-e /bin/ls_not_a_path"));'), (68, 1, u'+    assert(run_test_test(0, L"-x /bin/ls"));'), (69, 1, u'+    assert(run_test_test(1, L"-x /bin/ls_not_a_path"));'), (70, 1, u'+    assert(run_test_test(0, L"-d /bin/"));'), (71, 1, u'+    assert(run_test_test(1, L"-d /bin/ls"));')]
===========================================
===========================================
Total add: 73
Total del: 0
Header: test_path
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    assert(run_test_test(0, L"5 -ne 6"));'), (33, 1, u'+    assert(run_test_test(0, L"5 -eq 5"));'), (34, 1, u'+    assert(run_test_test(0, L"0 -eq 0"));'), (35, 1, u'+    assert(run_test_test(0, L"-1 -eq -1"));'), (36, 1, u'+    assert(run_test_test(0, L"1 -ne -1"));'), (37, 1, u'+    assert(run_test_test(1, L"-1 -ne -1"));'), (38, 1, u'+    assert(run_test_test(0, L"abc != def"));'), (39, 1, u'+    assert(run_test_test(1, L"abc = def"));'), (40, 1, u'+    assert(run_test_test(0, L"5 -le 10"));'), (41, 1, u'+    assert(run_test_test(0, L"10 -le 10"));'), (42, 1, u'+    assert(run_test_test(1, L"20 -le 10"));'), (43, 1, u'+    assert(run_test_test(0, L"-1 -le 0"));'), (44, 1, u'+    assert(run_test_test(1, L"0 -le -1"));'), (45, 1, u'+    assert(run_test_test(0, L"15 -ge 10"));'), (46, 1, u'+    assert(run_test_test(0, L"15 -ge 10"));'), (47, 1, u'+    assert(run_test_test(1, L"! 15 -ge 10"));'), (48, 1, u'+    assert(run_test_test(0, L"! ! 15 -ge 10"));'), (50, 1, u'+    assert(run_test_test(0, L"0 -ne 1 -a 0 -eq 0"));'), (51, 1, u'+    assert(run_test_test(0, L"0 -ne 1 -a -n 5"));'), (52, 1, u'+    assert(run_test_test(0, L"-n 5 -a 10 -gt 5"));'), (53, 1, u'+    assert(run_test_test(0, L"-n 3 -a -n 5"));'), (62, 1, u'+    assert(run_test_test(0, L"0 = 0 -o 0 = 1 -a 0 = 2"));'), (63, 1, u'+    assert(run_test_test(0, L"-n 5 -o 0 = 1 -a 0 = 2"));'), (66, 1, u'+    assert(run_test_test(0, L"-e /bin/ls"));'), (67, 1, u'+    assert(run_test_test(1, L"-e /bin/ls_not_a_path"));'), (68, 1, u'+    assert(run_test_test(0, L"-x /bin/ls"));'), (69, 1, u'+    assert(run_test_test(1, L"-x /bin/ls_not_a_path"));'), (70, 1, u'+    assert(run_test_test(0, L"-d /bin/"));'), (71, 1, u'+    assert(run_test_test(1, L"-d /bin/ls"));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(32, 1, u'+    assert(run_test_test(0, L"5 -ne 6"));'), (33, 1, u'+    assert(run_test_test(0, L"5 -eq 5"));'), (34, 1, u'+    assert(run_test_test(0, L"0 -eq 0"));'), (35, 1, u'+    assert(run_test_test(0, L"-1 -eq -1"));'), (36, 1, u'+    assert(run_test_test(0, L"1 -ne -1"));'), (37, 1, u'+    assert(run_test_test(1, L"-1 -ne -1"));'), (38, 1, u'+    assert(run_test_test(0, L"abc != def"));'), (39, 1, u'+    assert(run_test_test(1, L"abc = def"));'), (40, 1, u'+    assert(run_test_test(0, L"5 -le 10"));'), (41, 1, u'+    assert(run_test_test(0, L"10 -le 10"));'), (42, 1, u'+    assert(run_test_test(1, L"20 -le 10"));'), (43, 1, u'+    assert(run_test_test(0, L"-1 -le 0"));'), (44, 1, u'+    assert(run_test_test(1, L"0 -le -1"));'), (45, 1, u'+    assert(run_test_test(0, L"15 -ge 10"));'), (46, 1, u'+    assert(run_test_test(0, L"15 -ge 10"));'), (47, 1, u'+    assert(run_test_test(1, L"! 15 -ge 10"));'), (48, 1, u'+    assert(run_test_test(0, L"! ! 15 -ge 10"));'), (50, 1, u'+    assert(run_test_test(0, L"0 -ne 1 -a 0 -eq 0"));'), (51, 1, u'+    assert(run_test_test(0, L"0 -ne 1 -a -n 5"));'), (52, 1, u'+    assert(run_test_test(0, L"-n 5 -a 10 -gt 5"));'), (53, 1, u'+    assert(run_test_test(0, L"-n 3 -a -n 5"));'), (62, 1, u'+    assert(run_test_test(0, L"0 = 0 -o 0 = 1 -a 0 = 2"));'), (63, 1, u'+    assert(run_test_test(0, L"-n 5 -o 0 = 1 -a 0 = 2"));'), (66, 1, u'+    assert(run_test_test(0, L"-e /bin/ls"));'), (67, 1, u'+    assert(run_test_test(1, L"-e /bin/ls_not_a_path"));'), (68, 1, u'+    assert(run_test_test(0, L"-x /bin/ls"));'), (69, 1, u'+    assert(run_test_test(1, L"-x /bin/ls_not_a_path"));'), (70, 1, u'+    assert(run_test_test(0, L"-d /bin/"));'), (71, 1, u'+    assert(run_test_test(1, L"-d /bin/ls"));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 5
Total del: 1
Header: iothread_drain_all
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 3
Header: try_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 4
Total del: 18
Header: kill_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(20, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 8
Total del: 4
Header: *kill_yank_rotate
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert( ! strcmp(buff1, buff2));')]
===========================================
===========================================
Total add: 9
Total del: 2
Header: test_format
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert( ! strcmp(buff1, buff2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(13, 1, u'+    assert( ! strcmp(buff1, buff2));')]
===========================================
Class:class string_table_compare_t { class string_table_compare_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: builtin_source
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *io_transmogrify
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 30
Total del: 13
Header: *wfreopen
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(40, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                assert(data->buff_pos >= start);')]
===========================================
===========================================
Total add: 17
Total del: 2
Header: struct autosuggestion_context_t {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                assert(data->buff_pos >= start);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(16, 1, u'+                assert(data->buff_pos >= start);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: history_t::save_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+                    assert(0);'), (49, 1, u'+                assert(WIFEXITED(status) && 0 == WEXITSTATUS(status));')]
===========================================
===========================================
Total add: 51
Total del: 2
Header: test_tok
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+                    assert(0);'), (49, 1, u'+                assert(WIFEXITED(status) && 0 == WEXITSTATUS(status));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(47, 1, u'+                    assert(0);'), (49, 1, u'+                assert(WIFEXITED(status) && 0 == WEXITSTATUS(status));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: iothread_drain_all
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_NOT_FORKED_CHILD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+        assert( ! strcmp(buff, tests[i].expected));'), (29, 1, u'+        assert( ! strcmp(buff1, buff2));')]
===========================================
===========================================
Total add: 25
Total del: 3
Header: test_escape
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+        assert( ! strcmp(buff, tests[i].expected));'), (29, 1, u'+        assert( ! strcmp(buff1, buff2));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(22, 1, u'+        assert( ! strcmp(buff, tests[i].expected));'), (29, 1, u'+        assert( ! strcmp(buff1, buff2));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: reader_pop_current_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\tASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Total add: 12
Total del: 10
Header: iothread_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\tASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+\tASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: *iothread_worker
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_LOCKED(s_request_queue_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: iothread_port
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (5, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 8
Total del: 0
Header: iothread_service_completion
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (5, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (5, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+void assert_is_not_forked_child(const char *who)')]
===========================================
===========================================
Total add: 8
Total del: 1
Header: assert_is_main_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+void assert_is_not_forked_child(const char *who)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+void assert_is_not_forked_child(const char *who)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(! locked);'), (5, 1, u'+    assert(! is_forked_child());'), (11, 1, u'+    assert(locked);'), (12, 1, u'+    assert(! is_forked_child());')]
===========================================
===========================================
Total add: 22
Total del: 0
Header: assert_is_locked
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(! locked);'), (5, 1, u'+    assert(! is_forked_child());'), (11, 1, u'+    assert(locked);'), (12, 1, u'+    assert(! is_forked_child());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(! locked);'), (5, 1, u'+    assert(! is_forked_child());'), (11, 1, u'+    assert(locked);'), (12, 1, u'+    assert(! is_forked_child());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: exec_fork
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: iothread_spawn_if_needed
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (3, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: &parser_t::principal_parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_NOT_FORKED_CHILD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 10
Header: job_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(loc != jobs.end());'), (8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: job_promote
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(loc != jobs.end());'), (8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 2, u'-    assert(loc != jobs.end());'), (8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 7
Header: *job_get_from_pid
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (15, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (20, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (25, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);')]
===========================================
===========================================
Total add: 24
Total del: 0
Header: typedef std::list<completion_entry_t *> completion_entry_list_t;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (15, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (20, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (25, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (15, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (20, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);'), (25, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: complete_remove_entry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_LOCKED(completion_entry_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: exec_subshell_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: exec_subshell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: exec_subshell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 6
Total del: 0
Header: int no_exec=0;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: proc_push_interactive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: proc_pop_interactive
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class: class completer_t { class completer_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 11
Total del: 0
Header: condition_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+void assert_is_locked(void *vmutex, const char *who)')]
===========================================
===========================================
Total add: 11
Total del: 1
Header: assert_is_background_thread
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+void assert_is_locked(void *vmutex, const char *who)')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+void assert_is_locked(void *vmutex, const char *who)')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
Total add: 3
Total del: 5
Header: condition_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
Total add: 3
Total del: 5
Header: *complete_find_exact_entry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: complete_remove_entry
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_LOCKED(completion_lock);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: complete_cmd_desc
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 0
Total del: 2
Header: *wgettext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (15, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 13
Total del: 4
Header: int builtin_err_redirect;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (15, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (15, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
Total add: 4
Total del: 10
Header: highlight_shell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(buffstr.size() == color.size());')]
===========================================
===========================================
Total add: 2
Total del: 2
Header: highlight_universal_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(buffstr.size() == color.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(buffstr.size() == color.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
Total add: 3
Total del: 6
Header: highlight_universal_internal
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(buff.size() == color.size());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        assert(end >= subbuff);')]
===========================================
===========================================
Total add: 15
Total del: 2
Header: highlight_shell
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        assert(end >= subbuff);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(15, 1, u'+        assert(end >= subbuff);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: signal_block
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: signal_unblock
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();'), (4, 1, u'+    assert(outSuggestionOK != NULL);')]
===========================================
===========================================
Total add: 143
Total del: 0
Header: has_expand_reserved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();'), (4, 1, u'+    assert(outSuggestionOK != NULL);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();'), (4, 1, u'+    assert(outSuggestionOK != NULL);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u"+        assert(wd[len - 1] == L'/');")]
===========================================
===========================================
Total add: 61
Total del: 2
Header: *path_allocate_cdpath
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u"+        assert(wd[len - 1] == L'/');")]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u"+        assert(wd[len - 1] == L'/');")]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 26
Total del: 1
Header: struct autosuggestion_context_t {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+        ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 16
Header: struct autosuggestion_context_t {
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(ctx->colors.size() == data->command_length());')]
===========================================
===========================================
Total add: 2
Total del: 6
Header: highlight_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(ctx->colors.size() == data->command_length());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+        assert(ctx->colors.size() == data->command_length());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: tok_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+        ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 0
Header: *wgettext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class:class history_tests_t { class history_tests_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_item() == L"Alpha");'), (3, 1, u'+    assert(search1.current_string() == L"Alpha");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_item() == L"Alpha");'), (3, 1, u'+    assert(search1.current_string() == L"Alpha");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_item() == L"Alpha");'), (3, 1, u'+    assert(search1.current_string() == L"Alpha");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_item() == L"Beta");'), (3, 1, u'+    assert(search2.current_string() == L"Beta");'), (31, 1, u'+        assert(! item.empty());'), (34, 1, u'+    assert(before.size() == after.size());'), (37, 1, u'+        assert(bef.contents == aft.contents);'), (38, 1, u'+        assert(bef.creation_timestamp == aft.creation_timestamp);'), (39, 1, u'+        assert(bef.required_paths == aft.required_paths);')]
===========================================
===========================================
Total add: 38
Total del: 1
Header: test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_item() == L"Beta");'), (3, 1, u'+    assert(search2.current_string() == L"Beta");'), (31, 1, u'+        assert(! item.empty());'), (34, 1, u'+    assert(before.size() == after.size());'), (37, 1, u'+        assert(bef.contents == aft.contents);'), (38, 1, u'+        assert(bef.creation_timestamp == aft.creation_timestamp);'), (39, 1, u'+        assert(bef.required_paths == aft.required_paths);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_item() == L"Beta");'), (3, 1, u'+    assert(search2.current_string() == L"Beta");'), (31, 1, u'+        assert(! item.empty());'), (34, 1, u'+    assert(before.size() == after.size());'), (37, 1, u'+        assert(bef.contents == aft.contents);'), (38, 1, u'+        assert(bef.creation_timestamp == aft.creation_timestamp);'), (39, 1, u'+        assert(bef.required_paths == aft.required_paths);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        ASSERT_IS_BACKGROUND_THREAD();'), (24, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 16
Total del: 21
Header: history_sanity_check
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        ASSERT_IS_BACKGROUND_THREAD();'), (24, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(19, 2, u'-        ASSERT_IS_BACKGROUND_THREAD();'), (24, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: proc_fire_event
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 46
Total del: 1
Header: run_pager
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(202, 1, u'+    assert(type == type_rgb);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: *wgettext
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: condition_cache_clear
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class: class wcstring_adapter { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 3
Header: builtin_push_io
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: builtin_pop_io
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: *input_terminfo_get_sequence
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: *parser_t::is_function
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: set_color
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert( data->buff_pos >= 0 );'), (9, 2, u'-\tassert( data->buff_pos <= data->buff_len );'), (10, 2, u'-\tassert( len >= 0 );')]
===========================================
===========================================
Total add: 5
Total del: 23
Header: remove_backward
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert( data->buff_pos >= 0 );'), (9, 2, u'-\tassert( data->buff_pos <= data->buff_len );'), (10, 2, u'-\tassert( len >= 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 2, u'-\tassert( data->buff_pos >= 0 );'), (9, 2, u'-\tassert( data->buff_pos <= data->buff_len );'), (10, 2, u'-\tassert( len >= 0 );')]
===========================================
Class:class test_lru_t : public lru_cache_t<lru_node_t> { class test_lru_t : public lru_cache_t<lru_node_t> 
Class:class lru_node_test_t : public lru_node_t { class lru_node_test_t : public lru_node_t 
Class: class test_lru_t : public lru_cache_t<lru_node_test_t> { class test_lru_t : public lru_cache_t<lru_node_test_t> 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_item().str() == L"Alpha");'), (3, 1, u'+    assert(search1.current_item() == L"Alpha");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_item().str() == L"Alpha");'), (3, 1, u'+    assert(search1.current_item() == L"Alpha");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search1.current_item().str() == L"Alpha");'), (3, 1, u'+    assert(search1.current_item() == L"Alpha");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_item().str() == L"Beta");'), (3, 1, u'+    assert(search2.current_item() == L"Beta");')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: test_history
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_item().str() == L"Beta");'), (3, 1, u'+    assert(search2.current_item() == L"Beta");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-    assert(search2.current_item().str() == L"Beta");'), (3, 1, u'+    assert(search2.current_item() == L"Beta");')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(idx > 0 && idx < (size_t)(-1));')]
===========================================
===========================================
Total add: 3
Total del: 7
Header: history_search_t::go_to_end
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(idx > 0 && idx < (size_t)(-1));')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(7, 2, u'-    assert(idx > 0 && idx < (size_t)(-1));')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(condemned_node != NULL && condemned_node != &mouth);'), (46, 2, u'-    assert(node != &mouth);'), (73, 2, u'-    assert(node != NULL && node != &mouth);')]
===========================================
===========================================
Total add: 0
Total del: 119
Header: access_file
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(condemned_node != NULL && condemned_node != &mouth);'), (46, 2, u'-    assert(node != &mouth);'), (73, 2, u'-    assert(node != NULL && node != &mouth);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 2, u'-    assert(condemned_node != NULL && condemned_node != &mouth);'), (46, 2, u'-    assert(node != &mouth);'), (73, 2, u'-    assert(node != NULL && node != &mouth);')]
===========================================
Class: class history_lru_cache_t : public lru_cache_t<history_lru_node_t> { class history_lru_cache_t : public lru_cache_t<history_lru_node_t> 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(search.go_backwards());'), (7, 1, u'+    assert(! search.go_backwards());'), (10, 1, u'+        assert(search.go_forwards());'), (12, 1, u'+    assert(! search.go_forwards());'), (26, 1, u'+    assert(search1.current_item().str() == L"Alpha");'), (31, 1, u'+    assert(search2.current_item().str() == L"Beta");')]
===========================================
===========================================
Total add: 32
Total del: 0
Header: perf_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(search.go_backwards());'), (7, 1, u'+    assert(! search.go_backwards());'), (10, 1, u'+        assert(search.go_forwards());'), (12, 1, u'+    assert(! search.go_forwards());'), (26, 1, u'+    assert(search1.current_item().str() == L"Alpha");'), (31, 1, u'+    assert(search2.current_item().str() == L"Beta");')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+        assert(search.go_backwards());'), (7, 1, u'+    assert(! search.go_backwards());'), (10, 1, u'+        assert(search.go_forwards());'), (12, 1, u'+    assert(! search.go_forwards());'), (26, 1, u'+    assert(search1.current_item().str() == L"Alpha");'), (31, 1, u'+    assert(search2.current_item().str() == L"Beta");')]
===========================================
Class:  class history_item_data_deleter_t { class history_item_data_deleter_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: *reader_get_buffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: highlight_search
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class:class background_highlight_context { class background_highlight_context 
Class:class background_highlight_context_t { class background_highlight_context_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (4, 1, u'+    assert(this == &principal_parser());')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: *parser_t::current_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (4, 1, u'+    assert(this == &principal_parser());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();'), (4, 1, u'+    assert(this == &principal_parser());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: reader_handle_int
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 2
Total del: 1
Header: reader_push_current_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 2
Header: reader_push_current_filename
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 3
Total del: 0
Header: autoload_t::autoload_t
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 24
Total del: 19
Header: autoload_t::load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert( c == c2 );')]
===========================================
===========================================
Total add: 1
Total del: 9
Header: autoload_t::load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert( c == c2 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(9, 2, u'-\tassert( c == c2 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        assert(find(evicted_nodes.begin(), evicted_nodes.end(), node) == evicted_nodes.end());'), (39, 1, u'+        assert(cache.size() == std::min(i, (size_t)16));'), (43, 1, u'+        assert(cache.add_node(node));'), (44, 1, u'+        assert(! cache.add_node(node));'), (46, 1, u'+    assert(cache.evicted_nodes == expected_evicted);'), (48, 1, u'+    assert(cache.evicted_nodes.size() == total_nodes);')]
===========================================
===========================================
Total add: 43
Total del: 5
Header: test_parser
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        assert(find(evicted_nodes.begin(), evicted_nodes.end(), node) == evicted_nodes.end());'), (39, 1, u'+        assert(cache.size() == std::min(i, (size_t)16));'), (43, 1, u'+        assert(cache.add_node(node));'), (44, 1, u'+        assert(! cache.add_node(node));'), (46, 1, u'+    assert(cache.evicted_nodes == expected_evicted);'), (48, 1, u'+    assert(cache.evicted_nodes.size() == total_nodes);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(27, 1, u'+        assert(find(evicted_nodes.begin(), evicted_nodes.end(), node) == evicted_nodes.end());'), (39, 1, u'+        assert(cache.size() == std::min(i, (size_t)16));'), (43, 1, u'+        assert(cache.add_node(node));'), (44, 1, u'+        assert(! cache.add_node(node));'), (46, 1, u'+    assert(cache.evicted_nodes == expected_evicted);'), (48, 1, u'+    assert(cache.evicted_nodes.size() == total_nodes);')]
===========================================
Class: class file_access_node_t { class file_access_node_t 
Class: class completion_autoload_t : public autoload_t { class completion_autoload_t : public autoload_t 
Class: class function_autoload_t : public autoload_t { class function_autoload_t : public autoload_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(condemned_node != NULL && condemned_node != &mouth);'), (45, 1, u'+    assert(node != &mouth);'), (58, 1, u'+    assert(node != NULL && node != &mouth);')]
===========================================
===========================================
Total add: 96
Total del: 0
Header: access_tracker_t::access_file
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(condemned_node != NULL && condemned_node != &mouth);'), (45, 1, u'+    assert(node != &mouth);'), (58, 1, u'+    assert(node != NULL && node != &mouth);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(condemned_node != NULL && condemned_node != &mouth);'), (45, 1, u'+    assert(node != &mouth);'), (58, 1, u'+    assert(node != NULL && node != &mouth);')]
===========================================
Class:  class file_access_node_t { class file_access_node_t 
Class:class function_internal_info_t { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(condemned != loaded->is_loading_set.end());'), (21, 1, u'+    assert(erased);')]
===========================================
===========================================
Total add: 4
Total del: 16
Header: parse_util_load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(condemned != loaded->is_loading_set.end());'), (21, 1, u'+    assert(erased);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(14, 2, u'-            assert(condemned != loaded->is_loading_set.end());'), (21, 1, u'+    assert(erased);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 10
Total del: 3
Header: static int eval_level=-1;
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(12, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(! term.missing());')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: input_init
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(! term.missing());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+    assert(! term.missing());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(! is_missing);')]
===========================================
===========================================
Total add: 12
Total del: 1
Header: env_remove
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(! is_missing);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+    assert(! is_missing);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+ \tassert (main_thread_id != 0);')]
===========================================
===========================================
Total add: 11
Total del: 1
Header: __attribute__
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+ \tassert (main_thread_id != 0);')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+ \tassert (main_thread_id != 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+            assert(condemned != loaded->is_loading_set.end());')]
===========================================
===========================================
Total add: 15
Total del: 10
Header: parse_util_load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+            assert(condemned != loaded->is_loading_set.end());')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(23, 1, u'+            assert(condemned != loaded->is_loading_set.end());')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 4
Total del: 4
Header: input_mapping_get_names
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *intern
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(90, 1, u'+\tassert(threadPtr != NULL);'), (118, 1, u'+\t\tassert(thread != NULL);'), (128, 1, u'+\t\tassert(err == 0);'), (169, 1, u'+\tassert(threadIdx < IO_MAX_THREADS);'), (172, 1, u'+\tassert(thread->thread != 0);'), (179, 1, u'+\tassert(s_active_thread_count > 0);')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: *builtin_complete_get_temporary_buffer
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 1
Total del: 0
Header: builtin_complete
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class:class variable_entry_t { class variable_entry_t 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 7
Total del: 0
Header: *env_get
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 22
Total del: 1
Header: **env_export_arr
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class: class wcstring_adapter { 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 89
Total del: 103
Header: static wchar_t *highlight_var[] =
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(8, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Total add: 5
Total del: 7
Header: has_expand_reserved
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(11, 1, u'+    ASSERT_IS_BACKGROUND_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 5
Total del: 3
Header: parser_test
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
Total add: 4
Total del: 3
Header: move_word
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(6, 1, u'+    ASSERT_IS_MAIN_THREAD();')]
===========================================
Class:  class background_highlight_context { class background_highlight_context 
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( !wcslen( b->buff) );'), (3, 1, u'+\tassert( !wcslen( (wchar_t *)b->buff) );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: sb_clear
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( !wcslen( b->buff) );'), (3, 1, u'+\tassert( !wcslen( (wchar_t *)b->buff) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( !wcslen( b->buff) );'), (3, 1, u'+\tassert( !wcslen( (wchar_t *)b->buff) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert( !wcslen( b->buff) );')]
===========================================
===========================================
Total add: 20
Total del: 4
Header: sb_clear
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert( !wcslen( b->buff) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(4, 1, u'+\tassert( !wcslen( b->buff) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert( i!=pos );')]
===========================================
===========================================
Total add: 0
Total del: 1
Header: history_populate_from_mmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert( i!=pos );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\t\t\tassert( i!=pos );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert( i!=pos );')]
===========================================
===========================================
Total add: 16
Total del: 2
Header: history_populate_from_mmap
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert( i!=pos );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(10, 1, u'+\t\t\tassert( i!=pos );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert( data->buff_pos >= 0 );'), (3, 1, u'+\tassert( data->buff_pos <= data->buff_len );'), (4, 1, u'+\tassert( len >= 0 );')]
===========================================
===========================================
Total add: 4
Total del: 0
Header: insert_str
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert( data->buff_pos >= 0 );'), (3, 1, u'+\tassert( data->buff_pos <= data->buff_len );'), (4, 1, u'+\tassert( len >= 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert( data->buff_pos >= 0 );'), (3, 1, u'+\tassert( data->buff_pos <= data->buff_len );'), (4, 1, u'+\tassert( len >= 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( pgr > 0 );'), (3, 1, u'+\tassert( pgr > 1 );')]
===========================================
===========================================
Total add: 1
Total del: 1
Header: killpg
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( pgr > 0 );'), (3, 1, u'+\tassert( pgr > 1 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 2, u'-\tassert( pgr > 0 );'), (3, 1, u'+\tassert( pgr > 1 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tassert( c == c2 );')]
===========================================
===========================================
Total add: 50
Total del: 0
Header: parse_util_load
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tassert( c == c2 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(33, 1, u'+\tassert( c == c2 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert( cursor_pos >= 0 );')]
===========================================
===========================================
Total add: 3
Total del: 1
Header: parse_util_token_extent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert( cursor_pos >= 0 );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(5, 1, u'+\tassert( cursor_pos >= 0 );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(296, 1, u'+\tassert( begin >= buff );'), (297, 1, u'+\tassert( begin <= (buff+wcslen(buff) ) );'), (298, 1, u'+\tassert( end >= begin );'), (299, 1, u'+\tassert( end <= (buff+wcslen(buff) ) );'), (369, 1, u'+\tassert( pa >= buff );'), (370, 1, u'+\tassert( pa <= (buff+wcslen(buff) ) );'), (371, 1, u'+\tassert( pb >= pa );'), (372, 1, u'+\tassert( pb <= (buff+wcslen(buff) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert( begin >= data->buff );'), (3, 1, u'+\tassert( begin <= (data->buff+wcslen(data->buff) ) );'), (4, 1, u'+\tassert( end >= begin );'), (5, 1, u'+\tassert( end <= (data->buff+wcslen(data->buff) ) );')]
===========================================
===========================================
Total add: 5
Total del: 0
Header: reader_current_token_extent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert( begin >= data->buff );'), (3, 1, u'+\tassert( begin <= (data->buff+wcslen(data->buff) ) );'), (4, 1, u'+\tassert( end >= begin );'), (5, 1, u'+\tassert( end <= (data->buff+wcslen(data->buff) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(2, 1, u'+\tassert( begin >= data->buff );'), (3, 1, u'+\tassert( begin <= (data->buff+wcslen(data->buff) ) );'), (4, 1, u'+\tassert( end >= begin );'), (5, 1, u'+\tassert( end <= (data->buff+wcslen(data->buff) ) );')]
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert( pa >= data->buff );'), (4, 1, u'+\tassert( pa <= (data->buff+wcslen(data->buff) ) );'), (5, 1, u'+\tassert( pb >= pa );'), (6, 1, u'+\tassert( pb <= (data->buff+wcslen(data->buff) ) );')]
===========================================
===========================================
Total add: 4
Total del: 1
Header: reader_current_token_extent
Functions:
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert( pa >= data->buff );'), (4, 1, u'+\tassert( pa <= (data->buff+wcslen(data->buff) ) );'), (5, 1, u'+\tassert( pb >= pa );'), (6, 1, u'+\tassert( pb <= (data->buff+wcslen(data->buff) ) );')]
===========================================
===========================================
===========================================
Mock_Function_For_Asserts
0
0
0
0
[(3, 1, u'+\tassert( pa >= data->buff );'), (4, 1, u'+\tassert( pa <= (data->buff+wcslen(data->buff) ) );'), (5, 1, u'+\tassert( pb >= pa );'), (6, 1, u'+\tassert( pb <= (data->buff+wcslen(data->buff) ) );')]
===========================================
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
<type 'unicode'>
2270
Mismatch count:26192
Normal count:458217
